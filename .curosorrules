# Documentation Rules for Phenix Design System

## Core Principles

1. **Accuracy First**: Documentation must exactly match the source code implementation
2. **No Assumptions**: Only document features that exist in the codebase
3. **Completeness**: Cover all available options from shared components
4. **Clarity**: Use clear, concise language without technical jargon

## Documentation Structure

Each block documentation should include:

1. **Overview**:
   - Brief description
   - Key features list
   - Primary use cases

2. **Block Settings**:
   - Toolbar controls with exact options
   - Sidebar panel organization
   - Available attributes and values

3. **Features Section**:
   - Detailed feature descriptions
   - Options from shared components
   - Responsive capabilities
   - Interactive elements

4. **Usage Examples**:
   - Step-by-step instructions
   - Common configurations
   - Advanced use cases

5. **Best Practices**:
   - Semantic usage
   - Typography guidelines
   - Color strategy
   - Responsive design
   - Accessibility considerations

## Verification Process

1. **Source Code Check**:
   - Review block.json for attributes
   - Check edit.js for implementation
   - Verify shared components usage
   - Confirm toolbar/sidebar options

2. **Component Integration**:
   - Document pds-helpers features
   - Include pds-data-list options
   - Note responsive capabilities
   - List available utilities

3. **Feature Validation**:
   - Test each documented feature
   - Verify option availability
   - Confirm responsive behavior
   - Check interactive elements

## Writing Style

1. **Format**:
   - Use markdown consistently
   - Follow heading hierarchy
   - Include code examples when needed
   - Use tables for option lists

2. **Content**:
   - Be precise and concise
   - Focus on practical usage
   - Include all necessary steps
   - Avoid speculation

3. **Updates**:
   - Only update verified changes
   - Maintain existing structure
   - Preserve working examples
   - Keep feature parity

## Important Notes

- Never document unavailable features
- Always verify with source code
- Keep documentation in sync with implementation
- Focus on WordPress block editor context
- Consider developer and user perspectives
