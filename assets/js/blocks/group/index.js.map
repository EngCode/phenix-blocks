{"version":3,"file":"blocks/group/index.js","mappings":"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","sources":["webpack://phenix-blocks/./src/blocks/group/edit.js","webpack://phenix-blocks/./src/blocks/px-controls/alignment.js","webpack://phenix-blocks/./src/blocks/px-controls/colors/background.js","webpack://phenix-blocks/./src/blocks/px-controls/colors/text.js","webpack://phenix-blocks/./src/blocks/px-controls/switch.js","webpack://phenix-blocks/./src/blocks/px-controls/uploader.js","webpack://phenix-blocks/external window [\"wp\",\"blockEditor\"]","webpack://phenix-blocks/external window [\"wp\",\"blocks\"]","webpack://phenix-blocks/external window [\"wp\",\"components\"]","webpack://phenix-blocks/external window [\"wp\",\"element\"]","webpack://phenix-blocks/external window [\"wp\",\"i18n\"]","webpack://phenix-blocks/webpack/bootstrap","webpack://phenix-blocks/webpack/runtime/compat get default export","webpack://phenix-blocks/webpack/runtime/define property getters","webpack://phenix-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://phenix-blocks/./src/blocks/group/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport {\r\n    PanelBody,\r\n    TextControl,\r\n    SelectControl,\r\n    ToggleControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    RichText,\r\n    InnerBlocks,\r\n    useBlockProps,\r\n    useInnerBlocksProps,\r\n    InspectorControls\r\n} from '@wordpress/block-editor';\r\n\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixColor from '../px-controls/colors/text';\r\nimport OptionControl from '../px-controls/switch';\r\nimport FlexAlignment from '../px-controls/alignment';\r\nimport PhenixBackground from '../px-controls/colors/background';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    //===> Set Settings <===//\r\n    const set_id = id => setAttributes({ id });\r\n    const set_tagName = tagName => setAttributes({ tagName });\r\n    const set_isFlexbox = isFlexbox => setAttributes({ isFlexbox });\r\n\r\n    //===> Flexbox Options <===//\r\n    const set_alignment = alignment => {\r\n        //==> Get Current <==//\r\n        let flex_ops = attributes.flexbox;\r\n\r\n        //==> Set Value <==//\r\n        flex_ops.align = alignment;\r\n        setAttributes({ flexbox : {...flex_ops} });\r\n    };\r\n\r\n    //==> Flow <==//\r\n    const set_flex_flow = target => {\r\n        //==> Get Current <==//\r\n        let flex_ops = attributes.flexbox;\r\n\r\n        //==> Set Value <==//\r\n        flex_ops.flow = target.checked ? target.value : \"\";\r\n        setAttributes({flexbox : {...flex_ops}});\r\n    };\r\n\r\n    //==> No-Wrap <==//\r\n    const set_flex_nowrap = target => {\r\n        //==> Get Current <==//\r\n        let flex_ops = attributes.flexbox;\r\n\r\n        //==> Set Value <==//\r\n        flex_ops.nowrap = target.checked ? target.value : \"\";\r\n        setAttributes({flexbox : {...flex_ops}});\r\n    };\r\n\r\n    //==> Flow Columns <==//\r\n    const set_flex_stacked = target => {\r\n        //==> Get Current <==//\r\n        let flex_ops = attributes.flexbox;\r\n\r\n        //==> Set Value <==//\r\n        flex_ops.stacked = target.checked ? target.value : \"\";        \r\n        setAttributes({flexbox : {...flex_ops}});\r\n    };\r\n\r\n    //===> Typography Options <===//\r\n    const set_typography_size = value => {\r\n        //==> Get Current <==//\r\n        let typography = attributes.typography;\r\n\r\n        //==> Set Value <==//\r\n        typography.size = value;\r\n        setAttributes({ typography : {...typography} });\r\n    };\r\n\r\n    //==> Weight <==//\r\n    const set_typography_weight = value => {\r\n        //==> Get Current <==//\r\n        let typography = attributes.typography;\r\n\r\n        //==> Set Value <==//\r\n        typography.weight = value;\r\n        setAttributes({ typography : {...typography} });\r\n    };\r\n\r\n    //==> Align <==//\r\n    const set_typography_align = target => {\r\n        //==> Get Current <==//\r\n        let typography = attributes.typography;\r\n\r\n        //==> Set Value <==//\r\n        typography.align = target.checked ? target.value : \"\";\r\n        setAttributes({ typography : {...typography} });\r\n    };\r\n\r\n    //==> Color <==//\r\n    const set_color = value => {\r\n        //==> Get Current <==//\r\n        let typography = attributes.typography;\r\n\r\n        //==> Set Value <==//\r\n        typography.color = value;\r\n        setAttributes({ typography : {...typography} });\r\n    };\r\n\r\n    //===> Set Background <===//\r\n    const set_background = background => {\r\n        //==> Get Current <==//\r\n        let styles = attributes.style;\r\n\r\n        //==> Set Value <==//\r\n        styles.background = background;\r\n        setAttributes({ style : {...attributes.style} });\r\n    };\r\n\r\n    //===> Get Block Properties <===//\r\n    const blockProps = useBlockProps();\r\n    const innerBlocksProps = useInnerBlocksProps();\r\n    const TagName = attributes.tagName;\r\n\r\n    //===> Set Phenix Components <===//\r\n    const setPhenixView = () => {\r\n        //===> Check Site Editor <===//\r\n        let siteEditor = window.frames['editor-canvas'],\r\n            blockElement = '.px-media';\r\n\r\n        //===> Correct Editor Target for Site-Editor <===//\r\n        if (siteEditor) {\r\n            blockElement = siteEditor.document.querySelectorAll('.px-media');\r\n            blockElement = [...blockElement];\r\n        }\r\n\r\n        //===> Set Background <===//\r\n        if (attributes.style.background?.type === 'image') Phenix(blockElement).multimedia();\r\n    }\r\n\r\n    useEffect(() => setPhenixView(), [attributes]);\r\n\r\n    //===> Flexbox Options <===//\r\n    let container = blockProps;\r\n    if (attributes.isFlexbox) container = innerBlocksProps;\r\n\r\n    //===> Flexbox Properties <===//\r\n    if (attributes.isFlexbox) {\r\n        container.className += ' flexbox';\r\n        if (attributes.flexbox.align)  container.className += ` ${attributes.flexbox.align}`;\r\n        if (attributes.flexbox.flow)   container.className += ` ${attributes.flexbox.flow}`;\r\n        if (attributes.flexbox.nowrap) container.className += ` ${attributes.flexbox.nowrap}`;\r\n        if (attributes.flexbox.stacked) container.className += ` ${attributes.flexbox.stacked}`;\r\n    }\r\n\r\n    //===> Typography Properties <===//\r\n    if (attributes.typography) {\r\n        if(attributes.typography.size) container.className += ` ${attributes.typography.size}`;\r\n        if(attributes.typography.color) container.className += ` ${attributes.typography.color}`;\r\n        if(attributes.typography.weight) container.className += ` ${attributes.typography.weight}`;\r\n        if(attributes.typography.align) container.className += ` ${attributes.typography.align}`;\r\n    }\r\n\r\n    //===> Render Background <===//\r\n    if (attributes.style.background?.value) {\r\n        //===> Image Background <===//\r\n        if (attributes.style.background.type === 'image') {\r\n            blockProps.className += ` px-media`;\r\n            blockProps[\"data-src\"] = attributes.style.background.value;\r\n        }\r\n\r\n        //===> Name Background <===//\r\n        else blockProps.className += ` ${attributes.style.background.value}`;\r\n\r\n        //===> Background Rotation <===//\r\n        if (attributes.style.background.rotate) blockProps.className += ` ${attributes.style.background.rotate}`;\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\">\r\n                {/*===> Elements Group <===*/}\r\n                <div className='row gpx-20'>\r\n                    {/*===> HTML Tag <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <SelectControl key=\"tagName\" label={__(\"HTML Tag\", \"phenix\")} value={attributes.tagName} onChange={set_tagName} options={[\r\n                            { label: '<div>',  value: 'div' },\r\n                            { label: '<main>',  value: 'main' },\r\n                            { label: '<aside>',  value: 'aside' },\r\n                            { label: '<section>',  value: 'section' },\r\n                            { label: '<header>', value: 'header' },\r\n                            { label: '<footer>', value: 'footer' },\r\n                        ]}/>\r\n                    </div>\r\n                    {/*===  isFlexbox ===*/}\r\n                    <div className='col-6 mb-5'>\r\n                        <TextControl key=\"container_id\" label={__(\"HTML ID [Anchor]\", \"phenix\")} value={ attributes.id } onChange={set_id}/>\r\n                    </div>\r\n                    {/*=== Container ID ===*/}\r\n                    <div className='col-12'>\r\n                        <ToggleControl key=\"isFlexbox\" label={__(\"Flexbox\", \"phenix\")} checked={attributes.isFlexbox} onChange={set_isFlexbox}/>\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n            </PanelBody>\r\n            {/*===> Typography <===*/}\r\n            <PanelBody title={__(\"Typography\", \"phenix\")} initialOpen={false}>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='row gpx-20'>\r\n                    {/*===> Size <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <SelectControl key=\"typography-size\" label={__(\"Font Size\", \"phenix\")} value={attributes.typography.size || \"\"} onChange={set_typography_size} options={[\r\n                            { label: 'Default',   value: '' },\r\n                            { label: '12px',   value: 'fs-12' },\r\n                            { label: '13px',   value: 'fs-13' },\r\n                            { label: '14px',   value: 'fs-14' },\r\n                            { label: '15px',   value: 'fs-15' },\r\n                            { label: '16px',   value: 'fs-16' },\r\n                            { label: '17px',   value: 'fs-17' },\r\n                            { label: '18px',   value: 'fs-18' },\r\n                            { label: '19px',   value: 'fs-19' },\r\n                            { label: '20px',   value: 'fs-20' },\r\n                            { label: '22px',   value: 'fs-22' },\r\n                            { label: '24px',   value: 'fs-24' },\r\n                            { label: '25px',   value: 'fs-25' },\r\n                            { label: '26px',   value: 'fs-26' },\r\n                            { label: '28px',   value: 'fs-28' },\r\n                            { label: '30px',   value: 'fs-30' },\r\n                        ]}/>\r\n                    </div>\r\n                    {/*===> HTML Tag <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <SelectControl key=\"typography-weight\" label={__(\"Font Weight\", \"phenix\")} value={attributes.typography.weight || \"\"} onChange={set_typography_weight} options={[\r\n                            { label: 'Default',  value: '' },\r\n                            { label: 'Thin',  value: 'weight-thin'},\r\n                            { label: 'Light',  value: 'weight-light'},\r\n                            { label: 'Extra Light',  value: 'weight-xlight'},\r\n                            { label: 'Normal',  value: 'weight-normal'},\r\n                            { label: 'Medium',  value: 'weight-medium'},\r\n                            { label: 'Semi-Bold',  value: 'weight-bold'},\r\n                            { label: 'Bold',  value: 'weight-strong'},\r\n                            { label: 'Heavy',  value: 'weight-xbold'},\r\n                            { label: 'Black',  value: 'weight-black'},\r\n                        ]}/>\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n                {/*===> Text Color <===*/}\r\n                <PhenixColor key=\"px-color\" label={__(\"Text Color\", \"phenix\")} onChange={set_color} value={attributes.typography.color || \"\"} />\r\n                {/*===> Label <===*/}\r\n                <label className='col-12 mb-5 tx-UpperCase'>{__(\"Text Alignment\", \"phenix\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='text-align' checked={!attributes.typography.align || attributes.typography.align === \"\"} value={\"\"} onChange={set_typography_align} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='text-align' checked={attributes.typography.align === \"tx-align-start\" ? true : false} value={\"tx-align-start\"} onChange={set_typography_align} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='text-align' checked={attributes.typography.align === \"tx-align-justify\" ? true : false} value={\"tx-align-justify\"} onChange={set_typography_align} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='text-align' checked={attributes.typography.align === \"tx-align-center\" ? true : false} value={\"tx-align-center\"} onChange={set_typography_align} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='text-align' checked={attributes.typography.align === \"tx-align-end\" ? true : false} value={\"tx-align-end\"} onChange={set_typography_align} type='button-radio' className='small'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </PanelBody>\r\n            {/*===> Style Options <===*/}\r\n            <PanelBody title={__(\"Style Options\", \"phenix\")} initialOpen={false}>\r\n                {/*===> Background <===*/}\r\n                <PhenixBackground key=\"px-bg\" label={__(\"Background\", \"phenix\")}  onChange={set_background} type={attributes.style.background?.type || \"color\"} value={attributes.style.background?.value || \"\"} rotate={attributes.style.background?.rotate || null} />\r\n\r\n                {/*===> Flexbox Properties <===*/}\r\n                {attributes.isFlexbox ?\r\n                    <div className='row gpx-15 divider-t pdt-10'>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12 mb-15'>\r\n                            <FlexAlignment label={__(\"Flexbox Alignment\", \"phenix\")} value={attributes.flexbox.align || \"\"} onChange={set_alignment}></FlexAlignment>\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12 flexbox align-between mb-15'>\r\n                            {/*===> Label <===*/}\r\n                            <label className='col-12 mb-5 tx-UpperCase'>{__(\"Flow Options\", \"phenix\")}</label>\r\n                            {/*===> Switch Button <===*/}\r\n                            <OptionControl name='flex-flow' value={!attributes.flexbox.stacked || attributes.flexbox.stacked === \"\" ? `flow-reverse` : \"flow-columns-reverse\"} checked={attributes.flexbox.flow?.length > 0} onChange={set_flex_flow} type='checkbox' className='tiny'>\r\n                                <span className='fas fa-check radius-circle'>{__(\"Reverse \", \"phenix\")}</span>\r\n                            </OptionControl>\r\n                            {/*===> Switch Button <===*/}\r\n                            <OptionControl name='flex-columns' value=\"flow-columns\" checked={attributes.flexbox.stacked?.length > 0} onChange={set_flex_stacked} type='checkbox' className='tiny'>\r\n                                <span className='fas fa-check radius-circle'>{__(\"Stacked\", \"phenix\")}</span>\r\n                            </OptionControl>\r\n                            {/*===> Switch Button <===*/}\r\n                            <OptionControl name='flex-nowrap' value=\"flow-nowrap\" checked={attributes.flexbox.nowrap?.length > 0} onChange={set_flex_nowrap} type='checkbox' className='tiny'>\r\n                                <span className='fas fa-check radius-circle'>{__(\"Nowrap\", \"phenix\")}</span>\r\n                            </OptionControl>\r\n                        </div>\r\n                        {/*===> // Column <===*/}\r\n                    </div>\r\n                : null}\r\n            </PanelBody>\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/*====> Edit Layout <====*/}\r\n        {attributes.preview ?\r\n            <img src=\"https://raw.githubusercontent.com/EngCode/phenix-blocks/main/assets/img/prev/section.jpg\" alt=\"\" className=\"fluid\" />\r\n        :\r\n        <TagName {...blockProps}>\r\n            <div {...innerBlocksProps}></div>\r\n        </TagName>\r\n        }\r\n    </>);\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> Media Uploader <===//\r\nexport default class FlexAlignment extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, onChange} = this.props;\r\n        const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n\r\n        //===> Value Handler <===//\r\n        const set_alignment = target => {\r\n            //===> Define Data <===//\r\n            let align_val  = value;\r\n            const current_val = value.trim(),\r\n                  current_values  = current_val.split(\" \"),\r\n                  xTypes = [\"-x\", \"between\", \"around\"],\r\n                  allTypes = [\"-x\", \"between\", \"around\", \"-y\"];\r\n\r\n            //===> Check if the Value has an option with the same type as the target value <===//\r\n            const itHasType = allTypes.some(type => current_val.includes(type)),\r\n                  align_type = xTypes.some(type => target.getAttribute('name').includes(type)) ? \"x\" : \"y\",\r\n                  foundedType = xTypes.some(type => current_val.includes(type)) ? \"x\" : \"y\";\r\n\r\n            //===> if the Value has an Option and the option type is the same as the target <===//\r\n            if (itHasType && align_type === foundedType) {\r\n                //===> Loop on Values <===//\r\n                current_values.forEach(current_value => {\r\n                    //===> if the Founded Type is the same is the Value, Replace the Value <===//\r\n                    if (current_value.includes(align_type)) {\r\n                        align_val = align_val.replace(current_value, target.value);\r\n                    }\r\n                });\r\n            }\r\n            //===> if its a new Value add it <===//\r\n            else {\r\n                align_val += ` ${target.value}`;\r\n            }\r\n\r\n            //===> Return new Value <===//\r\n            return onChange(align_val.trim());\r\n        },\r\n\r\n        //===> Reset Value Method <===//\r\n        reset_align = (clicked) => onChange(\"\");\r\n\r\n        //===> Output <===//\r\n        return (<div className='components-flex-item flex-alignment-btns'>\r\n            {/*===> Label <===*/}\r\n            <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n                <label className='fs-13 weight-bold'>{label}</label>\r\n                <button type=\"button\" data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"flexbox align-between\"}>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-start-x\")} value={\"align-start-x\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-center-x\")} value={\"align-center-x\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-between\")} value={\"align-between\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-around\")} value={\"align-around\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-end-x\")} value={\"align-end-x\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-y' checked={value.includes(\"align-start-y\")} value={\"align-start-y\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-y' checked={value.includes(\"align-center-y\")} value={\"align-center-y\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-y' checked={value.includes(\"align-end-y\")} value={\"align-end-y\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\nimport {SelectControl} from '@wordpress/components';\r\n\r\n//====> Phenix Modules <====//\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        colors : [\r\n            \"fas fa-redo tx-align-center\",\r\n\r\n            \"bg-inherit\",\r\n            \"bg-transparent\",\r\n            \"bg-primary\",\r\n            \"bg-primary-dark\",\r\n            \"bg-secondary\",\r\n            \"bg-secondary-dark\",\r\n            \"bg-gray\",\r\n            \"bg-dark\",\r\n            \"bg-white\",\r\n            \"bg-success\",\r\n            \"bg-danger\",\r\n            \"bg-warning\",\r\n            \"bg-info\",\r\n\r\n            \"bg-offwhite-primary\",\r\n            \"bg-offwhite-secondary\",\r\n            \"bg-offwhite-info\",\r\n            \"bg-offwhite-success\",\r\n            \"bg-offwhite-danger\",\r\n            \"bg-offwhite-warning\",\r\n\r\n            \"bg-offwhite-smoke\",\r\n            \"bg-offwhite-gray\",\r\n            \"bg-offwhite-snow\",\r\n            \"bg-offwhite-honeydew\",\r\n            \"bg-offwhite-aliceblue\",\r\n            \"bg-offwhite-ghost\",\r\n            \"bg-offwhite-seashell\",\r\n            \"bg-offwhite-beige\",\r\n            \"bg-offwhite-oldlace\",\r\n            \"bg-offwhite-floral\",\r\n            \"bg-offwhite-antique\",\r\n            \"bg-offwhite-linen\",\r\n            \"bg-offwhite-lavenderblush\",\r\n\r\n            \"bg-alpha-05\",\r\n            \"bg-alpha-10\",\r\n            \"bg-alpha-15\",\r\n            \"bg-alpha-25\",\r\n            \"bg-alpha-50\",\r\n            \"bg-alpha-75\",\r\n\r\n            \"bg-facebook\",\r\n            \"bg-twitter\",\r\n            \"bg-youtube\",\r\n            \"bg-instagram\",\r\n            \"bg-snapchat\",\r\n            \"bg-whatsapp\",\r\n            \"bg-pinterest\",\r\n            \"bg-linkedin\",\r\n            \"bg-behance\",\r\n            \"bg-dribbble\",\r\n            \"bg-flicker\",\r\n        ],\r\n        gradients: [\r\n            \"bg-grade-primary\",\r\n            \"bg-grade-secondary\",\r\n            \"bg-grade-warning\",\r\n            \"bg-grade-danger\",\r\n            \"bg-grade-success\",\r\n            \"bg-grade-water\",\r\n            \"bg-grade-ice\",\r\n            \"bg-grade-fire\",\r\n            \"bg-grade-purple\"\r\n        ],\r\n        rotation : [\r\n            'bg-grade-0',\r\n            'bg-grade-45',\r\n            'bg-grade-90',\r\n            'bg-grade-120',\r\n            'bg-grade-120n',\r\n            'bg-grade-90n',\r\n            'bg-grade-45n',\r\n            'bg-grade-180',\r\n        ],\r\n        placeholder : \"https://via.placeholder.com/480x200.webp?text=Example\",\r\n    }\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            type,\r\n            value,\r\n            label,\r\n            rotate,\r\n            colorsOnly,\r\n            isSmall,\r\n            placeholder,\r\n            onChange\r\n        } = this.props;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: type,\r\n            rotate: rotate,\r\n            value: value || \"\",\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_type = type => {\r\n            //===> Set Value <===//\r\n            options.type = type;\r\n\r\n            //===> change value <===//\r\n            if (options.type === 'image') {\r\n                options.value = this.state.placeholder;\r\n            } else {\r\n                options.value = \"\";\r\n            }\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_rotate = rotate => {\r\n            //===> Set Value <===//\r\n            options.rotate = rotate;\r\n\r\n            //===> change value <===//\r\n            if (options.type !== 'gradient') options.value = \"\";\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button?.getAttribute('data-value');\r\n\r\n            //===> Colors & Gradients <===//\r\n            if (type !== 'image') {options.value = value;}\r\n            //===> Image Type <===//\r\n            else {options.value = clicked.url;}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = \"\",\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    title = list[index].replace('bg-', '').replace('-', ' ');\r\n    \r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                output.push(<button key={`${name.replaceAll(\" \", \"-\")}`} onClick={setBackground} title={title} data-value={isColor ? name : \"\"} className={`${isColor ? name : `${name} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"}`} style={{\"width\":\"30px\",\"height\":\"16px\",\"borderRadius\":\"16px\"}}></button>);\r\n            }\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-15\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-10 tx-UpperCase fs-13'>{label}</label> : null}\r\n                {/*===> Group <===*/}\r\n                <div className='overflow-hidden form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`w-max-150 fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        {type !== \"image\" ? <>\r\n                            <span className={`me-5 radius-circle inline-block ${value?.length > 0 ? value : \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\"}}></span>\r\n                            <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 ? value.replaceAll(\"-\", \" \").replace(\"bg\",\"\") : placeholder ? placeholder : \"Default\"}</span>\r\n                        </> : <>\r\n                        <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                            <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"phenix\")}</span>\r\n                        </>}\r\n                        {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    {!colorsOnly ? \r\n                    <SelectControl key=\"bg-type\" value={type || \"\"} onChange={set_type} options={[\r\n                        { label: 'color',   value: 'color' },\r\n                        { label: 'image',   value: 'image' },\r\n                        { label: 'gradient',   value: 'gradient' },\r\n                    ]}/>\r\n                    : null}\r\n                </div>\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox options-list align-between ${type !== \"image\" ? 'pd-15 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid`} style={{gap:\"10px\"}}>\r\n                    {type === \"color\" ? makeButtons(this.state.colors) : type === \"gradient\" ? makeButtons(this.state.gradients) : null}\r\n                    {type === \"image\" ? <MediaUploader key=\"upload-file\" value={!value ? this.state.placeholder : value} setValue={setBackground}></MediaUploader> : null}\r\n                    {/*===> Rotation Select <===*/}\r\n                    {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                        <SelectControl label={`${_(\"Rotation\", \"phenix\")}`} key=\"gradient-direction\" value={rotate || \"\"} onChange={set_rotate} options={[\r\n                            { label: __('Default' ,\"phenix\"), value: '' },\r\n                            { label: __('45 Degree' ,\"phenix\"), value: 'bg-grade-45' },\r\n                            { label: __('-45 Degree' ,\"phenix\"), value: 'bg-grade-45n' },\r\n                            { label: __('90 Degree' ,\"phenix\"), value: 'bg-grade-90' },\r\n                            { label: __('-90 Degree' ,\"phenix\"), value: 'bg-grade-90n' },\r\n                            { label: __('120 Degree' ,\"phenix\"), value: 'bg-grade-120' },\r\n                            { label: __('-120 Degree' ,\"phenix\"), value: 'bg-grade-120n' },\r\n                            { label: __('180 Degree' ,\"phenix\"), value: 'bg-grade-180' },\r\n                            { label: __('-180 Degree' ,\"phenix\"), value: 'bg-grade-180n' },\r\n                        ]}/>\r\n                    </div> : null}\r\n                    {/*===> Rotation Select <===*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            value,\r\n            label,\r\n            isSmall,\r\n            placeholder,\r\n            onChange\r\n        } = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = [\r\n            \"color-inherit\",\r\n            \"color-transparent\",\r\n            \"color-primary\",\r\n            \"color-primary-dark\",\r\n            \"color-secondary\",\r\n            \"color-secondary-dark\",\r\n            \"color-gray\",\r\n            \"color-dark\",\r\n            \"color-white\",\r\n            \"color-success\",\r\n            \"color-danger\",\r\n            \"color-warning\",\r\n            \"color-info\",\r\n            \"color-facebook\",\r\n            \"color-twitter\",\r\n            \"color-youtube\",\r\n            \"color-instagram\",\r\n            \"color-snapchat\",\r\n            \"color-whatsapp\",\r\n            \"color-pinterest\",\r\n            \"color-linkedin\",\r\n            \"color-behance\",\r\n            \"color-dribbble\",\r\n            \"color-flicker\",\r\n            \"fas fa-redo tx-align-center\"\r\n        ];\r\n\r\n        //===> Set Color <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = \"\",\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    title = list[index].replace('color-', '').replace('-', ' ');\r\n    \r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                output.push(<button key={`${name.replaceAll(\" \", \"-\")}`} onClick={setColor} title={title} data-value={isColor ? name : \"\"} className={`${isColor ? name.replace('color-','bg-') : `${name} color-gray fs-12`} reset-button ${value === name ? 'px-active' : null}`} style={{\"width\":\"30px\",\"height\":\"16px\",\"borderRadius\":\"16px\"}}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel  = Phenix(button).next(\".options-list\");\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className={`px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-15\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-10 tx-UpperCase fs-13'>{label}</label> : null}\r\n                {/*===> Trigger <===*/}\r\n                <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                    <span className={`me-5 radius-circle inline-block ${value?.length > 0 ? value.replace(\"color-\",\"bg-\") : \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\"}}></span>\r\n                    <span className='col'>{value?.length > 0 && !placeholder ? value?.replaceAll(\"-\", \" \").replace(\"color\",\"\") : placeholder ? placeholder : \"Default\"}</span>\r\n                    {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n                </button>\r\n                {/*===> Panel <===*/}\r\n                <div className='flexbox options-list align-between pd-20 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\"}}>\r\n                    {makeButtons(pxPallete)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            name,\r\n            type,\r\n            value,\r\n            checked,\r\n            onChange,\r\n            children,\r\n            required,\r\n            className\r\n        } = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            value,\r\n            size,\r\n            type,\r\n            setValue,\r\n            className,\r\n        } = this.props;\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"}`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? <img src={value} style={{\"maxHeight\": \"1.5rem\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></button>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? <img src={value} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M21.1 0H10.5c-1.7 0-3 1.4-3 3v4.5H2.9c-1.7 0-3 1.4-3 3v10.6c0 1.7 1.4 3 3 3h10.6c1.7 0 3-1.4 3-3v-4.5H21c1.7 0 3-1.4 3-3V3c.1-1.6-1.3-3-2.9-3zm-6.8 21.1c0 .5-.3.8-.8.8H2.9c-.5 0-.8-.3-.8-.8V10.6c0-.5.3-.8.8-.8h4.5v3.8c0 1.7 1.4 3 3 3h3.8v4.5zm0-6.8h-3.8c-.5 0-.8-.3-.8-.8V9.8h3.8c.5 0 .8.3.8.8v3.7zm7.5-.7c0 .5-.3.8-.8.8h-4.5v-3.8c0-1.7-1.4-3-3-3H9.7V3c0-.5.3-.8.8-.8h10.6c.5 0 .8.3.8.8v10.6z\"></path></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const blockProps = useBlockProps.save();\r\n        const TagName = attributes.tagName;\r\n\r\n        let background = attributes.style.background,\r\n            typography = attributes.typography;\r\n\r\n        //===> Flexbox Properties <===//\r\n        if (attributes.isFlexbox) {\r\n            blockProps.className += ` flexbox`;\r\n            if (attributes.flexbox.align)  blockProps.className += ` ${attributes.flexbox.align}`;\r\n            if (attributes.flexbox.flow)   blockProps.className += ` ${attributes.flexbox.flow}`;\r\n            if (attributes.flexbox.nowrap) blockProps.className += ` ${attributes.flexbox.nowrap}`;\r\n            if (attributes.flexbox.stacked) blockProps.className += ` ${attributes.flexbox.stacked}`;\r\n        }\r\n\r\n        //===> Typography Properties <===//\r\n        if (typography) {\r\n            if(typography.size) blockProps.className += ` ${typography.size}`;\r\n            if(typography.color) blockProps.className += ` ${typography.color}`;\r\n            if(typography.weight) blockProps.className += ` ${typography.weight}`;\r\n            if(typography.align) blockProps.className += ` ${typography.align}`;\r\n        }\r\n\r\n        //===> Render Background <===//\r\n        if (background?.value) {\r\n            //===> Image Background <===//\r\n            if (background.type === 'image') {\r\n                blockProps.className += ` px-media`;\r\n                blockProps[\"data-src\"] = background.value;\r\n            }\r\n\r\n            //===> Name Background <===//\r\n            else blockProps.className += ` ${background.value}`;\r\n\r\n            //===> Background Rotation <===//\r\n            if (background.rotate) blockProps.className += ` ${background.rotate}`;\r\n        }\r\n\r\n        //===> Render <===//\r\n        return (\r\n            <TagName {...blockProps}>\r\n                <InnerBlocks.Content />\r\n            </TagName>\r\n        );\r\n    }\r\n});"],"names":["Edit","attributes","setAttributes","set_typography_align","target","typography","align","checked","value","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","TagName","tagName","useEffect","blockElement","siteEditor","window","frames","document","querySelectorAll","style","background","type","Phenix","multimedia","container","isFlexbox","className","flexbox","flow","nowrap","stacked","size","color","weight","rotate","InspectorControls","key","PanelBody","title","SelectControl","label","__","onChange","options","TextControl","id","ToggleControl","initialOpen","name","direction","alignment","flex_ops","length","preview","src","alt","FlexAlignment","this","props","button_style","set_alignment","align_val","current_val","trim","current_values","split","xTypes","itHasType","some","includes","align_type","getAttribute","foundedType","forEach","current_value","replace","onClick","clicked","Component","PhenixBackground","colors","gradients","rotation","placeholder","colorsOnly","isSmall","setBackground","button","url","makeButtons","list","output","index","isColor","c","toUpperCase","push","replaceAll","wrapper","ancestor","panel","querySelector","toggleClass","fadeToggle","slideToggle","state","gap","setValue","_","PhenixColors","setColor","next","OptionControl","children","required","event","defaultChecked","MediaUploader","MediaUpload","onSelect","render","open","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerBlockType","metadata","icon","xmlns","viewBox","edit","save","InnerBlocks"],"sourceRoot":""}