{"version":3,"file":"blocks/group/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/group/edit.js","webpack://pds-blocks-pro/./src/blocks/px-controls/alignment.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dynamic-url.js","webpack://pds-blocks-pro/./src/blocks/px-controls/input.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/border.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/effects.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/flexbox.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/margin.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/padding.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/position.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/sizes.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/group/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport {useEffect} from '@wordpress/element';\r\nimport {PanelBody, ToolbarGroup} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps, useInnerBlocksProps, __experimentalLinkControlSearchInput as LinkControlSearchInput} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.png';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixSelect from '../px-controls/select';\r\nimport OptionControl from '../px-controls/switch';\r\nimport PhenixInput from '../px-controls/input';\r\nimport SuggestionsUrl from \"../px-controls/dynamic-url\";\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport SizesSet from '../px-controls/sets/sizes';\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport FlexboxSet from '../px-controls/sets/flexbox';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\nimport PaddingSet from '../px-controls/sets/padding';\r\nimport MarginSet from '../px-controls/sets/margin';\r\nimport PositionSet from '../px-controls/sets/position';\r\nimport EffectsSet from '../px-controls/sets/effects';\r\nimport BorderSet from '../px-controls/sets/border';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {    \r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n    const OptionsRenderer = PhenixBlocks.OptionsRenderer;\r\n\r\n    //==> Set Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_url = value => PhenixBlocks.setObject(value, \"\", \"style\", \"url\", attributes, setAttributes);\r\n    const set_flexbox = (target, screen) => PhenixBlocks.set_flexbox(target, screen, attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_typography = (target, screen) => PhenixBlocks.setObject(target, screen, \"typography\", false, attributes, setAttributes);\r\n\r\n    //===> View Script <===//\r\n    useEffect(() => PhenixBlocks.viewScript(), []);\r\n\r\n    //===> Get Block Properties <===//\r\n    const TagName = attributes.tagName;\r\n    const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps()});\r\n    const blockProps = renderProps.blockProps;\r\n    const uniqueKey = blockProps.id;\r\n    const innerBlocksProps = useInnerBlocksProps();\r\n\r\n    //===> Layout Options <===//\r\n    if (attributes.isFlexbox) {\r\n        innerBlocksProps.className += `${renderProps.container.className} flexbox`; \r\n    } else {\r\n        blockProps.className += ` ${renderProps.container.className}`;\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip-bottom w-75' data-title={__(\"HTML Tag\", \"pds-blocks\")}>\r\n                    <PhenixSelect name=\"tagName\" placeholder={__(\"div\", \"pds-blocks\")} className={`tx-align-center weight-medium`} value={attributes.tagName} onChange={set_value} options={PhenixBlocks.dataLists.html_tags} />\r\n                </div>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Sizes Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-maximize divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-320\" >\r\n                    <li key=\"sizes\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <SizesSet attributes={attributes} mainSetter={set_style} />}\r\n                            md={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            lg={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            xl={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.isFlexbox? <PxDropDown title={__(\"Layout Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-columns color-success divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\" >\r\n                    <li key=\"layouts\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <FlexboxSet attributes={attributes} mainSetter={set_flexbox}></FlexboxSet>}\r\n                            md={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"flex-props, align\"}></FlexboxSet>}\r\n                            lg={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"flex-props, align\"}></FlexboxSet>}\r\n                            xl={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"flex-props, align\"}></FlexboxSet>}\r\n                        />\r\n                        {/*===> Disable Button <===*/}\r\n                        <div className='fluid' style={{paddingBottom: 3}}>\r\n                            <OptionControl key={`isFlexbox-${uniqueKey}`} name={`isFlexbox`} value={`boolean`} checked={attributes.isFlexbox || false} onChange={set_value} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Disable Flexbox Layout\", \"pds-blocks\")}</span>\r\n                            </OptionControl>\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown>:\r\n                /*===> Option Control <===*/\r\n                <OptionControl key={`isFlexbox-${uniqueKey}`} name={`isFlexbox`} value={`boolean`} checked={attributes.isFlexbox} onChange={set_value} type='button-checkbox' className='inline-block divider-e border-alpha-25'>\r\n                    <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-columns h-min-100' style={{paddingTop: 2}} data-title={__(\"Flexbox Layouts\", \"pds-blocks\")}></span>\r\n                </OptionControl>}\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Style Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-adjust divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"text-colors, background\" />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Typography Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-font divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-typography\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <TypographySet key={`typography-${uniqueKey}`} attributes={attributes} mainSetter={set_typography} />}\r\n                            md={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                            lg={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                            xl={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Link Input <===*/}\r\n                {attributes.style.isLink ? <PxDropDown title={__(\"URL Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-link color-success divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-260\" >\r\n                    <li key=\"link\" className='pdx-15 pdt-10 pdb-0 mb-0'>\r\n                        <LinkControlSearchInput key={`url-${uniqueKey}`} name=\"url\" placeholder={__(\"URL or Page Name\", \"pds-blocks\")} onChange={set_url} value={ attributes.style.url || \"#\" } allowDirectEntry={false} withURLSuggestion={false} withCreateSuggestion={false} renderSuggestions={(props) => SuggestionsUrl(props)} />\r\n                        {/*===> Option Control <===*/}\r\n                        <OptionControl key={`inNewTab-${uniqueKey}`} name={`inNewTab`} value={`boolean`} checked={attributes.style.inNewTab} onChange={set_style} type='checkbox' className='tiny me-15'>\r\n                            <span className='fas fa-check radius-circle'>{__(\"Open in New Tab\", \"pds-blocks\")}</span>\r\n                        </OptionControl>\r\n                        {/*===> Disable Button <===*/}\r\n                        <div className='fluid' style={{paddingBottom: 3}}>\r\n                            <OptionControl key={`isLink-${uniqueKey}`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Disable URL Link\", \"pds-blocks\")}</span>\r\n                            </OptionControl>\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown> :\r\n                /*===> Add Link <===*/\r\n                <OptionControl key={`isLink-${uniqueKey}`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='button-checkbox' className='inline-block'>\r\n                    <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-link' data-title={__(\"Convert to Link\", \"pds-blocks\")}></span>\r\n                </OptionControl>}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-animations') ?\r\n                    <PxDropDown title={__(\"Animation Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-atom-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-animations\" className='pdt-15 pdx-15 lineheight-150'>\r\n                            {/*===> Animations <===*/}\r\n                            <AnimationsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-padding') ?\r\n                    <PxDropDown title={__(\"Padding Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-outer divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-padding\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-margin') ?\r\n                    <PxDropDown title={__(\"Margin Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square fal fa-arrows-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-position') ?\r\n                    <PxDropDown title={__(\"Position Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-to-dot divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-border') ?\r\n                    <PxDropDown title={__(\"Border Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-all divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            {/*===> Border Size <===*/}\r\n                            <ScreensTabs\r\n                                sm={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-effects') ?\r\n                    <PxDropDown title={__(\"Effects Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-backpack divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <EffectsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> General Options <===*/}\r\n            <PanelBody title={__(\"General Options\", \"pds-blocks\")} initialOpen={true}>\r\n                {/*=== Form Control  ===*/}\r\n                <PhenixInput className=\"mb-15\" name=\"id\" label={__(\"HTML ID [Anchor]\", \"pds-blocks\")} value={attributes.id} onChange={set_value} />\r\n                {/*===> Styles Options <===*/}\r\n                <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"support\" />\r\n                {/*===> Self-Align Options <===*/}\r\n                <div className=\"mt-30\">\r\n                    <ScreensTabs\r\n                        sm={(screen) => <PhenixSelect name={`align-self`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self`]} onChange={set_flexbox} options={[\r\n                            {label: \"Start\", value: `align-self-start`},\r\n                            {label: \"Center\", value: `align-self-center`},\r\n                            {label: \"End\", value: `align-self-end`}\r\n                        ]} />}\r\n\r\n                        md={(screen) => <PhenixSelect class=\"mt-15\" name={`align-self-md`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self-md`]} onChange={set_flexbox} options={[\r\n                            {label: \"Start\", value: `align-self-md-start`},\r\n                            {label: \"Center\", value: `align-self-md-center`},\r\n                            {label: \"End\", value: `align-self-md-end`}\r\n                        ]} />}\r\n\r\n                        lg={(screen) => <PhenixSelect class=\"mt-15\" name={`align-self-lg`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self-lg`]} onChange={set_flexbox} options={[\r\n                            {label: \"Start\", value: `align-self-lg-start`},\r\n                            {label: \"Center\", value: `align-self-lg-center`},\r\n                            {label: \"End\", value: `align-self-lg-end`}\r\n                        ]} />}\r\n\r\n                        xl={(screen) => <PhenixSelect class=\"mt-15\" name={`align-self-xl`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self-xl`]} onChange={set_flexbox} options={[\r\n                            {label: \"Start\", value: `align-self-xl-start`},\r\n                            {label: \"Center\", value: `align-self-xl-center`},\r\n                            {label: \"End\", value: `align-self-xl-end`}\r\n                        ]} />}\r\n                />\r\n                </div>\r\n            </PanelBody>\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/*====> Edit Layout <====*/}\r\n        {attributes.preview ?\r\n            <img src={PreviewImage} alt=\"\" className=\"fluid\" />\r\n        :\r\n        <TagName key={`${uniqueKey}`} {...blockProps}>\r\n            <div {...innerBlocksProps}></div>\r\n        </TagName>\r\n        }\r\n    </>);\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> FlexAlignment <===//\r\nconst FlexAlignment = (props) => {\r\n    //===> Properties <===//\r\n    const {label, value, onChange, screen, blockKey} = props;\r\n    const screenPoint = screen ? `-${screen}` : \"\";\r\n    const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n    const uniqueKey = `${blockKey ? blockKey + \"-\" : \"\"}align-${screenPoint}-options`;\r\n\r\n    //===> Find Type <===//\r\n    const extractType = (options) => {\r\n        const xAlignments = [`${screenPoint}-x-start`, `${screenPoint}-x-end`, `${screenPoint}-x-between`, `${screenPoint}-x-around`, `${screenPoint}-x-center`];\r\n        const yAlignments = [`${screenPoint}-y-start`, `${screenPoint}-y-end`, `${screenPoint}-y-center`];\r\n        \r\n        for (let option of options) {\r\n            if (xAlignments.includes(option)) return 'x';\r\n            else if (yAlignments.includes(option)) return 'y';\r\n        }\r\n\r\n        return null;\r\n    };\r\n    \r\n    //===> Set Alignment <===//\r\n    const setAlignment = useCallback((target) => {\r\n        //====> Cleanup Empty Space and Split the Value <====/\r\n        const options = value.trim().split(/\\s+/);\r\n    \r\n        //====> Define alignment <====//\r\n        const xAlignments = [`${screenPoint}-x-start`, `${screenPoint}-x-end`, `${screenPoint}-x-between`, `${screenPoint}-x-around`, `${screenPoint}-x-center`];\r\n        const yAlignments = [`${screenPoint}-y-start`, `${screenPoint}-y-end`, `${screenPoint}-y-center`];\r\n        const allAlignments = [...xAlignments, ...yAlignments];\r\n    \r\n        //====> Extract alignment type from target attribute <====//\r\n        const targetType = target.getAttribute('name').match(/-x$/) ? 'x' : 'y';\r\n    \r\n        //====> Check if any option has the same type as target <====//\r\n        const hasOption = options.some(option => allAlignments.includes(option));\r\n    \r\n        //====> Modify value based on conditions <====//\r\n        let modifiedValue = options;\r\n        const currentType = extractType(options);\r\n        if (hasOption && targetType === currentType) {\r\n            modifiedValue = options.map(option => allAlignments.includes(option) && option.includes(targetType) ? target.value : option);\r\n        } else {\r\n            modifiedValue.push(target.value);\r\n        }\r\n    \r\n        //====> Join modified options and return <====//\r\n        return onChange(modifiedValue.join(' '));\r\n    }, [value, onChange, screenPoint]);\r\n\r\n    //===> Reset Value Method <===//\r\n    const reset_align = (clicked) => onChange(\"align-reset\");\r\n\r\n    //===> Output <===//\r\n    return (<div className='components-flex-item flex-alignment-btns' key={uniqueKey}>\r\n        {/*===> Label <===*/}\r\n        <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n            <label className='fs-13 weight-bold'>{label}</label>\r\n            <button type=\"button\" key={`reset-btn${screenPoint}`} data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n        </div>\r\n        {/*===> Counter Control <===*/}\r\n        <div className={\"flexbox align-between mb-15\"}>\r\n            {/*===> Radio Buttons <===*/}\r\n            <div className=\"col-auto border-1 border-solid border-alpha-15 radius-sm\">\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-start-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-start-x`)} value={`align${screenPoint}-start-x`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-center-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-center-x`)} value={`align${screenPoint}-center-x`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-between`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-between`)} value={`align${screenPoint}-between`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-around`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-around`)} value={`align${screenPoint}-around`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-end-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-end-x`)} value={`align${screenPoint}-end-x`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                </OptionControl>\r\n            </div>\r\n            {/*===> Radio Buttons <===*/}\r\n            <div className=\"col-auto border-1 border-solid border-alpha-15 radius-sm\">\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-start-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-start-y`)} value={`align${screenPoint}-start-y`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-center-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-center-y`)} value={`align${screenPoint}-center-y`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-end-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-end-y`)} value={`align${screenPoint}-end-y`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                </OptionControl>\r\n            </div>\r\n        </div>\r\n        {/*===> Counter Control <===*/}\r\n    </div>)\r\n}\r\n\r\nexport default FlexAlignment;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useState, useMemo } from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nconst PhenixBackground = (props) => {\r\n    //===> Get Data <===//\r\n    const PhenixBlocks = useMemo(() => window.PhenixBlocks.dataLists, []);\r\n    //===> Properties <===//\r\n    const {type, value, label, rotate, colorsOnly, onlyCG, isSmall, placeholder, onChange, customOnly, cover} = props;\r\n\r\n    //===> Get Custom Colors and Gradients <===//\r\n    const setting = wp.data.select('core/block-editor').getSettings();\r\n    const editorColors = setting['__experimentalFeatures']?.color;\r\n\r\n    //===> Custom Colors List <===//\r\n    const customColorsList = useMemo(() => {\r\n        //===> Default and User Custom <===//\r\n        const list = [];\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Custom Gradients List <===//\r\n    const customGradientsList = useMemo(() => {\r\n        //===> Default and User Custom <===//\r\n        const list = [];\r\n        if (editorColors && !colorsOnly) {\r\n            editorColors.gradients?.default?.forEach(gradient => list.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n            editorColors.gradients?.custom?.forEach(gradient => list.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Returned Value <===//\r\n    let options = {\r\n        type: type,\r\n        rotate: rotate,\r\n        value: value || \"\",\r\n    };\r\n\r\n    //===> Set Type <===//\r\n    const set_type = type => {\r\n        //===> Set Value <===//\r\n        options.type = type;\r\n\r\n        //===> change value <===//\r\n        if (options.type === 'image') {options.value = PhenixBlocks.palette.placeholder;} \r\n        else {options.value = \"\";}\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Type <===//\r\n    const set_rotate = rotate => {\r\n        //===> Set Value <===//\r\n        options.rotate = rotate;\r\n        //===> change value <===//\r\n        if (options.type !== 'gradient') options.value = \"\";\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Background <===//\r\n    const setBackground = clicked => {\r\n        //===> Get Value <===//\r\n        let button = clicked.target,\r\n            value  = button?.getAttribute('data-value');\r\n\r\n        //===> CSS Colors & Gradients <===//\r\n        if (type !== 'image' && type !== \"video\" && type !== \"3d-viewer\") {options.value = value;}\r\n        //===> File URL <===//\r\n        else {options.value = clicked.url;}\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Cover <===//\r\n    const setCover = clicked => {\r\n        //===> Set value <===//\r\n        options.cover = clicked.url;\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Buttons Creator <===//\r\n    const makeButtons = (list, classes) => {\r\n        let output = [];\r\n        //===> for each item <===//\r\n        for (let index = 0; index < list.length; index++) {\r\n            //===> Get Value <===//\r\n            const name = list[index];\r\n            let title = name,\r\n                isColor = !name.includes(\"fa-\");\r\n\r\n            //===> Convert to Title <===//\r\n            if (isColor) {\r\n                //===> Get a Clean Title <===//\r\n                title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace('--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ');\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n            } else title = \"Reset\";\r\n\r\n            const buttonAttributes = {\r\n                \"title\": title,\r\n                \"onClick\": setBackground,\r\n                \"data-value\": isColor ? name : \"\",\r\n                \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                \"style\": {\"width\":\"30px\",\"height\":\"16px\", backgroundColor: name.includes('var(') && !name.includes('--gradient') ? name : null, backgroundImage: name.includes('--wp--preset--gradient') ? name : null},\r\n                \"className\":`${isColor && !name.includes('var') ? name : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"} ${classes?classes:\"\"}`\r\n            }\r\n\r\n            output.push(<button {...buttonAttributes}></button>);\r\n        }\r\n        //===> Return Buttons <===//\r\n        return output;\r\n    };\r\n\r\n    //===> Colors Panel <===//\r\n    const showPanel = clicked => {\r\n        let button  = clicked.target,\r\n            wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n            panel   = wrapper.querySelector(\".options-list\");\r\n\r\n        //=== Show/Hide Panel ===//\r\n        if (panel) {\r\n            Phenix(button).toggleClass(\"px-active\");\r\n            Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n\r\n            if (isSmall) {\r\n                Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n            }\r\n        }\r\n    };\r\n\r\n    //===> Component Design <===//\r\n    return (\r\n        <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n            {/*===> Toggle Button <===*/}\r\n            {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n            {/*===> Group <===*/}\r\n            <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                {/*===> Panel Trigger */}\r\n                <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                    {type !== \"image\" && type !== \"video\" ? <>\r\n                        <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\", backgroundColor: value.includes('--wp--preset--color') ? value : null, backgroundImage: value.includes('--wp--preset--gradient') ? value : null}}></span>\r\n                        <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                    </> : <>\r\n                    <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                        <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                    </>}\r\n                    {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                </button>\r\n                {/*===> Type Select <===*/}\r\n                {!colorsOnly && !onlyCG ? \r\n                    <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                        { label: 'color',   value: 'color' },\r\n                        { label: 'image',   value: 'image' },\r\n                        { label: 'gradient',   value: 'gradient' },\r\n                        { label: 'video',   value: 'video' },\r\n                        { label: '3D Viewer',   value: '3d-viewer' },\r\n                    ]}/>\r\n                : onlyCG ? \r\n                    <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                        { label: 'color',   value: 'color' },\r\n                        { label: 'gradient',   value: 'gradient' },\r\n                    ]}/>\r\n                : null}\r\n            </div>\r\n            {/*===> Panel <===*/}\r\n            <div className={`flexbox flow-columns options-list ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pdy-15 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                {type === \"image\" || type === \"video\" || type === \"3d-viewer\" ? <>\r\n                    <MediaUploader key=\"upload-file\" size=\"small\" label={`${type === \"video\" ? \"Video File\" : \"Image File\"}`} value={!value || type === \"video\" ? PhenixBlocks.palette.placeholder : value} setValue={setBackground}></MediaUploader>\r\n\r\n                    {/* ===> Cover File <=== */}\r\n                    {type === \"video\" ? <MediaUploader label=\"Cover File\" key=\"upload-cover-file\" size=\"small\" value={!cover ? PhenixBlocks.palette.placeholder : cover} setValue={setCover}></MediaUploader> : null}\r\n                </> : null}\r\n                {/*===> Colors Set <====*/}\r\n                <div className='flexbox' style={{\"gap\": \"0.75rem\"}}>\r\n                    {type === \"color\" ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].main, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-10 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                        {customColorsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Colors\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customColorsList, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Dark Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-white fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].darkAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Light Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-dark fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].lightAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].status, \"radius-xxl\")}\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Offwhite Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.colors.offwhite, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].brands, \"radius-xxl\")}\r\n                    </>\r\n                    : type === \"gradient\" ? <>\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Phenix Gradients\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.gradients, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        {customGradientsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Gradients\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customGradientsList, \"radius-xxl\")}\r\n                        </>:null}\r\n                    </>:\r\n                    null}\r\n                </div>\r\n            </div>\r\n            {/*===> Rotation Select <===*/}\r\n            {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                    { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                    { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                    { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                    { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                    { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                    { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                    { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                    { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                    { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                ]}/>\r\n            </div> : null}\r\n            {/*===> Rotation Select <===*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhenixBackground;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useMemo } from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nconst PhenixColors = (props) => {\r\n    //===> Properties <===//\r\n    const {value, label, isSmall, placeholder, onChange} = props;\r\n\r\n    //===> Colors List <===//\r\n    const pxPallete = useMemo(() => window.PhenixBlocks.dataLists.paletteText, []);\r\n\r\n    //===> Get Custom Colors and Gradients <===//\r\n    const setting = wp.data.select('core/block-editor').getSettings();\r\n    const editorColors = setting['__experimentalFeatures']?.color;\r\n    const customColorsList = useMemo(() => {\r\n        //===> Generate Custom Colors <===//\r\n        const list = [];\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Set Color <===//\r\n    const setColor = clicked => {\r\n        //===> Get Value <===//\r\n        let button = clicked.target,\r\n            value  = button.getAttribute('data-value');\r\n        //===> Return Options <===//\r\n        return onChange(value);\r\n    };\r\n\r\n    //===> Buttons Creator <===//\r\n    const makeButtons = (list, classes) => {\r\n        let output = [];\r\n        //===> for each item <===//\r\n        for (let index = 0; index < list.length; index++) {\r\n            //===> Get Value <===//\r\n            const name = list[index];\r\n            let title = list[index],\r\n                isColor = !name.includes(\"fa-\");\r\n\r\n            //===> Convert to Title <===//\r\n            if (isColor) {\r\n                //===> Get a Clean Title <===//\r\n                title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ');\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n            } else {\r\n                title = \"Reset\";\r\n            }\r\n\r\n            //===> Button Attributes <====//\r\n            const buttonAttributes = {\r\n                \"title\": title,\r\n                \"onClick\": setColor,\r\n                \"data-value\": isColor ? name : \"\",\r\n                \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                \"style\": {width: \"30px\", height:\"16px\", backgroundColor: name.includes('var') ? name : null},\r\n                \"className\": `${isColor && !name.includes('var') ? name.replace('color-','bg-') : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : null}  ${classes?classes:\"\"}`,\r\n            };\r\n\r\n            //===> Push the Button <===//\r\n            output.push(<button {...buttonAttributes}></button>);\r\n        }\r\n\r\n        //===> Return Buttons <===//\r\n        return output;\r\n    };\r\n\r\n    //===> Colors Panel <===//\r\n    const showPanel = clicked => {\r\n        let button = clicked.target,\r\n            wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n            panel  = Phenix(button).next(\".options-list\");\r\n        //=== Show/Hide Panel ===//\r\n        if (panel) {\r\n            Phenix(button).toggleClass(\"px-active\");\r\n            Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n            \r\n            if (isSmall) {\r\n                Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n            };\r\n        }\r\n    };\r\n\r\n    //===> Component Output <===//\r\n    return (\r\n        <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n            {/*===> Toggle Button <===*/}\r\n            {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n            {/*===> Trigger <===*/}\r\n            <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value.replace(\"color-\",\"bg-\") : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\", backgroundColor: value && value.includes('var') ? value : null}}></span>\r\n                <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n            </button>\r\n            {/*===> Panel <===*/}\r\n            <div className='flexbox px-scrollbar overflow-y-auto options-list pdb-20 pdt-10 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12`}>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.main, \"radius-xxl\")}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                {customColorsList.length > 0 ? <>\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                        {__(\"Custom Colors\", \"pds-blocks\")}\r\n                    </label>\r\n                    {makeButtons(customColorsList, \"radius-xxl\")}\r\n                </>:null}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.status, \"radius-xxl\")}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.social, \"radius-xxl\")}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhenixColors;","import React, { useEffect, Fragment } from '@wordpress/element';\r\n\r\nconst PxDropDown = ({\r\n    label,\r\n    button,\r\n    support,\r\n    dropList,\r\n    children,\r\n    className,\r\n    dataPosition,\r\n    title,\r\n    key\r\n}) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Component Attributes <===\\\\\r\n    const attributes = {};\r\n\r\n    //===> Component Classes <===\\\\\r\n    if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n    if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n    if (key) attributes.key = key;\r\n\r\n    //===> Component Render <===\\\\\r\n    return (\r\n        <Fragment>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PxDropDown;","//===> Get Dynamic URL Suggestions <====//\r\nconst SuggestionsUrl = (props) => (\r\n    <ul className=\"fluid reset-list bg-white bx-shadow-dp-1 border-1 border-solid border-alpha-10 z-index-dropdown position-ab pos-start-0 pos-after-y\">\r\n        {props.suggestions.map((suggestion, index) => {\r\n            return (<li key={`link-sug-key-${index}`} className=\"pdx-15 pdy-5 fs-12 divider-b mouse-pointer\" onClick={() => props.handleSuggestionClick(suggestion)}>\r\n                <strong>{suggestion.title}</strong>\r\n                <span className='display-block fs-10 color-primary tx-nowrap'>{suggestion.url}</span>\r\n            </li>)\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default SuggestionsUrl;","//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixInput = (props) => {\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value,  onChange, className, placeholder } = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        if (value !== event.target.value) return onChange(event.target);\r\n    }, [value, onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = {\r\n        onBlur: setValue,\r\n        type: type || \"text\",\r\n        defaultValue: value || \"\",\r\n        placeholder: placeholder || label || \"\",\r\n    };;\r\n\r\n    //===> Render Component <===//\r\n    return (<>\r\n        {/*===> Control Label <===*/}\r\n        {label && <label className='tx-capitalize fs-13' style={{ marginBottom: 5 }}>{label}</label>}\r\n        {/*===> Control Element <===*/}\r\n        <input name={name} className={`form-control ${size ? size : \"small\"} radius-md ${className ? className : \"\"}`} {...attributes}/>\r\n    </>);\r\n}\r\n\r\nexport default PhenixInput;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nconst PhenixNumber = (props) => {\r\n    //===> Properties <===//\r\n    const {label, value, min, max, steps, icon, onChange, name} = props;\r\n\r\n    //===> Set Value <===//\r\n    const setNumber = useCallback((changed) => {\r\n        //===> Get Elements <===//\r\n        const input = changed.target;\r\n        const minNum = parseFloat(min) || Number.MIN_SAFE_INTEGER;\r\n        const maxNum = parseFloat(max) || Number.MAX_SAFE_INTEGER;\r\n        //===> Get Input Element <===//\r\n        const newVal = parseFloat(input.value);\r\n        const checkVal = (newVal >= minNum && newVal <= maxNum) ? newVal : minNum;\r\n        //===> Set Data <===//\r\n        input.value = checkVal;\r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [min, max, onChange]);\r\n\r\n    //===> Increase Number <===//\r\n    const IncreaseNum = useCallback((clicked) => {\r\n        //===> Get Elements <===//\r\n        let button = clicked.target,\r\n            wrapper = button.closest(\".px-counter-input-editor\"),\r\n            maxNum = parseFloat(max) || Number.MAX_SAFE_INTEGER,\r\n            step = steps ? parseFloat(steps) : 1;\r\n\r\n        //===> Get Input Element <===//\r\n        let input = wrapper.querySelector('input[type=\"number\"]'),\r\n            newVal = parseFloat(input.value) + step;\r\n\r\n        //===> Set Data <===//\r\n        input.value = newVal <= maxNum ? newVal : maxNum;\r\n\r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [max, steps, onChange]);\r\n\r\n    //===> Decrease Number <===//\r\n    const DecreaseNum = useCallback((clicked) => {\r\n        //===> Get Elements <===//\r\n        let button = clicked.target,\r\n            wrapper = button.closest(\".px-counter-input-editor\"),\r\n            minNum = parseFloat(min) || Number.MIN_SAFE_INTEGER,\r\n            step = steps ? parseFloat(steps) : 1;\r\n\r\n        //===> Get Input Element <===//\r\n        let input = wrapper.querySelector('input[type=\"number\"]'),\r\n            newVal = parseFloat(input.value) - step;\r\n\r\n        //===> Set Data <===//\r\n        input.value = newVal >= minNum ? newVal : minNum;\r\n\r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [min, steps, onChange]);\r\n\r\n    //===> Output <===//\r\n    return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n        {/*===> Label <===*/}\r\n        <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n        {/*===> Counter Control <===*/}\r\n        <div className={\"px-counter-input-editor position-rv fluid \" + (icon ? icon : \"\")}>\r\n            {/*===> Button <===*/}\r\n            {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n            {/*===> Number Input <===*/}\r\n            <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n            {/*===> Button <===*/}\r\n            <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n            </div>\r\n        </div>\r\n        {/*===> Counter Control <===*/}\r\n    </div>)\r\n}\r\n\r\nexport default PhenixNumber;","//====> .Dependencies. <====//\r\nimport React, { useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixSelect = (props) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = useMemo(() => {\r\n        //===> Define Element Attributes <===//\r\n        let attrs = { onChange: setValue };\r\n        //===> Add Attributes <===//\r\n        if (search) attrs['data-search'] = 1;\r\n        if (multiple) attrs.multiple = multiple;\r\n        if (placeholder) attrs['data-placeholder'] = placeholder;\r\n        //===> Return Attributes <===//\r\n        return attrs;\r\n    }, [setValue, search, multiple, placeholder]);\r\n\r\n    //===> Get Options List <===//\r\n    const options_list = useMemo(() => {\r\n        //===> Define the Options List <===//\r\n        let list = [];\r\n\r\n        //===> Check if Array of Elements <===//\r\n        if (Array.isArray(options) && options.length > 1 && options[1].type) {\r\n            //===> Fix the Default <===//\r\n            if (!options[0].type) options[0] = <option key={0} value={options[0].value}>{`${options[0].label}`}</option>;\r\n\r\n            //===> Add Options to the List <===//\r\n            list = options;\r\n        }\r\n        //===> Grouped Options <===//\r\n        else if (typeof options === 'object' && !Array.isArray(options)) {\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                list.push(options_group);\r\n            });\r\n        } \r\n        //===> Normal Options <===//\r\n        else {\r\n            options.forEach(item => {\r\n                list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        }\r\n        return list;\r\n    }, [options]);\r\n\r\n    //===> Render Component <===//\r\n    return <>\r\n        {/*===> Control Label <===*/}\r\n        {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n        {/*===> Control Element <===*/}\r\n        <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n            <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default PhenixSelect;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = PhenixBlocks.animations.entrance;\r\n        const exit_animations = PhenixBlocks.animations.exit;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                {attributes.style?.animation?.hasExit ?\r\n                    <div className='col-12 mb-5'>\r\n                        <PhenixSelect name=\"animation-exit\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Exit Animation\", \"pds-blocks\")} value={attributes.style?.animation?.exit} onChange={mainSetter} options={exit_animations} />\r\n                    </div>\r\n                :null}\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-inset\" label={__(\"Inset\", \"pds-blocks\")} value={attributes.style?.animation?.inset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Scroll Driven <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <OptionControl name={`animation-scrollDriven`} value=\"boolean\" checked={attributes.style?.animation?.scrollDriven} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Scroll Driven\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Driven Progress <===*/}\r\n                    <div className='col-12 col mb-10'>\r\n                        <PhenixNumber name=\"animation-drivenEnd\" label={__(\"Driven Progress\", \"pds-blocks\")} value={attributes.style?.animation?.drivenEnd || 0} onChange={mainSetter} min={0} max={200} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: <>\r\n                    {/*===> Stagger <===*/}\r\n                    <div className='col-12 col mb-10'>\r\n                        <PhenixNumber name=\"animation-stagger\" label={__(\"Stagger\", \"pds-blocks\")} value={attributes.style?.animation?.stagger || 100} onChange={mainSetter} min={0} max={15000} steps={10}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> .End Stagger. <===*/}\r\n                </>}\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-6 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`animation-hasExit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> .End Columns. <===*/}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Component <===//\r\nexport default class BorderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter, objectSetter, setAttributes} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks;\r\n\r\n        //===> Reset border <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`border-top${screen}`]: \"\",\r\n                [`border-start${screen}`]: \"\",\r\n                [`border-end${screen}`]: \"\",\r\n                [`border-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"border-start\", \"border-end\"],\r\n                propY = [\"border-top\", \"border-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-border-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-start${screen}`]: parseInt(target.value), [`border-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-border-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-top${screen}`]: parseInt(target.value), [`border-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto`}>\r\n            {/*===> Other Options <===*/}\r\n            {!screen || screen !== \"\" ? <>\r\n                <div className='row gpx-15 divider-b mb-15 position-rv'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixSelect name=\"border-style\" placeholder={__(\"Style\", \"pds-blocks\")} className={`mb-10 weight-medium`} value={attributes.style['border-style']} onChange={mainSetter} options={PhenixBlocks.dataLists.styles.border_styles} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixBackground key={`border-color`}\r\n                            isSmall={true}\r\n                            colorsOnly={true}\r\n                            customOnly={true}\r\n                            onChange={(value) => objectSetter(value, \"\", \"style\", \"border-color\", attributes, setAttributes)}\r\n                            type={attributes.style['border-color']?.type || \"color\"}\r\n                            value={attributes.style['border-color']?.value || \"\"}\r\n                            rotate={attributes.style['border-color']?.rotate || null} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>:null}\r\n            <div className='position-rv'>\r\n                {/*===> Bound X <===*/}\r\n                <OptionControl key={`bound-border-x${screen}`} name={`bound-border-x${screen}`} checked={attributes.style[`bound-border-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n                {/*===> Bound Y <===*/}\r\n                <OptionControl key={`bound-border-y${screen}`} name={`bound-border-y${screen}`} checked={attributes.style[`bound-border-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n\r\n                {/*===> Top Controller <===*/}\r\n                <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-top${screen}`} name={`border-top${screen}`} onChange={setValue} value={attributes.style[`border-top${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n                {/*===> X Controls <===*/}\r\n                <div className={`flexbox align-between align-center-y mb-15`}>\r\n                    {/*===> Start Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-start${screen}`} name={`border-start${screen}`} onChange={setValue} value={attributes.style[`border-start${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                    {/*===> Reset Button <===*/}\r\n                    <button key={`reset-border${screen}`} name={`reset-border${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                    {/*===> End Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-end${screen}`} name={`border-end${screen}`} onChange={setValue} value={attributes.style[`border-end${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                </div>\r\n                {/*===> Bottom Controller <===*/}\r\n                <div className='mgx-auto' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-bottom${screen}`}  name={`border-bottom${screen}`} onChange={setValue} value={attributes.style[`border-bottom${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\n\r\n//===> Component <===//\r\nexport default class EffectsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const hover_effect = PhenixBlocks.effects.hover;\r\n        const box_shadows = PhenixBlocks.effects.shadows;\r\n        const animations_effect = PhenixBlocks.effects.animations;\r\n        const other_effects = PhenixBlocks.effects.other_effects;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10 gpy-15`}>\r\n                {/*===> Hover Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"hover-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Hover Effects\", \"pds-blocks\")} value={typeof(attributes.style['hover-effect']) === 'string' ? [attributes.style['hover-effect']] : attributes.style['hover-effect']} onChange={mainSetter} options={hover_effect} />\r\n                </div>\r\n                {/*===> Animation Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"animated-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Always Animated\", \"pds-blocks\")} value={typeof(attributes.style['animated-effect']) === 'string' ? [attributes.style['animated-effect']] : attributes.style['animated-effect']} onChange={mainSetter} options={animations_effect} />\r\n                </div>\r\n                {/*===> Box Shadow <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"box-shadow\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Box Shadow\", \"pds-blocks\")} value={attributes.style['box-shadow']} onChange={mainSetter} options={box_shadows} />\r\n                </div>\r\n                {/*===> Other Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"other-effects\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Other Effects\", \"pds-blocks\")} value={attributes.style['other-effects']} multiple={true} onChange={mainSetter} options={other_effects} />\r\n                </div>\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport OptionControl from '../switch';\r\nimport FlexAlignment from '../alignment';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixSelect from \"../select\";\r\n\r\n//===> Options List\r\n//=> align, flex-props, grid-props\r\n\r\n//===> Component <===//\r\nexport default class FlexboxSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screenPoint}-option`;\r\n\r\n        const align_options = [\r\n            {label: \"Start\", value: `align-self${screen}-start`},\r\n            {label: \"Center\", value: `align-self${screen}-center`},\r\n            {label: \"End\", value: `align-self${screen}-end`}\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className={`row gpx-15 ${className ? className : \"\"}`} key={uniqueKey}>\r\n                {/*===> Column <===*/}\r\n                {!options || options.includes(\"align\") ? <>\r\n                    <div className='col-12 mb-15'>\r\n                        <FlexAlignment screen={screen} label={__(\"Flexbox Alignment\", \"pds-blocks\")} value={attributes.flexbox[`align${screenPoint}`] || \"\"} onChange={(target) => mainSetter(target, screen ? screen : \"\")}></FlexAlignment>\r\n                        {/*====> Self Alignment <====*/}\r\n                        {!options || options.includes('align-self') ? <>\r\n                            <PhenixSelect class=\"mt-15\" name={`align-self${screen}`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self${screen}`]} onChange={mainSetter} options={align_options} />\r\n                        </>:null}\r\n                    </div>\r\n                </>: null}\r\n                {/*===> Group <===*/}\r\n                <div className='col-12 row gpx-10 pdt-5 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} key={`gpy${screenPoint}`} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-X Space\", \"pds-blocks\")} key={`gpx${screenPoint}`} name={`gpx${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpx${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 flexbox gpy-5'>\r\n                    {/*===> Label <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <label className='col-12 mb-5 tx-UpperCase'>{__(\"Flow Options\", \"pds-blocks\")}</label> : null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <OptionControl key={`flow${screenPoint}`} name={`flow${screenPoint}`} value={!attributes.flexbox[`stacked${screenPoint}`] || attributes.flexbox[`stacked${screenPoint}`] === \"\" ? `flow${screenPoint}-reverse` : `flow${screenPoint}-columns-reverse`} checked={attributes.flexbox[`flow${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Reverse \", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`stacked${screenPoint}`} name={`stacked${screenPoint}`} value={`flow${screenPoint}-columns`} checked={attributes.flexbox[`stacked${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Stacked\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`nowrap${screenPoint}`} name={`nowrap${screenPoint}`} value={`flow${screenPoint}-nowrap`} checked={attributes.flexbox[`nowrap${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Nowrap\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider && !screen ? <OptionControl key={`equals${screenPoint}`} name={`equals${screenPoint}`} checked={attributes.flexbox.equals} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Equal Cols.\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider ? <OptionControl key={`masonry${screenPoint}`} name={`masonry${screenPoint}`} value={`px-masonry${screenPoint}`} checked={attributes.flexbox[`masonry${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Masonry\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") ?\r\n                    <OptionControl key={`gpy-fix`} name={`gpy-fix`} value={`gpy-fix`} checked={attributes.flexbox[`gpy-fix`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Gap Y fix\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Other Button <===*/}\r\n                    {this.props.children ? this.props.children : null}\r\n                </div>\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class MarginSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-margin-option`;\r\n\r\n        //===> Reset <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`mt${screen}`]: \"\",\r\n                [`ms${screen}`]: \"\",\r\n                [`me${screen}`]: \"\",\r\n                [`mb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"ms\", \"me\"],\r\n                propY = [\"mt\", \"mb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-margin-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`ms${screen}`]: parseInt(target.value), [`me${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-margin-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`mt${screen}`]: parseInt(target.value), [`mb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`margin-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-margin-x${screen}`} name={`bound-margin-x${screen}`} checked={attributes.style[`bound-margin-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-margin-y${screen}`} name={`bound-margin-y${screen}`} checked={attributes.style[`bound-margin-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`mt${screen}`} name={`mt${screen}`} onChange={setValue} value={attributes.style[`mt${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`ms${screen}`} name={`ms${screen}`} onChange={setValue} value={attributes.style[`ms${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-margin${screen}`} name={`reset-margin${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`me${screen}`} name={`me${screen}`} onChange={setValue} value={attributes.style[`me${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`mb${screen}`} name={`mb${screen}`} onChange={setValue} value={attributes.style[`mb${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PaddingSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-padding-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pdt${screen}`]: \"\",\r\n                [`pds${screen}`]: \"\",\r\n                [`pde${screen}`]: \"\",\r\n                [`pdb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pds\", \"pde\"],\r\n                propY = [\"pdt\", \"pdb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-padding-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pds${screen}`]: parseInt(target.value), [`pde${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-padding-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pdt${screen}`]: parseInt(target.value), [`pdb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`padding-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-padding-x${screen}`} name={`bound-padding-x${screen}`} checked={attributes.style[`bound-padding-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-padding-y${screen}`} name={`bound-padding-y${screen}`} checked={attributes.style[`bound-padding-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pdt${screen}`} name={`pdt${screen}`} onChange={setValue} value={attributes.style[`pdt${screen}`] || 0} min={0} max={2500} steps={1} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pds${screen}`} name={`pds${screen}`} onChange={setValue} value={attributes.style[`pds${screen}`] || 0} min={0} max={2500} steps={1} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-padding${screen}`} name={`reset-padding${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pde${screen}`} name={`pde${screen}`} onChange={setValue} value={attributes.style[`pde${screen}`] || 0} min={0} max={2500} steps={1} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pdb${screen}`} name={`pdb${screen}`} onChange={setValue} value={attributes.style[`pdb${screen}`] || 0} min={0} max={2500} steps={1} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PositionSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const zindex_options = PhenixBlocks.zindex_options.map(opt => ({ ...opt, value: `${opt.value}${screen}` }));\r\n        const position_options = PhenixBlocks.position_options.map(opt => ({ ...opt, value: `${opt.value}${screen}` }));\r\n        const preset_positions = PhenixBlocks.preset_positions.map(opt => ({ ...opt, value: `${opt.value}${screen}` }));\r\n\r\n        //===> Reset position <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pos-top${screen}`]: \"\",\r\n                [`pos-start${screen}`]: \"\",\r\n                [`pos-end${screen}`]: \"\",\r\n                [`pos-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pos-start\", \"pos-end\"],\r\n                propY = [\"pos-top\", \"pos-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-position-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-start${screen}`]: parseInt(target.value), [`pos-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-position-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-top${screen}`]: parseInt(target.value), [`pos-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-position-x${screen}`} name={`bound-position-x${screen}`} checked={attributes.style[`bound-position-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-position-y${screen}`} name={`bound-position-y${screen}`} checked={attributes.style[`bound-position-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            \r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-top${screen}`} name={`pos-top${screen}`} onChange={setValue} value={attributes.style[`pos-top${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-start${screen}`} name={`pos-start${screen}`} onChange={setValue} value={attributes.style[`pos-start${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-position${screen}`} name={`reset-position${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-end${screen}`} name={`pos-end${screen}`} onChange={setValue} value={attributes.style[`pos-end${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-bottom${screen}`}  name={`pos-bottom${screen}`} onChange={setValue} value={attributes.style[`pos-bottom${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            <div className='col-12 pdt-10 divider-t mt-15 row gpx-15'>\r\n                <div className='mb-10 col'>\r\n                    <PhenixSelect key={`position${screen}`} name={`position${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style[`position${screen}`]} onChange={mainSetter} options={position_options} />\r\n                </div>\r\n                <div className='mb-10 col col-6'>\r\n                    <PhenixSelect key={`position-index${screen}`} name={`z-index${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Index Order\", \"pds-blocks\")} value={attributes.style[`z-index${screen}`]} onChange={mainSetter} options={zindex_options} />\r\n                </div>\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`position-preset${screen}`} name={`position-preset${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Preset Position\", \"pds-blocks\")} value={attributes.style[`position-preset${screen}`]} onChange={mainSetter} options={preset_positions} />\r\n                </div>\r\n            </div>\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class SizesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.sizes_range;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Generate Width Sizes <===//\r\n        const width_list = PhenixBlocks.width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-${size}`} }),\r\n              min_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-min-${size}`} }),\r\n              max_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-max-${size}`} });\r\n\r\n        //===> Generate Height Sizes <===//\r\n        const height_list = PhenixBlocks.height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-${size.replace(\"%\", \"\")}`} }),\r\n              min_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-min-${size.replace(\"%\", \"\")}`} }),\r\n              max_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-max-${size.replace(\"%\", \"\")}`} });\r\n\r\n        //===> Add Default Option <===//\r\n        const default_option = { \"label\": __(\"Default\", \"pds-blocks\"), \"value\": \"\" };\r\n        width_list.unshift(default_option);\r\n        min_width_list.unshift(default_option);\r\n        max_width_list.unshift(default_option);\r\n        height_list.unshift(default_option);\r\n        min_height_list.unshift(default_option);\r\n        max_height_list.unshift(default_option);\r\n        \r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Width <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`width_size${screenPoint}`} name={`width_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Width Sizes\", \"pds-blocks\")} value={attributes.style[`width_size${screenPoint}`]} onChange={mainSetter} options={width_list} />\r\n                </div>\r\n                {/*===> Min Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_size${screenPoint}`} name={`min_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Width\", \"pds-blocks\")} value={attributes.style[`min_size${screenPoint}`]} onChange={mainSetter} options={min_width_list} />\r\n                </div>\r\n                {/*===> Max Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_size${screenPoint}`} name={`max_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Width\", \"pds-blocks\")} value={attributes.style[`max_size${screenPoint}`]} onChange={mainSetter} options={max_width_list} />\r\n                </div>\r\n\r\n                {/*===> Height <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`height_size${screenPoint}`} name={`height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Height Sizes\", \"pds-blocks\")} value={attributes.style[`height_size${screenPoint}`]} onChange={mainSetter} options={height_list} />\r\n                </div>\r\n                {/*===> Min Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_height_size${screenPoint}`} name={`min_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Height\", \"pds-blocks\")} value={attributes.style[`min_height_size${screenPoint}`]} onChange={mainSetter} options={min_height_list} />\r\n                </div>\r\n                {/*===> Max Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_height_size${screenPoint}`} name={`max_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Height\", \"pds-blocks\")} value={attributes.style[`max_height_size${screenPoint}`]} onChange={mainSetter} options={max_height_list} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixNumber from '../number';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly, objectSetter, setAttributes} = this.props;\r\n        const uniqueKey = 'x';//Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const radius_sizes = PhenixBlocks.radius_sizes;\r\n        const support_options = PhenixBlocks.support_options;\r\n        const display_options = PhenixBlocks.display_options;\r\n        const radius_directions = PhenixBlocks.radius_directions;\r\n        const background_options = PhenixBlocks.background_options;\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\", \"enable-marquee\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                {/*===> Colors and Gradients <===*/}\r\n                <PhenixBackground key={`background-${uniqueKey}`}\r\n                    colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false}\r\n                    onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false}\r\n                    label={__(\"Background\", \"pds-blocks\")} onChange={mainSetter}\r\n                    type={attributes.style.background?.type || \"color\"}\r\n                    value={attributes.style.background?.value || \"\"}\r\n                    rotate={attributes.style.background?.rotate || null} \r\n                />\r\n\r\n                {/*===> Image Backgrounds <===*/}\r\n                <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                    {/*===> Overlay Options <===*/}\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixSelect className=\"border-alpha-25\" label={attributes.style.overly ?__(\"Overlay\", \"pds-blocks\"):null} key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                    </div>\r\n                    {attributes.style.overly ? <>\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixNumber name=\"overly_opacity\" label={__(\"Overlay Opacity\", \"pds-blocks\")} value={ parseInt(attributes.style.overly_opacity) || 50} onChange={mainSetter} />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {attributes.style.overly === \"overlay-custom\" ? <>\r\n                    <div className='col-12'>\r\n                        {/*===> Colors and Gradients <===*/}\r\n                        <PhenixBackground key={`overlay-background-${uniqueKey}`}\r\n                            customOnly={true}\r\n                            label={__(\"Overlay Background\", \"pds-blocks\")}  onChange={(value) => objectSetter(value, \"\", \"style\", \"overly_bg\", attributes, setAttributes)}\r\n                            type={attributes.style.overly_bg?.type || \"color\"}\r\n                            value={attributes.style.overly_bg?.value || \"\"}\r\n                            rotate={attributes.style.overly_bg?.rotate || null} \r\n                        />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {/*===> Image Options <===*/}\r\n                    {attributes.style.background?.type === \"image\"? <>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </>:null}\r\n                </div>\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Style Properties\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-direction-${uniqueKey}`} name=\"radius-direction\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Radius Direction\", \"pds-blocks\")} value={attributes.style['radius-direction']} onChange={mainSetter} options={radius_directions} />\r\n                            </div>\r\n                        </> : null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Marquee Slider <===*/}\r\n                        {attributes.style.support?.includes('enable-marquee') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`marquee-${uniqueKey}`} name=\"marquee\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Marquee Direction\", \"pds-blocks\")} value={attributes.style.marquee} onChange={mainSetter} options={[\r\n                                    { label: __(\"None\", \"pds-blocks\"), value: '' },\r\n                                    { label: __(\"Marquee Left\", \"pds-blocks\"), value: 'px-marquee' },\r\n                                    { label: __(\"Marquee Right\", \"pds-blocks\"), value: 'px-marquee-reverse' },\r\n                                ]} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <label className='tx-capitalize fs-13'>{__(\"Speed\", \"pds-blocks\")}</label>\r\n                                <PhenixNumber key={`marquee-speed`} name={`marquee-speed`} onChange={mainSetter} value={attributes.style[`marquee-speed`] || 15} min={5} />\r\n                            </div>\r\n                        </> : null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from '../number';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter, exclude, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Options Lists <===//\r\n        const font_weights = PhenixBlocks.typography.weights;\r\n        const font_lineheight = PhenixBlocks.typography.lineheight;\r\n        const text_shadows = PhenixBlocks.typography.shadows;\r\n        const font_families = PhenixBlocks.typography.families;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [{ \"label\": \"Default\",  \"value\": \"\"}],\r\n              display_sizes = [];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        PhenixBlocks.sizes_range.font_sizes.map(size => {\r\n            //===> Normal Size <===//\r\n            if (typeof(size) === \"number\") {\r\n                sizes_list.push({\"label\": size, \"value\": `fs${screenPoint}-${size}`});\r\n            } else {\r\n                sizes_list.push({\"label\": `H${size.replace('h', '')}`, \"value\": `${size}${screenPoint}`});\r\n                display_sizes.push({\"label\": `DH${size.replace('h', '')}`, \"value\": `display${screenPoint}-${size}`});\r\n            }\r\n        });\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect key={`font-size${screenPoint}`} className=\"mb-15\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Family <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`family`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Family\", \"pds-blocks\")} value={attributes.typography[`family`]} onChange={mainSetter} options={font_families} />\r\n                </div>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Margin for List Items <===*/}\r\n                {attributes.type?.includes('list-') || attributes.type === \"list\" ? <>\r\n                <div className='col col-6'>\r\n                    <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.typography[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                </div>\r\n                </> :null}\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {exclude && exclude.includes(\"align\") ? null : <>\r\n                {!options || options.includes(\"align\") ? <>\r\n                    {/*===> Label <===*/}\r\n                    <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                    {/*===> Elements Group <===*/}\r\n                    <div className='flexbox mb-15'>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={mainSetter} type='button-radio' className='small'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                        </OptionControl>\r\n                    </div>\r\n                </>: null}\r\n            </>}\r\n            {!options || options.includes(\"styles\") ? <>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    {/* <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl> */}\r\n                    {/*===> Switch Button <===*/}\r\n                    {/* <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl> */}\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React, { useState, useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst OptionControl = (props) => {\r\n    //===> Properties <===//\r\n    const {name, type, value, checked, onChange, children, required, className} = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Data <===//\r\n    let options = `fs-12 option-control flexbox align-center-y`,\r\n        attributes = {onChange: setValue};\r\n\r\n    //===> Custom Classes <===//\r\n    if (className) options += ` ${className}`;\r\n\r\n    //===> Check if is On <===//\r\n    attributes.defaultChecked = checked;\r\n\r\n    //===> add Options <===//\r\n    if (required) attributes.required = true;\r\n    if (value) attributes.value = value;\r\n\r\n    //===> Render Component <===//\r\n    return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n        <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n        {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n        {children}\r\n    </label>)\r\n}\r\n\r\nexport default OptionControl;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useState } from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nconst ScreensTabs = (props) => {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.xs ? useState(\"xs\") : props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        xs: {key:\"mobile-alt\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        sm: {key:\"mobile\", title: __(\"Mobile Medium\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreensTabs;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { MediaUpload } from '@wordpress/block-editor';\r\nimport { useCallback } from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nconst MediaUploader = ({ label, value, size, type, setValue, className }) => {\r\n    //===> Properties <===//\r\n    const largeImage = useCallback((src) => (<img src={src} className=\"radius-sm radius-top\" style={{ maxWidth: \"100%\", display: \"block\" }} />), []);\r\n    const smallImage = useCallback((src) => ( <img src={src} style={{ maxHeight: \"1.5rem\" }} />), []);\r\n    const largePlaceholder = \"https://placehold.co/600x400/1c1c1c/CCC?text=Change%20Source\";\r\n    const smallPlaceholder = \"https://placehold.co/200x75/1c1c1c/CCC?text=Change%20Source\";\r\n\r\n    //===> Output <===//\r\n    return (<>\r\n        <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                <div className=\"mouse-pointer\" onClick={open}>\r\n                    {/* label */}\r\n                    {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                    {/* elements group */}\r\n                    <div className={`${className ? `${className}` : \"\"} mouse-no-events`}>\r\n                        {size === 'small' ?\r\n                            <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                {!type || type === 'image' ? smallImage(value || smallPlaceholder) : smallImage(smallPlaceholder)}\r\n                                <span key=\"change-media\" className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></span>\r\n                            </div>\r\n                            :\r\n                            <div className='flexbox align-center-y align-between'>\r\n                                {!type || type === 'image' ? largeImage(value || largePlaceholder) : largeImage(largePlaceholder)}\r\n                                <span key=\"change-media\" className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {/* //elements group */}\r\n                </div>\r\n            )}\r\n        />\r\n    </>\r\n    );\r\n}\r\n\r\nexport default MediaUploader;","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport {InnerBlocks, useBlockProps} from '@wordpress/block-editor';\r\n\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg fill=\"none\" viewBox=\"0 0 32 32\"><path fill=\"#000\" fillRule=\"evenodd\" d=\"M16.2 4.5H23A4.5 4.5 0 0127.5 9v6.8a4.5 4.5 0 01-4.5 4.5h-.2v-4.1a7 7 0 00-7-7h-4.1V9a4.5 4.5 0 014.5-4.5zm-7 4.7V9a7 7 0 017-7H23a7 7 0 017 7v6.8a7 7 0 01-7 7h-.2v.2a7 7 0 01-7 7H9a7 7 0 01-7-7v-6.8a7 7 0 017-7h.2zm11.1 13.6v.2a4.5 4.5 0 01-4.5 4.5H9A4.5 4.5 0 014.5 23v-6.8A4.5 4.5 0 019 11.7h.2v4.1a7 7 0 007 7h4.1zm0-2.5h-4.1a4.5 4.5 0 01-4.5-4.5v-4.1h4.1a4.5 4.5 0 014.5 4.5v4.1z\" clipRule=\"evenodd\"/></svg>,\r\n    \r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n    \r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //====> Attributes Renderers <====//\r\n        const OptionsRenderer = window.PhenixBlocks.OptionsRenderer;\r\n\r\n        //===> Get Block Properties <===//\r\n        const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps.save(), isSave: true});\r\n        const blockProps = renderProps.blockProps;\r\n        const TagName = attributes.style.isLink ? \"a\" : attributes.tagName;\r\n\r\n        //===> Layout Options <===//\r\n        blockProps.className += ` ${renderProps.container.className}`;\r\n\r\n        //===> Add Links/Lightbox URL <===//\r\n        if (attributes.style.isLink) {\r\n            blockProps.href = attributes.style.url || \"#none\";\r\n            if (attributes.style.url) blockProps.className.replace(attributes.style.url, \"\");\r\n        }\r\n\r\n        //===> Render <===//\r\n        return (\r\n            <TagName {...blockProps}>\r\n                <InnerBlocks.Content />\r\n            </TagName>\r\n        );\r\n    }\r\n});"],"names":["Edit","attributes","setAttributes","PhenixBlocks","window","OptionsRenderer","set_value","target","set_flexbox","screen","set_style","setObject","set_typography","useEffect","viewScript","TagName","tagName","renderProps","blockProps","useBlockProps","uniqueKey","id","innerBlocksProps","useInnerBlocksProps","isFlexbox","className","container","createElement","Fragment","BlockControls","ToolbarGroup","key","label","__","PhenixSelect","name","placeholder","value","onChange","options","dataLists","html_tags","PxDropDown","title","button","dropList","ScreensTabs","sm","SizesSet","mainSetter","md","lg","xl","FlexboxSet","style","paddingBottom","OptionControl","checked","type","paddingTop","StylesSet","objectSetter","colorSetter","TypographySet","isLink","LinkControlSearchInput","url","allowDirectEntry","withURLSuggestion","withCreateSuggestion","renderSuggestions","props","SuggestionsUrl","inNewTab","support","includes","AnimationsSet","PaddingSet","attrSetter","MarginSet","PositionSet","BorderSet","EffectsSet","InspectorControls","PanelBody","initialOpen","PhenixInput","size","flexbox","class","preview","src","PreviewImage","alt","blockKey","screenPoint","button_style","setAlignment","useCallback","trim","split","allAlignments","targetType","getAttribute","match","hasOption","some","option","modifiedValue","currentType","xAlignments","yAlignments","extractType","map","push","join","onClick","clicked","useMemo","rotate","colorsOnly","onlyCG","isSmall","customOnly","cover","setting","wp","data","select","getSettings","editorColors","color","customColorsList","list","palette","default","forEach","slug","custom","customGradientsList","gradients","gradient","set_type","setBackground","makeButtons","classes","output","index","length","isColor","replace","replaceAll","c","toUpperCase","buttonAttributes","backgroundColor","backgroundImage","wrapper","Phenix","ancestor","panel","querySelector","toggleClass","fadeToggle","gap","maxHeight","MediaUploader","setValue","main","components","darkAlpha","lightAlpha","status","colors","offwhite","brands","_","set_rotate","pxPallete","paletteText","setColor","width","height","next","social","children","dataPosition","componentsBuilder","suggestions","suggestion","handleSuggestionClick","onBlur","event","defaultValue","marginBottom","min","max","steps","icon","setNumber","changed","input","minNum","parseFloat","Number","MIN_SAFE_INTEGER","maxNum","MAX_SAFE_INTEGER","newVal","checkVal","IncreaseNum","closest","step","DecreaseNum","multiple","search","attrs","options_list","Array","isArray","item","Object","entries","group_list","options_group","Component","render","this","entrance_animations","animations","entrance","exit_animations","exit","animation","hasExit","group","PhenixNumber","stagger","duration","delay","offset","inset","reverse","scrollDriven","drivenEnd","newAttributes","isX","opt","isY","parseInt","styles","border_styles","PhenixBackground","reset","hover_effect","effects","hover","box_shadows","shadows","animations_effect","other_effects","Date","now","toString","Math","random","substr","align_options","FlexAlignment","slider","equals","zindex_options","position_options","preset_positions","sizes_range","width_list","width_range","min_width_list","max_width_range","max_width_list","height_list","height_range","min_height_list","max_height_range","max_height_list","default_option","unshift","bgOnly","radius_sizes","support_options","display_options","radius_directions","background_options","showSupportOpts","supportedOpts","PhenixColor","typography","background","marginTop","overly","overlay","overly_opacity","overly_bg","sizes","positions","repeat","parallax","radius","display","marquee","exclude","font_weights","weights","font_lineheight","lineheight","text_shadows","font_families","families","sizes_list","display_sizes","font_sizes","weight","document","direction","required","defaultChecked","setScreen","xs","useState","buttons","opts","largeImage","maxWidth","smallImage","largePlaceholder","smallPlaceholder","MediaUpload","onSelect","open","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","metadata","fill","viewBox","fillRule","clipRule","edit","save","isSave","href","InnerBlocks","Content"],"sourceRoot":""}