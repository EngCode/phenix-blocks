{"version":3,"file":"blocks/icon-element/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/icon-element/edit.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dynamic-url.js","webpack://pds-blocks-pro/./src/blocks/px-controls/icons.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/border.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/effects.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/margin.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/padding.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/position.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"data\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/icon-element/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport {PanelBody, ToolbarGroup} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps, __experimentalLinkControlSearchInput as LinkControlSearchInput} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport PhenixIcons from '../px-controls/icons';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixSelect from '../px-controls/select';\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport MediaUploader from '../px-controls/uploader';\r\nimport OptionControl from '../px-controls/switch';\r\nimport SuggestionsUrl from \"../px-controls/dynamic-url\";\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport PaddingSet from '../px-controls/sets/padding';\r\nimport MarginSet from '../px-controls/sets/margin';\r\nimport PositionSet from '../px-controls/sets/position';\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport EffectsSet from '../px-controls/sets/effects';\r\nimport BorderSet from '../px-controls/sets/border';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {    \r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n    const OptionsRenderer = PhenixBlocks.OptionsRenderer;\r\n\r\n    //==> Set Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_url = value => PhenixBlocks.setObject(value, \"\", \"style\", \"url\", attributes, setAttributes);\r\n    const set_icon = value => PhenixBlocks.setObject(`${value.type} ${value.value}`, \"\", \"style\", \"icon\", attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_icon_img = value => PhenixBlocks.setObject(value.url, \"\", \"style\", \"icon\", attributes, setAttributes);\r\n    const set_typography = (target, screen) => PhenixBlocks.setObject(target, screen, \"typography\", false, attributes, setAttributes);\r\n    \r\n    const types_options = [\r\n        { \"label\": \"FontAwesome\", \"value\": \"font\"},\r\n        { \"label\": \"Icon Image\", \"value\": \"custom\"},\r\n    ];\r\n\r\n    //===> Get Block Properties <===//\r\n    const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps()});\r\n    const blockProps = renderProps.blockProps;\r\n    const uniqueKey = blockProps.id;\r\n    let iconURl = \"https://via.placeholder.com/50x50.webp\";\r\n    \r\n    //===> Set Default Values <===//\r\n    blockProps.className += ` tx-align-center inline-block`;\r\n    blockProps.className += ` ${renderProps.container.className}`;\r\n    if (attributes.type === \"font\" && !attributes.style.icon) blockProps.className += ` far fa-icons`;\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip-bottom w-150' data-title={__(\"Text Type\", \"pds-blocks\")}>\r\n                    <PhenixSelect name=\"type\" placeholder={__(\"FontAwesome\", \"pds-blocks\")} className={`tx-align-center weight-medium`} value={attributes.type} onChange={set_value} options={types_options} />\r\n                </div>\r\n                {/*===> Icon Control <===*/}\r\n                {attributes.type === \"font\" ? \r\n                    <PxDropDown title={__(\"Change Icon\", \"pds-blocks\")} button={`bg-transparent fs-16 square ${attributes.style?.icon || \"far fa-icons\"} divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"icons\" className='pd-10'>\r\n                            {/*===> Icon Selector <===*/}\r\n                            <PhenixIcons key={`icon-${uniqueKey}`} value={ attributes.style?.icon || \"far fa-icons\" } onChange={set_icon} />\r\n                            {/*===> Option Control <===*/}\r\n                            <OptionControl key={`icon-large-${uniqueKey}`} name={`icon-large`} value=\"icon-lg\" checked={attributes.style['icon-large'] || false} onChange={set_style} type='switch-checkbox' className='tiny mt-5'>{__(\"Large icon\", \"pds-blocks\")}</OptionControl>\r\n                        </li>\r\n                    </PxDropDown>\r\n                    :\r\n                    <PxDropDown title={__(\"Change Icon\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-image divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"icons\" className='pd-10'>\r\n                            {/*===> Icon Uploader <===*/}\r\n                            <MediaUploader label={__(\"Upload Icon\",\"pds-blocks\")} value={attributes.style?.icon} setValue={set_icon_img}></MediaUploader>\r\n                            {/*===> Option Control <===*/}\r\n                            <OptionControl key={`icon-large-${uniqueKey}`} name={`freeWidth`} value=\"boolean\" checked={attributes.style.freeWidth} onChange={set_style} type='switch-checkbox' className='tiny mt-5'>{__(\"Free Width\", \"pds-blocks\")}</OptionControl>\r\n                        </li>\r\n                    </PxDropDown>\r\n                }\r\n\r\n                {/*===> Link Input <===*/}\r\n                {attributes.style.isLink ? <PxDropDown title={__(\"URL Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-link color-success divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-260\" >\r\n                    <li key=\"link\" className='pdx-15 pdt-10 pdb-0 mb-0'>\r\n                        <LinkControlSearchInput key={`url-${uniqueKey}`} name=\"url\" placeholder={__(\"URL or Page Name\", \"pds-blocks\")} onChange={set_url} value={ attributes.style.url || \"#\" } allowDirectEntry={false} withURLSuggestion={false} withCreateSuggestion={false} renderSuggestions={(props) => SuggestionsUrl(props)} />\r\n                        {/*===> Option Control <===*/}\r\n                        <OptionControl key={`inNewTab-${uniqueKey}`} name={`inNewTab`} value={`boolean`} checked={attributes.style.inNewTab} onChange={set_style} type='checkbox' className='tiny me-15'>\r\n                            <span className='fas fa-check radius-circle'>{__(\"Open in New Tab\", \"pds-blocks\")}</span>\r\n                        </OptionControl>\r\n                        {/*===> Disable Button <===*/}\r\n                        <div className='fluid' style={{paddingBottom: 3}}>\r\n                            <OptionControl key={`isLink-${uniqueKey}`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Disable URL Link\", \"pds-blocks\")}</span>\r\n                            </OptionControl>\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown> :\r\n                /*===> Add Link <===*/\r\n                <OptionControl key={`isLink-${uniqueKey}`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='button-checkbox' className='inline-block'>\r\n                    <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-link' data-title={__(\"Convert to Link\", \"pds-blocks\")}></span>\r\n                </OptionControl>}\r\n\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Style Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-adjust divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-15 pdx-15 lineheight-150'>\r\n                        {/*===> Icon Size <===*/}\r\n                        <PhenixNumber name={\"dimensions\"} icon=\"far fa-arrows\" className=\"mb-15\" min={42} max={512} value={attributes.style.dimensions || 42} onChange={set_style} />\r\n\r\n                        {/*===> Styles <===*/}\r\n                        <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"text-colors, background\" />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Typography Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-font divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-typography\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <TypographySet key={`typography-${uniqueKey}`} attributes={attributes} mainSetter={set_typography} options=\"size, other\" />}\r\n                            md={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                            lg={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                            xl={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-animations') ?\r\n                    <PxDropDown title={__(\"Animation Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-atom-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-animations\" className='pdt-15 pdx-15 lineheight-150'>\r\n                            {/*===> Animations <===*/}\r\n                            <AnimationsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-padding') ?\r\n                    <PxDropDown title={__(\"Padding Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-outer divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-padding\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-margin') ?\r\n                    <PxDropDown title={__(\"Margin Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square fal fa-arrows-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-position') ?\r\n                    <PxDropDown title={__(\"Position Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-to-dot divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-border') ?\r\n                    <PxDropDown title={__(\"Border Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-all divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            {/*===> Border Size <===*/}\r\n                            <ScreensTabs\r\n                                sm={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-effects') ?\r\n                    <PxDropDown title={__(\"Effects Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-backpack divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <EffectsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\" initialOpen={true}>\r\n                {/*===> Styles Options <===*/}\r\n                <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"support\" />\r\n            </PanelBody>\r\n        </InspectorControls>\r\n        {/*===> Modal Component <===*/}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> :\r\n            <i {...blockProps} key={`${uniqueKey}`} style={{\r\n                width: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42),\r\n                height: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42),\r\n                lineHeight: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42)\r\n            }}>\r\n                {attributes.type === \"custom\" ? <img alt=\"icon\" className='fluid' src={attributes.style.icon?.includes(\"http\") ? attributes.style.icon : iconURl} />\r\n            : null}</i>\r\n        }\r\n    </>);\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\nimport { select } from '@wordpress/data';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {}\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Get Data <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        //===> Properties <===//\r\n        const {type, value, label, rotate, colorsOnly, onlyCG, isSmall, placeholder, onChange, customOnly, cover} = this.props;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n        const customGradientsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            //===> Default and User Custom <===//\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            if (!colorsOnly) {\r\n                editorColors.gradients?.default?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n                editorColors.gradients?.custom?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n            }\r\n        }\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: type,\r\n            rotate: rotate,\r\n            value: value || \"\",\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_type = type => {\r\n            //===> Set Value <===//\r\n            options.type = type;\r\n\r\n            //===> change value <===//\r\n            if (options.type === 'image') {options.value = PhenixBlocks.palette.placeholder;} \r\n            else {options.value = \"\";}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_rotate = rotate => {\r\n            //===> Set Value <===//\r\n            options.rotate = rotate;\r\n            //===> change value <===//\r\n            if (options.type !== 'gradient') options.value = \"\";\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button?.getAttribute('data-value');\r\n\r\n            //===> Colors & Gradients <===//\r\n            if (type !== 'image' && type !== \"video\") {options.value = value;}\r\n            //===> Image Type <===//\r\n            else {options.value = clicked.url;}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Cover <===//\r\n        const setCover = clicked => {\r\n            //===> Set value <===//\r\n            options.cover = clicked.url;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = name,\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace('--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setBackground,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {\"width\":\"30px\",\"height\":\"16px\", backgroundColor: name.includes('var(') && !name.includes('--gradient') ? name : null, backgroundImage: name.includes('--wp--preset--gradient') ? name : null},\r\n                    \"className\":`${isColor && !name.includes('var') ? name : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"} ${classes?classes:\"\"}`\r\n                }\r\n\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        {type !== \"image\" && type !== \"video\" ? <>\r\n                            <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\", backgroundColor: value.includes('--wp--preset--color') ? value : null, backgroundImage: value.includes('--wp--preset--gradient') ? value : null}}></span>\r\n                            <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                        </> : <>\r\n                        <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                            <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                        </>}\r\n                        {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    {!colorsOnly && !onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'image',   value: 'image' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                            { label: 'video',   value: 'video' },\r\n                        ]}/>\r\n                    : onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                        ]}/>\r\n                    : null}\r\n                </div>\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox flow-columns options-list ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pdy-15 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    {type === \"color\" ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].main, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-10 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                        {customColorsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Colors\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customColorsList, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Dark Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-white fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].darkAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Light Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-dark fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].lightAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].status, \"radius-xxl\")}\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Offwhite Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.colors.offwhite, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].brands, \"radius-xxl\")}\r\n                    </>\r\n                    : type === \"gradient\" ? <>\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Phenix Gradients\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.gradients, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        {customGradientsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Gradients\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customGradientsList, \"radius-xxl\")}\r\n                        </>:null}\r\n                    </>:\r\n                    null}\r\n                    {type === \"image\" || type === \"video\" ? <>\r\n                        <MediaUploader key=\"upload-file\" size=\"small\" label={`${type === \"video\" ? \"Video File\" : \"Image File\"}`} value={!value || type === \"video\" ? PhenixBlocks.palette.placeholder : value} setValue={setBackground}></MediaUploader>\r\n\r\n                        {type === \"video\" ? <MediaUploader label=\"Cover File\" key=\"upload-cover-file\" size=\"small\" value={!cover ? PhenixBlocks.palette.placeholder : cover} setValue={setCover}></MediaUploader> : null}\r\n                    </> : null}\r\n                </div>\r\n                {/*===> Rotation Select <===*/}\r\n                {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                    <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                    <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                        { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                        { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                        { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                        { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                        { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                        { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                        { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                        { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                        { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                    ]}/>\r\n                </div> : null}\r\n                {/*===> Rotation Select <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {value, label, isSmall, placeholder, onChange} = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = window.PhenixBlocks.dataLists.paletteText;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n\r\n        //===> Set Color <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = list[index],\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else {\r\n                    title = \"Reset\";\r\n                }\r\n\r\n                //===> Button Attributes <====//\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setColor,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {width: \"30px\", height:\"16px\", backgroundColor: name.includes('var') ? name : null},\r\n                    \"className\": `${isColor && !name.includes('var') ? name.replace('color-','bg-') : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : null}  ${classes?classes:\"\"}`,\r\n                };\r\n\r\n                //===> Push the Button <===//\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel  = Phenix(button).next(\".options-list\");\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Trigger <===*/}\r\n                <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                    <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value.replace(\"color-\",\"bg-\") : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\", backgroundColor: value && value.includes('var') ? value : null}}></span>\r\n                    <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                    {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n                </button>\r\n                {/*===> Panel <===*/}\r\n                <div className='flexbox px-scrollbar overflow-y-auto options-list pdb-20 pdt-10 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12`}>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.main, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                    {customColorsList.length > 0 ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                            {__(\"Custom Colors\", \"pds-blocks\")}\r\n                        </label>\r\n                        {makeButtons(customColorsList, \"radius-xxl\")}\r\n                    </>:null}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.status, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.social, \"radius-xxl\")}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PxDropDown extends Component {\r\n    //===> States <===//\r\n    state = {opened:false};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            button,\r\n            support,\r\n            dropList,\r\n            children,\r\n            className,\r\n            dataPosition,\r\n            title,\r\n        } = this.props;\r\n\r\n        const attributes = {};\r\n\r\n        if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n        if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n        if (this.props.key) attributes.key = this.props.key;\r\n\r\n        //===> Render Component <===//\r\n        return (<>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </>)\r\n    }\r\n}","//===> Get Dynamic URL Suggestions <====//\r\nconst SuggestionsUrl = (props) => (\r\n    <ul className=\"fluid reset-list bg-white bx-shadow-dp-1 border-1 border-solid border-alpha-10 z-index-dropdown position-ab pos-start-0 pos-after-y\">\r\n        {props.suggestions.map((suggestion, index) => {\r\n            return (<li key={`link-sug-key-${index}`} className=\"pdx-15 pdy-5 fs-12 divider-b mouse-pointer\" onClick={() => props.handleSuggestionClick(suggestion)}>\r\n                <strong>{suggestion.title}</strong>\r\n                <span className='display-block fs-10 color-primary tx-nowrap'>{suggestion.url}</span>\r\n            </li>)\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default SuggestionsUrl;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Icons <===//\r\nexport default class PhenixIcons extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        icons_page : 1,\r\n        icon_type  : \"far\",\r\n        icon_name  : \"fa-icons\",\r\n        icons_file : \"fa6-pro.json\",\r\n        icons_list : [],\r\n        icons_pages: {},\r\n\r\n        icons_types : [\r\n            { value: 'fab', label: 'Brands' },\r\n\r\n            { value: 'fat', label: 'Thin' },\r\n            { value: 'fal', label: 'Light' },\r\n            { value: 'far', label: 'Regular' },\r\n            { value: 'fas', label: 'Solid' },\r\n            { value: 'fad', label: 'Duotone' },\r\n\r\n            { value: 'fast', label: 'Sharp Thin' },\r\n            { value: 'fasl', label: 'Sharp Light' },\r\n            { value: 'fass', label: 'Sharp Solid' },\r\n            { value: 'fasr', label: 'Sharp Regular' },\r\n        ],\r\n\r\n        icons_version : \"fa6\",\r\n        return_type: null\r\n    };\r\n\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        apiFetch({ path: \"pds-blocks/v2/options\" }).then((options) => {\r\n            //===> Get Icons Data <===//\r\n            let icons_pages = this.state.icons_pages,\r\n                icons_version = this.state.icons_version,\r\n                icons_file = this.state.icons_file,\r\n                icon_type = this.state.icon_type,\r\n                icon_name = this.state.icon_name,\r\n                icons_list = this.state.icons_list;\r\n\r\n            //===> Get Icons Version <===//\r\n            if (options.pds_icon_font) {\r\n                icons_version = options.pds_icon_font.replace(\"fontawesome-\", \"fa\").replace(\"-free\",\"\").replace(\"-pro\",\"\");\r\n            }\r\n\r\n            //===> Define FontAwesome Icons File <===//\r\n            if (this.props.value.includes(\"fab\")) {\r\n                icons_file = `${icons_version}-brands.json`;\r\n            } else {\r\n                icons_file = `${icons_version}-pro.json`;\r\n            }\r\n\r\n            //===> FontAwesome Version Correct <===//\r\n            if(icons_version.includes(\"6\")) icons_file = icons_file.replace(\"5\", \"6\");\r\n\r\n            //===> Set Icon Type <===//\r\n            const icon_value = this.props.value.split(\" \");\r\n\r\n            //===> Reset Icons List <===//\r\n            if (icon_type.includes('fab') && !icon_value[0].includes('fab')) icons_list = [];\r\n\r\n            //===> Set Icon Type <===//\r\n            icon_name = icon_value[1];\r\n            icon_type = icon_value[0];\r\n\r\n            //===> Start Fetching <===//\r\n            if (icons_list.length < 1) {\r\n                fetch(`${PDS_WP_KEY.json}/${icons_file}`).then((res) => res.json()).then((json) => {\r\n                    //===> Assign Icons List <===//\r\n                    if (json.icons !== icons_list) icons_list = json.icons;\r\n                    //===> Divide List into Pages <===//\r\n                    for(let item = 0; item < icons_list.length; item += 200) {\r\n                        //===> Define Page Number <===//\r\n                        let pageNumber = Math.floor(item / 200) + 1;\r\n                        //===> Add item to Pages Object <===//\r\n                        icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                    }\r\n                    //===> Update State <===//\r\n                    this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n                });\r\n            } else {\r\n                //===> Divide List into Pages <===//\r\n                for(let item = 0; item < icons_list.length; item += 200) {\r\n                    //===> Define Page Number <===//\r\n                    let pageNumber = Math.floor(item / 200) + 1;\r\n                    //===> Add item to Pages Object <===//\r\n                    icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                }\r\n                //===> Update State <===//\r\n                this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n            }\r\n        });\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, version, onChange } = this.props;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: value.split(\" \")[0],\r\n            value: value.split(\" \")[1],\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_value = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                theValue  = button?.getAttribute('data-value');\r\n\r\n            //===> Set Value <===//\r\n            options.value = theValue;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        const set_type = value => {\r\n            //===> Set Value <===//\r\n            options.type = value;\r\n\r\n            //===> Switched to Brand <===//\r\n            if (value === \"fab\" && !this.props.value.includes('fab')) options.value = \"fa-wordpress\";\r\n\r\n            //===> Switched from Brand <===//\r\n            if (this.props.value.includes('fab') && value !== \"fab\") options.value = \"fa-icons\";\r\n\r\n            //===> Return Options <===//\r\n            this.setState({icon_type: value, icons_list: [], icons_pages: {}, icons_page: 1, icon_name: options.value}, () => {\r\n                return onChange(options);\r\n            });\r\n        };\r\n\r\n        //===> Traveling Buttons <===//\r\n        const travelingButton = (event) => {\r\n            //===> Get the icons List Wrapper <====//\r\n            let element = event.target,\r\n                travelType = element.getAttribute('data-travel');\r\n\r\n            //===> Get Next Page <===//\r\n            if (travelType === 'next') {\r\n                //===> Exit if Last Page <===//\r\n                if (this.state.icons_page === Object.keys(this.state.icons_pages).length) return;\r\n                //===> Go to Next Page <===//\r\n                this.setState({icons_page: this.state.icons_page + 1});\r\n            }\r\n\r\n            //===> Get Previous Page <===//\r\n            else if (travelType === 'previous') {\r\n                //===> Exit if First Page <===//\r\n                if (this.state.icons_page === 1) return;\r\n\r\n                //===> Go to Previous Page <===//\r\n                this.setState({icons_page: this.state.icons_page - 1});\r\n            }\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            //===> Exit if has no items <===//\r\n            if (!list || list.length < 1) return;\r\n\r\n            //===> Define Data <===//\r\n            let buttonsList  = [],\r\n                buttonsStyle = {\"fontSize\": \"20px\", \"lineHeight\": \"32px\", \"width\":\"32px\", \"height\":\"32px\", \"borderRadius\": \"3px\", \"padding\": 0},\r\n                buttonItem = (item) => {\r\n                    return <button key={`${item}`} onClick={set_value} title={item} data-value={item} className={`reset-button icon-btn-item ${type} ${item} ${this.state.icon_name === item?'px-active bg-offwhite-primary':\"\"}`} style={buttonsStyle}></button>;\r\n                };\r\n\r\n            //===> Create Buttons <===//\r\n            list.forEach((item) => buttonsList.push(buttonItem(item)));\r\n\r\n            //===> Return Buttons <===//\r\n            return buttonsList;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n            }\r\n        };\r\n\r\n        //===> Search in icons <===//\r\n        const iconsFilter = changed => {\r\n            //===> Define Data <===//\r\n            let input = changed.target,\r\n                icons_list = this.state.icons_list,\r\n                value = input.value;\r\n\r\n            //===> Find the searched icon and remove the reset <===//\r\n            let searchedList = icons_list.filter(icon => icon.includes(value));\r\n            \r\n            //===> Set the New List <===//\r\n            if (value.length > 0)  this.setState({icons_list: searchedList, icons_page: 1, icons_pages: {}});\r\n            else this.setState({icons_list: [], icons_page: 1, icons_pages: {}});\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`px-gb-component position-rv mb-10 px-icons-selector ${!label?'pdt-10':''}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label?<label className='mb-10 tx-UpperCase fs-13'>{label}</label>:null}\r\n\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col-6 w-max-150 fs-13 h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        <span className={`col tx-nowrap pde-5`} style={{\"lineHeight\": \"20px\"}}>\r\n                            <span className={`pds-icon-preview inline-block me-5 radius-circle bg-alpha-05 ${this.props.value} position-rv`}></span>\r\n                            {__(\"Replace\", \"pds-blocks\")}\r\n                        </span>\r\n                        <i className='fas fa-pencil fs-12 color-gray'></i>\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    <PhenixSelect key={`icons-type`} name=\"icons-type\" className=\"col-6\" value={value.split(\" \")[0]} onChange={(target) => set_type(target.value)} options={this.state.icons_types} />\r\n                </div>\r\n\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox align-center tx-align-center options-list pdb-15 pdt-5 bg-white border-1 border-solid border-alpha-25 radius-md radius-bottom hidden fluid`}>\r\n                    <input name=\"pds-icons-search\" className='reset-input pdy-5 fs-12 divider-b fluid tx-align-center' onChange={iconsFilter} placeholder={__(\"Search in icons\", \"pds-blocks\")} />\r\n                    {/*===> Buttons List <===*/}\r\n                    <div className=\"bg-alpha-05 fluid pdx-15 pdy-10 icons-listing align-center flexbox px-scrollbar overflow-y-auto mb-10 divider-y\" style={{gap:\"10px\", maxHeight: \"220px\"}}>\r\n                        {this.state.icons_list.length > 0 ? \r\n                            makeButtons(this.state.icons_pages[this.state.icons_page], this.state.icon_type) : \"No Icons Found.\"\r\n                        }\r\n                    </div>\r\n                    {/*===> Pagination <===*/}\r\n                    <div className='fluid flexbox align-between align-center-y pagination-btns pdx-15'>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"next\" className=\"btn tiny fs-12 radius-sm primary\">{__(\"Next\", \"pds-blocks\")}</button> \r\n                        <span className=\"fs-14 weight-medium\">{this.state.icons_page}/{Object.keys(this.state.icons_pages).length}</span>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"previous\" className=\"btn tiny fs-12 radius-sm gray\">{__(\"Previous\", \"pds-blocks\")}</button> \r\n                    </div>\r\n                    {/*===> // Pagination <===*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseFloat(min) || 0,\r\n                  maxNum  = parseFloat(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseFloat(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseFloat(max) || 9999999,\r\n                step    = steps ? parseFloat(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseFloat(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixSelect extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    //===> Component Rendered when Props Change <===//\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return (nextProps.value !== this.props.value || nextProps.options !== this.props.options);\r\n    // }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = this.props;\r\n        const uniqueKey = `pds-select-controller`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {onChange: setValue};\r\n\r\n        //===> add Options <===//\r\n        if (search) attributes['data-search'] = 1;\r\n        if (multiple) attributes.multiple = multiple;\r\n        if (placeholder) attributes['data-placeholder'] = placeholder;\r\n\r\n        //===> Get Options List <===//\r\n        let options_list = [];\r\n\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal Lost of Options <===//\r\n            options.forEach(item => {\r\n                options_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            options_list = options;\r\n        } else{\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                options_list.push(options_group);\r\n            });\r\n        }\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n            {/*===> Control Element <===*/}\r\n            <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n                <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = PhenixBlocks.animations.entrance;\r\n        const exit_animations = PhenixBlocks.animations.exit;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                {attributes.style?.animation?.hasExit ?\r\n                    <div className='col-12 mb-5'>\r\n                        <PhenixSelect name=\"exit\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Exit Animation\", \"pds-blocks\")} value={attributes.style?.animation?.exit} onChange={mainSetter} options={exit_animations} />\r\n                    </div>\r\n                :null}\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-inset\" label={__(\"Inset\", \"pds-blocks\")} value={attributes.style?.animation?.inset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: null}\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-7 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`hasExit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> .End Columns. <===*/}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Component <===//\r\nexport default class BorderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter, objectSetter, setAttributes} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks;\r\n\r\n        //===> Reset border <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`border-top${screen}`]: \"\",\r\n                [`border-start${screen}`]: \"\",\r\n                [`border-end${screen}`]: \"\",\r\n                [`border-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"border-start\", \"border-end\"],\r\n                propY = [\"border-top\", \"border-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-border-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-start${screen}`]: parseInt(target.value), [`border-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-border-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-top${screen}`]: parseInt(target.value), [`border-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto`}>\r\n            {/*===> Other Options <===*/}\r\n            {!screen || screen !== \"\" ? <>\r\n                <div className='row gpx-15 divider-b mb-15 position-rv'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixSelect name=\"border-style\" placeholder={__(\"Style\", \"pds-blocks\")} className={`mb-10 weight-medium`} value={attributes.style['border-style']} onChange={mainSetter} options={PhenixBlocks.dataLists.styles.border_styles} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixBackground key={`border-color`}\r\n                            isSmall={true}\r\n                            colorsOnly={true}\r\n                            customOnly={true}\r\n                            onChange={(value) => objectSetter(value, \"\", \"style\", \"border-color\", attributes, setAttributes)}\r\n                            type={attributes.style['border-color']?.type || \"color\"}\r\n                            value={attributes.style['border-color']?.value || \"\"}\r\n                            rotate={attributes.style['border-color']?.rotate || null} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>:null}\r\n            <div className='position-rv'>\r\n                {/*===> Bound X <===*/}\r\n                <OptionControl key={`bound-border-x${screen}`} name={`bound-border-x${screen}`} checked={attributes.style[`bound-border-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n                {/*===> Bound Y <===*/}\r\n                <OptionControl key={`bound-border-y${screen}`} name={`bound-border-y${screen}`} checked={attributes.style[`bound-border-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n\r\n                {/*===> Top Controller <===*/}\r\n                <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-top${screen}`} name={`border-top${screen}`} onChange={setValue} value={attributes.style[`border-top${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n                {/*===> X Controls <===*/}\r\n                <div className={`flexbox align-between align-center-y mb-15`}>\r\n                    {/*===> Start Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-start${screen}`} name={`border-start${screen}`} onChange={setValue} value={attributes.style[`border-start${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                    {/*===> Reset Button <===*/}\r\n                    <button key={`reset-border${screen}`} name={`reset-border${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                    {/*===> End Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-end${screen}`} name={`border-end${screen}`} onChange={setValue} value={attributes.style[`border-end${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                </div>\r\n                {/*===> Bottom Controller <===*/}\r\n                <div className='mgx-auto' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-bottom${screen}`}  name={`border-bottom${screen}`} onChange={setValue} value={attributes.style[`border-bottom${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\n\r\n//===> Component <===//\r\nexport default class EffectsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const hover_effect = PhenixBlocks.effects.hover;\r\n        const box_shadows = PhenixBlocks.effects.shadows;\r\n        const animations_effect = PhenixBlocks.effects.animations;\r\n        const other_effects = PhenixBlocks.effects.other_effects;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10 gpy-15`}>\r\n                {/*===> Hover Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"hover-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Hover Effects\", \"pds-blocks\")} value={typeof(attributes.style['hover-effect']) === 'string' ? [attributes.style['hover-effect']] : attributes.style['hover-effect']} onChange={mainSetter} options={hover_effect} />\r\n                </div>\r\n                {/*===> Animation Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"animated-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Always Animated\", \"pds-blocks\")} value={typeof(attributes.style['animated-effect']) === 'string' ? [attributes.style['animated-effect']] : attributes.style['animated-effect']} onChange={mainSetter} options={animations_effect} />\r\n                </div>\r\n                {/*===> Box Shadow <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"box-shadow\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Box Shadow\", \"pds-blocks\")} value={attributes.style['box-shadow']} onChange={mainSetter} options={box_shadows} />\r\n                </div>\r\n                {/*===> Other Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"other-effects\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Other Effects\", \"pds-blocks\")} value={attributes.style['other-effects']} multiple={true} onChange={mainSetter} options={other_effects} />\r\n                </div>\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class MarginSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-margin-option`;\r\n\r\n        //===> Reset <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`mt${screen}`]: \"\",\r\n                [`ms${screen}`]: \"\",\r\n                [`me${screen}`]: \"\",\r\n                [`mb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"ms\", \"me\"],\r\n                propY = [\"mt\", \"mb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-margin-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`ms${screen}`]: parseInt(target.value), [`me${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-margin-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`mt${screen}`]: parseInt(target.value), [`mb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`margin-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-margin-x${screen}`} name={`bound-margin-x${screen}`} checked={attributes.style[`bound-margin-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-margin-y${screen}`} name={`bound-margin-y${screen}`} checked={attributes.style[`bound-margin-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`mt${screen}`} name={`mt${screen}`} onChange={setValue} value={attributes.style[`mt${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`ms${screen}`} name={`ms${screen}`} onChange={setValue} value={attributes.style[`ms${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-margin${screen}`} name={`reset-margin${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`me${screen}`} name={`me${screen}`} onChange={setValue} value={attributes.style[`me${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`mb${screen}`} name={`mb${screen}`} onChange={setValue} value={attributes.style[`mb${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PaddingSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-padding-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pdt${screen}`]: \"\",\r\n                [`pds${screen}`]: \"\",\r\n                [`pde${screen}`]: \"\",\r\n                [`pdb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pds\", \"pde\"],\r\n                propY = [\"pdt\", \"pdb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-padding-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pds${screen}`]: parseInt(target.value), [`pde${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-padding-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pdt${screen}`]: parseInt(target.value), [`pdb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`padding-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-padding-x${screen}`} name={`bound-padding-x${screen}`} checked={attributes.style[`bound-padding-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-padding-y${screen}`} name={`bound-padding-y${screen}`} checked={attributes.style[`bound-padding-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pdt${screen}`} name={`pdt${screen}`} onChange={setValue} value={attributes.style[`pdt${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pds${screen}`} name={`pds${screen}`} onChange={setValue} value={attributes.style[`pds${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-padding${screen}`} name={`reset-padding${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pde${screen}`} name={`pde${screen}`} onChange={setValue} value={attributes.style[`pde${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pdb${screen}`} name={`pdb${screen}`} onChange={setValue} value={attributes.style[`pdb${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PositionSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const zindex_options = PhenixBlocks.zindex_options.map(opt => { opt.value += `${screen}`; return opt; });\r\n        const position_options = PhenixBlocks.position_options.map(opt => { opt.value += `${screen}`; return opt; });\r\n        const preset_positions = PhenixBlocks.preset_positions.map(opt => { opt.value += `${screen}`; return opt; });\r\n\r\n        //===> Reset position <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pos-top${screen}`]: \"\",\r\n                [`pos-start${screen}`]: \"\",\r\n                [`pos-end${screen}`]: \"\",\r\n                [`pos-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pos-start\", \"pos-end\"],\r\n                propY = [\"pos-top\", \"pos-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-position-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-start${screen}`]: parseInt(target.value), [`pos-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-position-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-top${screen}`]: parseInt(target.value), [`pos-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-position-x${screen}`} name={`bound-position-x${screen}`} checked={attributes.style[`bound-position-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-position-y${screen}`} name={`bound-position-y${screen}`} checked={attributes.style[`bound-position-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            \r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-top${screen}`} name={`pos-top${screen}`} onChange={setValue} value={attributes.style[`pos-top${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-start${screen}`} name={`pos-start${screen}`} onChange={setValue} value={attributes.style[`pos-start${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-position${screen}`} name={`reset-position${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-end${screen}`} name={`pos-end${screen}`} onChange={setValue} value={attributes.style[`pos-end${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-bottom${screen}`}  name={`pos-bottom${screen}`} onChange={setValue} value={attributes.style[`pos-bottom${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            <div className='col-12 pdt-10 divider-t mt-15 row gpx-15'>\r\n                <div className='mb-10 col'>\r\n                    <PhenixSelect key={`position${screen}`} name={`position${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style[`position${screen}`]} onChange={mainSetter} options={position_options} />\r\n                </div>\r\n                <div className='mb-10 col col-6'>\r\n                    <PhenixSelect key={`position-index${screen}`} name={`z-index${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Index Order\", \"pds-blocks\")} value={attributes.style[`z-index${screen}`]} onChange={mainSetter} options={zindex_options} />\r\n                </div>\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`position-preset${screen}`} name={`position-preset${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Preset Position\", \"pds-blocks\")} value={attributes.style[`position-preset${screen}`]} onChange={mainSetter} options={preset_positions} />\r\n                </div>\r\n            </div>\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixNumber from '../number';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly, objectSetter, setAttributes} = this.props;\r\n        const uniqueKey = 'x';//Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const radius_sizes = PhenixBlocks.radius_sizes;\r\n        const support_options = PhenixBlocks.support_options;\r\n        const display_options = PhenixBlocks.display_options;\r\n        const radius_directions = PhenixBlocks.radius_directions;\r\n        const background_options = PhenixBlocks.background_options;\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\", \"enable-marquee\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                {/*===> Colors and Gradients <===*/}\r\n                <PhenixBackground key={`background-${uniqueKey}`}\r\n                    colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false}\r\n                    onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false}\r\n                    label={__(\"Background\", \"pds-blocks\")} onChange={mainSetter}\r\n                    type={attributes.style.background?.type || \"color\"}\r\n                    value={attributes.style.background?.value || \"\"}\r\n                    rotate={attributes.style.background?.rotate || null} \r\n                />\r\n\r\n                {/*===> Image Backgrounds <===*/}\r\n                <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                    {/*===> Overlay Options <===*/}\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixSelect className=\"border-alpha-25\" label={attributes.style.overly ?__(\"Overlay\", \"pds-blocks\"):null} key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                    </div>\r\n                    {attributes.style.overly ? <>\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixNumber name=\"overly_opacity\" label={__(\"Overlay Opacity\", \"pds-blocks\")} value={ parseInt(attributes.style.overly_opacity) || 50} onChange={(target) => mainSetter(target, screen ? screen : \"\")} />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {attributes.style.overly === \"overlay-custom\" ? <>\r\n                    <div className='col-12'>\r\n                        {/*===> Colors and Gradients <===*/}\r\n                        <PhenixBackground key={`overlay-background-${uniqueKey}`}\r\n                            customOnly={true}\r\n                            label={__(\"Overlay Background\", \"pds-blocks\")}  onChange={(value) => objectSetter(value, \"\", \"style\", \"overly_bg\", attributes, setAttributes)}\r\n                            type={attributes.style.overly_bg?.type || \"color\"}\r\n                            value={attributes.style.overly_bg?.value || \"\"}\r\n                            rotate={attributes.style.overly_bg?.rotate || null} \r\n                        />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {/*===> Image Options <===*/}\r\n                    {attributes.style.background?.type === \"image\"? <>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </>:null}\r\n                </div>\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Support\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-direction-${uniqueKey}`} name=\"radius-direction\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Radius Direction\", \"pds-blocks\")} value={attributes.style['radius-direction']} onChange={mainSetter} options={radius_directions} />\r\n                            </div>\r\n                        </> : null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Marquee Slider <===*/}\r\n                        {attributes.style.support?.includes('enable-marquee') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`marquee-${uniqueKey}`} name=\"marquee\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Marquee Direction\", \"pds-blocks\")} value={attributes.style.marquee} onChange={mainSetter} options={[\r\n                                    { label: __(\"None\", \"pds-blocks\"), value: '' },\r\n                                    { label: __(\"Marquee Left\", \"pds-blocks\"), value: 'px-marquee' },\r\n                                    { label: __(\"Marquee Right\", \"pds-blocks\"), value: 'px-marquee-reverse' },\r\n                                ]} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <label className='tx-capitalize fs-13'>{__(\"Speed\", \"pds-blocks\")}</label>\r\n                                <PhenixNumber key={`marquee-speed`} name={`marquee-speed`} onChange={mainSetter} value={attributes.style[`marquee-speed`] || 15} min={5} />\r\n                            </div>\r\n                        </> : null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from '../number';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Options Lists <===//\r\n        const font_weights = PhenixBlocks.typography.weights;\r\n        const font_lineheight = PhenixBlocks.typography.lineheight;\r\n        const text_shadows = PhenixBlocks.typography.shadows;\r\n        const font_families = PhenixBlocks.typography.families;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [{ \"label\": \"Default\",  \"value\": \"\"}],\r\n              display_sizes = [];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        PhenixBlocks.sizes_range.font_sizes.map(size => {\r\n            //===> Normal Size <===//\r\n            if (typeof(size) === \"number\") {\r\n                sizes_list.push({\"label\": size, \"value\": `fs${screenPoint}-${size}`});\r\n            } else {\r\n                sizes_list.push({\"label\": `H${size.replace('h', '')}`, \"value\": `${size}${screenPoint}`});\r\n                display_sizes.push({\"label\": `DH${size.replace('h', '')}`, \"value\": `display${screenPoint}-${size}`});\r\n            }\r\n        });\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect key={`font-size${screenPoint}`} className=\"mb-15\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Family <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`family`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Family\", \"pds-blocks\")} value={attributes.typography[`family`]} onChange={mainSetter} options={font_families} />\r\n                </div>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Margin for List Items <===*/}\r\n                {attributes.type?.includes('list-') || attributes.type === \"list\" ? <>\r\n                <div className='col col-6'>\r\n                    <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.typography[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                </div>\r\n                </> :null}\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {!options || options.includes(\"align\") ? <>\r\n                {/*===> Label <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox mb-15'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={mainSetter} type='button-radio' className='small'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n            {!options || options.includes(\"styles\") ? <>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, value, checked, onChange, children, required, className} = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useState } from 'react';\r\n\r\n//===> Phenix Background <===//\r\nexport default function ScreensTabs(props) {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, size, type, setValue, className } = this.props;\r\n        const largeImage = (src) => <img src={src} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> ;\r\n        const smallImage = (src) => <img src={src} style={{\"maxHeight\": \"1.5rem\"}} />;\r\n        const largePlaceholder = \"https://placehold.co/600x400/1c1c1c/CCC?text=Change%20Source\";\r\n        const smallPlaceholder = \"https://placehold.co/200x75/1c1c1c/CCC?text=Change%20Source\";\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"} mouse-no-events`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? smallImage(value || smallPlaceholder) : smallImage(smallPlaceholder)}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></button>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? largeImage(value || largePlaceholder) : largeImage(largePlaceholder)}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Modules\r\n * ===> 02 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Modules <===//\r\nimport Edit from './edit';\r\nimport {__} from '@wordpress/i18n';\r\nimport metadata from './block.json';\r\nimport {registerBlockType} from '@wordpress/blocks';\r\nimport {useBlockProps} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg fill=\"none\" viewBox=\"0 0 32 32\"><path fill=\"#1E1E1E\" d=\"M16 0C7.067 0 0 7.067 0 16s7.067 16 16 16 16-7.067 16-16S24.933 0 16 0zm0 2.667c7.333 0 13.333 6 13.333 13.333v.133c-2.533-1.466-5.866-3.066-6-3.2-.4-.133-.933-.133-1.466.134l-5.2 3.733-6-2c-.4-.133-.667 0-1.067.133L3.067 18.8c-.134-.933-.4-1.733-.4-2.667 0-7.466 6-13.466 13.333-13.466z\"/></svg>,\r\n    \r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n    \r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //====> Attributes Renderers <====//\r\n        const OptionsRenderer = window.PhenixBlocks.OptionsRenderer;\r\n\r\n        //===> Get Block Properties <===//\r\n        const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps.save()});\r\n        const blockProps = renderProps.blockProps;\r\n        const TagName = attributes.style.isLink ?  \"a\" : 'i';\r\n        let iconURl = \"https://via.placeholder.com/50x50.webp\";\r\n\r\n        //===> Set Default Values <===//\r\n        blockProps.className += ` tx-align-center inline-block`;\r\n        blockProps.className += ` ${renderProps.container.className}`;\r\n        if (attributes.style.isLink) blockProps.href = attributes.style.url || \"#\";\r\n        if (attributes.type === \"font\" && !attributes.style.icon) blockProps.className += ` far fa-icons`;\r\n\r\n        //===> Render <===//\r\n        return (<TagName {...blockProps} style={{\r\n            width: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42),\r\n            height: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42),\r\n            lineHeight: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42)\r\n        }}>{attributes.type === \"custom\" ? \r\n            <img alt=\"icon\" className='fluid' src={attributes.style.icon?.includes(\"http\") ? attributes.style.icon : iconURl} />\r\n        : null}</TagName>);\r\n    }\r\n});"],"names":["Edit","attributes","setAttributes","PhenixBlocks","window","OptionsRenderer","set_style","target","screen","setObject","set_typography","renderProps","blockProps","useBlockProps","uniqueKey","id","className","container","type","style","icon","createElement","Fragment","BlockControls","ToolbarGroup","key","label","__","PhenixSelect","name","placeholder","value","onChange","set_value","options","PxDropDown","title","button","dropList","PhenixIcons","OptionControl","checked","MediaUploader","setValue","url","freeWidth","isLink","LinkControlSearchInput","allowDirectEntry","withURLSuggestion","withCreateSuggestion","renderSuggestions","props","SuggestionsUrl","inNewTab","paddingBottom","PhenixNumber","min","max","dimensions","StylesSet","objectSetter","mainSetter","colorSetter","ScreensTabs","sm","TypographySet","md","lg","xl","support","includes","AnimationsSet","PaddingSet","attrSetter","MarginSet","PositionSet","BorderSet","EffectsSet","InspectorControls","PanelBody","initialOpen","preview","src","PreviewImage","alt","width","Phenix","document","toREM","height","lineHeight","PhenixBackground","Component","state","render","dataLists","rotate","colorsOnly","onlyCG","isSmall","customOnly","cover","this","setting","wp","data","select","getSettings","editorColors","color","customColorsList","customGradientsList","palette","default","forEach","push","slug","custom","gradients","gradient","set_type","setBackground","clicked","getAttribute","makeButtons","list","classes","output","index","length","isColor","replace","replaceAll","c","toUpperCase","buttonAttributes","backgroundColor","backgroundImage","onClick","wrapper","ancestor","panel","querySelector","toggleClass","fadeToggle","slideToggle","gap","maxHeight","main","components","darkAlpha","lightAlpha","status","colors","offwhite","brands","size","_","set_rotate","PhenixColors","pxPallete","paletteText","setColor","next","social","opened","componentDidMount","componentsBuilder","componentDidUpdate","children","dataPosition","suggestions","map","suggestion","handleSuggestionClick","icons_page","icon_type","icon_name","icons_file","icons_list","icons_pages","icons_types","icons_version","return_type","reRender","apiFetch","path","then","pds_icon_font","icon_value","split","fetch","PDS_WP_KEY","json","res","icons","item","pageNumber","Math","floor","slice","setState","version","theValue","travelingButton","event","travelType","Object","keys","changed","input","searchedList","filter","buttonsList","buttonsStyle","buttonItem","steps","DecreaseNum","minNum","parseFloat","step","newVal","maxNum","checkVal","multiple","search","options_list","Array","isArray","entries","group_list","options_group","marginBottom","defaultValue","entrance_animations","animations","entrance","exit_animations","exit","animation","hasExit","group","duration","delay","offset","inset","reverse","newAttributes","isX","some","opt","isY","parseInt","styles","border_styles","reset","hover_effect","effects","hover","box_shadows","shadows","animations_effect","other_effects","Date","now","toString","random","substr","zindex_options","position_options","preset_positions","bgOnly","radius_sizes","support_options","display_options","radius_directions","background_options","showSupportOpts","supportedOpts","PhenixColor","typography","background","marginTop","overly","overlay","overly_opacity","overly_bg","sizes","positions","repeat","parallax","radius","display","marquee","screenPoint","font_weights","weights","font_lineheight","lineheight","text_shadows","font_families","families","sizes_list","display_sizes","sizes_range","font_sizes","weight","direction","required","defaultChecked","setScreen","useState","buttons","opts","largePlaceholder","smallPlaceholder","MediaUpload","onSelect","open","largeImage","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","metadata","fill","viewBox","edit","save","TagName","href"],"sourceRoot":""}