{"version":3,"file":"blocks/icon-element/index.js","mappings":"uRA2Be,SAASA,GAAK,WAAEC,EAAU,cAAEC,IAEvC,MAAMC,EAAeC,OAAOD,aACtBE,EAAkBF,EAAaE,gBAM/BC,EAAYA,CAACC,EAAQC,IAAWL,EAAaM,UAAUF,EAAQC,EAAQ,SAAS,EAAOP,EAAYC,GAEnGQ,EAAiBA,CAACH,EAAQC,IAAWL,EAAaM,UAAUF,EAAQC,EAAQ,cAAc,EAAOP,EAAYC,GAQ7GS,EAAcN,EAAgB,CAACJ,WAAYA,EAAYW,YAAYC,EAAAA,EAAAA,mBACnED,EAAaD,EAAYC,WACzBE,EAAYF,EAAWG,GAI7BH,EAAWI,WAAc,gCACzBJ,EAAWI,WAAc,IAAGL,EAAYM,UAAUD,YAC1B,SAApBf,EAAWiB,MAAoBjB,EAAWkB,MAAMC,OAAMR,EAAWI,WAAc,iBAEnF,MAAMK,EAAY,CACdC,OAAQrB,EAAWkB,MAAMI,WAAaC,OAAOC,UAAUC,MAAMzB,EAAWkB,MAAMI,YAAcC,OAAOC,UAAUC,MAAM,IACnHC,WAAY1B,EAAWkB,MAAMI,WAAaC,OAAOC,UAAUC,MAAMzB,EAAWkB,MAAMI,YAAcC,OAAOC,UAAUC,MAAM,KAQ3H,OALKzB,EAAWkB,MAAMS,YAClBP,EAAUQ,MAAQ5B,EAAWkB,MAAMI,WAAaC,OAAOC,UAAUC,MAAMzB,EAAWkB,MAAMI,YAAcC,OAAOC,UAAUC,MAAM,MAIzHI,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAEJD,EAAAA,EAAAA,eAACE,EAAAA,cAAa,MACVF,EAAAA,EAAAA,eAACG,EAAAA,aAAY,CAACC,IAAM,GAAEpB,YAAqBqB,OAAOC,EAAAA,EAAAA,IAAG,iBAAkB,gBAEnEN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,kDAAkD,cAAYoB,EAAAA,EAAAA,IAAG,YAAa,gBACzFN,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,OAAOC,aAAaH,EAAAA,EAAAA,IAAG,cAAe,cAAepB,UAAY,gCAAgCwB,MAAOvC,EAAWiB,KAAMuB,SAvCzIlC,GAAWJ,EAAauC,UAAUnC,EAAQN,EAAYC,GAuCwGyC,QAhC3J,CAClB,CAAE,MAAS,cAAe,MAAS,QACnC,CAAE,MAAS,aAAc,MAAS,cAiCL,SAApB1C,EAAWiB,MACRY,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,cAAe,cAAeU,OAAS,+BAA8B7C,EAAWkB,OAAOC,MAAQ,iDAAkD2B,SAAS,oBAC5KjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,QAAQlB,UAAU,UAEtBc,EAAAA,EAAAA,eAACkB,EAAAA,EAAW,CAACd,IAAM,QAAOpB,IAAa0B,MAAQvC,EAAWkB,OAAOC,MAAQ,eAAiBqB,SA5CjGD,GAASrC,EAAaM,UAAW,GAAE+B,EAAMtB,QAAQsB,EAAMA,QAAS,GAAI,QAAS,OAAQvC,EAAYC,MA8C1F4B,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,cAAapB,IAAawB,KAAO,aAAaE,MAAM,UAAUU,QAASjD,EAAWkB,MAAM,gBAAiB,EAAOsB,SAAUnC,EAAWY,KAAK,kBAAkBF,UAAU,cAAaoB,EAAAA,EAAAA,IAAG,aAAc,kBAIjON,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,cAAe,cAAeU,OAAS,2EAA2EC,SAAS,oBAC7IjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,QAAQlB,UAAU,UAEtBc,EAAAA,EAAAA,eAACqB,EAAAA,EAAa,CAAChB,OAAOC,EAAAA,EAAAA,IAAG,cAAc,cAAeI,MAAOvC,EAAWkB,OAAOC,KAAMgC,SAnDxFZ,GAASrC,EAAaM,UAAU+B,EAAMa,IAAK,GAAI,QAAS,OAAQpD,EAAYC,MAqDzE4B,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,cAAapB,IAAawB,KAAO,YAAYE,MAAM,UAAUU,QAASjD,EAAWkB,MAAMS,UAAWa,SAAUnC,EAAWY,KAAK,kBAAkBF,UAAU,cAAaoB,EAAAA,EAAAA,IAAG,aAAc,iBAMtNnC,EAAWkB,MAAMmC,QAASxB,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,cAAe,cAAeU,OAAS,wFAAwFC,SAAS,oBACrLjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,OAAOlB,UAAU,6BACrBc,EAAAA,EAAAA,eAACyB,EAAAA,qCAAsB,CAACrB,IAAM,OAAMpB,IAAawB,KAAK,MAAMC,aAAaH,EAAAA,EAAAA,IAAG,mBAAoB,cAAeK,SAhEnHD,GAASrC,EAAaM,UAAU+B,EAAO,GAAI,QAAS,MAAOvC,EAAYC,GAgE+DsC,MAAQvC,EAAWkB,MAAMkC,KAAO,IAAMG,kBAAkB,EAAOC,mBAAmB,EAAOC,sBAAsB,EAAOC,kBAAoBC,IAAUC,EAAAA,EAAAA,GAAeD,MAErS9B,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,YAAWpB,IAAawB,KAAO,WAAWE,MAAQ,UAAUU,QAASjD,EAAWkB,MAAM2C,SAAUrB,SAAUnC,EAAWY,KAAK,WAAWF,UAAU,eAChKc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,+BAA8BoB,EAAAA,EAAAA,IAAG,kBAAmB,iBAGxEN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,QAAQG,MAAO,CAAC4C,cAAe,KAC1CjC,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,UAASpB,IAAawB,KAAO,SAASE,MAAQ,UAAUU,QAASjD,EAAWkB,MAAMmC,OAAQb,SAAUnC,EAAWY,KAAK,WAAWF,UAAU,6CAC1Jc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,sDAAqDoB,EAAAA,EAAAA,IAAG,mBAAoB,oBAM5GN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,UAASpB,IAAawB,KAAO,SAASE,MAAQ,UAAUU,QAASjD,EAAWkB,MAAMmC,OAAQb,SAAUnC,EAAWY,KAAK,kBAAkBF,UAAU,iBACjKc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,6DAA6D,cAAYoB,EAAAA,EAAAA,IAAG,kBAAmB,kBAInHN,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,gBAAiB,cAAeU,OAAS,4EAA4EC,SAAS,oBAChJjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,aAAalB,UAAU,wCAE3Bc,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC1B,KAAM,aAAclB,KAAK,gBAAgBJ,UAAU,QAAQiD,IAAK,GAAIC,IAAK,IAAK1B,MAAOvC,EAAWkB,MAAMI,YAAc,GAAIkB,SAAUnC,KAGhJwB,EAAAA,EAAAA,eAACqC,EAAAA,EAAS,CAACjC,IAAM,UAASpB,IAAab,WAAYA,EAAYC,cAAeA,EAAekE,aAAcjE,EAAaM,UAAW4D,WAAY/D,EAAWgE,YAAa5D,EAAgBiC,QAAQ,+BAIvMb,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,qBAAsB,cAAeU,OAAS,0EAA0EC,SAAS,oBACnJjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,iBAAiBlB,UAAU,iCAC/Bc,EAAAA,EAAAA,eAACyC,EAAAA,EAAW,CACRC,GAAKhE,IAAWsB,EAAAA,EAAAA,eAAC2C,EAAAA,EAAa,CAACvC,IAAM,cAAapB,IAAab,WAAYA,EAAYoE,WAAY3D,EAAgBiC,QAAQ,gBAC3H+B,GAAKlE,IAAWsB,EAAAA,EAAAA,eAAC2C,EAAAA,EAAa,CAACjE,OAAQA,EAAQP,WAAYA,EAAYoE,WAAY3D,EAAgBiC,QAAQ,SAC3GgC,GAAKnE,IAAWsB,EAAAA,EAAAA,eAAC2C,EAAAA,EAAa,CAACjE,OAAQA,EAAQP,WAAYA,EAAYoE,WAAY3D,EAAgBiC,QAAQ,SAC3GiC,GAAKpE,IAAWsB,EAAAA,EAAAA,eAAC2C,EAAAA,EAAa,CAACjE,OAAQA,EAAQP,WAAYA,EAAYoE,WAAY3D,EAAgBiC,QAAQ,aAKtH1C,EAAWkB,OAAO0D,SAASC,SAAS,sBACjChD,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,oBAAqB,cAAeU,OAAS,8EAA8EC,SAAS,oBACtJjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,iBAAiBlB,UAAU,iCAE/Bc,EAAAA,EAAAA,eAACiD,EAAAA,EAAa,CAAC9E,WAAYA,EAAYoE,WAAY/D,MAG9D,KAEAL,EAAWkB,OAAO0D,SAASC,SAAS,mBACjChD,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,kBAAmB,cAAeU,OAAS,kFAAkFC,SAAS,oBACxJjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,cAAclB,UAAU,iCAC5Bc,EAAAA,EAAAA,eAACyC,EAAAA,EAAW,CACRC,GAAKhE,IAAWsB,EAAAA,EAAAA,eAACkD,EAAAA,EAAU,CAAC/E,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAO,GAAG6D,WAAY9D,GAAUD,EAAUC,EAAQ,MACjImE,GAAKlE,IAAWsB,EAAAA,EAAAA,eAACkD,EAAAA,EAAU,CAAC/E,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAC7IoE,GAAKnE,IAAWsB,EAAAA,EAAAA,eAACkD,EAAAA,EAAU,CAAC/E,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAC7IqE,GAAKpE,IAAWsB,EAAAA,EAAAA,eAACkD,EAAAA,EAAU,CAAC/E,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,UAI5J,KAEAN,EAAWkB,OAAO0D,SAASC,SAAS,kBACjChD,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,iBAAkB,cAAeU,OAAS,gFAAgFC,SAAS,oBACrJjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,aAAalB,UAAU,iCAC3Bc,EAAAA,EAAAA,eAACyC,EAAAA,EAAW,CACRC,GAAKhE,IAAWsB,EAAAA,EAAAA,eAACoD,EAAAA,EAAS,CAACjF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAO,GAAG6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAChImE,GAAKlE,IAAWsB,EAAAA,EAAAA,eAACoD,EAAAA,EAAS,CAACjF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAC5IoE,GAAKnE,IAAWsB,EAAAA,EAAAA,eAACoD,EAAAA,EAAS,CAACjF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAC5IqE,GAAKpE,IAAWsB,EAAAA,EAAAA,eAACoD,EAAAA,EAAS,CAACjF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,UAI3J,KAEAN,EAAWkB,OAAO0D,SAASC,SAAS,oBACjChD,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,mBAAoB,cAAeU,OAAS,mFAAmFC,SAAS,oBAC1JjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,aAAalB,UAAU,iCAC3Bc,EAAAA,EAAAA,eAACyC,EAAAA,EAAW,CACRC,GAAKhE,IAAWsB,EAAAA,EAAAA,eAACqD,EAAAA,EAAW,CAAClF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAO,GAAG6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAClImE,GAAKlE,IAAWsB,EAAAA,EAAAA,eAACqD,EAAAA,EAAW,CAAClF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAC9IoE,GAAKnE,IAAWsB,EAAAA,EAAAA,eAACqD,EAAAA,EAAW,CAAClF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAC9IqE,GAAKpE,IAAWsB,EAAAA,EAAAA,eAACqD,EAAAA,EAAW,CAAClF,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,UAI7J,KAEAN,EAAWkB,OAAO0D,SAASC,SAAS,kBACjChD,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,iBAAkB,cAAeU,OAAS,gFAAgFC,SAAS,oBACrJjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,aAAalB,UAAU,iCAE3Bc,EAAAA,EAAAA,eAACyC,EAAAA,EAAW,CACRC,GAAKhE,IAAWsB,EAAAA,EAAAA,eAACsD,EAAAA,EAAS,CAAClF,cAAeA,EAAekE,aAAcjE,EAAaM,UAAWR,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAO,GAAG6D,WAAY9D,GAAUD,EAAUC,EAAQ,MACpMmE,GAAKlE,IAAWsB,EAAAA,EAAAA,eAACsD,EAAAA,EAAS,CAAClF,cAAeA,EAAekE,aAAcjE,EAAaM,UAAWR,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAChNoE,GAAKnE,IAAWsB,EAAAA,EAAAA,eAACsD,EAAAA,EAAS,CAAClF,cAAeA,EAAekE,aAAcjE,EAAaM,UAAWR,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,MAChNqE,GAAKpE,IAAWsB,EAAAA,EAAAA,eAACsD,EAAAA,EAAS,CAAClF,cAAeA,EAAekE,aAAcjE,EAAaM,UAAWR,WAAYA,EAAYgF,WAAY/E,EAAeM,OAAS,IAAGA,IAAU6D,WAAY9D,GAAUD,EAAUC,EAAQ,UAI/N,KAEAN,EAAWkB,OAAO0D,SAASC,SAAS,mBACjChD,EAAAA,EAAAA,eAACc,EAAAA,EAAU,CAACC,OAAOT,EAAAA,EAAAA,IAAG,kBAAmB,cAAeU,OAAS,8EAA8EC,SAAS,oBACpJjB,EAAAA,EAAAA,eAAA,MAAII,IAAI,aAAalB,UAAU,iCAC3Bc,EAAAA,EAAAA,eAACuD,EAAAA,EAAU,CAACpF,WAAYA,EAAYoE,WAAY/D,MAG3D,QAITwB,EAAAA,EAAAA,eAACwD,EAAAA,kBAAiB,CAACpD,IAAM,GAAEpB,gBAEvBgB,EAAAA,EAAAA,eAACyD,EAAAA,UAAS,CAAC1C,MAAM,mBAAmB2C,aAAa,IAE7C1D,EAAAA,EAAAA,eAACqC,EAAAA,EAAS,CAACjC,IAAM,UAASpB,IAAab,WAAYA,EAAYC,cAAeA,EAAekE,aAAcjE,EAAaM,UAAW4D,WAAY/D,EAAWgE,YAAa5D,EAAgBiC,QAAQ,cAItM1C,EAAWwF,SAAW3D,EAAAA,EAAAA,eAAA,OAAK4D,IAAKC,EAAcC,IAAI,GAAG5E,UAAU,WAC5Dc,EAAAA,EAAAA,eAAA,QAAOlB,EAAYsB,IAAM,GAAEpB,IAAaK,MAAOE,GACtB,WAApBpB,EAAWiB,MAAoBY,EAAAA,EAAAA,eAAA,OAAK8D,IAAI,OAAO5E,UAAU,QAAQ0E,IAAKzF,EAAWkB,MAAMC,MAAM0D,SAAS,QAAU7E,EAAWkB,MAAMC,KA3KhI,2CA4KJ,MAGd,C,gGC/Me,MAAMyE,UAAyBC,EAAAA,UAE1CC,MAAQ,CAAC,EAGTC,MAAAA,GAEI,MAAM7F,EAAeC,OAAOD,aAAa8F,WAEnC,KAAC/E,EAAI,MAAEsB,EAAK,MAAEL,EAAK,OAAE+D,EAAM,WAAEC,EAAU,OAAEC,EAAM,QAAEC,EAAO,YAAE9D,EAAW,SAAEE,EAAQ,WAAE6D,EAAU,MAAEC,GAASC,KAAK5C,MAG3G6C,EAAUC,GAAGC,KAAKC,OAAO,qBAAqBC,cAC9CC,EAAeL,EAAgC,wBAAGM,MAClDC,EAAmB,GACnBC,EAAsB,GAGxBH,IAEAA,EAAaI,SAASC,SAASC,SAAQL,GAASC,EAAiBK,KAAM,4BAA2BN,EAAMO,WACxGR,EAAaI,SAASK,QAAQH,SAAQL,GAASC,EAAiBK,KAAM,4BAA2BN,EAAMO,WAClGnB,IACDW,EAAaU,WAAWL,SAASC,SAAQK,GAAYR,EAAoBI,KAAM,+BAA8BI,EAASH,WACtHR,EAAaU,WAAWD,QAAQH,SAAQK,GAAYR,EAAoBI,KAAM,+BAA8BI,EAASH,aAK7H,IAAI3E,EAAU,CACVzB,KAAMA,EACNgF,OAAQA,EACR1D,MAAOA,GAAS,IAIpB,MAAMkF,EAAWxG,IAEbyB,EAAQzB,KAAOA,EAGM,UAAjByB,EAAQzB,KAAmByB,EAAQH,MAAQrC,EAAa+G,QAAQ3E,YAC9DI,EAAQH,MAAQ,GAGfC,EAASE,IAcdgF,EAAgBC,IAElB,IAAI9E,EAAS8E,EAAQrH,OACjBiC,EAASM,GAAQ+E,aAAa,cAQlC,OAL2ClF,EAAQH,MAAtC,UAATtB,GAA6B,UAATA,EAAmCsB,EAErCoF,EAAQvE,IAGvBZ,EAASE,EAAQ,EAatBmF,EAAcA,CAACC,EAAMC,KACvB,IAAIC,EAAS,GAEb,IAAK,IAAIC,EAAQ,EAAGA,EAAQH,EAAKI,OAAQD,IAAS,CAE9C,MAAM5F,EAAOyF,EAAKG,GAClB,IAAIrF,EAAQP,EACR8F,GAAW9F,EAAKwC,SAAS,OAGzBsD,GAEAvF,EAAQA,EAAMwF,QAAQ,OAAQ,IAAIA,QAAQ,wBAAyB,IAAIA,QAAQ,2BAA4B,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,MAAO,IAAIC,WAAW,IAAK,KAEnKzF,EAAQA,EAAMwF,QAAQ,OAAO,SAASE,GAClC,OAAOA,EAAEC,aACb,KACG3F,EAAQ,QAEf,MAAM4F,EAAmB,CACrB,MAAS5F,EACT,QAAW8E,EACX,aAAcS,EAAU9F,EAAO,GAC/B,IAAQ,GAAEA,EAAKgG,WAAW,IAAK,OAC/B,MAAS,CAAC,MAAQ,OAAO,OAAS,OAAQI,gBAAiBpG,EAAKwC,SAAS,UAAYxC,EAAKwC,SAAS,cAAgBxC,EAAO,KAAMqG,gBAAiBrG,EAAKwC,SAAS,0BAA4BxC,EAAO,MAClM,UAAa,GAAE8F,IAAY9F,EAAKwC,SAAS,OAASxC,EAAQ,GAAGA,EAAKwC,SAAS,OAAgBxC,EAAKwC,SAAS,WAAa,wCAA0C,GAA5ExC,yCAAsHE,IAAUF,EAAO,YAAc,MAAM0F,GAAgB,MAGnQC,EAAOZ,MAAKvF,EAAAA,EAAAA,eAAA,aAAY2G,IAC5B,CAEA,OAAOR,CAAM,EAqBjB,OACInG,EAAAA,EAAAA,eAAA,OAAKd,UAAY,mCAAkCqF,EAAU,GAAG,kBAAkBlE,EAAQ,QAAU,MAE/FA,GAAQL,EAAAA,EAAAA,eAAA,SAAOd,UAAU,2BAA2BmB,GAAiB,MAEtEL,EAAAA,EAAAA,eAAA,OAAKd,UAAU,8GAEXc,EAAAA,EAAAA,eAAA,UAAQ8G,QAxBFhB,IACd,IAAI9E,EAAU8E,EAAQrH,OAClBsI,EAAUrH,OAAOsB,GAAQgG,SAAS,oBAClCC,EAAUF,EAAQG,cAAc,iBAGhCD,IACAvH,OAAOsB,GAAQmG,YAAY,aAC3BzH,OAAOuH,GAAOE,YAAY,aAAaC,WAAW,IAAK,EAAG,QAEtD7C,GACA7E,OAAOqH,GAASI,YAAY,iBAEpC,EAWoCjI,UAAY,wHAAwHE,KAAK,UACvJ,UAATA,GAA6B,UAATA,GAAmBY,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACpCD,EAAAA,EAAAA,eAAA,QAAMd,UAAY,mCAAkCwB,GAAO2F,OAAS,IAAM3F,EAAMsC,SAAS,OAAStC,EAAQA,GAAOsC,SAAS,OAAS,GAAI,eAAgB3D,MAAO,CAAC,MAAS,OAAQ,OAAU,OAAQuH,gBAAiBlG,EAAMsC,SAAS,uBAAyBtC,EAAQ,KAAMmG,gBAAiBnG,EAAMsC,SAAS,0BAA4BtC,EAAQ,SAC7UV,EAAAA,EAAAA,eAAA,QAAMd,UAAU,qCAAqCwB,GAAO2F,OAAS,IAAM5F,EAAcC,GAAO6F,QAAQ,4BAA6B,IAAIA,QAAQ,+BAAgC,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,MAAO,IAAIC,WAAW,IAAK,KAAO/F,GAA4B,aAC1QT,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACND,EAAAA,EAAAA,eAAA,QAAMd,UAAY,kCAAkCG,MAAO,CAAC,MAAS,OAAQ,OAAU,OAAQ,gBAAoB,OAAMqB,KAAU,eAAkB,QAAS,mBAAsB,aAChLV,EAAAA,EAAAA,eAAA,QAAMd,UAAU,uBAAuBuB,IAA4BH,EAAAA,EAAAA,IAAG,UAAW,gBAEnFiE,EAA+D,MAArDvE,EAAAA,EAAAA,eAAA,KAAGd,UAAU,oCAG3BmF,GAAeC,EAOfA,GACEtE,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAI,UAAUlB,UAAU,QAAQsB,KAAK,UAAUE,MAAOtB,GAAQ,GAAIuB,SAAWlC,GAAWmH,EAASnH,EAAOiC,OAAQG,QAAS,CACnI,CAAER,MAAO,QAAWK,MAAO,SAC3B,CAAEL,MAAO,WAAcK,MAAO,eAEpC,MAXEV,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAI,UAAUlB,UAAU,QAAQsB,KAAK,UAAUE,MAAOtB,GAAQ,GAAIuB,SAAWlC,GAAWmH,EAASnH,EAAOiC,OAAQG,QAAS,CACnI,CAAER,MAAO,QAAWK,MAAO,SAC3B,CAAEL,MAAO,QAAWK,MAAO,SAC3B,CAAEL,MAAO,WAAcK,MAAO,YAC9B,CAAEL,MAAO,QAAWK,MAAO,cAUvCV,EAAAA,EAAAA,eAAA,OAAKd,UAAY,qCAA6C,UAATE,GAA8B,UAATA,GAA6B,UAATA,EAAmB,uFAAyF,oDAAqDC,MAAO,CAACgI,IAAI,OAAQC,UAAW,wBAChR,UAATlI,GAA6B,UAATA,GAAmBY,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACpCD,EAAAA,EAAAA,eAACqB,EAAAA,EAAa,CAACjB,IAAI,cAAcmH,KAAK,QAAQlH,MAAmB,UAATjB,EAAmB,aAAe,aAAgBsB,MAAQA,GAAkB,UAATtB,EAAsDsB,EAAnCrC,EAAa+G,QAAQ3E,YAAqBa,SAAUuE,IAExL,UAATzG,GAAmBY,EAAAA,EAAAA,eAACqB,EAAAA,EAAa,CAAChB,MAAM,aAAaD,IAAI,oBAAoBmH,KAAK,QAAQ7G,MAAQ+D,GAAQpG,EAAa+G,QAAQ3E,YAAqBa,SAlGpJwE,IAEbjF,EAAQ4D,MAAQqB,EAAQvE,IAGjBZ,EAASE,MA6FwL,MAC1L,MAENb,EAAAA,EAAAA,eAAA,OAAKd,UAAU,UAAUG,MAAO,CAAC,IAAO,YAC1B,UAATD,GAAmBY,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAChBD,EAAAA,EAAAA,eAAA,SAAOd,UAAU,oGAAmGoB,EAAAA,EAAAA,IAAG,cAAe,eACrI0F,EAAY3H,EAAa+G,QAAWZ,EAAW,YAAY,UAAYgD,KAAM,eAE9ExH,EAAAA,EAAAA,eAAA,SAAOd,UAAU,2GAA0GoB,EAAAA,EAAAA,IAAG,oBAAqB,eAClJ0F,EAAY3H,EAAa+G,QAAWZ,EAAW,YAAY,UAAYiD,WAAY,oDAEnFvC,EAAiBmB,OAAS,GAAIrG,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAC3BD,EAAAA,EAAAA,eAAA,SAAOd,UAAY,yEAAyEsF,EAAmB,GAAR,sCAClGlE,EAAAA,EAAAA,IAAG,gBAAiB,eAExB0F,EAAYd,EAAkB,eAC/B,MAEJlF,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,aAAc,gBAC3IN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,uDACV8G,EAAY3H,EAAa+G,QAAWZ,EAAW,YAAY,UAAYkD,UAAW,MAGvF1H,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,cAAe,gBAC5IN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,sDACV8G,EAAY3H,EAAa+G,QAAWZ,EAAW,YAAY,UAAYmD,WAAY,MAGxF3H,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,gBAAiB,eAC7I0F,EAAY3H,EAAa+G,QAAWZ,EAAW,YAAY,UAAYoD,OAAQ,cAC9EpD,EAGE,MAHWxE,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACXD,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,kBAAmB,eAC/I0F,EAAY3H,EAAa+G,QAAQyC,OAAOC,SAAU,gBAGvD9H,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,eAAgB,eAC5I0F,EAAY3H,EAAa+G,QAAWZ,EAAW,YAAY,UAAYuD,OAAQ,eAEzE,aAAT3I,GAAsBY,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,KAClBuE,EAGE,MAHWxE,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACXD,EAAAA,EAAAA,eAAA,SAAOd,UAAU,oGAAmGoB,EAAAA,EAAAA,IAAG,mBAAoB,eAC1I0F,EAAY3H,EAAa+G,QAAQM,UAAW,eAGhDP,EAAoBkB,OAAS,GAAIrG,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAC9BD,EAAAA,EAAAA,eAAA,SAAOd,UAAY,yEAAyEsF,EAAmB,GAAR,sCAClGlE,EAAAA,EAAAA,IAAG,mBAAoB,eAE3B0F,EAAYb,EAAqB,eAClC,MAER,OAIE,aAAT/F,GAAsBY,EAAAA,EAAAA,eAAA,OAAKd,UAAU,4BAClCc,EAAAA,EAAAA,eAAA,SAAOd,UAAU,4BAA6B,GAAE8I,EAAE,WAAY,kBAC9DhI,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAI,qBAAqBI,KAAO,qBAAqBE,MAAO0D,GAAU,GAAIzD,SAAWlC,GApL5F2F,KAEfvD,EAAQuD,OAASA,EAEI,aAAjBvD,EAAQzB,OAAqByB,EAAQH,MAAQ,IAE1CC,EAASE,IA8KsGoH,CAAWxJ,EAAOiC,OAAQG,QAAS,CAC7I,CAAER,OAAOC,EAAAA,EAAAA,IAAG,UAAW,cAAeI,MAAO,IAC7C,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,YAAa,cAAeI,MAAO,eAC/C,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,aAAc,cAAeI,MAAO,gBAChD,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,YAAa,cAAeI,MAAO,eAC/C,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,aAAc,cAAeI,MAAO,gBAChD,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,aAAc,cAAeI,MAAO,gBAChD,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAO,iBACjD,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,aAAc,cAAeI,MAAO,gBAChD,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAO,qBAEhD,KAIrB,E,oECzPW,MAAMwH,UAAqBlE,EAAAA,UACtCE,MAAAA,GAEI,MAAM,MAACxD,EAAK,MAAEL,EAAK,QAAEkE,EAAO,YAAE9D,EAAW,SAAEE,GAAY+D,KAAK5C,MAGtDqG,EAAY7J,OAAOD,aAAa8F,UAAUiE,YAG1CzD,EAAUC,GAAGC,KAAKC,OAAO,qBAAqBC,cAC9CC,EAAeL,EAAgC,wBAAGM,MAClDC,EAAmB,GAGrBF,IACAA,EAAaI,SAASC,SAASC,SAAQL,GAASC,EAAiBK,KAAM,4BAA2BN,EAAMO,WACxGR,EAAaI,SAASK,QAAQH,SAAQL,GAASC,EAAiBK,KAAM,4BAA2BN,EAAMO,YAI3G,MAAM6C,EAAWvC,IAEb,IACIpF,EADSoF,EAAQrH,OACDsH,aAAa,cAEjC,OAAOpF,EAASD,EAAM,EAIpBsF,EAAcA,CAACC,EAAMC,KACvB,IAAIC,EAAS,GAEb,IAAK,IAAIC,EAAQ,EAAGA,EAAQH,EAAKI,OAAQD,IAAS,CAE9C,MAAM5F,EAAOyF,EAAKG,GAClB,IAAIrF,EAAQkF,EAAKG,GACbE,GAAW9F,EAAKwC,SAAS,OAGzBsD,GAEAvF,EAAQA,EAAMwF,QAAQ,OAAQ,IAAIA,QAAQ,wBAAyB,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,SAAU,IAAIC,WAAW,IAAK,KAE9HzF,EAAQA,EAAMwF,QAAQ,OAAO,SAASE,GAClC,OAAOA,EAAEC,aACb,KAEA3F,EAAQ,QAIZ,MAAM4F,EAAmB,CACrB,MAAS5F,EACT,QAAWsH,EACX,aAAc/B,EAAU9F,EAAO,GAC/B,IAAQ,GAAEA,EAAKgG,WAAW,IAAK,OAC/B,MAAS,CAACzG,MAAO,OAAQP,OAAO,OAAQoH,gBAAiBpG,EAAKwC,SAAS,OAASxC,EAAO,MACvF,UAAc,GAAE8F,IAAY9F,EAAKwC,SAAS,OAASxC,EAAK+F,QAAQ,SAAS,OAAU,GAAG/F,EAAKwC,SAAS,OAAgBxC,EAAKwC,SAAS,WAAa,wCAA0C,GAA5ExC,yCAAsHE,IAAUF,EAAO,YAAc,SAAS0F,GAAgB,MAI/RC,EAAOZ,MAAKvF,EAAAA,EAAAA,eAAA,aAAY2G,IAC5B,CAGA,OAAOR,CAAM,EAoBjB,OACInG,EAAAA,EAAAA,eAAA,OAAKd,UAAY,kCAAiCqF,EAAU,GAAG,kBAAkBlE,EAAQ,QAAU,MAE9FA,GAAQL,EAAAA,EAAAA,eAAA,SAAOd,UAAU,2BAA2BmB,GAAiB,MAEtEL,EAAAA,EAAAA,eAAA,UAAQ8G,QArBEhB,IACd,IAAI9E,EAAS8E,EAAQrH,OACjBsI,EAAUrH,OAAOsB,GAAQgG,SAAS,oBAClCC,EAASvH,OAAOsB,GAAQsH,KAAK,iBAE7BrB,IACAvH,OAAOsB,GAAQmG,YAAY,aAC3BzH,OAAOuH,GAAOE,YAAY,aAAaC,WAAW,IAAK,EAAG,QAEtD7C,GACA7E,OAAOqH,GAASI,YAAY,iBAEpC,EASgCjI,UAAY,uHAAuHE,KAAK,WAChKY,EAAAA,EAAAA,eAAA,QAAMd,UAAY,mCAAkCwB,GAAO2F,OAAS,IAAM3F,EAAMsC,SAAS,OAAStC,EAAM6F,QAAQ,SAAS,OAAS7F,GAAOsC,SAAS,OAAS,GAAI,eAAgB3D,MAAO,CAAC,MAAS,OAAQ,OAAU,OAAQuH,gBAAiBlG,GAASA,EAAMsC,SAAS,OAAStC,EAAQ,SACpRV,EAAAA,EAAAA,eAAA,QAAMd,UAAU,qCAAqCwB,GAAO2F,OAAS,IAAM5F,EAAcC,GAAO6F,QAAQ,4BAA6B,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,SAAU,IAAIC,WAAW,IAAK,KAAO/F,GAA4B,WACjO8D,EAA8C,MAApCvE,EAAAA,EAAAA,eAAA,KAAGd,UAAU,oBAG7Bc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,6JAA6JG,MAAO,CAACgI,IAAI,OAAQC,UAAW,yBACvMtH,EAAAA,EAAAA,eAAA,SAAOd,UAAY,oGAAmGoB,EAAAA,EAAAA,IAAG,cAAe,eACvI0F,EAAYmC,EAAUX,KAAM,eAE7BxH,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,oBAAqB,eACjJ0F,EAAYmC,EAAUV,WAAY,oDAElCvC,EAAiBmB,OAAS,GAAIrG,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAC3BD,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GACZoB,EAAAA,EAAAA,IAAG,gBAAiB,eAExB0F,EAAYd,EAAkB,eAC/B,MAEJlF,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,gBAAiB,eAC7I0F,EAAYmC,EAAUP,OAAQ,eAE/B5H,EAAAA,EAAAA,eAAA,SAAOd,UAAU,0GAAyGoB,EAAAA,EAAAA,IAAG,eAAgB,eAC5I0F,EAAYmC,EAAUI,OAAQ,eAI/C,E,0DC9HW,MAAMzH,UAAmBkD,EAAAA,UAEpCC,MAAQ,CAACuE,QAAO,GAGhBC,iBAAAA,GAAsBnK,OAAOD,aAAaqK,mBAAqB,CAC/DC,kBAAAA,GAAuBrK,OAAOD,aAAaqK,mBAAqB,CAEhExE,MAAAA,GAEI,MAAM,MACF7D,EAAK,OACLW,EAAM,QACN+B,EAAO,SACP9B,EAAQ,SACR2H,EAAQ,UACR1J,EAAS,aACT2J,EAAY,MACZ9H,GACA2D,KAAK5C,MAEH3D,EAAa,CAAC,EAOpB,OALI4E,GAASC,SAAS,WAAU7E,EAAW,cAAgB,QACvD0K,IAAc1K,EAAW,iBAAmB0K,GAC5CnE,KAAK5C,MAAM1B,MAAKjC,EAAWiC,IAAMsE,KAAK5C,MAAM1B,MAGxCJ,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAEJD,EAAAA,EAAAA,eAAA,OAAKd,UAAY,8BAA6BA,GAAwB,QAAUf,IAE5E6B,EAAAA,EAAAA,eAAA,UAAQd,UAAY,iBAAgB8B,KAAUD,EAAQ,iBAAmB,KAAM,aAAYA,GAAQV,IAEnGL,EAAAA,EAAAA,eAAA,MAAId,UAAY,4HAA2H+B,GAAsB,qBAAsB2H,IAKnM,E,gDC1CJ,MAWA,EAXwB9G,IACpB9B,EAAAA,EAAAA,eAAA,MAAId,UAAU,uIACT4C,EAAMgH,YAAYC,KAAI,CAACC,EAAY5C,KACxBpG,EAAAA,EAAAA,eAAA,MAAII,IAAM,gBAAegG,IAASlH,UAAU,6CAA6C4H,QAASA,IAAMhF,EAAMmH,sBAAsBD,KACxIhJ,EAAAA,EAAAA,eAAA,cAASgJ,EAAWjI,QACpBf,EAAAA,EAAAA,eAAA,QAAMd,UAAU,+CAA+C8J,EAAWzH,Q,gGCQ3E,MAAML,UAAoB8C,EAAAA,UAErCC,MAAQ,CACJiF,WAAa,EACbC,UAAa,MACbC,UAAa,WACbC,WAAa,eACbC,WAAa,GACbC,YAAa,CAAC,EAEdC,YAAc,CACV,CAAE9I,MAAO,MAAOL,MAAO,UAEvB,CAAEK,MAAO,MAAOL,MAAO,QACvB,CAAEK,MAAO,MAAOL,MAAO,SACvB,CAAEK,MAAO,MAAOL,MAAO,WACvB,CAAEK,MAAO,MAAOL,MAAO,SACvB,CAAEK,MAAO,MAAOL,MAAO,WAEvB,CAAEK,MAAO,OAAQL,MAAO,cACxB,CAAEK,MAAO,OAAQL,MAAO,eACxB,CAAEK,MAAO,OAAQL,MAAO,eACxB,CAAEK,MAAO,OAAQL,MAAO,kBAG5BoJ,cAAgB,MAChBC,YAAa,MAGjBC,SAAWA,KAEPC,IAAS,CAAEC,KAAM,0BAA2BC,MAAMjJ,IAE9C,IAAI0I,EAAc7E,KAAKT,MAAMsF,YACzBE,EAAgB/E,KAAKT,MAAMwF,cAC3BJ,EAAa3E,KAAKT,MAAMoF,WACxBF,EAAYzE,KAAKT,MAAMkF,UACvBC,EAAY1E,KAAKT,MAAMmF,UACvBE,EAAa5E,KAAKT,MAAMqF,WAGxBzI,EAAQkJ,gBACRN,EAAgB5I,EAAQkJ,cAAcxD,QAAQ,eAAgB,MAAMA,QAAQ,QAAQ,IAAIA,QAAQ,OAAO,KAKvG8C,EADA3E,KAAK5C,MAAMpB,MAAMsC,SAAS,OACZ,GAAEyG,gBAEF,GAAEA,aAIjBA,EAAczG,SAAS,OAAMqG,EAAaA,EAAW9C,QAAQ,IAAK,MAGrE,MAAMyD,EAAatF,KAAK5C,MAAMpB,MAAMuJ,MAAM,KAU1C,GAPId,EAAUnG,SAAS,SAAWgH,EAAW,GAAGhH,SAAS,SAAQsG,EAAa,IAG9EF,EAAYY,EAAW,GACvBb,EAAYa,EAAW,GAGnBV,EAAWjD,OAAS,EACpB6D,MAAO,GAAEC,WAAWC,QAAQf,KAAcS,MAAMO,GAAQA,EAAID,SAAQN,MAAMM,IAElEA,EAAKE,QAAUhB,IAAYA,EAAac,EAAKE,OAEjD,IAAI,IAAIC,EAAO,EAAGA,EAAOjB,EAAWjD,OAAQkE,GAAQ,IAAK,CAErD,IAAIC,EAAaC,KAAKC,MAAMH,EAAO,KAAO,EAE1ChB,EAAYiB,GAAclB,EAAWqB,MAAMJ,EAAMA,EAAO,IAC5D,CAEA7F,KAAKkG,SAAS,CAACzB,YAAWC,YAAWC,aAAYC,aAAYG,gBAAeF,eAAa,QAE1F,CAEH,IAAI,IAAIgB,EAAO,EAAGA,EAAOjB,EAAWjD,OAAQkE,GAAQ,IAAK,CAErD,IAAIC,EAAaC,KAAKC,MAAMH,EAAO,KAAO,EAE1ChB,EAAYiB,GAAclB,EAAWqB,MAAMJ,EAAMA,EAAO,IAC5D,CAEA7F,KAAKkG,SAAS,CAACzB,YAAWC,YAAWC,aAAYC,aAAYG,gBAAeF,eAChF,IACF,EAINd,iBAAAA,GAAsB/D,KAAKiF,UAAY,CAEvChB,kBAAAA,GAAuBjE,KAAKiF,UAAY,CAGxCzF,MAAAA,GAEI,MAAM,MAAE7D,EAAK,MAAEK,EAAK,QAAEmK,EAAO,SAAElK,GAAa+D,KAAK5C,MAGjD,IAAIjB,EAAU,CACVzB,KAAMsB,EAAMuJ,MAAM,KAAK,GACvBvJ,MAAOA,EAAMuJ,MAAM,KAAK,IAI5B,MAAMrJ,EAAYkF,IAEd,IAAI9E,EAAS8E,EAAQrH,OACjBqM,EAAY9J,GAAQ+E,aAAa,cAMrC,OAHAlF,EAAQH,MAAQoK,EAGTnK,EAASE,EAAQ,EAGtB+E,EAAWlF,IAEbG,EAAQzB,KAAOsB,EAGD,QAAVA,GAAoBgE,KAAK5C,MAAMpB,MAAMsC,SAAS,SAAQnC,EAAQH,MAAQ,gBAGtEgE,KAAK5C,MAAMpB,MAAMsC,SAAS,QAAoB,QAAVtC,IAAiBG,EAAQH,MAAQ,YAGzEgE,KAAKkG,SAAS,CAACzB,UAAWzI,EAAO4I,WAAY,GAAIC,YAAa,CAAC,EAAGL,WAAY,EAAGE,UAAWvI,EAAQH,QAAQ,IACjGC,EAASE,IAClB,EAIAkK,EAAmBC,IAErB,IACIC,EADUD,EAAMvM,OACKsH,aAAa,eAGtC,GAAmB,SAAfkF,EAAuB,CAEvB,GAAIvG,KAAKT,MAAMiF,aAAegC,OAAOC,KAAKzG,KAAKT,MAAMsF,aAAalD,OAAQ,OAE1E3B,KAAKkG,SAAS,CAAC1B,WAAYxE,KAAKT,MAAMiF,WAAa,GACvD,MAGK,GAAmB,aAAf+B,EAA2B,CAEhC,GAA8B,IAA1BvG,KAAKT,MAAMiF,WAAkB,OAGjCxE,KAAKkG,SAAS,CAAC1B,WAAYxE,KAAKT,MAAMiF,WAAa,GACvD,GAmDJ,OACIlJ,EAAAA,EAAAA,eAAA,OAAKd,UAAY,wDAAuDmB,EAAe,GAAT,WAEzEA,GAAML,EAAAA,EAAAA,eAAA,SAAOd,UAAU,4BAA4BmB,GAAe,MAGnEL,EAAAA,EAAAA,eAAA,OAAKd,UAAU,8GAEXc,EAAAA,EAAAA,eAAA,UAAQ8G,QApCFhB,IACd,IAAI9E,EAAU8E,EAAQrH,OAElBwI,EADUvH,OAAOsB,GAAQgG,SAAS,oBAChBE,cAAc,iBAGhCD,IACAvH,OAAOsB,GAAQmG,YAAY,aAC3BzH,OAAOuH,GAAOE,YAAY,aAAaC,WAAW,IAAK,EAAG,QAC9D,EA2BoClI,UAAY,gIAAgIE,KAAK,WACzKY,EAAAA,EAAAA,eAAA,QAAMd,UAAY,sBAAsBG,MAAO,CAAC,WAAc,UAC1DW,EAAAA,EAAAA,eAAA,QAAMd,UAAY,gEAA+DwF,KAAK5C,MAAMpB,uBAC3FJ,EAAAA,EAAAA,IAAG,UAAW,gBAEnBN,EAAAA,EAAAA,eAAA,KAAGd,UAAU,qCAGjBc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,aAAaI,KAAK,aAAatB,UAAU,QAAQwB,MAAOA,EAAMuJ,MAAM,KAAK,GAAItJ,SAAWlC,GAAWmH,EAASnH,EAAOiC,OAAQG,QAAS6D,KAAKT,MAAMuF,gBAIvKxJ,EAAAA,EAAAA,eAAA,OAAKd,UAAY,uJACbc,EAAAA,EAAAA,eAAA,SAAOQ,KAAK,mBAAmBtB,UAAU,0DAA0DyB,SApC3FyK,IAEhB,IAAIC,EAAQD,EAAQ3M,OAChB6K,EAAa5E,KAAKT,MAAMqF,WACxB5I,EAAQ2K,EAAM3K,MAGd4K,EAAehC,EAAWiC,QAAOjM,GAAQA,EAAK0D,SAAStC,KAGvDA,EAAM2F,OAAS,EAAI3B,KAAKkG,SAAS,CAACtB,WAAYgC,EAAcpC,WAAY,EAAGK,YAAa,CAAC,IACxF7E,KAAKkG,SAAS,CAACtB,WAAY,GAAIJ,WAAY,EAAGK,YAAa,CAAC,GAAG,EAyB8D9I,aAAaH,EAAAA,EAAAA,IAAG,kBAAmB,iBAE7JN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,kHAAkHG,MAAO,CAACgI,IAAI,OAAQC,UAAW,UAC3J5C,KAAKT,MAAMqF,WAAWjD,OAAS,EAvE5BL,EAACC,EAAM7G,KAEvB,IAAK6G,GAAQA,EAAKI,OAAS,EAAG,OAG9B,IAAImF,EAAe,GACfC,EAAe,CAAC,SAAY,OAAQ,WAAc,OAAQ,MAAQ,OAAQ,OAAS,OAAQ,aAAgB,MAAO,QAAW,GAC7HC,EAAcnB,IACHvK,EAAAA,EAAAA,eAAA,UAAQI,IAAM,GAAEmK,IAAQzD,QAASlG,EAAWG,MAAOwJ,EAAM,aAAYA,EAAMrL,UAAY,8BAA6BE,KAAQmL,KAAQ7F,KAAKT,MAAMmF,YAAcmB,EAAK,gCAAgC,KAAMlL,MAAOoM,IAO9N,OAHAxF,EAAKX,SAASiF,GAASiB,EAAYjG,KAAKmG,EAAWnB,MAG5CiB,CAAW,EAyDFxF,CAAYtB,KAAKT,MAAMsF,YAAY7E,KAAKT,MAAMiF,YAAaxE,KAAKT,MAAMkF,WAAa,oBAI3FnJ,EAAAA,EAAAA,eAAA,OAAKd,UAAU,sEACXc,EAAAA,EAAAA,eAAA,UAAQ8G,QAASiE,EAAiB3L,KAAK,SAAS,cAAY,OAAOF,UAAU,qCAAoCoB,EAAAA,EAAAA,IAAG,OAAQ,gBAC5HN,EAAAA,EAAAA,eAAA,QAAMd,UAAU,uBAAuBwF,KAAKT,MAAMiF,WAAW,IAAEgC,OAAOC,KAAKzG,KAAKT,MAAMsF,aAAalD,SACnGrG,EAAAA,EAAAA,eAAA,UAAQ8G,QAASiE,EAAiB3L,KAAK,SAAS,cAAY,WAAWF,UAAU,kCAAiCoB,EAAAA,EAAAA,IAAG,WAAY,iBAMrJ,E,0DC7PW,MAAM4B,UAAqB8B,EAAAA,UACtCE,MAAAA,GAEI,MAAM,MAAC7D,EAAK,MAAEK,EAAK,IAAEyB,EAAG,IAAEC,EAAG,MAAEuJ,EAAK,KAAErM,EAAI,SAAEqB,EAAQ,KAAEH,GAAQkE,KAAK5C,MAoCnE8J,EAAe9F,IAEX,IAAI9E,EAAU8E,EAAQrH,OAClBsI,EAAUrH,OAAOsB,GAAQgG,SAAS,qBAClC6E,EAAUC,WAAW3J,IAAQ,EAC7B4J,EAAUJ,GAAgB,EAG1BN,EAAQtE,EAAQG,cAAc,wBAC9B8E,EAASF,WAAWT,EAAM3K,OAASqL,EAIvC,OADAV,EAAM3K,MAAQsL,EAASH,GAAUG,IAAWH,EAASG,EAASH,EACvDlL,EAAS0K,EAAM,EAI1B,OAAQrL,EAAAA,EAAAA,eAAA,OAAKd,UAAU,mDAEnBc,EAAAA,EAAAA,eAAA,SAAOd,UAAU,4DAA4DmB,IAE7EL,EAAAA,EAAAA,eAAA,OAAKd,UAAW,uCAAyCI,GAAc,KAEjEA,EAAmK,IAA5JU,EAAAA,EAAAA,eAAA,UAAQ8G,QAAS8E,EAAa1M,UAAU,2GAGjDc,EAAAA,EAAAA,eAAA,SAAOQ,KAAMA,EAAMpB,KAAK,SAAS+C,IAAKA,EAAKC,IAAKA,EAAK1B,MAAOoL,WAAWpL,GAASoL,WAAWpL,GAAS,EAAGxB,UAAW,gEAAiEyB,SA3DxKyK,IAEf,MAAMC,EAASD,EAAQ3M,OACjBoN,EAAUC,WAAW3J,IAAQ,EAC7B8J,EAAUH,WAAW1J,IAAQ,EAG7B4J,EAASF,WAAWT,EAAM3K,OAC1BwL,EAAYF,GAAUH,GAAUG,GAAUC,EAAUD,EAAS,EAInE,OADAX,EAAM3K,MAAQwL,EACPvL,EAAS0K,EAAM,KAkDlBrL,EAAAA,EAAAA,eAAA,OAAKd,UAAU,8CACVI,GAAOU,EAAAA,EAAAA,eAAA,UAAQ8G,QAAS8E,EAAa1M,UAAU,wEAAkF,IAClIc,EAAAA,EAAAA,eAAA,UAAQ8G,QAhDLhB,IAEX,IAAI9E,EAAU8E,EAAQrH,OAClBsI,EAAUrH,OAAOsB,GAAQgG,SAAS,qBAClCiF,EAAUH,WAAW1J,IAAQ,QAC7B2J,EAAUJ,EAAQG,WAAWH,GAAS,EAGtCN,EAAStE,EAAQG,cAAc,wBAC/B8E,EAASF,WAAWT,EAAM3K,OAASqL,EAIvC,OADAV,EAAM3K,MAAQsL,EAASC,GAAUD,IAAWC,EAASD,EAASC,EACvDtL,EAAS0K,EAAM,EAmCgBnM,UAAU,yEAKxD,E,yDChFW,MAAMqB,UAAqByD,EAAAA,UAEtCC,MAAQ,CAAC,EAGTwE,iBAAAA,GAAsBnK,OAAOD,aAAaqK,mBAAqB,CAC/DC,kBAAAA,GAAuBrK,OAAOD,aAAaqK,mBAAqB,CAOhExE,MAAAA,GAEI,MAAM,KAAC1D,EAAI,KAAEpB,EAAI,KAAEmI,EAAI,MAAElH,EAAK,MAAEK,EAAK,QAAEG,EAAO,SAAEsL,EAAQ,SAAExL,EAAQ,UAAEzB,EAAS,YAAEuB,EAAW,OAAE2L,GAAW1H,KAAK5C,MAS5G,IAAI3D,EAAa,CAACwC,SALAqK,GACPrK,EAASqK,EAAMvM,SAOtB2N,IAAQjO,EAAW,eAAiB,GACpCgO,IAAUhO,EAAWgO,SAAWA,GAChC1L,IAAatC,EAAW,oBAAsBsC,GAGlD,IAAI4L,EAAe,GA0BnB,OAxBIC,MAAMC,QAAQ1L,KAAaA,EAAQ,GAAGzB,KAEtCyB,EAAQyE,SAAQiF,IACZ8B,EAAa9G,MAAKvF,EAAAA,EAAAA,eAAA,UAAQI,IAAKmK,EAAK7J,MAAOA,MAAO6J,EAAK7J,OAAS,GAAE6J,EAAKlK,SAAkB,IAEtFQ,EAAQ,IAAMA,EAAQ,GAAGzB,KAChCiN,EAAexL,EAGfqK,OAAOsB,QAAQ3L,GAASyE,SAAQ,EAAElF,EAAKS,MAEnC,IAAI4L,EAAa,GAEjB5L,EAAQyE,SAAQiF,IACZkC,EAAWlH,MAAKvF,EAAAA,EAAAA,eAAA,UAAQI,IAAKmK,EAAK7J,MAAOA,MAAO6J,EAAK7J,OAAS,GAAE6J,EAAKlK,SAAkB,IAG3F,IAAIqM,GAAgB1M,EAAAA,EAAAA,eAAA,YAAUI,IAAM,GAAEA,UAAaC,MAAQ,GAAED,KAAQqM,GAErEJ,EAAa9G,KAAKmH,EAAc,KAKjC1M,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,KAEFI,GAAML,EAAAA,EAAAA,eAAA,SAAOd,UAAU,sBAAsBG,MAAO,CAACsN,aAAc,IAAM,GAAEtM,KAAiB,MAG7FL,EAAAA,EAAAA,eAAA,OAAKI,IAAM,iBAAiBlB,UAAY,aAAYA,GAAwB,KAAM,aAAYwB,IAC1FV,EAAAA,EAAAA,eAAA,UAAQI,IAAM,iBAAiBI,KAAMA,EAAMoM,aAAclM,EAAOxB,UAAY,yCAAwCqI,GAAc,uBAAyBpJ,GAAakO,IAGpL,E,iGCxDW,MAAMpJ,UAAsBe,EAAAA,UACvCE,MAAAA,GAEI,MAAM7F,EAAeC,OAAOD,aAAa8F,WACnC,WAAChG,EAAU,QAAE0C,EAAO,WAAE0B,GAAcmC,KAAK5C,MAGzC+K,EAAsBxO,EAAayO,WAAWC,SAC9CC,EAAkB3O,EAAayO,WAAWG,KAGhD,OAAOjN,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,KAEFyE,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,MAG7C5I,EAAAA,EAAAA,eAAA,OAAKd,UAAY,eAEbc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,gBACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,iBAAiBtB,UAAU,QAAQuB,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAe8L,QAAQ,EAAM/L,OAAOC,EAAAA,EAAAA,IAAG,sBAAuB,cAAeI,MAAOvC,EAAWkB,OAAO6N,WAAW1M,KAAMG,SAAU4B,EAAY1B,QAASgM,KAEvO1O,EAAWkB,OAAO6N,WAAWC,SAC1BnN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,gBACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,OAAOtB,UAAU,QAAQuB,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAe8L,QAAQ,EAAM/L,OAAOC,EAAAA,EAAAA,IAAG,iBAAkB,cAAeI,MAAOvC,EAAWkB,OAAO6N,WAAWD,KAAMtM,SAAU4B,EAAY1B,QAASmM,KAE5N,KACC7O,EAAWkB,OAAO6N,WAAWE,MAsB1B,MAtBkCpN,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAEnCD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC1B,KAAK,qBAAqBH,OAAOC,EAAAA,EAAAA,IAAG,QAAS,cAAeI,MAAOvC,EAAWkB,OAAO6N,WAAWG,UAAY,IAAM1M,SAAU4B,EAAYJ,IAAK,EAAGC,IAAK,KAAOuJ,MAAO,QAGrL3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC1B,KAAK,kBAAkBH,OAAOC,EAAAA,EAAAA,IAAG,QAAS,cAAeI,MAAOvC,EAAWkB,OAAO6N,WAAWI,OAAS,EAAG3M,SAAU4B,EAAYJ,IAAK,EAAGC,IAAK,IAAMuJ,MAAO,QAG3K3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC1B,KAAK,mBAAmBH,OAAOC,EAAAA,EAAAA,IAAG,SAAU,cAAeI,MAAOvC,EAAWkB,OAAO6N,WAAWK,QAAU,EAAG5M,SAAU4B,EAAYJ,IAAK,EAAGC,IAAK,IAAMuJ,MAAO,MAG9K3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC1B,KAAK,kBAAkBH,OAAOC,EAAAA,EAAAA,IAAG,QAAS,cAAeI,MAAOvC,EAAWkB,OAAO6N,WAAWM,OAAS,EAAG7M,SAAU4B,EAAYJ,IAAK,EAAGC,IAAK,IAAMuJ,MAAO,MAG3K3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WACXc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,oBAAoBE,MAAM,MAAMU,QAASjD,EAAWkB,OAAO6N,WAAWO,QAAS9M,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,UAASoB,EAAAA,EAAAA,IAAG,cAAe,kBAK/LN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,kBAAkBE,MAAM,UAAUU,QAASjD,EAAWkB,OAAO6N,WAAWE,MAAOzM,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,UAASoB,EAAAA,EAAAA,IAAG,eAAgB,iBAG5LN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,UAAUE,MAAM,UAAUU,QAASjD,EAAWkB,OAAO6N,WAAWC,QAASxM,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,UAASoB,EAAAA,EAAAA,IAAG,WAAY,iBAM9L,E,0GC5DW,MAAMgD,UAAkBU,EAAAA,UACnCE,MAAAA,GAEI,MAAM,WAAC/F,EAAU,QAAE0C,EAAO,WAAE0B,EAAU,OAAE7D,EAAM,WAAEyE,EAAU,aAAEb,EAAY,cAAElE,GAAiBsG,KAAK5C,MAC1FzD,EAAeC,OAAOD,aAiBtBiD,EAAY7C,IAEd,IAAIiP,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,eAAgB,cAEbC,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAC7DC,EAFQ,CAAC,aAAc,iBAEXF,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAG7DF,EAEID,EADAvP,EAAWkB,MAAO,iBAAgBX,KAClB,IAAIP,EAAWkB,MAAO,CAAE,eAAcX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,aAAYhC,KAAWqP,SAAStP,EAAOiC,QAElH,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,QAIzFoN,IAEDJ,EADAvP,EAAWkB,MAAO,iBAAgBX,KAClB,IAAIP,EAAWkB,MAAO,CAAE,aAAYX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,gBAAehC,KAAWqP,SAAStP,EAAOiC,QAEnH,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,SAKlGyC,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,EAIzD,OAAO1N,EAAAA,EAAAA,eAAA,OAAKd,UAAY,gCAElBR,GAAqB,KAAXA,EAqBR,MArBwBsB,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACxBD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,2CAEXc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cAEXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,eAAeC,aAAaH,EAAAA,EAAAA,IAAG,QAAS,cAAepB,UAAY,sBAAsBwB,MAAOvC,EAAWkB,MAAM,gBAAiBsB,SAAU4B,EAAY1B,QAASxC,EAAa8F,UAAU6J,OAAOC,kBAGtNjO,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cAEXc,EAAAA,EAAAA,eAAC+D,EAAAA,EAAgB,CAAC3D,IAAM,eACpBmE,SAAS,EACTF,YAAY,EACZG,YAAY,EACZ7D,SAAWD,GAAU4B,EAAa5B,EAAO,GAAI,QAAS,eAAgBvC,EAAYC,GAClFgB,KAAMjB,EAAWkB,MAAM,iBAAiBD,MAAQ,QAChDsB,MAAOvC,EAAWkB,MAAM,iBAAiBqB,OAAS,GAClD0D,OAAQjG,EAAWkB,MAAM,iBAAiB+E,QAAU,WAKpEpE,EAAAA,EAAAA,eAAA,OAAKd,UAAU,gBAEXc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,iBAAgB1B,IAAU8B,KAAO,iBAAgB9B,IAAU0C,QAASjD,EAAWkB,MAAO,iBAAgBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,yCAC9Oc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,gIAAgI,cAAYoB,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,iBAAgB1B,IAAU8B,KAAO,iBAAgB9B,IAAU0C,QAASjD,EAAWkB,MAAO,iBAAgBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,2CAC9Oc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,6HAA6H,cAAYoB,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,iBAAiBG,MAAO,CAACU,MAAO,OAC3CC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,aAAY1B,IAAU8B,KAAO,aAAY9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,aAAYX,MAAa,EAAGyD,IAAK,EAAGC,IAAK,IAAKuJ,MAAO,MAG7K3L,EAAAA,EAAAA,eAAA,OAAKd,UAAY,+CAEbc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,eAAc1B,IAAU8B,KAAO,eAAc9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,eAAcX,MAAa,EAAGyD,IAAK,EAAGC,IAAK,IAAKuJ,MAAO,MAGnL3L,EAAAA,EAAAA,eAAA,UAAQI,IAAM,eAAc1B,IAAU8B,KAAO,eAAc9B,IAAUoI,QAzFnEoH,KAEV,MAAMR,EAAgB,IACfvP,EAAWkB,MACd,CAAE,aAAYX,KAAW,GACzB,CAAE,eAAcA,KAAW,GAC3B,CAAE,aAAYA,KAAW,GACzB,CAAE,gBAAeA,KAAW,IAGhCyE,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,EA+EwCxO,UAAU,gDAE/Fc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,aAAY1B,IAAU8B,KAAO,aAAY9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,aAAYX,MAAa,EAAGyD,IAAK,EAAGC,IAAK,IAAKuJ,MAAO,OAIjL3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WAAWG,MAAO,CAACU,MAAO,OACrCC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,gBAAe1B,IAAW8B,KAAO,gBAAe9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,gBAAeX,MAAa,EAAGyD,IAAK,EAAGC,IAAK,IAAKuJ,MAAO,MAInM,E,6EC/GW,MAAMpI,UAAmBS,EAAAA,UACpCE,MAAAA,GAEI,MAAM7F,EAAeC,OAAOD,aAAa8F,WACnC,WAAChG,EAAU,QAAE0C,EAAO,WAAE0B,GAAcmC,KAAK5C,MAGzCqM,EAAe9P,EAAa+P,QAAQC,MACpCC,EAAcjQ,EAAa+P,QAAQG,QACnCC,EAAoBnQ,EAAa+P,QAAQtB,WACzC2B,EAAgBpQ,EAAa+P,QAAQK,cAG3C,OAAOzO,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,KAEFyE,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,MAG7C5I,EAAAA,EAAAA,eAAA,OAAKd,UAAY,sBAEbc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,eACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,eAAe+G,KAAK,SAAS9G,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAepB,UAAU,kBAAkBkN,QAAQ,EAAMD,UAAU,EAAM9L,OAAOC,EAAAA,EAAAA,IAAG,gBAAiB,cAAeI,MAAoD,iBAAtCvC,EAAWkB,MAAM,gBAAgC,CAAClB,EAAWkB,MAAM,iBAAmBlB,EAAWkB,MAAM,gBAAiBsB,SAAU4B,EAAY1B,QAASsN,MAGpWnO,EAAAA,EAAAA,eAAA,OAAKd,UAAU,eACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,kBAAkB+G,KAAK,SAAS9G,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAepB,UAAU,kBAAkBkN,QAAQ,EAAMD,UAAU,EAAM9L,OAAOC,EAAAA,EAAAA,IAAG,kBAAmB,cAAeI,MAAuD,iBAAzCvC,EAAWkB,MAAM,mBAAmC,CAAClB,EAAWkB,MAAM,oBAAsBlB,EAAWkB,MAAM,mBAAoBsB,SAAU4B,EAAY1B,QAAS2N,MAGlXxO,EAAAA,EAAAA,eAAA,OAAKd,UAAU,eACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,aAAa+G,KAAK,SAAS9G,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAepB,UAAU,kBAAkBmB,OAAOC,EAAAA,EAAAA,IAAG,aAAc,cAAeI,MAAOvC,EAAWkB,MAAM,cAAesB,SAAU4B,EAAY1B,QAASyN,MAGlOtO,EAAAA,EAAAA,eAAA,OAAKd,UAAU,eACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,gBAAgB+G,KAAK,SAAS9G,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAepB,UAAU,kBAAkBmB,OAAOC,EAAAA,EAAAA,IAAG,gBAAiB,cAAeI,MAAOvC,EAAWkB,MAAM,iBAAkB8M,UAAU,EAAMxL,SAAU4B,EAAY1B,QAAS4N,MAKvQ,E,iGCpCW,MAAMrL,UAAkBY,EAAAA,UACnCE,MAAAA,GAEI,MAAM,WAAC/F,EAAU,QAAE0C,EAAO,WAAE0B,EAAU,OAAE7D,EAAM,WAAEyE,GAAcuB,KAAK5C,MAkB7DR,GAjBYoN,KAAKC,MAAMC,SAAS,IAAMnE,KAAKoE,SAASD,SAAS,IAAIE,OAAO,EAAG,GAiB/DrQ,IAEd,IAAIiP,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,KAAM,MAEHC,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAC7DC,EAFQ,CAAC,KAAM,MAEHF,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAG7DF,EAEID,EADAvP,EAAWkB,MAAO,iBAAgBX,KAClB,IAAIP,EAAWkB,MAAO,CAAE,KAAIX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,KAAIhC,KAAWqP,SAAStP,EAAOiC,QAEhG,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,QAIzFoN,IAEDJ,EADAvP,EAAWkB,MAAO,iBAAgBX,KAClB,IAAIP,EAAWkB,MAAO,CAAE,KAAIX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,KAAIhC,KAAWqP,SAAStP,EAAOiC,QAEhG,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,SAKlGyC,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,GAIzD,OAAO1N,EAAAA,EAAAA,eAAA,OAAKd,UAAY,2CAEpBc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,iBAAgB1B,IAAU8B,KAAO,iBAAgB9B,IAAU0C,QAASjD,EAAWkB,MAAO,iBAAgBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,yCAC9Oc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,gIAAgI,cAAYoB,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,iBAAgB1B,IAAU8B,KAAO,iBAAgB9B,IAAU0C,QAASjD,EAAWkB,MAAO,iBAAgBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,2CAC9Oc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,6HAA6H,cAAYoB,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,iBAAiBG,MAAO,CAACU,MAAO,OAC3CC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,KAAI1B,IAAU8B,KAAO,KAAI9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,KAAIX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAOuJ,MAAO,MAG3J3L,EAAAA,EAAAA,eAAA,OAAKd,UAAY,+CAEbc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,KAAI1B,IAAU8B,KAAO,KAAI9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,KAAIX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAOuJ,MAAO,MAG3J3L,EAAAA,EAAAA,eAAA,UAAQI,IAAM,eAAc1B,IAAU8B,KAAO,eAAc9B,IAAUoI,QAjE/DoH,KAEV,MAAMR,EAAgB,IACfvP,EAAWkB,MACd,CAAE,KAAIX,KAAW,GACjB,CAAE,KAAIA,KAAW,GACjB,CAAE,KAAIA,KAAW,GACjB,CAAE,KAAIA,KAAW,IAGrByE,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,EAuDoCxO,UAAU,gDAE/Fc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,KAAI1B,IAAU8B,KAAO,KAAI9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,KAAIX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAOuJ,MAAO,OAI/J3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WAAWG,MAAO,CAACU,MAAO,OACrCC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,KAAI1B,IAAU8B,KAAO,KAAI9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,KAAIX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAOuJ,MAAO,KAG1JjH,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,KAErD,E,iGCrFW,MAAM1F,UAAmBc,EAAAA,UACpCE,MAAAA,GAEI,MAAM,WAAC/F,EAAU,QAAE0C,EAAO,WAAE0B,EAAU,OAAE7D,EAAM,WAAEyE,GAAcuB,KAAK5C,MAkB7DR,GAjBYoN,KAAKC,MAAMC,SAAS,IAAMnE,KAAKoE,SAASD,SAAS,IAAIE,OAAO,EAAG,GAiB/DrQ,IAEd,IAAIiP,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,MAAO,OAEJC,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAC7DC,EAFQ,CAAC,MAAO,OAEJF,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAG7DF,EAEID,EADAvP,EAAWkB,MAAO,kBAAiBX,KACnB,IAAIP,EAAWkB,MAAO,CAAE,MAAKX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,MAAKhC,KAAWqP,SAAStP,EAAOiC,QAElG,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,QAIzFoN,IAEDJ,EADAvP,EAAWkB,MAAO,kBAAiBX,KACnB,IAAIP,EAAWkB,MAAO,CAAE,MAAKX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,MAAKhC,KAAWqP,SAAStP,EAAOiC,QAElG,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,SAKlGyC,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,GAIzD,OAAO1N,EAAAA,EAAAA,eAAA,OAAKd,UAAY,4CAEpBc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,kBAAiB1B,IAAU8B,KAAO,kBAAiB9B,IAAU0C,QAASjD,EAAWkB,MAAO,kBAAiBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,yCACjPc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,gIAAgI,cAAYoB,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,kBAAiB1B,IAAU8B,KAAO,kBAAiB9B,IAAU0C,QAASjD,EAAWkB,MAAO,kBAAiBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,2CACjPc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,6HAA6H,cAAYoB,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,iBAAiBG,MAAO,CAACU,MAAO,OAC3CC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,MAAK1B,IAAU8B,KAAO,MAAK9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,MAAKX,MAAa,EAAGyD,KAAM,EAAGC,IAAK,KAAMuJ,MAAO,MAG1J3L,EAAAA,EAAAA,eAAA,OAAKd,UAAY,+CAEbc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,MAAK1B,IAAU8B,KAAO,MAAK9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,MAAKX,MAAa,EAAGyD,KAAM,EAAGC,IAAK,KAAMuJ,MAAO,MAG1J3L,EAAAA,EAAAA,eAAA,UAAQI,IAAM,gBAAe1B,IAAU8B,KAAO,gBAAe9B,IAAUoI,QAjEjEoH,KAEV,MAAMR,EAAgB,IACfvP,EAAWkB,MACd,CAAE,MAAKX,KAAW,GAClB,CAAE,MAAKA,KAAW,GAClB,CAAE,MAAKA,KAAW,GAClB,CAAE,MAAKA,KAAW,IAGtByE,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,EAuDsCxO,UAAU,gDAEjGc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,MAAK1B,IAAU8B,KAAO,MAAK9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,MAAKX,MAAa,EAAGyD,KAAM,EAAGC,IAAK,KAAMuJ,MAAO,OAI9J3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WAAWG,MAAO,CAACU,MAAO,OACrCC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,MAAK1B,IAAU8B,KAAO,MAAK9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,MAAKX,MAAa,EAAGyD,KAAM,EAAGC,IAAK,KAAMuJ,MAAO,KAGzJjH,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,KAErD,E,iGCrFW,MAAMvF,UAAoBW,EAAAA,UACrCE,MAAAA,GAEI,MAAM,WAAC/F,EAAU,QAAE0C,EAAO,WAAE0B,EAAU,OAAE7D,EAAM,WAAEyE,GAAcuB,KAAK5C,MAC7DzD,EAAeC,OAAOD,aAAa8F,UAAU6J,OAC7Ce,EAAiB1Q,EAAa0Q,eAAehG,KAAI8E,IAASA,EAAInN,OAAU,GAAEhC,IAAiBmP,KAC3FmB,EAAmB3Q,EAAa2Q,iBAAiBjG,KAAI8E,IAASA,EAAInN,OAAU,GAAEhC,IAAiBmP,KAC/FoB,EAAmB5Q,EAAa4Q,iBAAiBlG,KAAI8E,IAASA,EAAInN,OAAU,GAAEhC,IAAiBmP,KAiB/FvM,EAAY7C,IAEd,IAAIiP,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,YAAa,WAEVC,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAC7DC,EAFQ,CAAC,UAAW,cAERF,MAAKC,GAAOpP,EAAOsH,aAAa,QAAQ/C,SAAS6K,KAG7DF,EAEID,EADAvP,EAAWkB,MAAO,mBAAkBX,KACpB,IAAIP,EAAWkB,MAAO,CAAE,YAAWX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,UAAShC,KAAWqP,SAAStP,EAAOiC,QAE5G,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,QAIzFoN,IAEDJ,EADAvP,EAAWkB,MAAO,mBAAkBX,KACpB,IAAIP,EAAWkB,MAAO,CAAE,UAASX,KAAWqP,SAAStP,EAAOiC,OAAQ,CAAE,aAAYhC,KAAWqP,SAAStP,EAAOiC,QAE7G,IAAIvC,EAAWkB,MAAO,CAAE,GAAEZ,EAAOsH,aAAa,WAAYgI,SAAStP,EAAOiC,SAKlGyC,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,EAIzD,OAAO1N,EAAAA,EAAAA,eAAA,OAAKd,UAAY,6CAEpBc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,mBAAkB1B,IAAU8B,KAAO,mBAAkB9B,IAAU0C,QAASjD,EAAWkB,MAAO,mBAAkBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,yCACpPc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,gIAAgI,cAAYoB,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,mBAAkB1B,IAAU8B,KAAO,mBAAkB9B,IAAU0C,QAASjD,EAAWkB,MAAO,mBAAkBX,KAAWgC,MAAO,OAAQC,SAAWlC,GAAW8D,EAAW9D,EAAQC,GAAc,IAAKU,KAAK,kBAAkBF,UAAU,2CACpPc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,6HAA6H,cAAYoB,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,iBAAiBG,MAAO,CAACU,MAAO,OAC3CC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,UAAS1B,IAAU8B,KAAO,UAAS9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,UAASX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAMuJ,MAAO,MAGzK3L,EAAAA,EAAAA,eAAA,OAAKd,UAAY,+CAEbc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,YAAW1B,IAAU8B,KAAO,YAAW9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,YAAWX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAMuJ,MAAO,MAG/K3L,EAAAA,EAAAA,eAAA,UAAQI,IAAM,iBAAgB1B,IAAU8B,KAAO,iBAAgB9B,IAAUoI,QAjEnEoH,KAEV,MAAMR,EAAgB,IACfvP,EAAWkB,MACd,CAAE,UAASX,KAAW,GACtB,CAAE,YAAWA,KAAW,GACxB,CAAE,UAASA,KAAW,GACtB,CAAE,aAAYA,KAAW,IAG7ByE,EAAW,IAAKhF,EAAY,MAASuP,GAAgB,EAuDwCxO,UAAU,gDAEnGc,EAAAA,EAAAA,eAAA,OAAKX,MAAO,CAACU,MAAO,OAChBC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,UAAS1B,IAAU8B,KAAO,UAAS9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,UAASX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAMuJ,MAAO,OAI7K3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WAAWG,MAAO,CAACU,MAAO,OACrCC,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,aAAY1B,IAAW8B,KAAO,aAAY9B,IAAUiC,SAAUW,EAAUZ,MAAOvC,EAAWkB,MAAO,aAAYX,MAAa,EAAGyD,KAAM,KAAMC,IAAK,KAAMuJ,MAAO,MAGnL3L,EAAAA,EAAAA,eAAA,OAAKd,UAAU,6CACXc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,WAAU1B,IAAU8B,KAAO,WAAU9B,IAAU+B,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,gBAAiB,cAAeI,MAAOvC,EAAWkB,MAAO,WAAUX,KAAWiC,SAAU4B,EAAY1B,QAASmO,MAExOhP,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,iBAAgB1B,IAAU8B,KAAO,UAAS9B,IAAU+B,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAOvC,EAAWkB,MAAO,UAASX,KAAWiC,SAAU4B,EAAY1B,QAASkO,MAE1O/O,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,kBAAiB1B,IAAU8B,KAAO,kBAAiB9B,IAAU+B,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,kBAAmB,cAAeI,MAAOvC,EAAWkB,MAAO,kBAAiBX,KAAWiC,SAAU4B,EAAY1B,QAASoO,MAGlQvK,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,KAErD,E,qHC9FW,MAAMvG,UAAkB2B,EAAAA,UACnCE,MAAAA,GAEI,MAAM7F,EAAeC,OAAOD,aAAa8F,UAAU6J,QAC7C,WAAC7P,EAAU,QAAE0C,EAAO,WAAE0B,EAAU,YAAEC,EAAW,OAAE0M,EAAM,aAAE5M,EAAY,cAAElE,GAAiBsG,KAAK5C,MAC3F9C,EAAY,IAGZmQ,EAAe9Q,EAAa8Q,aAC5BC,EAAkB/Q,EAAa+Q,gBAC/BC,EAAkBhR,EAAagR,gBAC/BC,EAAoBjR,EAAaiR,kBACjCC,EAAqBlR,EAAakR,mBAGxC,IAAIC,GAAkB,EACtB,MAAMC,EAAgB,CAAC,gBAAgB,kBAAkB,iBAAkB,kBAK3E,OAJoBtR,EAAWkB,OAAO0D,SAAW,IACrCuC,SAAQuI,GAAO4B,EAAczM,SAAS6K,GAAO2B,GAAkB,EAAyBA,KAG7FxP,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,KAEFyE,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,MAG3C/H,GAAWA,EAAQmC,SAAS,gBAC1BhD,EAAAA,EAAAA,eAAC0P,EAAAA,EAAW,CAACtP,IAAM,YAAWpB,IAAaqB,OAAOC,EAAAA,EAAAA,IAAG,aAAc,cAAeK,SAAU6B,EAAa9B,MAAOvC,EAAWwR,WAAW1K,QACxI,MAGApE,GAAWA,EAAQmC,SAAS,eAAchD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAExCD,EAAAA,EAAAA,eAAC+D,EAAAA,EAAgB,CAAC3D,IAAM,cAAapB,IACjCqF,cAAY6K,IAAUA,EAAOlM,SAAS,eACtCsB,UAAQ4K,IAAUA,EAAOlM,SAAS,WAClC3C,OAAOC,EAAAA,EAAAA,IAAG,aAAc,cAAeK,SAAU4B,EACjDnD,KAAMjB,EAAWkB,MAAMuQ,YAAYxQ,MAAQ,QAC3CsB,MAAOvC,EAAWkB,MAAMuQ,YAAYlP,OAAS,GAC7C0D,OAAQjG,EAAWkB,MAAMuQ,YAAYxL,QAAU,QAInDpE,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBAAoBG,MAAO,CAACwQ,WAAY,MAEnD7P,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACrB,UAAU,kBAAkBmB,MAAOlC,EAAWkB,MAAMyQ,QAAQxP,EAAAA,EAAAA,IAAG,UAAW,cAAc,KAAMF,IAAM,UAASpB,IAAawB,KAAK,SAASC,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeI,MAAOvC,EAAWkB,MAAMyQ,OAAQnP,SAAU4B,EAAY1B,QAAS0O,EAAmBQ,WAErR5R,EAAWkB,MAAMyQ,QAAS9P,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAC3BD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC1B,KAAK,iBAAiBH,OAAOC,EAAAA,EAAAA,IAAG,kBAAmB,cAAeI,MAAQqN,SAAS5P,EAAWkB,MAAM2Q,iBAAmB,GAAIrP,SAAU4B,MAEnJ,KAEyB,mBAA5BpE,EAAWkB,MAAMyQ,QAA8B9P,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAChDD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WAEXc,EAAAA,EAAAA,eAAC+D,EAAAA,EAAgB,CAAC3D,IAAM,sBAAqBpB,IACzCwF,YAAY,EACZnE,OAAOC,EAAAA,EAAAA,IAAG,qBAAsB,cAAgBK,SAAWD,GAAU4B,EAAa5B,EAAO,GAAI,QAAS,YAAavC,EAAYC,GAC/HgB,KAAMjB,EAAWkB,MAAM4Q,WAAW7Q,MAAQ,QAC1CsB,MAAOvC,EAAWkB,MAAM4Q,WAAWvP,OAAS,GAC5C0D,OAAQjG,EAAWkB,MAAM4Q,WAAW7L,QAAU,SAGlD,KAGmC,UAAtCjG,EAAWkB,MAAMuQ,YAAYxQ,MAAkBY,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAE5CD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACrB,UAAU,kBAAkBkB,IAAM,WAAUpB,IAAawB,KAAK,UAAUC,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAeI,MAAOvC,EAAWkB,MAAM,WAAYsB,SAAU4B,EAAY1B,QAAS0O,EAAmBW,UAGvNlQ,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACrB,UAAU,kBAAkBkB,IAAM,eAAcpB,IAAawB,KAAK,cAAcC,aAAaH,EAAAA,EAAAA,IAAG,WAAY,cAAeI,MAAOvC,EAAWkB,MAAM,eAAgBsB,SAAU4B,EAAY1B,QAAS0O,EAAmBY,cAGvOnQ,EAAAA,EAAAA,eAAA,OAAKd,UAAU,oBACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACrB,UAAU,kBAAkBkB,IAAM,aAAYpB,IAAawB,KAAK,YAAYC,aAAaH,EAAAA,EAAAA,IAAG,SAAU,cAAeI,MAAOvC,EAAWkB,MAAM,aAAcsB,SAAU4B,EAAY1B,QAAS0O,EAAmBa,WAG/NpQ,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACrB,UAAU,kBAAkBkB,IAAM,gBAAepB,IAAawB,KAAK,eAAeC,aAAaH,EAAAA,EAAAA,IAAG,YAAa,cAAeI,MAAOvC,EAAWkB,MAAM,gBAAiBsB,SAAU4B,EAAY1B,QAAS0O,EAAmBzC,eAG3O9M,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WACXc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACf,IAAM,YAAWpB,IAAawB,KAAO,WAAWE,MAAM,cAAcU,QAASjD,EAAWkB,MAAMgR,WAAY,EAAO1P,SAAWlC,GAAW8D,EAAW9D,EAAQC,QAAkB,IAAKU,KAAK,kBAAkBF,UAAU,UAASoB,EAAAA,EAAAA,IAAG,cAAe,iBAEhQ,OAER,MAGFO,GAAWA,EAAQmC,SAAS,YAAahD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACvCD,EAAAA,EAAAA,eAAA,OAAKd,UAAY,YAA6B,IAApBsQ,EAAyB,QAAQ,WACvDxP,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,UAAUC,aAAaH,EAAAA,EAAAA,IAAG,QAAS,cAAe8L,QAAQ,EAAM/L,OAAOC,EAAAA,EAAAA,IAAG,UAAW,cAAeI,MAAOvC,EAAWkB,MAAM0D,QAASpC,SAAU4B,EAAY1B,QAASuO,EAAiBjD,UAAU,EAAMjN,UAAU,sBAGjN,IAApBsQ,GAA2BxP,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACxBD,EAAAA,EAAAA,eAAA,OAAKd,UAAY,qBAEZf,EAAWkB,MAAM0D,SAASC,SAAS,kBAAmBhD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACnDD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,UAASpB,IAAawB,KAAK,SAASC,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAOvC,EAAWkB,MAAMiR,OAAQ3P,SAAU4B,EAAY1B,QAASsO,MAE1MnP,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,oBAAmBpB,IAAawB,KAAK,mBAAmBC,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,mBAAoB,cAAeI,MAAOvC,EAAWkB,MAAM,oBAAqBsB,SAAU4B,EAAY1B,QAASyO,MAEjP,KAGLnR,EAAWkB,MAAM0D,SAASC,SAAS,mBAAoBhD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACpDD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,WACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,UAAUC,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAe8L,QAAQ,EAAM/L,OAAOC,EAAAA,EAAAA,IAAG,qBAAsB,cAAeI,MAAOvC,EAAWkB,MAAMkR,QAAS5P,SAAU4B,EAAY1B,QAASwO,EAAiBlD,UAAU,EAAMjN,UAAU,sBAElP,KAGJf,EAAWkB,MAAM0D,SAASC,SAAS,mBAAoBhD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACpDD,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,WAAUpB,IAAawB,KAAK,UAAUC,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,oBAAqB,cAAeI,MAAOvC,EAAWkB,MAAMmR,QAAS7P,SAAU4B,EAAY1B,QAAS,CAC3M,CAAER,OAAOC,EAAAA,EAAAA,IAAG,OAAQ,cAAeI,MAAO,IAC1C,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,eAAgB,cAAeI,MAAO,cAClD,CAAEL,OAAOC,EAAAA,EAAAA,IAAG,gBAAiB,cAAeI,MAAO,2BAG3DV,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAAA,SAAOd,UAAU,wBAAuBoB,EAAAA,EAAAA,IAAG,QAAS,gBACpDN,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC9B,IAAM,gBAAgBI,KAAO,gBAAgBG,SAAU4B,EAAY7B,MAAOvC,EAAWkB,MAAO,kBAAmB,GAAI8C,IAAK,MAExI,OAEV,MACH,KAEb,E,iGC1IW,MAAMQ,UAAsBqB,EAAAA,UACvCE,MAAAA,GAEI,MAAM7F,EAAeC,OAAOD,aAAa8F,WACnC,WAAChG,EAAU,QAAE0C,EAAO,WAAE0B,EAAU,OAAE7D,GAAUgG,KAAK5C,MACjD2O,EAAc/R,EAAU,IAAGA,IAAW,GAGtCgS,EAAerS,EAAasR,WAAWgB,QACvCC,EAAkBvS,EAAasR,WAAWkB,WAC1CC,EAAezS,EAAasR,WAAWpB,QACvCwC,EAAgB1S,EAAasR,WAAWqB,SAGxCC,EAAa,CAAC,CAAE,MAAS,UAAY,MAAS,KAC9CC,EAAgB,GActB,OAXA7S,EAAa8S,YAAYC,WAAWrI,KAAIxB,IAEf,iBAAVA,EACP0J,EAAW1L,KAAK,CAAC,MAASgC,EAAM,MAAU,KAAIkJ,KAAelJ,OAE7D0J,EAAW1L,KAAK,CAAC,MAAU,IAAGgC,EAAKhB,QAAQ,IAAK,MAAO,MAAU,GAAEgB,IAAOkJ,MAC1ES,EAAc3L,KAAK,CAAC,MAAU,KAAIgC,EAAKhB,QAAQ,IAAK,MAAO,MAAU,UAASkK,KAAelJ,MACjG,KAIGvH,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,KAEFY,GAAWA,EAAQmC,SAAS,SAAUhD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAEnCD,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACH,IAAM,YAAWqQ,IAAevR,UAAU,QAAQsB,KAAO,OAAMiQ,IAAehQ,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,YAAa,cAAeI,MAAOvC,EAAWwR,WAAY,OAAMc,KAAgB9P,SAAU4B,EAAY1B,QAAS,IAAIoQ,KAAeC,GAAgB9E,QAAQ,KACxS,KAEJvL,EA8BO6D,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,MA9BzC5I,EAAAA,EAAAA,eAAA,OAAKd,UAAU,sBAEvBc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAO,SAASC,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAOvC,EAAWwR,WAAmB,OAAGhP,SAAU4B,EAAY1B,QAASkQ,MAG3L/Q,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAO,OAAMiQ,IAAehQ,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,YAAa,cAAeI,MAAOvC,EAAWwR,WAAY,OAAMc,KAAgB9P,SAAU4B,EAAY1B,QAAS,IAAIoQ,KAAeC,GAAgB9E,QAAQ,MAG5PpM,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,SAASC,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAOvC,EAAWwR,WAAW0B,OAAQ1Q,SAAU4B,EAAY1B,QAAS6P,MAGtL1Q,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,aAAaC,aAAaH,EAAAA,EAAAA,IAAG,UAAW,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAOvC,EAAWwR,WAAWkB,WAAYlQ,SAAU4B,EAAY1B,QAAS+P,MAG9L5Q,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACO,EAAAA,EAAY,CAACC,KAAK,cAAcC,aAAaH,EAAAA,EAAAA,IAAG,OAAQ,cAAeD,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeI,MAAOvC,EAAWkB,MAAM,eAAgBsB,SAAU4B,EAAY1B,QAASiQ,KAG1L3S,EAAWiB,MAAM4D,SAAS,UAAgC,SAApB7E,EAAWiB,MAAkBY,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACpED,EAAAA,EAAAA,eAAA,OAAKd,UAAU,cACXc,EAAAA,EAAAA,eAACkC,EAAAA,EAAY,CAAC7B,OAAOC,EAAAA,EAAAA,IAAG,cAAe,cAAeE,KAAO,MAAKiQ,IAAe9P,SAAU4B,EAAY7B,MAAOvC,EAAWwR,WAAY,MAAKc,MAAkB,EAAGtO,IAAK,EAAGC,IAAK,GAAIuJ,MAAO,MAEtL,KAEJjH,KAAK5C,MAAM8G,SAAWlE,KAAK5C,MAAM8G,SAAW,OAI/C/H,GAAWA,EAAQmC,SAAS,UAAWhD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAErCD,EAAAA,EAAAA,eAAA,SAAOd,UAAY,mCAAkCoB,EAAAA,EAAAA,IAAG,iBAAkB,gBAE1EN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,kBAEXc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,QAAOiQ,IAAerP,SAAUjD,EAAWwR,WAAY,QAAOc,MAAmE,KAAjDtS,EAAWwR,WAAY,QAAOc,KAAuB/P,MAAO,GAAIC,SAAU4B,EAAYnD,KAAK,eAAeF,UAAU,eACtNc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,iEAGpBc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,QAAOiQ,IAAerP,QAASjD,EAAWwR,WAAY,QAAOc,OAAoB,WAAUA,UAAoC/P,MAAQ,WAAU+P,UAAqB9P,SAAU4B,EAAYnD,KAAK,eAAeF,UAAU,eAC5Oc,EAAAA,EAAAA,eAAA,QAAMd,UAAY,oDAAoF,QAAjCQ,OAAOC,UAAU2R,YAAwB,OAAS,wBAG3HtR,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,QAAOiQ,IAAerP,QAASjD,EAAWwR,WAAY,QAAOc,OAAoB,WAAUA,YAAsC/P,MAAQ,WAAU+P,YAAuB9P,SAAU4B,EAAYnD,KAAK,eAAeF,UAAU,eAChPc,EAAAA,EAAAA,eAAA,QAAMd,UAAY,yEAGtBc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,QAAOiQ,IAAerP,QAASjD,EAAWwR,WAAY,QAAOc,OAAoB,WAAUA,WAAqC/P,MAAQ,WAAU+P,WAAsB9P,SAAU4B,EAAYnD,KAAK,eAAeF,UAAU,eAC9Oc,EAAAA,EAAAA,eAAA,QAAMd,UAAY,wEAGtBc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,QAAOiQ,IAAerP,QAASjD,EAAWwR,WAAY,QAAOc,OAAoB,WAAUA,QAAkC/P,MAAQ,WAAU+P,QAAmB9P,SAAU4B,EAAYnD,KAAK,eAAeF,UAAU,UACxOc,EAAAA,EAAAA,eAAA,QAAMd,UAAY,oDAAoF,QAAjCQ,OAAOC,UAAU2R,YAAwB,OAAS,yBAG9H,MACHzQ,GAAWA,EAAQmC,SAAS,WAAYhD,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MAEtCD,EAAAA,EAAAA,eAAA,SAAOd,UAAY,mCAAkCoB,EAAAA,EAAAA,IAAG,aAAc,gBAEtEN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,mBAEXc,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,gBAAgBY,QAASjD,EAAWwR,WAAY,iBAAiBjP,MAAO,gBAAiBC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAClKc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,0EAA0E,cAAYoB,EAAAA,EAAAA,IAAG,aAAa,kBAG1HN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,eAAeY,QAASjD,EAAWwR,WAAY,gBAAgBjP,MAAO,eAAgBC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAC/Jc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,qEAAqE,cAAYoB,EAAAA,EAAAA,IAAG,YAAY,kBAGpHN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,eAAeY,QAASjD,EAAWwR,WAAY,gBAAgBjP,MAAO,eAAgBC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAC/Jc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,0EAA0E,cAAYoB,EAAAA,EAAAA,IAAG,YAAY,kBAGzHN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,kBAAkBY,QAASjD,EAAWwR,WAAY,mBAAmBjP,MAAO,kBAAmBC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eACxKc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,8EAA8E,cAAYoB,EAAAA,EAAAA,IAAG,gBAAgB,kBAGjIN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,eAAeY,QAAmD,QAA1CjD,EAAWwR,WAAY,gBAA0BjP,MAAO,MAAOC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAChKc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,0EAA0E,cAAYoB,EAAAA,EAAAA,IAAG,MAAM,kBAGnHN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,eAAeY,QAAmD,QAA1CjD,EAAWwR,WAAY,gBAA0BjP,MAAO,MAAOC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAChKc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,8EAA8E,cAAYoB,EAAAA,EAAAA,IAAG,MAAM,kBAGvHN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,YAAYY,QAASjD,EAAWwR,WAAY,aAAajP,MAAO,YAAaC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eACtJc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,2EAA2E,cAAYoB,EAAAA,EAAAA,IAAG,SAAS,kBAGvHN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,eAAeY,QAASjD,EAAWwR,WAAY,gBAAgBjP,MAAO,eAAgBC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAC/Jc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,0EAA0E,cAAYoB,EAAAA,EAAAA,IAAG,YAAY,kBAGzHN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,eAAeY,QAASjD,EAAWwR,WAAY,gBAAgBjP,MAAO,eAAgBC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAC/Jc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,qEAAqE,cAAYoB,EAAAA,EAAAA,IAAG,gBAAgB,kBAGxHN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,gBAAgBY,QAASjD,EAAWwR,WAAY,iBAAiBjP,MAAO,gBAAiBC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAClKc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,sEAAsE,cAAYoB,EAAAA,EAAAA,IAAG,iBAAiB,kBAG1HN,EAAAA,EAAAA,eAACmB,EAAAA,EAAa,CAACX,KAAO,eAAeY,QAASjD,EAAWwR,WAAY,gBAAgBjP,MAAO,aAAcC,SAAU4B,EAAYnD,KAAK,kBAAkBF,UAAU,eAC7Jc,EAAAA,EAAAA,eAAA,QAAMd,UAAU,oFAAoF,cAAYoB,EAAAA,EAAAA,IAAG,kBAAkB,mBAG5I,KAEb,E,0DCjKW,MAAMa,UAAsB6C,EAAAA,UAEvCC,MAAQ,CAAC,EAETC,MAAAA,GAEI,MAAM,KAAC1D,EAAI,KAAEpB,EAAI,MAAEsB,EAAK,QAAEU,EAAO,SAAET,EAAQ,SAAEiI,EAAQ,SAAE2I,EAAQ,UAAErS,GAAawF,KAAK5C,MAQnF,IAAIjB,EAAW,8CACX1C,EAAa,CAACwC,SANAqK,GACPrK,EAASqK,EAAMvM,SAkB1B,OAVIS,IAAW2B,GAAY,IAAG3B,KAG9Bf,EAAWqT,eAAiBpQ,EAGxBmQ,IAAUpT,EAAWoT,UAAW,GAChC7Q,IAAOvC,EAAWuC,MAAQA,IAGtBV,EAAAA,EAAAA,eAAA,SAAOd,UAAW2B,EAAS,YAAWzB,GAAM4D,SAAS,UAAY,SAAW5D,EAAK4D,SAAS,UAAY,SAAW5D,IACrHY,EAAAA,EAAAA,eAAA,SAAOZ,KAAMA,GAAMmH,QAAQ,UAAU,IAAIA,QAAQ,UAAW,IAAK/F,KAAMA,KAAUrC,IAChFiB,GAAM4D,SAAS,WAAYhD,EAAAA,EAAAA,eAAA,QAAMd,UAAU,WAAmB,KAC9D0J,EAET,E,0DC1BW,SAASnG,EAAYX,GAEhC,MAAOpD,EAAQ+S,GAAa3P,EAAMY,IAAKgP,EAAAA,EAAAA,UAAS,OAAQA,EAAAA,EAAAA,UAAS,MAG3DC,EAAU,CACZC,KAAM,CAAC,KAAM,KAAM,KAAM,MACzB1L,QAAS,0BACTxD,GAAI,CAACtC,IAAI,SAAUW,OAAOT,EAAAA,EAAAA,IAAG,iBAAkB,eAC/CsC,GAAI,CAACxC,IAAI,SAAUW,OAAOT,EAAAA,EAAAA,IAAG,iBAAkB,eAC/CuC,GAAI,CAACzC,IAAI,SAAUW,OAAOT,EAAAA,EAAAA,IAAG,kBAAmB,eAChDwC,GAAI,CAAC1C,IAAI,UAAWW,OAAOT,EAAAA,EAAAA,IAAG,iBAAkB,gBAIpD,OACIN,EAAAA,EAAAA,eAAA,OAAKd,UAAU,eAEXc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,sEAAsEG,MAAO,CAAC,WAAY,IACpGsS,EAAQC,KAAK7I,KAAK8E,IACf,GAAI/L,EAAM+L,GACN,OAAO7N,EAAAA,EAAAA,eAAA,UAAQI,IAAKuR,EAAQ9D,GAAKzN,IAAK0G,QAASA,IAAM2K,EAAU5D,GAAM3O,UAAY,GAAEyS,EAAQzL,WAAWxH,IAAWmP,EAAM,cAAgB,gBAAgB8D,EAAQ9D,GAAKzN,MAAOW,MAAO4Q,EAAQ9D,GAAK9M,MAAO,eAAc8M,GACxN,MAIR7N,EAAAA,EAAAA,eAAA,OAAKd,UAAY,GAAER,aAAmBoD,EAAMpD,IAAWoD,EAAMpD,GAAQA,IAGjF,C,mEC9Be,MAAM2C,UAAsB2C,EAAAA,UACvCE,MAAAA,GAEI,MAAM,MAAE7D,EAAK,MAAEK,EAAK,KAAE6G,EAAI,KAAEnI,EAAI,SAAEkC,EAAQ,UAAEpC,GAAcwF,KAAK5C,MAGzD+P,EAAmB,+DACnBC,EAAmB,8DAGzB,OAAQ9R,EAAAA,EAAAA,eAAAC,EAAAA,SAAA,MACJD,EAAAA,EAAAA,eAAC+R,EAAAA,YAAW,CAACC,SAAW1Q,EAAWZ,MAAOA,EAAOwD,OAAQA,EAAE+N,WACnDjS,SAAAA,EAAAA,eAAA,OAAKd,UAAU,gBAAgB4H,QAASmL,GAEnC5R,GAAQL,EAAAA,EAAAA,eAAA,SAAOd,UAAU,QAAQmB,GAAiB,IAEnDL,EAAAA,EAAAA,eAAA,OAAKd,WAAcA,EAAa,GAAEA,IAAc,IAA/B,oBACH,UAATqI,GACGvH,EAAAA,EAAAA,eAAA,OAAKd,UAAU,8FAbnB0E,EAcUxE,GAAiB,UAATA,EAAsE0S,EAAxCpR,GAASoR,GAdjD9R,EAAAA,EAAAA,eAAA,OAAK4D,IAAKA,EAAKvE,MAAO,CAAC,UAAa,cAepCW,EAAAA,EAAAA,eAAA,QAAMI,IAAI,eAAelB,UAAU,4DAGvCc,EAAAA,EAAAA,eAAA,OAAKd,UAAU,wCAnBnB0E,KAAQ5D,EAAAA,EAAAA,eAAA,OAAK4D,IAAKA,EAAK1E,UAAU,uBAAuBG,MAAO,CAAC,SAAY,OAAQ,QAAW,WAoBlB6S,CAAnE9S,GAAiB,UAATA,EAAsEyS,EAAxCnR,GAASmR,IACjD7R,EAAAA,EAAAA,eAAA,QAAMI,IAAI,eAAelB,UAAU,gFAA+E,kBApB1H0E,KA0BV,IAId,E,uEC9CJuO,EAAOC,QAAU9T,OAAc,K,WCA/B6T,EAAOC,QAAU9T,OAAW,GAAY,Q,WCAxC6T,EAAOC,QAAU9T,OAAW,GAAe,W,WCA3C6T,EAAOC,QAAU9T,OAAW,GAAU,M,WCAtC6T,EAAOC,QAAU9T,OAAW,GAAc,U,WCA1C6T,EAAOC,QAAU9T,OAAW,GAAQ,I,WCApC6T,EAAOC,QAAU9T,OAAW,GAAW,O,WCAvC6T,EAAOC,QAAU9T,OAAW,GAAQ,I,otBCChC+T,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaJ,QAGrB,IAAID,EAASE,EAAyBE,GAAY,CAGjDH,QAAS,CAAC,GAOX,OAHAM,EAAoBH,GAAUJ,EAAQA,EAAOC,QAASE,GAG/CH,EAAOC,OACf,CCrBAE,EAAoBK,EAAKR,IACxB,IAAIS,EAAST,GAAUA,EAAOU,WAC7B,IAAOV,EAAiB,QACxB,IAAM,EAEP,OADAG,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACV,EAASY,KACjC,IAAI,IAAI5S,KAAO4S,EACXV,EAAoBW,EAAED,EAAY5S,KAASkS,EAAoBW,EAAEb,EAAShS,IAC5E8K,OAAOgI,eAAed,EAAShS,EAAK,CAAE+S,YAAY,EAAMC,IAAKJ,EAAW5S,IAE1E,ECNDkS,EAAoBe,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO5O,MAAQ,IAAI6O,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXlV,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBgU,EAAoBW,EAAI,CAACQ,EAAKC,IAAUxI,OAAOyI,UAAUC,eAAeC,KAAKJ,EAAKC,G,MCAlF,IAAII,EACAxB,EAAoBe,EAAEU,gBAAeD,EAAYxB,EAAoBe,EAAEW,SAAW,IACtF,IAAIrU,EAAW2S,EAAoBe,EAAE1T,SACrC,IAAKmU,GAAanU,IACbA,EAASsU,gBACZH,EAAYnU,EAASsU,cAAcrQ,MAC/BkQ,GAAW,CACf,IAAII,EAAUvU,EAASwU,qBAAqB,UAC5C,GAAGD,EAAQ7N,OAEV,IADA,IAAI+N,EAAIF,EAAQ7N,OAAS,EAClB+N,GAAK,IAAMN,GAAWA,EAAYI,EAAQE,KAAKxQ,GAExD,CAID,IAAKkQ,EAAW,MAAM,IAAIO,MAAM,yDAChCP,EAAYA,EAAUvN,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF+L,EAAoBgC,EAAIR,EAAY,Q,gECJpCS,EAAAA,EAAAA,mBAAkBC,EAAU,CACxBlV,MAAOU,EAAAA,EAAAA,eAAA,OAAKyU,KAAK,OAAOC,QAAQ,cAAY1U,EAAAA,EAAAA,eAAA,QAAMyU,KAAK,UAAU3B,EAAE,qSAGnE6B,KAAOzW,EAAAA,EAGP0W,KAAOA,EAAGzW,iBAEN,MAGMU,GAAcN,EAHID,OAAOD,aAAaE,iBAGR,CAACJ,WAAYA,EAAYW,WAAYC,EAAAA,cAAc6V,OAAQC,QAAQ,IACjG/V,EAAaD,EAAYC,WACzBgW,EAAU3W,EAAWkB,MAAMmC,OAAU,IAAM,IAIjD1C,EAAWI,WAAc,gCACzBJ,EAAWI,WAAc,IAAGL,EAAYM,UAAUD,YAC9Cf,EAAWkB,MAAMmC,SAAQ1C,EAAWiW,KAAO5W,EAAWkB,MAAMkC,KAAO,KAC/C,SAApBpD,EAAWiB,MAAoBjB,EAAWkB,MAAMC,OAAMR,EAAWI,WAAc,iBAEnF,MAAMK,EAAY,CACdC,OAAQrB,EAAWkB,MAAMI,WAAaC,OAAOC,UAAUC,MAAMzB,EAAWkB,MAAMI,YAAcC,OAAOC,UAAUC,MAAM,IACnHC,WAAY1B,EAAWkB,MAAMI,WAAaC,OAAOC,UAAUC,MAAMzB,EAAWkB,MAAMI,YAAcC,OAAOC,UAAUC,MAAM,KAQ3H,OALKzB,EAAWkB,MAAMS,YAClBP,EAAUQ,MAAQ5B,EAAWkB,MAAMI,WAAaC,OAAOC,UAAUC,MAAMzB,EAAWkB,MAAMI,YAAcC,OAAOC,UAAUC,MAAM,MAIzHI,EAAAA,EAAAA,eAAC8U,EAAO,IAAKhW,EAAYO,MAAOE,GAAgC,WAApBpB,EAAWiB,MAC3DY,EAAAA,EAAAA,eAAA,OAAK8D,IAAI,OAAO5E,UAAU,QAAQ0E,IAAKzF,EAAWkB,MAAMC,MAAM0D,SAAS,QAAU7E,EAAWkB,MAAMC,KAnBxF,2CAoBZ,KAAe,G","sources":["webpack://pds-blocks-pro/./src/blocks/icon-element/edit.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dynamic-url.js","webpack://pds-blocks-pro/./src/blocks/px-controls/icons.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/border.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/effects.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/margin.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/padding.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/position.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"data\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/icon-element/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport {PanelBody, ToolbarGroup} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps, __experimentalLinkControlSearchInput as LinkControlSearchInput} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport PhenixIcons from '../px-controls/icons';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixSelect from '../px-controls/select';\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport MediaUploader from '../px-controls/uploader';\r\nimport OptionControl from '../px-controls/switch';\r\nimport SuggestionsUrl from \"../px-controls/dynamic-url\";\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport PaddingSet from '../px-controls/sets/padding';\r\nimport MarginSet from '../px-controls/sets/margin';\r\nimport PositionSet from '../px-controls/sets/position';\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport EffectsSet from '../px-controls/sets/effects';\r\nimport BorderSet from '../px-controls/sets/border';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {    \r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n    const OptionsRenderer = PhenixBlocks.OptionsRenderer;\r\n\r\n    //==> Set Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_url = value => PhenixBlocks.setObject(value, \"\", \"style\", \"url\", attributes, setAttributes);\r\n    const set_icon = value => PhenixBlocks.setObject(`${value.type} ${value.value}`, \"\", \"style\", \"icon\", attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_icon_img = value => PhenixBlocks.setObject(value.url, \"\", \"style\", \"icon\", attributes, setAttributes);\r\n    const set_typography = (target, screen) => PhenixBlocks.setObject(target, screen, \"typography\", false, attributes, setAttributes);\r\n    \r\n    const types_options = [\r\n        { \"label\": \"FontAwesome\", \"value\": \"font\"},\r\n        { \"label\": \"Icon Image\", \"value\": \"custom\"},\r\n    ];\r\n\r\n    //===> Get Block Properties <===//\r\n    const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps()});\r\n    const blockProps = renderProps.blockProps;\r\n    const uniqueKey = blockProps.id;\r\n    let iconURl = \"https://via.placeholder.com/50x50.webp\";\r\n    \r\n    //===> Set Default Values <===//\r\n    blockProps.className += ` tx-align-center inline-block`;\r\n    blockProps.className += ` ${renderProps.container.className}`;\r\n    if (attributes.type === \"font\" && !attributes.style.icon) blockProps.className += ` far fa-icons`;\r\n\r\n    const iconStyle = {\r\n        height: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42),\r\n        lineHeight: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42)\r\n    }\r\n\r\n    if (!attributes.style.freeWidth) {\r\n        iconStyle.width = attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42);\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip-bottom w-150' data-title={__(\"Text Type\", \"pds-blocks\")}>\r\n                    <PhenixSelect name=\"type\" placeholder={__(\"FontAwesome\", \"pds-blocks\")} className={`tx-align-center weight-medium`} value={attributes.type} onChange={set_value} options={types_options} />\r\n                </div>\r\n                {/*===> Icon Control <===*/}\r\n                {attributes.type === \"font\" ? \r\n                    <PxDropDown title={__(\"Change Icon\", \"pds-blocks\")} button={`bg-transparent fs-16 square ${attributes.style?.icon || \"far fa-icons\"} divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"icons\" className='pd-10'>\r\n                            {/*===> Icon Selector <===*/}\r\n                            <PhenixIcons key={`icon-${uniqueKey}`} value={ attributes.style?.icon || \"far fa-icons\" } onChange={set_icon} />\r\n                            {/*===> Option Control <===*/}\r\n                            <OptionControl key={`icon-large-${uniqueKey}`} name={`icon-large`} value=\"icon-lg\" checked={attributes.style['icon-large'] || false} onChange={set_style} type='switch-checkbox' className='tiny mt-5'>{__(\"Large icon\", \"pds-blocks\")}</OptionControl>\r\n                        </li>\r\n                    </PxDropDown>\r\n                    :\r\n                    <PxDropDown title={__(\"Change Icon\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-image divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"icons\" className='pd-10'>\r\n                            {/*===> Icon Uploader <===*/}\r\n                            <MediaUploader label={__(\"Upload Icon\",\"pds-blocks\")} value={attributes.style?.icon} setValue={set_icon_img}></MediaUploader>\r\n                            {/*===> Option Control <===*/}\r\n                            <OptionControl key={`icon-large-${uniqueKey}`} name={`freeWidth`} value=\"boolean\" checked={attributes.style.freeWidth} onChange={set_style} type='switch-checkbox' className='tiny mt-5'>{__(\"Free Width\", \"pds-blocks\")}</OptionControl>\r\n                        </li>\r\n                    </PxDropDown>\r\n                }\r\n\r\n                {/*===> Link Input <===*/}\r\n                {attributes.style.isLink ? <PxDropDown title={__(\"URL Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-link color-success divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-260\" >\r\n                    <li key=\"link\" className='pdx-15 pdt-10 pdb-0 mb-0'>\r\n                        <LinkControlSearchInput key={`url-${uniqueKey}`} name=\"url\" placeholder={__(\"URL or Page Name\", \"pds-blocks\")} onChange={set_url} value={ attributes.style.url || \"#\" } allowDirectEntry={false} withURLSuggestion={false} withCreateSuggestion={false} renderSuggestions={(props) => SuggestionsUrl(props)} />\r\n                        {/*===> Option Control <===*/}\r\n                        <OptionControl key={`inNewTab-${uniqueKey}`} name={`inNewTab`} value={`boolean`} checked={attributes.style.inNewTab} onChange={set_style} type='checkbox' className='tiny me-15'>\r\n                            <span className='fas fa-check radius-circle'>{__(\"Open in New Tab\", \"pds-blocks\")}</span>\r\n                        </OptionControl>\r\n                        {/*===> Disable Button <===*/}\r\n                        <div className='fluid' style={{paddingBottom: 3}}>\r\n                            <OptionControl key={`isLink-${uniqueKey}`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Disable URL Link\", \"pds-blocks\")}</span>\r\n                            </OptionControl>\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown> :\r\n                /*===> Add Link <===*/\r\n                <OptionControl key={`isLink-${uniqueKey}`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='button-checkbox' className='inline-block'>\r\n                    <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-link' data-title={__(\"Convert to Link\", \"pds-blocks\")}></span>\r\n                </OptionControl>}\r\n\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Style Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-adjust divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-15 pdx-15 lineheight-150'>\r\n                        {/*===> Icon Size <===*/}\r\n                        <PhenixNumber name={\"dimensions\"} icon=\"far fa-arrows\" className=\"mb-15\" min={42} max={512} value={attributes.style.dimensions || 42} onChange={set_style} />\r\n\r\n                        {/*===> Styles <===*/}\r\n                        <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"text-colors, background\" />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Typography Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-font divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-typography\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <TypographySet key={`typography-${uniqueKey}`} attributes={attributes} mainSetter={set_typography} options=\"size, other\" />}\r\n                            md={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                            lg={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                            xl={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-animations') ?\r\n                    <PxDropDown title={__(\"Animation Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-atom-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-animations\" className='pdt-15 pdx-15 lineheight-150'>\r\n                            {/*===> Animations <===*/}\r\n                            <AnimationsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-padding') ?\r\n                    <PxDropDown title={__(\"Padding Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-outer divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-padding\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-margin') ?\r\n                    <PxDropDown title={__(\"Margin Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square fal fa-arrows-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-position') ?\r\n                    <PxDropDown title={__(\"Position Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-to-dot divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-border') ?\r\n                    <PxDropDown title={__(\"Border Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-all divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            {/*===> Border Size <===*/}\r\n                            <ScreensTabs\r\n                                sm={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-effects') ?\r\n                    <PxDropDown title={__(\"Effects Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-backpack divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <EffectsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\" initialOpen={true}>\r\n                {/*===> Styles Options <===*/}\r\n                <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"support\" />\r\n            </PanelBody>\r\n        </InspectorControls>\r\n        {/*===> Modal Component <===*/}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> :\r\n            <i {...blockProps} key={`${uniqueKey}`} style={iconStyle}>\r\n                {attributes.type === \"custom\" ? <img alt=\"icon\" className='fluid' src={attributes.style.icon?.includes(\"http\") ? attributes.style.icon : iconURl} />\r\n            : null}</i>\r\n        }\r\n    </>);\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\nimport { select } from '@wordpress/data';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {}\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Get Data <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        //===> Properties <===//\r\n        const {type, value, label, rotate, colorsOnly, onlyCG, isSmall, placeholder, onChange, customOnly, cover} = this.props;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n        const customGradientsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            //===> Default and User Custom <===//\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            if (!colorsOnly) {\r\n                editorColors.gradients?.default?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n                editorColors.gradients?.custom?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n            }\r\n        }\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: type,\r\n            rotate: rotate,\r\n            value: value || \"\",\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_type = type => {\r\n            //===> Set Value <===//\r\n            options.type = type;\r\n\r\n            //===> change value <===//\r\n            if (options.type === 'image') {options.value = PhenixBlocks.palette.placeholder;} \r\n            else {options.value = \"\";}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_rotate = rotate => {\r\n            //===> Set Value <===//\r\n            options.rotate = rotate;\r\n            //===> change value <===//\r\n            if (options.type !== 'gradient') options.value = \"\";\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button?.getAttribute('data-value');\r\n\r\n            //===> Colors & Gradients <===//\r\n            if (type !== 'image' && type !== \"video\") {options.value = value;}\r\n            //===> Image Type <===//\r\n            else {options.value = clicked.url;}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Cover <===//\r\n        const setCover = clicked => {\r\n            //===> Set value <===//\r\n            options.cover = clicked.url;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = name,\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace('--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setBackground,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {\"width\":\"30px\",\"height\":\"16px\", backgroundColor: name.includes('var(') && !name.includes('--gradient') ? name : null, backgroundImage: name.includes('--wp--preset--gradient') ? name : null},\r\n                    \"className\":`${isColor && !name.includes('var') ? name : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"} ${classes?classes:\"\"}`\r\n                }\r\n\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                }\r\n            }\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        {type !== \"image\" && type !== \"video\" ? <>\r\n                            <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\", backgroundColor: value.includes('--wp--preset--color') ? value : null, backgroundImage: value.includes('--wp--preset--gradient') ? value : null}}></span>\r\n                            <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                        </> : <>\r\n                        <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                            <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                        </>}\r\n                        {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    {!colorsOnly && !onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'image',   value: 'image' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                            { label: 'video',   value: 'video' },\r\n                        ]}/>\r\n                    : onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                        ]}/>\r\n                    : null}\r\n                </div>\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox flow-columns options-list ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pdy-15 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    {type === \"image\" || type === \"video\" ? <>\r\n                        <MediaUploader key=\"upload-file\" size=\"small\" label={`${type === \"video\" ? \"Video File\" : \"Image File\"}`} value={!value || type === \"video\" ? PhenixBlocks.palette.placeholder : value} setValue={setBackground}></MediaUploader>\r\n\r\n                        {type === \"video\" ? <MediaUploader label=\"Cover File\" key=\"upload-cover-file\" size=\"small\" value={!cover ? PhenixBlocks.palette.placeholder : cover} setValue={setCover}></MediaUploader> : null}\r\n                    </> : null}\r\n                    {/*===> Colors Set <====*/}\r\n                    <div className='flexbox' style={{\"gap\": \"0.75rem\"}}>\r\n                        {type === \"color\" ? <>\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].main, \"radius-xxl\")}\r\n\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-10 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                            {customColorsList.length > 0 ? <>\r\n                                <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                    {__(\"Custom Colors\", \"pds-blocks\")}\r\n                                </label>\r\n                                {makeButtons(customColorsList, \"radius-xxl\")}\r\n                            </>:null}\r\n\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Dark Alpha\", \"pds-blocks\")}</label>\r\n                            <div className='pd-5 radius-sm bg-white fluid flexbox align-between'>\r\n                                {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].darkAlpha, \"\")}\r\n                            </div>\r\n\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Light Alpha\", \"pds-blocks\")}</label>\r\n                            <div className='pd-5 radius-sm bg-dark fluid flexbox align-between'>\r\n                                {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].lightAlpha, \"\")}\r\n                            </div>\r\n\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].status, \"radius-xxl\")}\r\n                            {!customOnly ? <> \r\n                                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Offwhite Colors\", \"pds-blocks\")}</label>\r\n                                {makeButtons(PhenixBlocks.palette.colors.offwhite, \"radius-xxl\")}\r\n                            </>:null}\r\n\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].brands, \"radius-xxl\")}\r\n                        </>\r\n                        : type === \"gradient\" ? <>\r\n                            {!customOnly ? <> \r\n                                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Phenix Gradients\", \"pds-blocks\")}</label>\r\n                                {makeButtons(PhenixBlocks.palette.gradients, \"radius-xxl\")}\r\n                            </>:null}\r\n\r\n                            {customGradientsList.length > 0 ? <>\r\n                                <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                    {__(\"Custom Gradients\", \"pds-blocks\")}\r\n                                </label>\r\n                                {makeButtons(customGradientsList, \"radius-xxl\")}\r\n                            </>:null}\r\n                        </>:\r\n                        null}\r\n                    </div>\r\n                </div>\r\n                {/*===> Rotation Select <===*/}\r\n                {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                    <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                    <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                        { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                        { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                        { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                        { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                        { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                        { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                        { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                        { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                        { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                    ]}/>\r\n                </div> : null}\r\n                {/*===> Rotation Select <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {value, label, isSmall, placeholder, onChange} = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = window.PhenixBlocks.dataLists.paletteText;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n\r\n        //===> Set Color <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = list[index],\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else {\r\n                    title = \"Reset\";\r\n                }\r\n\r\n                //===> Button Attributes <====//\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setColor,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {width: \"30px\", height:\"16px\", backgroundColor: name.includes('var') ? name : null},\r\n                    \"className\": `${isColor && !name.includes('var') ? name.replace('color-','bg-') : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : null}  ${classes?classes:\"\"}`,\r\n                };\r\n\r\n                //===> Push the Button <===//\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel  = Phenix(button).next(\".options-list\");\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                \r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Trigger <===*/}\r\n                <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                    <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value.replace(\"color-\",\"bg-\") : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\", backgroundColor: value && value.includes('var') ? value : null}}></span>\r\n                    <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                    {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n                </button>\r\n                {/*===> Panel <===*/}\r\n                <div className='flexbox px-scrollbar overflow-y-auto options-list pdb-20 pdt-10 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12`}>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.main, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                    {customColorsList.length > 0 ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                            {__(\"Custom Colors\", \"pds-blocks\")}\r\n                        </label>\r\n                        {makeButtons(customColorsList, \"radius-xxl\")}\r\n                    </>:null}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.status, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.social, \"radius-xxl\")}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PxDropDown extends Component {\r\n    //===> States <===//\r\n    state = {opened:false};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            button,\r\n            support,\r\n            dropList,\r\n            children,\r\n            className,\r\n            dataPosition,\r\n            title,\r\n        } = this.props;\r\n\r\n        const attributes = {};\r\n\r\n        if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n        if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n        if (this.props.key) attributes.key = this.props.key;\r\n\r\n        //===> Render Component <===//\r\n        return (<>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </>)\r\n    }\r\n}","//===> Get Dynamic URL Suggestions <====//\r\nconst SuggestionsUrl = (props) => (\r\n    <ul className=\"fluid reset-list bg-white bx-shadow-dp-1 border-1 border-solid border-alpha-10 z-index-dropdown position-ab pos-start-0 pos-after-y\">\r\n        {props.suggestions.map((suggestion, index) => {\r\n            return (<li key={`link-sug-key-${index}`} className=\"pdx-15 pdy-5 fs-12 divider-b mouse-pointer\" onClick={() => props.handleSuggestionClick(suggestion)}>\r\n                <strong>{suggestion.title}</strong>\r\n                <span className='display-block fs-10 color-primary tx-nowrap'>{suggestion.url}</span>\r\n            </li>)\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default SuggestionsUrl;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Icons <===//\r\nexport default class PhenixIcons extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        icons_page : 1,\r\n        icon_type  : \"far\",\r\n        icon_name  : \"fa-icons\",\r\n        icons_file : \"fa6-pro.json\",\r\n        icons_list : [],\r\n        icons_pages: {},\r\n\r\n        icons_types : [\r\n            { value: 'fab', label: 'Brands' },\r\n\r\n            { value: 'fat', label: 'Thin' },\r\n            { value: 'fal', label: 'Light' },\r\n            { value: 'far', label: 'Regular' },\r\n            { value: 'fas', label: 'Solid' },\r\n            { value: 'fad', label: 'Duotone' },\r\n\r\n            { value: 'fast', label: 'Sharp Thin' },\r\n            { value: 'fasl', label: 'Sharp Light' },\r\n            { value: 'fass', label: 'Sharp Solid' },\r\n            { value: 'fasr', label: 'Sharp Regular' },\r\n        ],\r\n\r\n        icons_version : \"fa6\",\r\n        return_type: null\r\n    };\r\n\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        apiFetch({ path: \"pds-blocks/v2/options\" }).then((options) => {\r\n            //===> Get Icons Data <===//\r\n            let icons_pages = this.state.icons_pages,\r\n                icons_version = this.state.icons_version,\r\n                icons_file = this.state.icons_file,\r\n                icon_type = this.state.icon_type,\r\n                icon_name = this.state.icon_name,\r\n                icons_list = this.state.icons_list;\r\n\r\n            //===> Get Icons Version <===//\r\n            if (options.pds_icon_font) {\r\n                icons_version = options.pds_icon_font.replace(\"fontawesome-\", \"fa\").replace(\"-free\",\"\").replace(\"-pro\",\"\");\r\n            }\r\n\r\n            //===> Define FontAwesome Icons File <===//\r\n            if (this.props.value.includes(\"fab\")) {\r\n                icons_file = `${icons_version}-brands.json`;\r\n            } else {\r\n                icons_file = `${icons_version}-pro.json`;\r\n            }\r\n\r\n            //===> FontAwesome Version Correct <===//\r\n            if(icons_version.includes(\"6\")) icons_file = icons_file.replace(\"5\", \"6\");\r\n\r\n            //===> Set Icon Type <===//\r\n            const icon_value = this.props.value.split(\" \");\r\n\r\n            //===> Reset Icons List <===//\r\n            if (icon_type.includes('fab') && !icon_value[0].includes('fab')) icons_list = [];\r\n\r\n            //===> Set Icon Type <===//\r\n            icon_name = icon_value[1];\r\n            icon_type = icon_value[0];\r\n\r\n            //===> Start Fetching <===//\r\n            if (icons_list.length < 1) {\r\n                fetch(`${PDS_WP_KEY.json}/${icons_file}`).then((res) => res.json()).then((json) => {\r\n                    //===> Assign Icons List <===//\r\n                    if (json.icons !== icons_list) icons_list = json.icons;\r\n                    //===> Divide List into Pages <===//\r\n                    for(let item = 0; item < icons_list.length; item += 200) {\r\n                        //===> Define Page Number <===//\r\n                        let pageNumber = Math.floor(item / 200) + 1;\r\n                        //===> Add item to Pages Object <===//\r\n                        icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                    }\r\n                    //===> Update State <===//\r\n                    this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n                });\r\n            } else {\r\n                //===> Divide List into Pages <===//\r\n                for(let item = 0; item < icons_list.length; item += 200) {\r\n                    //===> Define Page Number <===//\r\n                    let pageNumber = Math.floor(item / 200) + 1;\r\n                    //===> Add item to Pages Object <===//\r\n                    icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                }\r\n                //===> Update State <===//\r\n                this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n            }\r\n        });\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, version, onChange } = this.props;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: value.split(\" \")[0],\r\n            value: value.split(\" \")[1],\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_value = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                theValue  = button?.getAttribute('data-value');\r\n\r\n            //===> Set Value <===//\r\n            options.value = theValue;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        const set_type = value => {\r\n            //===> Set Value <===//\r\n            options.type = value;\r\n\r\n            //===> Switched to Brand <===//\r\n            if (value === \"fab\" && !this.props.value.includes('fab')) options.value = \"fa-wordpress\";\r\n\r\n            //===> Switched from Brand <===//\r\n            if (this.props.value.includes('fab') && value !== \"fab\") options.value = \"fa-icons\";\r\n\r\n            //===> Return Options <===//\r\n            this.setState({icon_type: value, icons_list: [], icons_pages: {}, icons_page: 1, icon_name: options.value}, () => {\r\n                return onChange(options);\r\n            });\r\n        };\r\n\r\n        //===> Traveling Buttons <===//\r\n        const travelingButton = (event) => {\r\n            //===> Get the icons List Wrapper <====//\r\n            let element = event.target,\r\n                travelType = element.getAttribute('data-travel');\r\n\r\n            //===> Get Next Page <===//\r\n            if (travelType === 'next') {\r\n                //===> Exit if Last Page <===//\r\n                if (this.state.icons_page === Object.keys(this.state.icons_pages).length) return;\r\n                //===> Go to Next Page <===//\r\n                this.setState({icons_page: this.state.icons_page + 1});\r\n            }\r\n\r\n            //===> Get Previous Page <===//\r\n            else if (travelType === 'previous') {\r\n                //===> Exit if First Page <===//\r\n                if (this.state.icons_page === 1) return;\r\n\r\n                //===> Go to Previous Page <===//\r\n                this.setState({icons_page: this.state.icons_page - 1});\r\n            }\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            //===> Exit if has no items <===//\r\n            if (!list || list.length < 1) return;\r\n\r\n            //===> Define Data <===//\r\n            let buttonsList  = [],\r\n                buttonsStyle = {\"fontSize\": \"20px\", \"lineHeight\": \"32px\", \"width\":\"32px\", \"height\":\"32px\", \"borderRadius\": \"3px\", \"padding\": 0},\r\n                buttonItem = (item) => {\r\n                    return <button key={`${item}`} onClick={set_value} title={item} data-value={item} className={`reset-button icon-btn-item ${type} ${item} ${this.state.icon_name === item?'px-active bg-offwhite-primary':\"\"}`} style={buttonsStyle}></button>;\r\n                };\r\n\r\n            //===> Create Buttons <===//\r\n            list.forEach((item) => buttonsList.push(buttonItem(item)));\r\n\r\n            //===> Return Buttons <===//\r\n            return buttonsList;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n            }\r\n        };\r\n\r\n        //===> Search in icons <===//\r\n        const iconsFilter = changed => {\r\n            //===> Define Data <===//\r\n            let input = changed.target,\r\n                icons_list = this.state.icons_list,\r\n                value = input.value;\r\n\r\n            //===> Find the searched icon and remove the reset <===//\r\n            let searchedList = icons_list.filter(icon => icon.includes(value));\r\n            \r\n            //===> Set the New List <===//\r\n            if (value.length > 0)  this.setState({icons_list: searchedList, icons_page: 1, icons_pages: {}});\r\n            else this.setState({icons_list: [], icons_page: 1, icons_pages: {}});\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`px-gb-component position-rv mb-10 px-icons-selector ${!label?'pdt-10':''}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label?<label className='mb-10 tx-UpperCase fs-13'>{label}</label>:null}\r\n\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col-6 w-max-150 fs-13 h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        <span className={`col tx-nowrap pde-5`} style={{\"lineHeight\": \"20px\"}}>\r\n                            <span className={`pds-icon-preview inline-block me-5 radius-circle bg-alpha-05 ${this.props.value} position-rv`}></span>\r\n                            {__(\"Replace\", \"pds-blocks\")}\r\n                        </span>\r\n                        <i className='fas fa-pencil fs-12 color-gray'></i>\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    <PhenixSelect key={`icons-type`} name=\"icons-type\" className=\"col-6\" value={value.split(\" \")[0]} onChange={(target) => set_type(target.value)} options={this.state.icons_types} />\r\n                </div>\r\n\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox align-center tx-align-center options-list pdb-15 pdt-5 bg-white border-1 border-solid border-alpha-25 radius-md radius-bottom hidden fluid`}>\r\n                    <input name=\"pds-icons-search\" className='reset-input pdy-5 fs-12 divider-b fluid tx-align-center' onChange={iconsFilter} placeholder={__(\"Search in icons\", \"pds-blocks\")} />\r\n                    {/*===> Buttons List <===*/}\r\n                    <div className=\"bg-alpha-05 fluid pdx-15 pdy-10 icons-listing align-center flexbox px-scrollbar overflow-y-auto mb-10 divider-y\" style={{gap:\"10px\", maxHeight: \"220px\"}}>\r\n                        {this.state.icons_list.length > 0 ? \r\n                            makeButtons(this.state.icons_pages[this.state.icons_page], this.state.icon_type) : \"No Icons Found.\"\r\n                        }\r\n                    </div>\r\n                    {/*===> Pagination <===*/}\r\n                    <div className='fluid flexbox align-between align-center-y pagination-btns pdx-15'>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"next\" className=\"btn tiny fs-12 radius-sm primary\">{__(\"Next\", \"pds-blocks\")}</button> \r\n                        <span className=\"fs-14 weight-medium\">{this.state.icons_page}/{Object.keys(this.state.icons_pages).length}</span>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"previous\" className=\"btn tiny fs-12 radius-sm gray\">{__(\"Previous\", \"pds-blocks\")}</button> \r\n                    </div>\r\n                    {/*===> // Pagination <===*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseFloat(min) || 0,\r\n                  maxNum  = parseFloat(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseFloat(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseFloat(max) || 9999999,\r\n                step    = steps ? parseFloat(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseFloat(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixSelect extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    //===> Component Rendered when Props Change <===//\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return (nextProps.value !== this.props.value || nextProps.options !== this.props.options);\r\n    // }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = this.props;\r\n        const uniqueKey = `pds-select-controller`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {onChange: setValue};\r\n\r\n        //===> add Options <===//\r\n        if (search) attributes['data-search'] = 1;\r\n        if (multiple) attributes.multiple = multiple;\r\n        if (placeholder) attributes['data-placeholder'] = placeholder;\r\n\r\n        //===> Get Options List <===//\r\n        let options_list = [];\r\n\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal Lost of Options <===//\r\n            options.forEach(item => {\r\n                options_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            options_list = options;\r\n        } else{\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                options_list.push(options_group);\r\n            });\r\n        }\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n            {/*===> Control Element <===*/}\r\n            <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n                <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = PhenixBlocks.animations.entrance;\r\n        const exit_animations = PhenixBlocks.animations.exit;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                {attributes.style?.animation?.hasExit ?\r\n                    <div className='col-12 mb-5'>\r\n                        <PhenixSelect name=\"exit\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Exit Animation\", \"pds-blocks\")} value={attributes.style?.animation?.exit} onChange={mainSetter} options={exit_animations} />\r\n                    </div>\r\n                :null}\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-inset\" label={__(\"Inset\", \"pds-blocks\")} value={attributes.style?.animation?.inset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: null}\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-7 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`hasExit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> .End Columns. <===*/}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Component <===//\r\nexport default class BorderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter, objectSetter, setAttributes} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks;\r\n\r\n        //===> Reset border <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`border-top${screen}`]: \"\",\r\n                [`border-start${screen}`]: \"\",\r\n                [`border-end${screen}`]: \"\",\r\n                [`border-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"border-start\", \"border-end\"],\r\n                propY = [\"border-top\", \"border-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-border-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-start${screen}`]: parseInt(target.value), [`border-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-border-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-top${screen}`]: parseInt(target.value), [`border-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto`}>\r\n            {/*===> Other Options <===*/}\r\n            {!screen || screen !== \"\" ? <>\r\n                <div className='row gpx-15 divider-b mb-15 position-rv'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixSelect name=\"border-style\" placeholder={__(\"Style\", \"pds-blocks\")} className={`mb-10 weight-medium`} value={attributes.style['border-style']} onChange={mainSetter} options={PhenixBlocks.dataLists.styles.border_styles} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixBackground key={`border-color`}\r\n                            isSmall={true}\r\n                            colorsOnly={true}\r\n                            customOnly={true}\r\n                            onChange={(value) => objectSetter(value, \"\", \"style\", \"border-color\", attributes, setAttributes)}\r\n                            type={attributes.style['border-color']?.type || \"color\"}\r\n                            value={attributes.style['border-color']?.value || \"\"}\r\n                            rotate={attributes.style['border-color']?.rotate || null} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>:null}\r\n            <div className='position-rv'>\r\n                {/*===> Bound X <===*/}\r\n                <OptionControl key={`bound-border-x${screen}`} name={`bound-border-x${screen}`} checked={attributes.style[`bound-border-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n                {/*===> Bound Y <===*/}\r\n                <OptionControl key={`bound-border-y${screen}`} name={`bound-border-y${screen}`} checked={attributes.style[`bound-border-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n\r\n                {/*===> Top Controller <===*/}\r\n                <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-top${screen}`} name={`border-top${screen}`} onChange={setValue} value={attributes.style[`border-top${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n                {/*===> X Controls <===*/}\r\n                <div className={`flexbox align-between align-center-y mb-15`}>\r\n                    {/*===> Start Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-start${screen}`} name={`border-start${screen}`} onChange={setValue} value={attributes.style[`border-start${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                    {/*===> Reset Button <===*/}\r\n                    <button key={`reset-border${screen}`} name={`reset-border${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                    {/*===> End Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-end${screen}`} name={`border-end${screen}`} onChange={setValue} value={attributes.style[`border-end${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                </div>\r\n                {/*===> Bottom Controller <===*/}\r\n                <div className='mgx-auto' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-bottom${screen}`}  name={`border-bottom${screen}`} onChange={setValue} value={attributes.style[`border-bottom${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\n\r\n//===> Component <===//\r\nexport default class EffectsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const hover_effect = PhenixBlocks.effects.hover;\r\n        const box_shadows = PhenixBlocks.effects.shadows;\r\n        const animations_effect = PhenixBlocks.effects.animations;\r\n        const other_effects = PhenixBlocks.effects.other_effects;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10 gpy-15`}>\r\n                {/*===> Hover Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"hover-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Hover Effects\", \"pds-blocks\")} value={typeof(attributes.style['hover-effect']) === 'string' ? [attributes.style['hover-effect']] : attributes.style['hover-effect']} onChange={mainSetter} options={hover_effect} />\r\n                </div>\r\n                {/*===> Animation Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"animated-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Always Animated\", \"pds-blocks\")} value={typeof(attributes.style['animated-effect']) === 'string' ? [attributes.style['animated-effect']] : attributes.style['animated-effect']} onChange={mainSetter} options={animations_effect} />\r\n                </div>\r\n                {/*===> Box Shadow <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"box-shadow\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Box Shadow\", \"pds-blocks\")} value={attributes.style['box-shadow']} onChange={mainSetter} options={box_shadows} />\r\n                </div>\r\n                {/*===> Other Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"other-effects\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Other Effects\", \"pds-blocks\")} value={attributes.style['other-effects']} multiple={true} onChange={mainSetter} options={other_effects} />\r\n                </div>\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class MarginSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-margin-option`;\r\n\r\n        //===> Reset <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`mt${screen}`]: \"\",\r\n                [`ms${screen}`]: \"\",\r\n                [`me${screen}`]: \"\",\r\n                [`mb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"ms\", \"me\"],\r\n                propY = [\"mt\", \"mb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-margin-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`ms${screen}`]: parseInt(target.value), [`me${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-margin-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`mt${screen}`]: parseInt(target.value), [`mb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`margin-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-margin-x${screen}`} name={`bound-margin-x${screen}`} checked={attributes.style[`bound-margin-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-margin-y${screen}`} name={`bound-margin-y${screen}`} checked={attributes.style[`bound-margin-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`mt${screen}`} name={`mt${screen}`} onChange={setValue} value={attributes.style[`mt${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`ms${screen}`} name={`ms${screen}`} onChange={setValue} value={attributes.style[`ms${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-margin${screen}`} name={`reset-margin${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`me${screen}`} name={`me${screen}`} onChange={setValue} value={attributes.style[`me${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`mb${screen}`} name={`mb${screen}`} onChange={setValue} value={attributes.style[`mb${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PaddingSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-padding-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pdt${screen}`]: \"\",\r\n                [`pds${screen}`]: \"\",\r\n                [`pde${screen}`]: \"\",\r\n                [`pdb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pds\", \"pde\"],\r\n                propY = [\"pdt\", \"pdb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-padding-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pds${screen}`]: parseInt(target.value), [`pde${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-padding-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pdt${screen}`]: parseInt(target.value), [`pdb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`padding-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-padding-x${screen}`} name={`bound-padding-x${screen}`} checked={attributes.style[`bound-padding-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-padding-y${screen}`} name={`bound-padding-y${screen}`} checked={attributes.style[`bound-padding-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pdt${screen}`} name={`pdt${screen}`} onChange={setValue} value={attributes.style[`pdt${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pds${screen}`} name={`pds${screen}`} onChange={setValue} value={attributes.style[`pds${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-padding${screen}`} name={`reset-padding${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pde${screen}`} name={`pde${screen}`} onChange={setValue} value={attributes.style[`pde${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pdb${screen}`} name={`pdb${screen}`} onChange={setValue} value={attributes.style[`pdb${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PositionSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const zindex_options = PhenixBlocks.zindex_options.map(opt => { opt.value += `${screen}`; return opt; });\r\n        const position_options = PhenixBlocks.position_options.map(opt => { opt.value += `${screen}`; return opt; });\r\n        const preset_positions = PhenixBlocks.preset_positions.map(opt => { opt.value += `${screen}`; return opt; });\r\n\r\n        //===> Reset position <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pos-top${screen}`]: \"\",\r\n                [`pos-start${screen}`]: \"\",\r\n                [`pos-end${screen}`]: \"\",\r\n                [`pos-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pos-start\", \"pos-end\"],\r\n                propY = [\"pos-top\", \"pos-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-position-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-start${screen}`]: parseInt(target.value), [`pos-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-position-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-top${screen}`]: parseInt(target.value), [`pos-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-position-x${screen}`} name={`bound-position-x${screen}`} checked={attributes.style[`bound-position-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-position-y${screen}`} name={`bound-position-y${screen}`} checked={attributes.style[`bound-position-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            \r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-top${screen}`} name={`pos-top${screen}`} onChange={setValue} value={attributes.style[`pos-top${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-start${screen}`} name={`pos-start${screen}`} onChange={setValue} value={attributes.style[`pos-start${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-position${screen}`} name={`reset-position${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-end${screen}`} name={`pos-end${screen}`} onChange={setValue} value={attributes.style[`pos-end${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-bottom${screen}`}  name={`pos-bottom${screen}`} onChange={setValue} value={attributes.style[`pos-bottom${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            <div className='col-12 pdt-10 divider-t mt-15 row gpx-15'>\r\n                <div className='mb-10 col'>\r\n                    <PhenixSelect key={`position${screen}`} name={`position${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style[`position${screen}`]} onChange={mainSetter} options={position_options} />\r\n                </div>\r\n                <div className='mb-10 col col-6'>\r\n                    <PhenixSelect key={`position-index${screen}`} name={`z-index${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Index Order\", \"pds-blocks\")} value={attributes.style[`z-index${screen}`]} onChange={mainSetter} options={zindex_options} />\r\n                </div>\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`position-preset${screen}`} name={`position-preset${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Preset Position\", \"pds-blocks\")} value={attributes.style[`position-preset${screen}`]} onChange={mainSetter} options={preset_positions} />\r\n                </div>\r\n            </div>\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixNumber from '../number';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly, objectSetter, setAttributes} = this.props;\r\n        const uniqueKey = 'x';//Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const radius_sizes = PhenixBlocks.radius_sizes;\r\n        const support_options = PhenixBlocks.support_options;\r\n        const display_options = PhenixBlocks.display_options;\r\n        const radius_directions = PhenixBlocks.radius_directions;\r\n        const background_options = PhenixBlocks.background_options;\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\", \"enable-marquee\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                {/*===> Colors and Gradients <===*/}\r\n                <PhenixBackground key={`background-${uniqueKey}`}\r\n                    colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false}\r\n                    onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false}\r\n                    label={__(\"Background\", \"pds-blocks\")} onChange={mainSetter}\r\n                    type={attributes.style.background?.type || \"color\"}\r\n                    value={attributes.style.background?.value || \"\"}\r\n                    rotate={attributes.style.background?.rotate || null} \r\n                />\r\n\r\n                {/*===> Image Backgrounds <===*/}\r\n                <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                    {/*===> Overlay Options <===*/}\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixSelect className=\"border-alpha-25\" label={attributes.style.overly ?__(\"Overlay\", \"pds-blocks\"):null} key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                    </div>\r\n                    {attributes.style.overly ? <>\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixNumber name=\"overly_opacity\" label={__(\"Overlay Opacity\", \"pds-blocks\")} value={ parseInt(attributes.style.overly_opacity) || 50} onChange={mainSetter} />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {attributes.style.overly === \"overlay-custom\" ? <>\r\n                    <div className='col-12'>\r\n                        {/*===> Colors and Gradients <===*/}\r\n                        <PhenixBackground key={`overlay-background-${uniqueKey}`}\r\n                            customOnly={true}\r\n                            label={__(\"Overlay Background\", \"pds-blocks\")}  onChange={(value) => objectSetter(value, \"\", \"style\", \"overly_bg\", attributes, setAttributes)}\r\n                            type={attributes.style.overly_bg?.type || \"color\"}\r\n                            value={attributes.style.overly_bg?.value || \"\"}\r\n                            rotate={attributes.style.overly_bg?.rotate || null} \r\n                        />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {/*===> Image Options <===*/}\r\n                    {attributes.style.background?.type === \"image\"? <>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </>:null}\r\n                </div>\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Support\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-direction-${uniqueKey}`} name=\"radius-direction\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Radius Direction\", \"pds-blocks\")} value={attributes.style['radius-direction']} onChange={mainSetter} options={radius_directions} />\r\n                            </div>\r\n                        </> : null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Marquee Slider <===*/}\r\n                        {attributes.style.support?.includes('enable-marquee') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`marquee-${uniqueKey}`} name=\"marquee\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Marquee Direction\", \"pds-blocks\")} value={attributes.style.marquee} onChange={mainSetter} options={[\r\n                                    { label: __(\"None\", \"pds-blocks\"), value: '' },\r\n                                    { label: __(\"Marquee Left\", \"pds-blocks\"), value: 'px-marquee' },\r\n                                    { label: __(\"Marquee Right\", \"pds-blocks\"), value: 'px-marquee-reverse' },\r\n                                ]} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <label className='tx-capitalize fs-13'>{__(\"Speed\", \"pds-blocks\")}</label>\r\n                                <PhenixNumber key={`marquee-speed`} name={`marquee-speed`} onChange={mainSetter} value={attributes.style[`marquee-speed`] || 15} min={5} />\r\n                            </div>\r\n                        </> : null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from '../number';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Options Lists <===//\r\n        const font_weights = PhenixBlocks.typography.weights;\r\n        const font_lineheight = PhenixBlocks.typography.lineheight;\r\n        const text_shadows = PhenixBlocks.typography.shadows;\r\n        const font_families = PhenixBlocks.typography.families;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [{ \"label\": \"Default\",  \"value\": \"\"}],\r\n              display_sizes = [];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        PhenixBlocks.sizes_range.font_sizes.map(size => {\r\n            //===> Normal Size <===//\r\n            if (typeof(size) === \"number\") {\r\n                sizes_list.push({\"label\": size, \"value\": `fs${screenPoint}-${size}`});\r\n            } else {\r\n                sizes_list.push({\"label\": `H${size.replace('h', '')}`, \"value\": `${size}${screenPoint}`});\r\n                display_sizes.push({\"label\": `DH${size.replace('h', '')}`, \"value\": `display${screenPoint}-${size}`});\r\n            }\r\n        });\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect key={`font-size${screenPoint}`} className=\"mb-15\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Family <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`family`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Family\", \"pds-blocks\")} value={attributes.typography[`family`]} onChange={mainSetter} options={font_families} />\r\n                </div>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Margin for List Items <===*/}\r\n                {attributes.type?.includes('list-') || attributes.type === \"list\" ? <>\r\n                <div className='col col-6'>\r\n                    <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.typography[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                </div>\r\n                </> :null}\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {!options || options.includes(\"align\") ? <>\r\n                {/*===> Label <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox mb-15'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={mainSetter} type='button-radio' className='small'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n            {!options || options.includes(\"styles\") ? <>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, value, checked, onChange, children, required, className} = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useState } from 'react';\r\n\r\n//===> Phenix Background <===//\r\nexport default function ScreensTabs(props) {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, size, type, setValue, className } = this.props;\r\n        const largeImage = (src) => <img src={src} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> ;\r\n        const smallImage = (src) => <img src={src} style={{\"maxHeight\": \"1.5rem\"}} />;\r\n        const largePlaceholder = \"https://placehold.co/600x400/1c1c1c/CCC?text=Change%20Source\";\r\n        const smallPlaceholder = \"https://placehold.co/200x75/1c1c1c/CCC?text=Change%20Source\";\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"} mouse-no-events`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? smallImage(value || smallPlaceholder) : smallImage(smallPlaceholder)}\r\n                                    <span key=\"change-media\" className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></span>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? largeImage(value || largePlaceholder) : largeImage(largePlaceholder)}\r\n                                    <span key=\"change-media\" className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Modules\r\n * ===> 02 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Modules <===//\r\nimport Edit from './edit';\r\nimport {__} from '@wordpress/i18n';\r\nimport metadata from './block.json';\r\nimport {registerBlockType} from '@wordpress/blocks';\r\nimport {useBlockProps} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg fill=\"none\" viewBox=\"0 0 32 32\"><path fill=\"#1E1E1E\" d=\"M16 0C7.067 0 0 7.067 0 16s7.067 16 16 16 16-7.067 16-16S24.933 0 16 0zm0 2.667c7.333 0 13.333 6 13.333 13.333v.133c-2.533-1.466-5.866-3.066-6-3.2-.4-.133-.933-.133-1.466.134l-5.2 3.733-6-2c-.4-.133-.667 0-1.067.133L3.067 18.8c-.134-.933-.4-1.733-.4-2.667 0-7.466 6-13.466 13.333-13.466z\"/></svg>,\r\n    \r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n    \r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //====> Attributes Renderers <====//\r\n        const OptionsRenderer = window.PhenixBlocks.OptionsRenderer;\r\n\r\n        //===> Get Block Properties <===//\r\n        const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps.save(), isSave: true});\r\n        const blockProps = renderProps.blockProps;\r\n        const TagName = attributes.style.isLink ?  \"a\" : 'i';\r\n        let iconURl = \"https://via.placeholder.com/50x50.webp\";\r\n\r\n        //===> Set Default Values <===//\r\n        blockProps.className += ` tx-align-center inline-block`;\r\n        blockProps.className += ` ${renderProps.container.className}`;\r\n        if (attributes.style.isLink) blockProps.href = attributes.style.url || \"#\";\r\n        if (attributes.type === \"font\" && !attributes.style.icon) blockProps.className += ` far fa-icons`;\r\n\r\n        const iconStyle = {\r\n            height: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42),\r\n            lineHeight: attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42)\r\n        }\r\n    \r\n        if (!attributes.style.freeWidth) {\r\n            iconStyle.width = attributes.style.dimensions ? Phenix(document).toREM(attributes.style.dimensions) : Phenix(document).toREM(42);\r\n        }\r\n\r\n        //===> Render <===//\r\n        return (<TagName {...blockProps} style={iconStyle}>{attributes.type === \"custom\" ? \r\n            <img alt=\"icon\" className='fluid' src={attributes.style.icon?.includes(\"http\") ? attributes.style.icon : iconURl} />\r\n        : null}</TagName>);\r\n    }\r\n});"],"names":["Edit","attributes","setAttributes","PhenixBlocks","window","OptionsRenderer","set_style","target","screen","setObject","set_typography","renderProps","blockProps","useBlockProps","uniqueKey","id","className","container","type","style","icon","iconStyle","height","dimensions","Phenix","document","toREM","lineHeight","freeWidth","width","createElement","Fragment","BlockControls","ToolbarGroup","key","label","__","PhenixSelect","name","placeholder","value","onChange","set_value","options","PxDropDown","title","button","dropList","PhenixIcons","OptionControl","checked","MediaUploader","setValue","url","isLink","LinkControlSearchInput","allowDirectEntry","withURLSuggestion","withCreateSuggestion","renderSuggestions","props","SuggestionsUrl","inNewTab","paddingBottom","PhenixNumber","min","max","StylesSet","objectSetter","mainSetter","colorSetter","ScreensTabs","sm","TypographySet","md","lg","xl","support","includes","AnimationsSet","PaddingSet","attrSetter","MarginSet","PositionSet","BorderSet","EffectsSet","InspectorControls","PanelBody","initialOpen","preview","src","PreviewImage","alt","PhenixBackground","Component","state","render","dataLists","rotate","colorsOnly","onlyCG","isSmall","customOnly","cover","this","setting","wp","data","select","getSettings","editorColors","color","customColorsList","customGradientsList","palette","default","forEach","push","slug","custom","gradients","gradient","set_type","setBackground","clicked","getAttribute","makeButtons","list","classes","output","index","length","isColor","replace","replaceAll","c","toUpperCase","buttonAttributes","backgroundColor","backgroundImage","onClick","wrapper","ancestor","panel","querySelector","toggleClass","fadeToggle","gap","maxHeight","size","main","components","darkAlpha","lightAlpha","status","colors","offwhite","brands","_","set_rotate","PhenixColors","pxPallete","paletteText","setColor","next","social","opened","componentDidMount","componentsBuilder","componentDidUpdate","children","dataPosition","suggestions","map","suggestion","handleSuggestionClick","icons_page","icon_type","icon_name","icons_file","icons_list","icons_pages","icons_types","icons_version","return_type","reRender","apiFetch","path","then","pds_icon_font","icon_value","split","fetch","PDS_WP_KEY","json","res","icons","item","pageNumber","Math","floor","slice","setState","version","theValue","travelingButton","event","travelType","Object","keys","changed","input","searchedList","filter","buttonsList","buttonsStyle","buttonItem","steps","DecreaseNum","minNum","parseFloat","step","newVal","maxNum","checkVal","multiple","search","options_list","Array","isArray","entries","group_list","options_group","marginBottom","defaultValue","entrance_animations","animations","entrance","exit_animations","exit","animation","hasExit","group","duration","delay","offset","inset","reverse","newAttributes","isX","some","opt","isY","parseInt","styles","border_styles","reset","hover_effect","effects","hover","box_shadows","shadows","animations_effect","other_effects","Date","now","toString","random","substr","zindex_options","position_options","preset_positions","bgOnly","radius_sizes","support_options","display_options","radius_directions","background_options","showSupportOpts","supportedOpts","PhenixColor","typography","background","marginTop","overly","overlay","overly_opacity","overly_bg","sizes","positions","repeat","parallax","radius","display","marquee","screenPoint","font_weights","weights","font_lineheight","lineheight","text_shadows","font_families","families","sizes_list","display_sizes","sizes_range","font_sizes","weight","direction","required","defaultChecked","setScreen","useState","buttons","opts","largePlaceholder","smallPlaceholder","MediaUpload","onSelect","open","largeImage","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","metadata","fill","viewBox","edit","save","isSave","TagName","href"],"sourceRoot":""}