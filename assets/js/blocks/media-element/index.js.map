{"version":3,"file":"blocks/media-element/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/media-element/edit.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dynamic-url.js","webpack://pds-blocks-pro/./src/blocks/px-controls/icons.js","webpack://pds-blocks-pro/./src/blocks/px-controls/input.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/border.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/effects.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/margin.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/position.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/sizes.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/media-element/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport {useEffect} from '@wordpress/element';\r\nimport {PanelBody, TextControl, ToolbarGroup} from '@wordpress/components';\r\nimport {MediaUpload, BlockControls, InspectorControls, useBlockProps, InnerBlocks, __experimentalLinkControlSearchInput as LinkControlSearchInput} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport PhenixIcons from '../px-controls/icons';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixSelect from '../px-controls/select';\r\nimport PhenixInput from '../px-controls/input';\r\nimport MediaUploader from '../px-controls/uploader';\r\nimport OptionControl from '../px-controls/switch';\r\nimport SuggestionsUrl from \"../px-controls/dynamic-url\";\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport SizesSet from '../px-controls/sets/sizes';\r\nimport MarginSet from '../px-controls/sets/margin';\r\nimport PositionSet from '../px-controls/sets/position';\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport EffectsSet from '../px-controls/sets/effects';\r\nimport BorderSet from '../px-controls/sets/border';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n    const OptionsRenderer = PhenixBlocks.OptionsRenderer;\r\n\r\n    //==> Set Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_url = url => setAttributes({ url });\r\n    const set_setting = target => PhenixBlocks.setObject(target, \"\", \"setting\", target.getAttribute('name'),attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_icon = value => PhenixBlocks.setObject(`${value.type} ${value.value}`, \"\", \"style\", \"icon\", attributes, setAttributes);\r\n    const set_source = value => PhenixBlocks.setObject(`${value.url}`, \"\", \"setting\", \"src\", attributes, setAttributes);\r\n    const set_cover = value => PhenixBlocks.setObject(`${value.url}`, \"\", \"setting\", \"cover\", attributes, setAttributes);\r\n    const set_typography = (target, screen) => PhenixBlocks.setObject(target, screen, \"typography\", false, attributes, setAttributes);\r\n\r\n    //===> View Script <===//\r\n    useEffect(() => PhenixBlocks.viewScript());\r\n\r\n    //===> Get Block Properties <===//\r\n    const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps()});\r\n    const blockProps = renderProps.blockProps;\r\n    const uniqueKey = blockProps.id;\r\n\r\n    //===> Layout Options <===//\r\n    blockProps.className += ` ${renderProps.container.className}`;\r\n\r\n    //===> Default Options <===//\r\n    if(!attributes.setting.type) blockProps['data-type'] = \"image\";\r\n\r\n    if(!attributes.setting.src) {\r\n        blockProps['data-src'] = \"https://placehold.co/1024x768.webp\";\r\n        blockProps.style.backgroundImage = \"https://placehold.co/1024x768.webp\";\r\n    }\r\n\r\n    if(!attributes.setting.size) blockProps.className += \" ratio-none\";\r\n    if(attributes.setting.type === \"video\" && !attributes.setting.embed) attributes.setting.embed = \"video\";\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip-bottom w-100' data-title={__(\"Type\", \"pds-blocks\")}>\r\n                    <PhenixSelect name=\"type\" placeholder={__(\"Image\", \"pds-blocks\")} className={`tx-align-center weight-medium`} value={attributes.setting.type} onChange={set_setting} options={PhenixBlocks.dataLists.media_options.types} />\r\n                </div>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip-bottom w-100' data-title={__(\"Ratio Size\", \"pds-blocks\")}>\r\n                    <PhenixSelect key={`ratio-size`} name=\"size\" placeholder={__(\"Ratio Size\", \"pds-blocks\")} className={`tx-align-center weight-medium`} value={attributes.setting.size} onChange={set_setting} options={PhenixBlocks.dataLists.media_options.size} />\r\n                </div>\r\n                {/*===> Select Control <===*/}\r\n                {attributes.setting.type === \"embed\" ? <div className='inline-block inline-select tooltip-bottom w-100' data-title={__(\"Embed Source\", \"pds-blocks\")}>\r\n                    <PhenixSelect name=\"embed\" placeholder={__(\"Video\", \"pds-blocks\")} className={`tx-align-center weight-medium`} value={attributes.setting['embed']} onChange={set_setting} options={PhenixBlocks.dataLists.media_options.embeds} />\r\n                </div> : null}\r\n                {/*===> Dropdown Control <===*/}\r\n                <PxDropDown title={__(\"Media Source\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-image divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"dropdown-item\" className='pd-10'>\r\n                        {/*===> Uploader <===*/}\r\n                        {!attributes.setting.type || attributes.setting.type === \"image\" || attributes.setting['embed'] === \"video\" || attributes.setting.type === \"3d-viewer\" || attributes.setting.type === \"embed\" && !attributes.setting['embed']? \r\n                            <>\r\n                                <MediaUploader label={__(\"Upload File\",\"pds-blocks\")} value={attributes.setting?.src} setValue={set_source}></MediaUploader>\r\n                                {/* ===> Cover File <=== */}\r\n                                {attributes.setting['embed'] === \"video\" ? <>\r\n                                    <MediaUploader label=\"Cover File\" key=\"upload-cover-file\" size=\"small mt-15\" value={attributes.setting.cover} setValue={set_cover}></MediaUploader>\r\n                                </> : null }\r\n                            </>\r\n                            :\r\n                            <PhenixInput key=\"src\" name=\"src\" label={__(\"Source URL\", \"pds-blocks\")} value={attributes.setting.src} onChange={set_setting} />\r\n                        }\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Control <===*/}\r\n                <PxDropDown title={__(\"Media Settings\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-cog divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"dropdown-item\" className='pdx-15 pdy-15'>\r\n                        <ScreensTabs\r\n                            md={(screen) => <PhenixSelect key={`ratio-size-${screen}`} name={`size-${screen}`} label={__(\"Ratio Size\", \"pds-blocks\")} className={`weight-medium mb-15`} value={attributes.setting[`size-${screen}`]} onChange={set_setting} options={PhenixBlocks.dataLists.media_options.size} />}\r\n                            lg={(screen) => <PhenixSelect key={`ratio-size-${screen}`} name={`size-${screen}`} label={__(\"Ratio Size\", \"pds-blocks\")} className={`weight-medium mb-15`} value={attributes.setting[`size-${screen}`]} onChange={set_setting} options={PhenixBlocks.dataLists.media_options.size} />}\r\n                            xl={(screen) => <PhenixSelect key={`ratio-size-${screen}`} name={`size-${screen}`} label={__(\"Ratio Size\", \"pds-blocks\")} className={`weight-medium mb-15`} value={attributes.setting[`size-${screen}`]} onChange={set_setting} options={PhenixBlocks.dataLists.media_options.size} />}\r\n                        />\r\n                        {/*===> Option Controller <===*/}\r\n                        <div className='flexbox'>\r\n                            <OptionControl key={`lazyloading`} name={`lazyloading`} value=\"true\" checked={attributes.setting.lazyloading} onChange={set_setting} type='switch-checkbox' className='small me-10 mb-10'>{__(\"LazyLoading\", \"pds-blocks\")}</OptionControl>\r\n                            <OptionControl key={`inner-blocks`} name={`inner-blocks`} value=\"boolean\" checked={attributes.style['inner-blocks']} onChange={set_style} type='switch-checkbox' className='small mb-10'>{__(\"innerBlocks\", \"pds-blocks\")}</OptionControl>\r\n                            {attributes.setting.type === 'embed' ? <>\r\n                                <OptionControl key={`controls`} name={`controls`} value=\"true\" checked={attributes.setting.controls} onChange={set_setting} type='switch-checkbox' className='small mb-10 me-10'>{__(\"Controls\", \"pds-blocks\")}</OptionControl>\r\n                                <OptionControl key={`autoplay`}  name={`autoplay`} value=\"true\" checked={attributes.setting.autoplay} onChange={set_setting} type='switch-checkbox' className='small mb-10 me-10'>{__(\"Autoplay\", \"pds-blocks\")}</OptionControl>\r\n                                <OptionControl key={`loop`} name={`loop`} value=\"true\" checked={attributes.setting.loop} onChange={set_setting} type='switch-checkbox' className='small mb-10 me-10'>{__(\"Video Loop\", \"pds-blocks\")}</OptionControl>\r\n                                <OptionControl key={`muted`} name={`muted`} value=\"true\" checked={attributes.setting.muted} onChange={set_setting} type='switch-checkbox' className='small mb-10'>{__(\"Muted Audio\", \"pds-blocks\")}</OptionControl>\r\n                            </>:null}\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Sizes Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-maximize divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-320\" >\r\n                    <li key=\"sizes\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <SizesSet attributes={attributes} mainSetter={set_style} />}\r\n                            md={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            lg={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            xl={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Link Input <===*/}\r\n                {attributes.style.isLink ? <PxDropDown title={__(\"URL Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-link color-success divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-260\" dataPosition={`bottom, end`}>\r\n                    <li key=\"link\" className='pdx-15 pdt-10 pdb-0 mb-0'>\r\n                        <LinkControlSearchInput key={`url`} name=\"url\" placeholder={__(\"URL or Page Name\", \"pds-blocks\")} onChange={set_url} value={attributes.url} allowDirectEntry={false} withURLSuggestion={false} withCreateSuggestion={false} renderSuggestions={(props) => SuggestionsUrl(props)} />\r\n                        {/*===> Option Control <===*/}\r\n                        <OptionControl key={`inNewTab`} name={`inNewTab`} value={`boolean`} checked={attributes.style.inNewTab} onChange={set_style} type='checkbox' className='tiny me-15'>\r\n                            <span className='fas fa-check radius-circle'>{__(\"Open in New Tab\", \"pds-blocks\")}</span>\r\n                        </OptionControl>\r\n                        {/*===> Disable Button <===*/}\r\n                        <div className='fluid' style={{paddingBottom: 3}}>\r\n                            <OptionControl key={`isLink`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Disable URL Link\", \"pds-blocks\")}</span>\r\n                            </OptionControl>\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown> :\r\n                /*===> Add Link <===*/\r\n                <OptionControl key={`isLink`} name={`isLink`} value={`boolean`} checked={attributes.style.isLink} onChange={set_style} type='button-checkbox' className='inline-block'>\r\n                    <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-link' data-title={__(\"Convert to Link\", \"pds-blocks\")}></span>\r\n                </OptionControl>}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.isLightBox ? <PxDropDown title={__(\"Lightbox Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square pxi pxi-lightbox-btn active divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-260\" dataPosition={`bottom, end`}>\r\n                    <li key=\"lightbox\" className='pdx-15 pdt-15 pdb-0 mb-0'>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12 mb-10'><PhenixSelect key={`lightbox-type`} name=\"lightbox_type\" placeholder={__(\"Source Type\", \"pds-blocks\")} value={attributes.lightbox_type} onChange={set_value} options={PhenixBlocks.dataLists.lightbox.types} /></div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>{attributes.lightbox_src ?  \r\n                            <MediaUploader key={`lightbox-src`} label={__(\"Upload Source\", \"pds-blocks\")} type={attributes.lightbox_type} value={attributes.url} setValue={(file => {setAttributes({url: file.url})})}></MediaUploader>\r\n                            :\r\n                            <TextControl key={`lightbox-src-input`} label={__(\"Source URL\", \"pds-blocks\")} value={ attributes.url } onChange={set_url}/>\r\n                        }</div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'><OptionControl key={`lightbox_src`} name={`lightbox_src`} value=\"boolean\" checked={attributes.lightbox_src || false} onChange={set_value} type='switch-checkbox' className='small'>{__(\"Upload Source\", \"pds-blocks\")}</OptionControl></div>\r\n                        {/*===> Disable Button <===*/}\r\n                        <div className='fluid' style={{paddingBottom: 3}}>\r\n                            <OptionControl key={`isLightBox`} name={`isLightBox`} value={`boolean`} checked={attributes.isLightBox || false} onChange={set_value} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Disable Lightbox\", \"pds-blocks\")}</span>\r\n                            </OptionControl>\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown> :\r\n                /*===> Option Control <===*/\r\n                <OptionControl key={`isLightBox`} name={`isLightBox`} value={`boolean`} checked={attributes.isLightBox || false} onChange={set_value} type='button-checkbox' className='inline-block divider-e border-alpha-25'>\r\n                    <span className='btn bg-transparent fs-16 square tooltip-bottom pxi pxi-lightbox-btn' data-title={__(\"View Source in Lightbox\", \"pds-blocks\")}></span>\r\n                </OptionControl>}\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Style Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-adjust divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        {/*===> Styles <===*/}\r\n                        <StylesSet key={`styles`} attributes={attributes} setAttributes={setAttributes} mainSetter={set_style} objectSetter={PhenixBlocks.setObject} colorSetter={set_typography} options=\"text-colors\" />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Typography Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-font divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-typography\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <TypographySet key={`typography`} attributes={attributes} mainSetter={set_typography} options=\"size, other\" />}\r\n                            md={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                            lg={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                            xl={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size\" />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Icon Control <===*/}\r\n                {!attributes.style?.hasIcon ? \r\n                    <OptionControl key={`hasIcon`} name={`hasIcon`} value={`boolean`} checked={attributes.style?.hasIcon} onChange={set_style} type='button-checkbox' className='inline-block divider-e border-alpha-25'>\r\n                        <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-icons h-min-100' style={{paddingTop: 2}} data-title={__(\"Add Icon\", \"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                :\r\n                    <PxDropDown title={__(\"Text Icon\", \"pds-blocks\")} button={`bg-transparent fs-16 square ${attributes.style?.icon || \"far fa-icons\"} divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"icons\" className='pdx-10 pdt-5'>\r\n                            {/*===> Icon Selector <===*/}\r\n                            <PhenixIcons key={`icon`} value={ attributes.style?.icon || \"far fa-icons\" } onChange={set_icon} />\r\n                            {/*===> Option Control <===*/}\r\n                            <OptionControl key={`icon-large`} name={`icon-large`} value=\"icon-lg\" checked={attributes.style['icon-large'] || false} onChange={set_style} type='switch-checkbox' className='tiny mt-5'>{__(\"Large icon\", \"pds-blocks\")}</OptionControl>\r\n                            {/*===> Disable Button <===*/}\r\n                            <div className='fluid' style={{paddingBottom: 3}}>\r\n                                <OptionControl key={`hasIcon`} name={`hasIcon`} value={`boolean`} checked={attributes.style?.hasIcon} onChange={set_style} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                    <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Remove Icon\", \"pds-blocks\")}</span>\r\n                                </OptionControl>\r\n                            </div>\r\n                        </li>\r\n                    </PxDropDown>\r\n                }\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-animations') ?\r\n                    <PxDropDown title={__(\"Animation Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-atom-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-animations\" className='pdt-15 pdx-15 lineheight-150'>\r\n                            {/*===> Animations <===*/}\r\n                            <AnimationsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-margin') ?\r\n                    <PxDropDown title={__(\"Margin Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square fal fa-arrows-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-position') ?\r\n                    <PxDropDown title={__(\"Position Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-to-dot divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-border') ?\r\n                    <PxDropDown title={__(\"Border Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-all divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            {/*===> Border Size <===*/}\r\n                            <ScreensTabs\r\n                                sm={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-effects') ?\r\n                    <PxDropDown title={__(\"Effects Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-backpack divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <EffectsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\" initialOpen={true}>\r\n                {/*===> Styles Options <===*/}\r\n                <StylesSet key={`styles`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"support\" />\r\n            </PanelBody>\r\n        </InspectorControls>\r\n        {/*===> Modal Component <===*/}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> : \r\n        <div {...blockProps}  key={`${uniqueKey}`}>\r\n            {/*===> Image Type <===*/}\r\n            {attributes.setting.type === \"image\" || !attributes.setting.type ? <img src={attributes.setting.src || blockProps['data-src']} className=\"px-media-img\" /> : null}\r\n            {/*===> Inner Content <===*/}\r\n            {attributes.style['inner-blocks'] === true ? <InnerBlocks template={[\r\n                ['phenix/group', {\r\n                    \"className\": \"px-media-element\",\r\n                    \"style\": {\"min_size\":\"w-min-280\"}\r\n                },[\r\n                    [ 'core/paragraph', { placeholder: 'Book Content' } ],\r\n                ]],\r\n            ]} /> : null}\r\n        </div>}\r\n    </>);\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useState, useMemo } from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nconst PhenixBackground = (props) => {\r\n    //===> Get Data <===//\r\n    const PhenixBlocks = useMemo(() => window.PhenixBlocks.dataLists, []);\r\n    //===> Properties <===//\r\n    const {type, value, label, rotate, colorsOnly, onlyCG, isSmall, placeholder, onChange, customOnly, cover} = props;\r\n\r\n    //===> Get Custom Colors and Gradients <===//\r\n    const setting = wp.data.select('core/block-editor').getSettings();\r\n    const editorColors = setting['__experimentalFeatures']?.color;\r\n\r\n    //===> Custom Colors List <===//\r\n    const customColorsList = useMemo(() => {\r\n        //===> Default and User Custom <===//\r\n        const list = [];\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Custom Gradients List <===//\r\n    const customGradientsList = useMemo(() => {\r\n        //===> Default and User Custom <===//\r\n        const list = [];\r\n        if (editorColors && !colorsOnly) {\r\n            editorColors.gradients?.default?.forEach(gradient => list.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n            editorColors.gradients?.custom?.forEach(gradient => list.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Returned Value <===//\r\n    let options = {\r\n        type: type,\r\n        rotate: rotate,\r\n        value: value || \"\",\r\n    };\r\n\r\n    //===> Set Type <===//\r\n    const set_type = type => {\r\n        //===> Set Value <===//\r\n        options.type = type;\r\n\r\n        //===> change value <===//\r\n        if (options.type === 'image') {options.value = PhenixBlocks.palette.placeholder;} \r\n        else {options.value = \"\";}\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Type <===//\r\n    const set_rotate = rotate => {\r\n        //===> Set Value <===//\r\n        options.rotate = rotate;\r\n        //===> change value <===//\r\n        if (options.type !== 'gradient') options.value = \"\";\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Background <===//\r\n    const setBackground = clicked => {\r\n        //===> Get Value <===//\r\n        let button = clicked.target,\r\n            value  = button?.getAttribute('data-value');\r\n\r\n        //===> CSS Colors & Gradients <===//\r\n        if (type !== 'image' && type !== \"video\" && type !== \"3d-viewer\") {options.value = value;}\r\n        //===> File URL <===//\r\n        else {options.value = clicked.url;}\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Cover <===//\r\n    const setCover = clicked => {\r\n        //===> Set value <===//\r\n        options.cover = clicked.url;\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Buttons Creator <===//\r\n    const makeButtons = (list, classes) => {\r\n        let output = [];\r\n        //===> for each item <===//\r\n        for (let index = 0; index < list.length; index++) {\r\n            //===> Get Value <===//\r\n            const name = list[index];\r\n            let title = name,\r\n                isColor = !name.includes(\"fa-\");\r\n\r\n            //===> Convert to Title <===//\r\n            if (isColor) {\r\n                //===> Get a Clean Title <===//\r\n                title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace('--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ');\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n            } else title = \"Reset\";\r\n\r\n            const buttonAttributes = {\r\n                \"title\": title,\r\n                \"onClick\": setBackground,\r\n                \"data-value\": isColor ? name : \"\",\r\n                \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                \"style\": {\"width\":\"30px\",\"height\":\"16px\", backgroundColor: name.includes('var(') && !name.includes('--gradient') ? name : null, backgroundImage: name.includes('--wp--preset--gradient') ? name : null},\r\n                \"className\":`${isColor && !name.includes('var') ? name : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"} ${classes?classes:\"\"}`\r\n            }\r\n\r\n            output.push(<button {...buttonAttributes}></button>);\r\n        }\r\n        //===> Return Buttons <===//\r\n        return output;\r\n    };\r\n\r\n    //===> Colors Panel <===//\r\n    const showPanel = clicked => {\r\n        let button  = clicked.target,\r\n            wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n            panel   = wrapper.querySelector(\".options-list\");\r\n\r\n        //=== Show/Hide Panel ===//\r\n        if (panel) {\r\n            Phenix(button).toggleClass(\"px-active\");\r\n            Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n\r\n            if (isSmall) {\r\n                Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n            }\r\n        }\r\n    };\r\n\r\n    //===> Component Design <===//\r\n    return (\r\n        <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n            {/*===> Toggle Button <===*/}\r\n            {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n            {/*===> Group <===*/}\r\n            <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                {/*===> Panel Trigger */}\r\n                <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                    {type !== \"image\" && type !== \"video\" ? <>\r\n                        <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\", backgroundColor: value.includes('--wp--preset--color') ? value : null, backgroundImage: value.includes('--wp--preset--gradient') ? value : null}}></span>\r\n                        <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                    </> : <>\r\n                    <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                        <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                    </>}\r\n                    {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                </button>\r\n                {/*===> Type Select <===*/}\r\n                {!colorsOnly && !onlyCG ? \r\n                    <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                        { label: 'color',   value: 'color' },\r\n                        { label: 'image',   value: 'image' },\r\n                        { label: 'gradient',   value: 'gradient' },\r\n                        { label: 'video',   value: 'video' },\r\n                        { label: '3D Viewer',   value: '3d-viewer' },\r\n                    ]}/>\r\n                : onlyCG ? \r\n                    <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                        { label: 'color',   value: 'color' },\r\n                        { label: 'gradient',   value: 'gradient' },\r\n                    ]}/>\r\n                : null}\r\n            </div>\r\n            {/*===> Panel <===*/}\r\n            <div className={`flexbox flow-columns options-list ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pdy-15 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                {type === \"image\" || type === \"video\" || type === \"3d-viewer\" ? <>\r\n                    <MediaUploader key=\"upload-file\" size=\"small\" label={`${type === \"video\" ? \"Video File\" : \"Image File\"}`} value={!value || type === \"video\" ? PhenixBlocks.palette.placeholder : value} setValue={setBackground}></MediaUploader>\r\n\r\n                    {/* ===> Cover File <=== */}\r\n                    {type === \"video\" ? <MediaUploader label=\"Cover File\" key=\"upload-cover-file\" size=\"small\" value={!cover ? PhenixBlocks.palette.placeholder : cover} setValue={setCover}></MediaUploader> : null}\r\n                </> : null}\r\n                {/*===> Colors Set <====*/}\r\n                <div className='flexbox' style={{\"gap\": \"0.75rem\"}}>\r\n                    {type === \"color\" ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].main, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-10 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                        {customColorsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Colors\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customColorsList, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Dark Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-white fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].darkAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Light Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-dark fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].lightAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].status, \"radius-xxl\")}\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Offwhite Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.colors.offwhite, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].brands, \"radius-xxl\")}\r\n                    </>\r\n                    : type === \"gradient\" ? <>\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Phenix Gradients\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.gradients, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        {customGradientsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Gradients\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customGradientsList, \"radius-xxl\")}\r\n                        </>:null}\r\n                    </>:\r\n                    null}\r\n                </div>\r\n            </div>\r\n            {/*===> Rotation Select <===*/}\r\n            {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                    { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                    { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                    { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                    { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                    { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                    { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                    { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                    { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                    { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                ]}/>\r\n            </div> : null}\r\n            {/*===> Rotation Select <===*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhenixBackground;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useMemo } from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nconst PhenixColors = (props) => {\r\n    //===> Properties <===//\r\n    const {value, label, isSmall, placeholder, onChange} = props;\r\n\r\n    //===> Colors List <===//\r\n    const pxPallete = useMemo(() => window.PhenixBlocks.dataLists.paletteText, []);\r\n\r\n    //===> Get Custom Colors and Gradients <===//\r\n    const setting = wp.data.select('core/block-editor').getSettings();\r\n    const editorColors = setting['__experimentalFeatures']?.color;\r\n    const customColorsList = useMemo(() => {\r\n        //===> Generate Custom Colors <===//\r\n        const list = [];\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Set Color <===//\r\n    const setColor = clicked => {\r\n        //===> Get Value <===//\r\n        let button = clicked.target,\r\n            value  = button.getAttribute('data-value');\r\n        //===> Return Options <===//\r\n        return onChange(value);\r\n    };\r\n\r\n    //===> Buttons Creator <===//\r\n    const makeButtons = (list, classes) => {\r\n        let output = [];\r\n        //===> for each item <===//\r\n        for (let index = 0; index < list.length; index++) {\r\n            //===> Get Value <===//\r\n            const name = list[index];\r\n            let title = list[index],\r\n                isColor = !name.includes(\"fa-\");\r\n\r\n            //===> Convert to Title <===//\r\n            if (isColor) {\r\n                //===> Get a Clean Title <===//\r\n                title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ');\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n            } else {\r\n                title = \"Reset\";\r\n            }\r\n\r\n            //===> Button Attributes <====//\r\n            const buttonAttributes = {\r\n                \"title\": title,\r\n                \"onClick\": setColor,\r\n                \"data-value\": isColor ? name : \"\",\r\n                \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                \"style\": {width: \"30px\", height:\"16px\", backgroundColor: name.includes('var') ? name : null},\r\n                \"className\": `${isColor && !name.includes('var') ? name.replace('color-','bg-') : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : null}  ${classes?classes:\"\"}`,\r\n            };\r\n\r\n            //===> Push the Button <===//\r\n            output.push(<button {...buttonAttributes}></button>);\r\n        }\r\n\r\n        //===> Return Buttons <===//\r\n        return output;\r\n    };\r\n\r\n    //===> Colors Panel <===//\r\n    const showPanel = clicked => {\r\n        let button = clicked.target,\r\n            wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n            panel  = Phenix(button).next(\".options-list\");\r\n        //=== Show/Hide Panel ===//\r\n        if (panel) {\r\n            Phenix(button).toggleClass(\"px-active\");\r\n            Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n            \r\n            if (isSmall) {\r\n                Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n            };\r\n        }\r\n    };\r\n\r\n    //===> Component Output <===//\r\n    return (\r\n        <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n            {/*===> Toggle Button <===*/}\r\n            {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n            {/*===> Trigger <===*/}\r\n            <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value.replace(\"color-\",\"bg-\") : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\", backgroundColor: value && value.includes('var') ? value : null}}></span>\r\n                <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n            </button>\r\n            {/*===> Panel <===*/}\r\n            <div className='flexbox px-scrollbar overflow-y-auto options-list pdb-20 pdt-10 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12`}>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.main, \"radius-xxl\")}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                {customColorsList.length > 0 ? <>\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                        {__(\"Custom Colors\", \"pds-blocks\")}\r\n                    </label>\r\n                    {makeButtons(customColorsList, \"radius-xxl\")}\r\n                </>:null}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.status, \"radius-xxl\")}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.social, \"radius-xxl\")}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhenixColors;","import React, { useEffect, Fragment } from '@wordpress/element';\r\n\r\nconst PxDropDown = ({\r\n    label,\r\n    button,\r\n    support,\r\n    dropList,\r\n    children,\r\n    className,\r\n    dataPosition,\r\n    title,\r\n    key\r\n}) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Component Attributes <===\\\\\r\n    const attributes = {};\r\n\r\n    //===> Component Classes <===\\\\\r\n    if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n    if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n    if (key) attributes.key = key;\r\n\r\n    //===> Component Render <===\\\\\r\n    return (\r\n        <Fragment>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PxDropDown;","//===> Get Dynamic URL Suggestions <====//\r\nconst SuggestionsUrl = (props) => (\r\n    <ul className=\"fluid reset-list bg-white bx-shadow-dp-1 border-1 border-solid border-alpha-10 z-index-dropdown position-ab pos-start-0 pos-after-y\">\r\n        {props.suggestions.map((suggestion, index) => {\r\n            return (<li key={`link-sug-key-${index}`} className=\"pdx-15 pdy-5 fs-12 divider-b mouse-pointer\" onClick={() => props.handleSuggestionClick(suggestion)}>\r\n                <strong>{suggestion.title}</strong>\r\n                <span className='display-block fs-10 color-primary tx-nowrap'>{suggestion.url}</span>\r\n            </li>)\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default SuggestionsUrl;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Modules\r\n * ===> 03 - Phenix Icons\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport React, { useState, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Modules <===//\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Icons <===//\r\nconst PhenixIcons = (props) => {\r\n    //===> States <===//\r\n    const [state, setState] = useState({\r\n        iconsPage: 1,\r\n        iconType: \"far\",\r\n        iconName: \"fa-icons\",\r\n        iconsFile: \"fa6-pro.json\",\r\n        iconsList: [],\r\n        iconsPages: {},\r\n        iconsVersion: \"fa6\",\r\n        returnType: null,\r\n        iconsTypes: [\r\n            { value: 'fab', label: 'Brands' },\r\n            { value: 'fat', label: 'Thin' },\r\n            { value: 'fal', label: 'Light' },\r\n            { value: 'far', label: 'Regular' },\r\n            { value: 'fas', label: 'Solid' },\r\n            { value: 'fad', label: 'Duotone' },\r\n            { value: 'fast', label: 'Sharp Thin' },\r\n            { value: 'fasl', label: 'Sharp Light' },\r\n            { value: 'fass', label: 'Sharp Solid' },\r\n            { value: 'fasr', label: 'Sharp Regular' },\r\n        ]\r\n    });\r\n\r\n    //===> Fetch Data When Render <===//\r\n    useEffect(() => {\r\n        apiFetch({ path: \"pds-blocks/v2/options\" }).then((options) => {\r\n            //===> Get Icons Version <===//\r\n            let version = state.iconsVersion;\r\n            if (options.pds_icon_font) {\r\n                version = options.pds_icon_font.replace(\"fontawesome-\", \"fa\").replace(\"-free\", \"\").replace(\"-pro\", \"\");\r\n            }\r\n\r\n             //===> Define FontAwesome Icons File <===//\r\n            let file = props.value.includes(\"fab\") ? `${version}-brands.json` : `${version}-pro.json`;\r\n            //===> FontAwesome Version Correct <===//\r\n            if (version.includes(\"6\")) file = file.replace(\"5\", \"6\");\r\n    \r\n            //===> Start Fetching <===//\r\n            if (state.iconsList.length < 1) {\r\n                fetch(`${PDS_WP_KEY.json}/${file}`).then((res) => res.json()).then((json) => {\r\n                    //===> Assign Icons List <===//\r\n                    const newIconsList = json.icons;\r\n\r\n                    //===> Divide List into Pages <===//\r\n                    const pages = {};\r\n                    for (let item = 0; item < newIconsList.length; item += 200) {\r\n                        //===> Define Page Number <===//\r\n                        let pageNumber = Math.floor(item / 200) + 1;\r\n                        //===> Add item to Pages Object <===//\r\n                        pages[pageNumber] = newIconsList.slice(item, item + 200);\r\n                    }\r\n                    //===> Update State <===//\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        iconsList: newIconsList,\r\n                        iconsPages: pages\r\n                    }));\r\n                });\r\n            } else {\r\n                //===> Divide List into Pages <===//\r\n                const pages = {};\r\n                for (let item = 0; item < state.iconsList.length; item += 200) {\r\n                    let pageNumber = Math.floor(item / 200) + 1;\r\n                    pages[pageNumber] = state.iconsList.slice(item, item + 200);\r\n                }\r\n\r\n                //===> Update State <===//\r\n                setState(prevState => ({...prevState,iconsPages: pages}));\r\n            }\r\n        });\r\n    }, [props.value]);\r\n\r\n    //===> Properties <===//\r\n    const { label, value, version, onChange } = props;\r\n\r\n    //===> Returned Value <===//\r\n    let options = {\r\n        type: value.split(\" \")[0],\r\n        value: value.split(\" \")[1],\r\n    };\r\n\r\n    //===> Set Value <===//\r\n    const set_value = useCallback((clicked) => {\r\n        //===> Get Value <===//\r\n        let button = clicked.target,\r\n            theValue = button?.getAttribute('data-value');\r\n\r\n        //===> Set Value <===//\r\n        options.value = theValue;\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    }, [onChange, options]);\r\n\r\n    //===> Set Type <===//\r\n    const set_type = useCallback((value) => {\r\n        //===> Get Value <===//\r\n        options.type = value;\r\n\r\n        //===> Switched to Brand <===//\r\n        if (value === \"fab\" && !props.value.includes('fab')) options.value = \"fa-wordpress\";\r\n\r\n        //===> Switched from Brand <===//\r\n        if (props.value.includes('fab') && value !== \"fab\") options.value = \"fa-icons\";\r\n\r\n        //===> If Different Set of Icons Reset the List <===//\r\n        if (props.value.includes('fab') && value !== \"fab\" || !props.value.includes('fab') && value === \"fab\") {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                iconsPage: 1,\r\n                iconsList: [],\r\n                iconsPages: {},\r\n                iconType: value,\r\n                iconName: options.value\r\n            }));\r\n        }\r\n        //===> Set Icon Type <===//\r\n        else {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                iconType: value\r\n            }));\r\n        }\r\n\r\n        return onChange(options);\r\n    }, [props.value, onChange, options]);\r\n\r\n    //===> Traveling Buttons <===//\r\n    const travelingButton = useCallback((event) => {\r\n        //===> Get the icons List Wrapper <====//\r\n        let element = event.target,\r\n            travelType = element.getAttribute('data-travel');\r\n\r\n        //===> Get Next Page <===//\r\n        if (travelType === 'next') {\r\n            //===> Exit if Last Page <===//\r\n            if (state.iconsPage === Object.keys(state.iconsPages).length) return;\r\n            //===> Go to Next Page <===//\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                iconsPage: prevState.iconsPage + 1\r\n            }));\r\n        }\r\n        //===> Get Previous Page <===//\r\n        else if (travelType === 'previous') {\r\n            //===> Exit if First Page <===//\r\n            if (state.iconsPage === 1) return;\r\n            //===> Go to Previous Page <===//\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                iconsPage: prevState.iconsPage - 1\r\n            }));\r\n        }\r\n    }, [state.iconsPage, state.iconsPages]);\r\n\r\n    //===> Buttons Creator <===//\r\n    const makeButtons = useCallback((list, type) => {\r\n        //===> Exit if has no items <===//\r\n        if (!list || list.length < 1) return;\r\n\r\n        //===> Define Data <===//\r\n        let buttonsList = [],\r\n            buttonsStyle = {\"fontSize\": \"20px\", \"lineHeight\": \"32px\", \"width\":\"32px\", \"height\":\"32px\", \"borderRadius\": \"3px\", \"padding\": 0},\r\n            buttonItem = (item) => {\r\n                return <button key={`${item}`} onClick={set_value} title={item} data-value={item} className={`reset-button icon-btn-item ${type} ${item} ${state.iconName === item ? 'px-active bg-offwhite-primary' : \"\"}`} style={buttonsStyle}></button>;\r\n            };\r\n\r\n        //===> Create Buttons <===//\r\n        list.forEach((item) => buttonsList.push(buttonItem(item)));\r\n\r\n        //===> Return Buttons <===//\r\n        return buttonsList;\r\n    }, [set_value, state.iconName]);\r\n\r\n    //===> Colors Panel <===//\r\n    const showPanel = useCallback((clicked) => {\r\n        let button = clicked.target,\r\n            wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n            panel = wrapper.querySelector(\".options-list\");\r\n\r\n        //=== Show/Hide Panel ===//\r\n        if (panel) {\r\n            Phenix(button).toggleClass(\"px-active\");\r\n            Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n        }\r\n    }, []);\r\n\r\n    //===> Search in icons <===//\r\n    const iconsFilter = useCallback((changed) => {\r\n        //===> Define Data <===//\r\n        let pages = {},\r\n            input = changed.target,\r\n            value = input.value,\r\n            searchedList;\r\n\r\n        //===> Find the searched icon and remove the reset <===//\r\n        if (value && value !== \"\") {\r\n            searchedList = state.iconsList.filter(icon => icon.includes(value));\r\n        } else {\r\n            searchedList = state.iconsList;\r\n        }\r\n\r\n        //===> Divide List into Pages <===//\r\n        for (let item = 0; item < searchedList.length; item += 200) {\r\n            //===> Define Page Number <===//\r\n            let pageNumber = Math.floor(item / 200) + 1;\r\n            //===> Add item to Pages Object <===//\r\n            pages[pageNumber] = searchedList.slice(item, item + 200);\r\n        }\r\n        \r\n        //===> Set the New List <===//\r\n        setState(prevState => ({...prevState, iconsPage: 1, iconsPages: pages}));\r\n    }, [state.iconsPages]);\r\n\r\n    //===> Component Design <===//\r\n    return (\r\n        <div className={`px-gb-component position-rv mb-10 px-icons-selector ${!label?'pdt-10':''}`}>\r\n            {/*===> Toggle Button <===*/}\r\n            {label?<label className='mb-10 tx-UpperCase fs-13'>{label}</label>:null}\r\n\r\n            {/*===> Group <===*/}\r\n            <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                {/*===> Panel Trigger */}\r\n                <button onClick={showPanel} className={`col-6 w-max-150 fs-13 h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                    <span className={`col tx-nowrap pde-5`} style={{\"lineHeight\": \"20px\"}}>\r\n                        <span className={`pds-icon-preview inline-block me-5 radius-circle bg-alpha-05 ${props.value} position-rv`}></span>\r\n                        {__(\"Replace\", \"pds-blocks\")}\r\n                    </span>\r\n                    <i className='fas fa-pencil fs-12 color-gray'></i>\r\n                </button>\r\n                {/*===> Type Select <===*/}\r\n                <PhenixSelect key={`icons-type`} name=\"icons-type\" className=\"col-6\" value={value.split(\" \")[0]} onChange={(target) => set_type(target.value)} options={state.iconsTypes} />\r\n            </div>\r\n\r\n            {/*===> Panel <===*/}\r\n            <div className={`flexbox align-center tx-align-center options-list pdb-15 pdt-5 bg-white border-1 border-solid border-alpha-25 radius-md radius-bottom hidden fluid`}>\r\n                <input name=\"pds-icons-search\" className='reset-input pdy-5 fs-12 divider-b fluid tx-align-center' onChange={iconsFilter} onKeyUp={iconsFilter} placeholder={__(\"Search in icons\", \"pds-blocks\")} />\r\n                {/*===> Buttons List <===*/}\r\n                <div className=\"bg-alpha-05 fluid pdx-15 pdy-10 icons-listing align-center flexbox px-scrollbar overflow-y-auto mb-10 divider-y\" style={{gap:\"10px\", maxHeight: \"220px\"}}>\r\n                    {state.iconsList.length > 0 ? \r\n                        makeButtons(state.iconsPages[state.iconsPage], state.iconType) : \"No Icons Found.\"\r\n                    }\r\n                </div>\r\n                {/*===> Pagination <===*/}\r\n                <div className='fluid flexbox align-between align-center-y pagination-btns pdx-15'>\r\n                    <button onClick={travelingButton} type=\"button\" data-travel=\"next\" className=\"btn tiny fs-12 radius-sm primary\">{__(\"Next\", \"pds-blocks\")}</button> \r\n                    <span className=\"fs-14 weight-medium\">{state.iconsPage}/{Object.keys(state.iconsPages).length}</span>\r\n                    <button onClick={travelingButton} type=\"button\" data-travel=\"previous\" className=\"btn tiny fs-12 radius-sm gray\">{__(\"Previous\", \"pds-blocks\")}</button> \r\n                </div>\r\n                {/*===> // Pagination <===*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhenixIcons;","//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixInput = (props) => {\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value,  onChange, className, placeholder } = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        if (value !== event.target.value) return onChange(event.target);\r\n    }, [value, onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = {\r\n        onBlur: setValue,\r\n        type: type || \"text\",\r\n        defaultValue: value || \"\",\r\n        placeholder: placeholder || label || \"\",\r\n    };;\r\n\r\n    //===> Render Component <===//\r\n    return (<>\r\n        {/*===> Control Label <===*/}\r\n        {label && <label className='tx-capitalize fs-13' style={{ marginBottom: 5 }}>{label}</label>}\r\n        {/*===> Control Element <===*/}\r\n        <input name={name} className={`form-control ${size ? size : \"small\"} radius-md ${className ? className : \"\"}`} {...attributes}/>\r\n    </>);\r\n}\r\n\r\nexport default PhenixInput;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nconst PhenixNumber = (props) => {\r\n    //===> Properties <===//\r\n    const {label, value, min, max, steps, icon, onChange, name} = props;\r\n\r\n    //===> Set Value <===//\r\n    const setNumber = useCallback((changed) => {\r\n        //===> Get Elements <===//\r\n        const input = changed.target;\r\n        const minNum = parseFloat(min) || Number.MIN_SAFE_INTEGER;\r\n        const maxNum = parseFloat(max) || Number.MAX_SAFE_INTEGER;\r\n        //===> Get Input Element <===//\r\n        const newVal = parseFloat(input.value);\r\n        const checkVal = (newVal >= minNum && newVal <= maxNum) ? newVal : minNum;\r\n        //===> Set Data <===//\r\n        input.value = checkVal;\r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [min, max, onChange]);\r\n\r\n    //===> Increase Number <===//\r\n    const IncreaseNum = useCallback((clicked) => {\r\n        //===> Get Elements <===//\r\n        let button = clicked.target,\r\n            wrapper = button.closest(\".px-counter-input-editor\"),\r\n            maxNum = parseFloat(max) || Number.MAX_SAFE_INTEGER,\r\n            step = steps ? parseFloat(steps) : 1;\r\n\r\n        //===> Get Input Element <===//\r\n        let input = wrapper.querySelector('input[type=\"number\"]'),\r\n            newVal = parseFloat(input.value) + step;\r\n\r\n        //===> Set Data <===//\r\n        input.value = newVal <= maxNum ? newVal : maxNum;\r\n\r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [max, steps, onChange]);\r\n\r\n    //===> Decrease Number <===//\r\n    const DecreaseNum = useCallback((clicked) => {\r\n        //===> Get Elements <===//\r\n        let button = clicked.target,\r\n            wrapper = button.closest(\".px-counter-input-editor\"),\r\n            minNum = parseFloat(min) || Number.MIN_SAFE_INTEGER,\r\n            step = steps ? parseFloat(steps) : 1;\r\n\r\n        //===> Get Input Element <===//\r\n        let input = wrapper.querySelector('input[type=\"number\"]'),\r\n            newVal = parseFloat(input.value) - step;\r\n\r\n        //===> Set Data <===//\r\n        input.value = newVal >= minNum ? newVal : minNum;\r\n\r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [min, steps, onChange]);\r\n\r\n    //===> Output <===//\r\n    return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n        {/*===> Label <===*/}\r\n        <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n        {/*===> Counter Control <===*/}\r\n        <div className={\"px-counter-input-editor position-rv fluid \" + (icon ? icon : \"\")}>\r\n            {/*===> Button <===*/}\r\n            {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n            {/*===> Number Input <===*/}\r\n            <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n            {/*===> Button <===*/}\r\n            <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n            </div>\r\n        </div>\r\n        {/*===> Counter Control <===*/}\r\n    </div>)\r\n}\r\n\r\nexport default PhenixNumber;","//====> .Dependencies. <====//\r\nimport React, { useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixSelect = (props) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = useMemo(() => {\r\n        //===> Define Element Attributes <===//\r\n        let attrs = { onChange: setValue };\r\n        //===> Add Attributes <===//\r\n        if (search) attrs['data-search'] = 1;\r\n        if (multiple) attrs.multiple = multiple;\r\n        if (placeholder) attrs['data-placeholder'] = placeholder;\r\n        //===> Return Attributes <===//\r\n        return attrs;\r\n    }, [setValue, search, multiple, placeholder]);\r\n\r\n    //===> Get Options List <===//\r\n    const options_list = useMemo(() => {\r\n        //===> Define the Options List <===//\r\n        let list = [];\r\n\r\n        //===> Check if Array of Elements <===//\r\n        if (Array.isArray(options) && options.length > 1 && options[1].type) {\r\n            //===> Fix the Default <===//\r\n            if (!options[0].type) options[0] = <option key={0} value={options[0].value}>{`${options[0].label}`}</option>;\r\n\r\n            //===> Add Options to the List <===//\r\n            list = options;\r\n        }\r\n        //===> Grouped Options <===//\r\n        else if (typeof options === 'object' && !Array.isArray(options)) {\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                list.push(options_group);\r\n            });\r\n        } \r\n        //===> Normal Options <===//\r\n        else {\r\n            options.forEach(item => {\r\n                list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        }\r\n        return list;\r\n    }, [options]);\r\n\r\n    //===> Render Component <===//\r\n    return <>\r\n        {/*===> Control Label <===*/}\r\n        {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n        {/*===> Control Element <===*/}\r\n        <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n            <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default PhenixSelect;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = PhenixBlocks.animations.entrance;\r\n        const exit_animations = PhenixBlocks.animations.exit;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                {attributes.style?.animation?.hasExit ?\r\n                    <div className='col-12 mb-5'>\r\n                        <PhenixSelect name=\"animation-exit\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Exit Animation\", \"pds-blocks\")} value={attributes.style?.animation?.exit} onChange={mainSetter} options={exit_animations} />\r\n                    </div>\r\n                :null}\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-inset\" label={__(\"Inset\", \"pds-blocks\")} value={attributes.style?.animation?.inset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Scroll Driven <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <OptionControl name={`animation-scrollDriven`} value=\"boolean\" checked={attributes.style?.animation?.scrollDriven} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Scroll Driven\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Driven Progress <===*/}\r\n                    <div className='col-12 col mb-10'>\r\n                        <PhenixNumber name=\"animation-drivenEnd\" label={__(\"Driven Progress\", \"pds-blocks\")} value={attributes.style?.animation?.drivenEnd || 0} onChange={mainSetter} min={0} max={200} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: <>\r\n                    {/*===> Stagger <===*/}\r\n                    <div className='col-12 col mb-10'>\r\n                        <PhenixNumber name=\"animation-stagger\" label={__(\"Stagger\", \"pds-blocks\")} value={attributes.style?.animation?.stagger || 100} onChange={mainSetter} min={0} max={15000} steps={10}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> .End Stagger. <===*/}\r\n                </>}\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-6 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`animation-hasExit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> .End Columns. <===*/}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Component <===//\r\nexport default class BorderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter, objectSetter, setAttributes} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks;\r\n\r\n        //===> Reset border <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`border-top${screen}`]: \"\",\r\n                [`border-start${screen}`]: \"\",\r\n                [`border-end${screen}`]: \"\",\r\n                [`border-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"border-start\", \"border-end\"],\r\n                propY = [\"border-top\", \"border-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-border-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-start${screen}`]: parseInt(target.value), [`border-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-border-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-top${screen}`]: parseInt(target.value), [`border-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto`}>\r\n            {/*===> Other Options <===*/}\r\n            {!screen || screen !== \"\" ? <>\r\n                <div className='row gpx-15 divider-b mb-15 position-rv'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixSelect name=\"border-style\" placeholder={__(\"Style\", \"pds-blocks\")} className={`mb-10 weight-medium`} value={attributes.style['border-style']} onChange={mainSetter} options={PhenixBlocks.dataLists.styles.border_styles} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixBackground key={`border-color`}\r\n                            isSmall={true}\r\n                            colorsOnly={true}\r\n                            customOnly={true}\r\n                            onChange={(value) => objectSetter(value, \"\", \"style\", \"border-color\", attributes, setAttributes)}\r\n                            type={attributes.style['border-color']?.type || \"color\"}\r\n                            value={attributes.style['border-color']?.value || \"\"}\r\n                            rotate={attributes.style['border-color']?.rotate || null} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>:null}\r\n            <div className='position-rv'>\r\n                {/*===> Bound X <===*/}\r\n                <OptionControl key={`bound-border-x${screen}`} name={`bound-border-x${screen}`} checked={attributes.style[`bound-border-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n                {/*===> Bound Y <===*/}\r\n                <OptionControl key={`bound-border-y${screen}`} name={`bound-border-y${screen}`} checked={attributes.style[`bound-border-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n\r\n                {/*===> Top Controller <===*/}\r\n                <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-top${screen}`} name={`border-top${screen}`} onChange={setValue} value={attributes.style[`border-top${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n                {/*===> X Controls <===*/}\r\n                <div className={`flexbox align-between align-center-y mb-15`}>\r\n                    {/*===> Start Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-start${screen}`} name={`border-start${screen}`} onChange={setValue} value={attributes.style[`border-start${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                    {/*===> Reset Button <===*/}\r\n                    <button key={`reset-border${screen}`} name={`reset-border${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                    {/*===> End Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-end${screen}`} name={`border-end${screen}`} onChange={setValue} value={attributes.style[`border-end${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                </div>\r\n                {/*===> Bottom Controller <===*/}\r\n                <div className='mgx-auto' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-bottom${screen}`}  name={`border-bottom${screen}`} onChange={setValue} value={attributes.style[`border-bottom${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\n\r\n//===> Component <===//\r\nexport default class EffectsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const hover_effect = PhenixBlocks.effects.hover;\r\n        const box_shadows = PhenixBlocks.effects.shadows;\r\n        const animations_effect = PhenixBlocks.effects.animations;\r\n        const other_effects = PhenixBlocks.effects.other_effects;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10 gpy-15`}>\r\n                {/*===> Hover Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"hover-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Hover Effects\", \"pds-blocks\")} value={typeof(attributes.style['hover-effect']) === 'string' ? [attributes.style['hover-effect']] : attributes.style['hover-effect']} onChange={mainSetter} options={hover_effect} />\r\n                </div>\r\n                {/*===> Animation Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"animated-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Always Animated\", \"pds-blocks\")} value={typeof(attributes.style['animated-effect']) === 'string' ? [attributes.style['animated-effect']] : attributes.style['animated-effect']} onChange={mainSetter} options={animations_effect} />\r\n                </div>\r\n                {/*===> Box Shadow <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"box-shadow\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Box Shadow\", \"pds-blocks\")} value={attributes.style['box-shadow']} onChange={mainSetter} options={box_shadows} />\r\n                </div>\r\n                {/*===> Other Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"other-effects\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Other Effects\", \"pds-blocks\")} value={attributes.style['other-effects']} multiple={true} onChange={mainSetter} options={other_effects} />\r\n                </div>\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class MarginSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-margin-option`;\r\n\r\n        //===> Reset <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`mt${screen}`]: \"\",\r\n                [`ms${screen}`]: \"\",\r\n                [`me${screen}`]: \"\",\r\n                [`mb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"ms\", \"me\"],\r\n                propY = [\"mt\", \"mb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-margin-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`ms${screen}`]: parseInt(target.value), [`me${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-margin-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`mt${screen}`]: parseInt(target.value), [`mb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`margin-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-margin-x${screen}`} name={`bound-margin-x${screen}`} checked={attributes.style[`bound-margin-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-margin-y${screen}`} name={`bound-margin-y${screen}`} checked={attributes.style[`bound-margin-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`mt${screen}`} name={`mt${screen}`} onChange={setValue} value={attributes.style[`mt${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`ms${screen}`} name={`ms${screen}`} onChange={setValue} value={attributes.style[`ms${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-margin${screen}`} name={`reset-margin${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`me${screen}`} name={`me${screen}`} onChange={setValue} value={attributes.style[`me${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`mb${screen}`} name={`mb${screen}`} onChange={setValue} value={attributes.style[`mb${screen}`] || 0} min={-2500} max={2500}  steps={1} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PositionSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const zindex_options = PhenixBlocks.zindex_options.map(opt => ({ ...opt, value: `${opt.value}${screen}` }));\r\n        const position_options = PhenixBlocks.position_options.map(opt => ({ ...opt, value: `${opt.value}${screen}` }));\r\n        const preset_positions = PhenixBlocks.preset_positions.map(opt => ({ ...opt, value: `${opt.value}${screen}` }));\r\n\r\n        //===> Reset position <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pos-top${screen}`]: \"\",\r\n                [`pos-start${screen}`]: \"\",\r\n                [`pos-end${screen}`]: \"\",\r\n                [`pos-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pos-start\", \"pos-end\"],\r\n                propY = [\"pos-top\", \"pos-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-position-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-start${screen}`]: parseInt(target.value), [`pos-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-position-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-top${screen}`]: parseInt(target.value), [`pos-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-position-x${screen}`} name={`bound-position-x${screen}`} checked={attributes.style[`bound-position-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-position-y${screen}`} name={`bound-position-y${screen}`} checked={attributes.style[`bound-position-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            \r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-top${screen}`} name={`pos-top${screen}`} onChange={setValue} value={attributes.style[`pos-top${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-start${screen}`} name={`pos-start${screen}`} onChange={setValue} value={attributes.style[`pos-start${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-position${screen}`} name={`reset-position${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-end${screen}`} name={`pos-end${screen}`} onChange={setValue} value={attributes.style[`pos-end${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-bottom${screen}`}  name={`pos-bottom${screen}`} onChange={setValue} value={attributes.style[`pos-bottom${screen}`] || 0} min={-2500} max={2500} steps={1} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            <div className='col-12 pdt-10 divider-t mt-15 row gpx-15'>\r\n                <div className='mb-10 col'>\r\n                    <PhenixSelect key={`position${screen}`} name={`position${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style[`position${screen}`]} onChange={mainSetter} options={position_options} />\r\n                </div>\r\n                <div className='mb-10 col col-6'>\r\n                    <PhenixSelect key={`position-index${screen}`} name={`z-index${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Index Order\", \"pds-blocks\")} value={attributes.style[`z-index${screen}`]} onChange={mainSetter} options={zindex_options} />\r\n                </div>\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`position-preset${screen}`} name={`position-preset${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Preset Position\", \"pds-blocks\")} value={attributes.style[`position-preset${screen}`]} onChange={mainSetter} options={preset_positions} />\r\n                </div>\r\n            </div>\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class SizesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.sizes_range;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Generate Width Sizes <===//\r\n        const width_list = PhenixBlocks.width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-${size}`} }),\r\n              min_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-min-${size}`} }),\r\n              max_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-max-${size}`} });\r\n\r\n        //===> Generate Height Sizes <===//\r\n        const height_list = PhenixBlocks.height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-${size.replace(\"%\", \"\")}`} }),\r\n              min_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-min-${size.replace(\"%\", \"\")}`} }),\r\n              max_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-max-${size.replace(\"%\", \"\")}`} });\r\n\r\n        //===> Add Default Option <===//\r\n        const default_option = { \"label\": __(\"Default\", \"pds-blocks\"), \"value\": \"\" };\r\n        width_list.unshift(default_option);\r\n        min_width_list.unshift(default_option);\r\n        max_width_list.unshift(default_option);\r\n        height_list.unshift(default_option);\r\n        min_height_list.unshift(default_option);\r\n        max_height_list.unshift(default_option);\r\n        \r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Width <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`width_size${screenPoint}`} name={`width_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Width Sizes\", \"pds-blocks\")} value={attributes.style[`width_size${screenPoint}`]} onChange={mainSetter} options={width_list} />\r\n                </div>\r\n                {/*===> Min Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_size${screenPoint}`} name={`min_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Width\", \"pds-blocks\")} value={attributes.style[`min_size${screenPoint}`]} onChange={mainSetter} options={min_width_list} />\r\n                </div>\r\n                {/*===> Max Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_size${screenPoint}`} name={`max_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Width\", \"pds-blocks\")} value={attributes.style[`max_size${screenPoint}`]} onChange={mainSetter} options={max_width_list} />\r\n                </div>\r\n\r\n                {/*===> Height <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`height_size${screenPoint}`} name={`height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Height Sizes\", \"pds-blocks\")} value={attributes.style[`height_size${screenPoint}`]} onChange={mainSetter} options={height_list} />\r\n                </div>\r\n                {/*===> Min Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_height_size${screenPoint}`} name={`min_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Height\", \"pds-blocks\")} value={attributes.style[`min_height_size${screenPoint}`]} onChange={mainSetter} options={min_height_list} />\r\n                </div>\r\n                {/*===> Max Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_height_size${screenPoint}`} name={`max_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Height\", \"pds-blocks\")} value={attributes.style[`max_height_size${screenPoint}`]} onChange={mainSetter} options={max_height_list} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixNumber from '../number';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly, objectSetter, setAttributes} = this.props;\r\n        const uniqueKey = 'x';//Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const radius_sizes = PhenixBlocks.radius_sizes;\r\n        const support_options = PhenixBlocks.support_options;\r\n        const display_options = PhenixBlocks.display_options;\r\n        const radius_directions = PhenixBlocks.radius_directions;\r\n        const background_options = PhenixBlocks.background_options;\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\", \"enable-marquee\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                {/*===> Colors and Gradients <===*/}\r\n                <PhenixBackground key={`background-${uniqueKey}`}\r\n                    colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false}\r\n                    onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false}\r\n                    label={__(\"Background\", \"pds-blocks\")} onChange={mainSetter}\r\n                    type={attributes.style.background?.type || \"color\"}\r\n                    value={attributes.style.background?.value || \"\"}\r\n                    rotate={attributes.style.background?.rotate || null} \r\n                />\r\n\r\n                {/*===> Image Backgrounds <===*/}\r\n                <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                    {/*===> Overlay Options <===*/}\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixSelect className=\"border-alpha-25\" label={attributes.style.overly ?__(\"Overlay\", \"pds-blocks\"):null} key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                    </div>\r\n                    {attributes.style.overly ? <>\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixNumber name=\"overly_opacity\" label={__(\"Overlay Opacity\", \"pds-blocks\")} value={ parseInt(attributes.style.overly_opacity) || 50} onChange={mainSetter} />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {attributes.style.overly === \"overlay-custom\" ? <>\r\n                    <div className='col-12'>\r\n                        {/*===> Colors and Gradients <===*/}\r\n                        <PhenixBackground key={`overlay-background-${uniqueKey}`}\r\n                            customOnly={true}\r\n                            label={__(\"Overlay Background\", \"pds-blocks\")}  onChange={(value) => objectSetter(value, \"\", \"style\", \"overly_bg\", attributes, setAttributes)}\r\n                            type={attributes.style.overly_bg?.type || \"color\"}\r\n                            value={attributes.style.overly_bg?.value || \"\"}\r\n                            rotate={attributes.style.overly_bg?.rotate || null} \r\n                        />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {/*===> Image Options <===*/}\r\n                    {attributes.style.background?.type === \"image\"? <>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </>:null}\r\n                </div>\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Style Properties\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-direction-${uniqueKey}`} name=\"radius-direction\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Radius Direction\", \"pds-blocks\")} value={attributes.style['radius-direction']} onChange={mainSetter} options={radius_directions} />\r\n                            </div>\r\n                        </> : null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Marquee Slider <===*/}\r\n                        {attributes.style.support?.includes('enable-marquee') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`marquee-${uniqueKey}`} name=\"marquee\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Marquee Direction\", \"pds-blocks\")} value={attributes.style.marquee} onChange={mainSetter} options={[\r\n                                    { label: __(\"None\", \"pds-blocks\"), value: '' },\r\n                                    { label: __(\"Marquee Left\", \"pds-blocks\"), value: 'px-marquee' },\r\n                                    { label: __(\"Marquee Right\", \"pds-blocks\"), value: 'px-marquee-reverse' },\r\n                                ]} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <label className='tx-capitalize fs-13'>{__(\"Speed\", \"pds-blocks\")}</label>\r\n                                <PhenixNumber key={`marquee-speed`} name={`marquee-speed`} onChange={mainSetter} value={attributes.style[`marquee-speed`] || 15} min={5} />\r\n                            </div>\r\n                        </> : null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from '../number';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter, exclude, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Options Lists <===//\r\n        const font_weights = PhenixBlocks.typography.weights;\r\n        const font_lineheight = PhenixBlocks.typography.lineheight;\r\n        const text_shadows = PhenixBlocks.typography.shadows;\r\n        const font_families = PhenixBlocks.typography.families;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [{ \"label\": \"Default\",  \"value\": \"\"}],\r\n              display_sizes = [];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        PhenixBlocks.sizes_range.font_sizes.map(size => {\r\n            //===> Normal Size <===//\r\n            if (typeof(size) === \"number\") {\r\n                sizes_list.push({\"label\": size, \"value\": `fs${screenPoint}-${size}`});\r\n            } else {\r\n                sizes_list.push({\"label\": `H${size.replace('h', '')}`, \"value\": `${size}${screenPoint}`});\r\n                display_sizes.push({\"label\": `DH${size.replace('h', '')}`, \"value\": `display${screenPoint}-${size}`});\r\n            }\r\n        });\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect key={`font-size${screenPoint}`} className=\"mb-15\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Family <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`family`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Family\", \"pds-blocks\")} value={attributes.typography[`family`]} onChange={mainSetter} options={font_families} />\r\n                </div>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Margin for List Items <===*/}\r\n                {attributes.type?.includes('list-') || attributes.type === \"list\" ? <>\r\n                <div className='col col-6'>\r\n                    <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.typography[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                </div>\r\n                </> :null}\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {exclude && exclude.includes(\"align\") ? null : <>\r\n                {!options || options.includes(\"align\") ? <>\r\n                    {/*===> Label <===*/}\r\n                    <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                    {/*===> Elements Group <===*/}\r\n                    <div className='flexbox mb-15'>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={mainSetter} type='button-radio' className='small'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                        </OptionControl>\r\n                    </div>\r\n                </>: null}\r\n            </>}\r\n            {!options || options.includes(\"styles\") ? <>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    {/* <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl> */}\r\n                    {/*===> Switch Button <===*/}\r\n                    {/* <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl> */}\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React, { useState, useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst OptionControl = (props) => {\r\n    //===> Properties <===//\r\n    const {name, type, value, checked, onChange, children, required, className} = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Data <===//\r\n    let options = `fs-12 option-control flexbox align-center-y`,\r\n        attributes = {onChange: setValue};\r\n\r\n    //===> Custom Classes <===//\r\n    if (className) options += ` ${className}`;\r\n\r\n    //===> Check if is On <===//\r\n    attributes.defaultChecked = checked;\r\n\r\n    //===> add Options <===//\r\n    if (required) attributes.required = true;\r\n    if (value) attributes.value = value;\r\n\r\n    //===> Render Component <===//\r\n    return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n        <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n        {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n        {children}\r\n    </label>)\r\n}\r\n\r\nexport default OptionControl;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useState } from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nconst ScreensTabs = (props) => {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreensTabs;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { MediaUpload } from '@wordpress/block-editor';\r\nimport { useCallback } from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nconst MediaUploader = ({ label, value, size, type, setValue, className }) => {\r\n    //===> Properties <===//\r\n    const largeImage = useCallback((src) => (<img src={src} className=\"radius-sm radius-top\" style={{ maxWidth: \"100%\", display: \"block\" }} />), []);\r\n    const smallImage = useCallback((src) => ( <img src={src} style={{ maxHeight: \"1.5rem\" }} />), []);\r\n    const largePlaceholder = \"https://placehold.co/600x400/1c1c1c/CCC?text=Change%20Source\";\r\n    const smallPlaceholder = \"https://placehold.co/200x75/1c1c1c/CCC?text=Change%20Source\";\r\n\r\n    //===> Output <===//\r\n    return (<>\r\n        <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                <div className=\"mouse-pointer\" onClick={open}>\r\n                    {/* label */}\r\n                    {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                    {/* elements group */}\r\n                    <div className={`${className ? `${className}` : \"\"} mouse-no-events`}>\r\n                        {size === 'small' ?\r\n                            <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                {!type || type === 'image' ? smallImage(value || smallPlaceholder) : smallImage(smallPlaceholder)}\r\n                                <span key=\"change-media\" className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></span>\r\n                            </div>\r\n                            :\r\n                            <div className='flexbox align-center-y align-between'>\r\n                                {!type || type === 'image' ? largeImage(value || largePlaceholder) : largeImage(largePlaceholder)}\r\n                                <span key=\"change-media\" className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    {/* //elements group */}\r\n                </div>\r\n            )}\r\n        />\r\n    </>\r\n    );\r\n}\r\n\r\nexport default MediaUploader;","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Modules\r\n * ===> 02 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Modules <===//\r\nimport Edit from './edit';\r\nimport {__} from '@wordpress/i18n';\r\nimport metadata from './block.json';\r\nimport {registerBlockType} from '@wordpress/blocks';\r\nimport {InnerBlocks, useBlockProps} from '@wordpress/block-editor';\r\n\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg fill=\"none\" viewBox=\"0 0 32 32\"><path fill=\"#1E1E1E\" d=\"M28.4 0H3.6C1.6 0 0 1.6 0 3.6v24.933C0 30.4 1.6 32 3.6 32h24.933c2 0 3.6-1.6 3.6-3.6V3.6C32 1.6 30.4 0 28.4 0zm.933 28.4c0 .533-.4.933-.933.933H3.6a.911.911 0 01-.933-.933V12.133l8.4-9.466h17.466c.4 0 .8.4.8.933v24.8zM12.4 21.333L21.333 16 12.4 10.667v10.666z\"/></svg>,\r\n    \r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n    \r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //====> Attributes Renderers <====//\r\n        const OptionsRenderer = window.PhenixBlocks.OptionsRenderer;\r\n\r\n        //===> Get Block Properties <===//\r\n        const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps.save(), isSave: true});\r\n        const blockProps = renderProps.blockProps;\r\n        const TagName = attributes.style.isLink || attributes.isLightBox ?  \"a\" : 'div';\r\n\r\n        //===> Links and Lightbox URL <===//\r\n        if (attributes.style.isLink || attributes.isLightBox) blockProps.href = attributes.url || \"#\";\r\n\r\n        //===> Layout Options <===//\r\n        blockProps.className += ` ${renderProps.container.className}`;\r\n\r\n        //===> Default Options <===//\r\n        if(!attributes.setting.type) blockProps['data-type'] = \"image\";\r\n        if(!attributes.setting.src) {\r\n            blockProps['data-src'] = \"https://placehold.co/1024x768.webp\";\r\n            blockProps.style.backgroundImage = \"https://placehold.co/1024x768.webp\";\r\n        }\r\n        if(!attributes.setting.size) blockProps.className += \" ratio-none\";\r\n\r\n        //===> Render <===//\r\n        return (<TagName {...blockProps}>\r\n            {/*===> Image Type <===*/}\r\n            {attributes.setting.type === \"image\" || blockProps['data-type'] === \"image\" ? <img src={attributes.setting.src || blockProps['data-src']} className=\"px-media-img\" /> : null}\r\n            {/*===> Inner Content <===*/}\r\n            {attributes.style['inner-blocks'] === true ? <InnerBlocks.Content /> : null}\r\n        </TagName>);\r\n    }\r\n});"],"names":["Edit","attributes","setAttributes","PhenixBlocks","window","OptionsRenderer","set_value","target","set_url","url","set_setting","setObject","getAttribute","set_style","screen","set_typography","useEffect","viewScript","renderProps","blockProps","useBlockProps","uniqueKey","id","className","container","setting","type","src","style","backgroundImage","size","embed","createElement","Fragment","BlockControls","ToolbarGroup","key","label","__","PhenixSelect","name","placeholder","value","onChange","options","dataLists","media_options","types","embeds","PxDropDown","title","button","dropList","MediaUploader","setValue","cover","PhenixInput","ScreensTabs","md","lg","xl","OptionControl","checked","lazyloading","controls","autoplay","loop","muted","sm","SizesSet","mainSetter","isLink","dataPosition","LinkControlSearchInput","allowDirectEntry","withURLSuggestion","withCreateSuggestion","renderSuggestions","props","SuggestionsUrl","inNewTab","paddingBottom","isLightBox","lightbox_type","lightbox","lightbox_src","file","TextControl","StylesSet","objectSetter","colorSetter","TypographySet","hasIcon","icon","PhenixIcons","paddingTop","support","includes","AnimationsSet","MarginSet","attrSetter","PositionSet","BorderSet","EffectsSet","InspectorControls","PanelBody","initialOpen","preview","PreviewImage","alt","InnerBlocks","template","useMemo","rotate","colorsOnly","onlyCG","isSmall","customOnly","wp","data","select","getSettings","editorColors","color","customColorsList","list","palette","default","forEach","push","slug","custom","customGradientsList","gradients","gradient","set_type","setBackground","clicked","makeButtons","classes","output","index","length","isColor","replace","replaceAll","c","toUpperCase","buttonAttributes","backgroundColor","onClick","wrapper","Phenix","ancestor","panel","querySelector","toggleClass","fadeToggle","gap","maxHeight","main","components","darkAlpha","lightAlpha","status","colors","offwhite","brands","_","set_rotate","pxPallete","paletteText","setColor","width","height","next","social","children","componentsBuilder","suggestions","map","suggestion","handleSuggestionClick","state","setState","useState","iconsPage","iconType","iconName","iconsFile","iconsList","iconsPages","iconsVersion","returnType","iconsTypes","apiFetch","path","then","version","pds_icon_font","fetch","PDS_WP_KEY","json","res","newIconsList","icons","pages","item","pageNumber","Math","floor","slice","prevState","split","useCallback","theValue","travelingButton","event","travelType","Object","keys","buttonsList","buttonsStyle","buttonItem","showPanel","iconsFilter","changed","searchedList","filter","onKeyUp","onBlur","defaultValue","marginBottom","min","max","steps","setNumber","input","minNum","parseFloat","Number","MIN_SAFE_INTEGER","maxNum","MAX_SAFE_INTEGER","newVal","checkVal","IncreaseNum","closest","step","DecreaseNum","multiple","search","attrs","options_list","Array","isArray","entries","group_list","options_group","Component","render","this","entrance_animations","animations","entrance","exit_animations","exit","animation","hasExit","group","PhenixNumber","stagger","duration","delay","offset","inset","reverse","scrollDriven","drivenEnd","newAttributes","isX","some","opt","isY","parseInt","styles","border_styles","PhenixBackground","reset","hover_effect","effects","hover","box_shadows","shadows","animations_effect","other_effects","Date","now","toString","random","substr","zindex_options","position_options","preset_positions","sizes_range","screenPoint","width_list","width_range","min_width_list","max_width_range","max_width_list","height_list","height_range","min_height_list","max_height_range","max_height_list","default_option","unshift","bgOnly","radius_sizes","support_options","display_options","radius_directions","background_options","showSupportOpts","supportedOpts","PhenixColor","typography","background","marginTop","overly","overlay","overly_opacity","overly_bg","sizes","positions","repeat","parallax","radius","display","marquee","exclude","font_weights","weights","font_lineheight","lineheight","text_shadows","font_families","families","sizes_list","display_sizes","font_sizes","weight","document","direction","required","defaultChecked","setScreen","buttons","opts","largeImage","maxWidth","smallImage","largePlaceholder","smallPlaceholder","MediaUpload","onSelect","open","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","metadata","fill","viewBox","edit","save","isSave","TagName","href","Content"],"sourceRoot":""}