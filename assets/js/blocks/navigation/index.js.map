{"version":3,"file":"blocks/navigation/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/navigation/edit.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/icons.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select-data.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"data\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/external window [\"wp\",\"serverSideRender\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/navigation/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport ServerSideRender from '@wordpress/server-side-render';\r\nimport {PanelBody, ToolbarGroup} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport PhenixSelect from '../px-controls/select';\r\nimport OptionControl from '../px-controls/switch';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport SelectFromData from \"../px-controls/select-data\";\r\nimport TypographySet from '../px-controls/sets/typography';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixIcons from '../px-controls/icons';\r\nimport PhenixColor from '../px-controls/colors/text';\r\nimport PhenixBackground from '../px-controls/colors/background';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit(props) {\r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n\r\n    //==> Set Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_typography = (target, screen) => PhenixBlocks.setObject(target, screen, \"typography\", false, attributes, setAttributes);\r\n\r\n    //===> Set icons <===//\r\n    const set_arrow_icon = icon => setAttributes({ arrow_icon: `${icon.type} ${icon.value}`});\r\n    const set_items_icon = icon => setAttributes({ items_icon: `${icon.type} ${icon.value}`});\r\n\r\n    //==> Set Colors <==//\r\n    const set_color = value => {\r\n        //==> Get Current <==//\r\n        let typography = attributes.typography;\r\n\r\n        //==> Set Value <==//\r\n        typography.color = value;\r\n        setAttributes({ typography : {...typography} });\r\n    };\r\n\r\n    const set_color_hvr = value => {\r\n        //==> Get Current <==//\r\n        let typography = attributes.typography;\r\n\r\n        //==> Set Value <==//\r\n        typography.color_hvr = value;\r\n        setAttributes({ typography : {...typography} });\r\n    };\r\n\r\n    //===> Set Backgrounds <===//\r\n    const set_background = background => {\r\n        //==> Get Current <==//\r\n        let styles = attributes.style;\r\n\r\n        //==> Set Value <==//\r\n        styles.background = background;\r\n        setAttributes({ style : {...styles} });\r\n    };\r\n\r\n    const set_background_hvr = background => {\r\n        //==> Get Current <==//\r\n        let styles = attributes.style;\r\n\r\n        //==> Set Value <==//\r\n        styles.background_hvr = background;\r\n        setAttributes({ style : {...styles} });\r\n    };\r\n    \r\n    //===> Get Properties <===//\r\n    const {attributes, setAttributes} = props;\r\n    const blockProps = useBlockProps();\r\n    const uniqueKey = blockProps.id;\r\n\r\n    //===> List View Naming <===//\r\n    if (attributes.metadata?.name) {\r\n        let ListViewItem = document.querySelector(`.block-editor-list-view-tree a[href=\"#block-${blockProps['data-block']}\"] .components-truncate`);\r\n        if(ListViewItem) ListViewItem.textContent = attributes.metadata.name;\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip-bottom w-75' data-title={__(\"HTML Wrapper\", \"pds-blocks\")}>\r\n                    <PhenixSelect name=\"tagName\" placeholder={__(\"div\", \"pds-blocks\")} className={`tx-align-center weight-medium`} value={attributes.tagName} onChange={set_value} options={PhenixBlocks.dataLists.nav_tags} />\r\n                </div>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip' style={{width: 125}} data-title={__(\"Menu Type\", \"pds-blocks\")}>\r\n                    <PhenixSelect name=\"menu_type\" placeholder={__(\"Menu Type\", \"pds-blocks\")} value={ attributes.menu_type } onChange={set_value} options={[\r\n                        { label: 'Classic',  value: 'classic' },\r\n                        { label: 'Taxonomies',  value: 'taxonomies' },\r\n                        { label: 'Posts List',  value: 'posts' },\r\n                    ]} />\r\n                </div>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Style Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-adjust divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        <PhenixSelect name=\"direction\" key=\"direction\" label={__(\"Direction\", \"pds-blocks\")} value={attributes.direction} onChange={set_value} options={[\r\n                            { label: 'Vertical',  value: 'px-vertical' },\r\n                            { label: 'Horizontal',  value: 'flexbox' },\r\n                        ]} />\r\n                        {/*===> Colors <===*/}\r\n                        <label className='mb-5'>{__(\"Text Color\", \"pds-blocks\")}</label>\r\n                        {/*===> Elements Group <===*/}\r\n                        <div className='row gpx-10 position-rv'>\r\n                            {/*===> Column <===*/}\r\n                            <div className='col-6 mb-10'>\r\n                                <PhenixColor key=\"px-color\" placeholder={__(\"Normal\",\"pds-blocks\")} isSmall={true} onChange={set_color} value={attributes.typography.color || \"\"} />\r\n                            </div>\r\n                            {/*===> Column <===*/}\r\n                            <div className='col-6 mb-10'>\r\n                                <PhenixColor key=\"px-color-hvr\" placeholder={__(\"Hover\",\"pds-blocks\")} isSmall={true} onChange={set_color_hvr} value={attributes.typography.color_hvr || \"\"} />\r\n                            </div>\r\n                            {/*===> // Column <===*/}\r\n                        </div>\r\n                        {/*===> Background <===*/}\r\n                        <label className='mb-5'>{__(\"Background Color\", \"pds-blocks\")}</label>\r\n                        {/*===> Elements Group <===*/}\r\n                        <div className='row gpx-10 position-rv'>\r\n                            {/*===> Column <===*/}\r\n                            <div className='col-6 mb-10'>\r\n                                <PhenixBackground key=\"px-bg\" placeholder={__(\"Normal\",\"pds-blocks\")} isSmall={true} colorsOnly={true} onChange={set_background} type={attributes.style.background?.type || \"color\"} value={attributes.style.background?.value || \"\"} rotate={attributes.style.background?.rotate || null} />\r\n                            </div>\r\n                            {/*===> Column <===*/}\r\n                            <div className='col-6 mb-10'>\r\n                                <PhenixBackground key=\"px-bg-hvr\" placeholder={__(\"Hover\",\"pds-blocks\")} isSmall={true} colorsOnly={true} onChange={set_background_hvr} type={attributes.style.background_hvr?.type || \"color\"} value={attributes.style.background_hvr?.value || \"\"} rotate={attributes.style.background_hvr?.rotate || null} />\r\n                            </div>\r\n                            {/*===> // Column <===*/}\r\n                        </div>\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Typography Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-font divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-typography\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <TypographySet key={`typography-${uniqueKey}`} attributes={attributes} mainSetter={set_typography}>\r\n                            {/*===> Column <===*/}\r\n                            <div className='col-6 mb-15'>\r\n                                <PhenixNumber name=\"height\" label={__(\"Line-Height (px)\", \"pds-blocks\")} value={attributes.typography[`height`] ? attributes.typography[`height`] : 34} onChange={set_typography} min={0}></PhenixNumber>\r\n                            </div>\r\n                            {/*===> Column <===*/}\r\n                            <div className='col-6 mb-15'>\r\n                                <PhenixNumber name=\"padding\" label={__(\"Padding (px)\", \"pds-blocks\")} value={attributes.style[`padding`] ? attributes.style[`padding`] : 12} onChange={set_style} min={0}></PhenixNumber>\r\n                            </div>\r\n                            {/*===> // Column <===*/}\r\n                        </TypographySet>\r\n                    </li>\r\n                </PxDropDown>\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Setting\" initialOpen={true}>\r\n                {/*=== Menu ID [Taxonomies/Posts] ===*/}\r\n                {attributes.menu_type === \"posts\" || attributes.menu_type === \"taxonomies\" ? <div className={`row gpx-15`}>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-12 mb-10'>\r\n                        {attributes.menu_type === \"taxonomies\" ? <SelectFromData key={`data-id-${uniqueKey}`} options=\"taxonomies\" name=\"menu_id\" label={__(\"Taxonomy\", \"pds-blocks\")} value={attributes.menu_id} valueSetter={set_value} /> : \r\n                            <SelectFromData key={`data-id-${uniqueKey}`} options=\"post-types\" name=\"menu_id\" label={__(\"Post Type\", \"pds-blocks\")} value={attributes.menu_id} valueSetter={set_value} />\r\n                        }\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    {attributes.menu_type === \"taxonomies\" ?  \r\n                        <div className='col col-12 mb-10'>\r\n                            <SelectFromData key={`data-type-${uniqueKey}`} options=\"post-types\" name=\"post_type\" label={__(\"Post Type\", \"pds-blocks\")} value={attributes.post_type} valueSetter={set_value} />\r\n                        </div>\r\n                    : null }\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6 mb-15'>\r\n                        <PhenixNumber name=\"items_count\" label={__(\"Max Items\", \"pds-blocks\")} value={attributes.items_count} onChange={set_value} min={0}></PhenixNumber>\r\n                    </div>\r\n                </div>\r\n                //===> Menu Locations <====//\r\n                : <div className='mb-10'>\r\n                    <SelectFromData key={`data-id-${uniqueKey}`} options=\"menu-locations\" name=\"menu_id\" label={__(\"Menu-ID\", \"pds-blocks\")} value={attributes.menu_id} valueSetter={set_value} />\r\n                </div>}\r\n\r\n                {/*=== Arrow Icon ===*/}\r\n                <PhenixIcons key=\"arrow_icon\" label={__(\"Dropdown Icon\", \"pds-blocks\")} value={ attributes.arrow_icon } onChange={set_arrow_icon} />\r\n\r\n                {/*=== Items Icon ===*/}\r\n                {attributes.items_icon_op ? \r\n                    <PhenixIcons key=\"items_icon\" label={__(\"Items Icon\", \"pds-blocks\")} value={ attributes.items_icon } onChange={set_items_icon} />\r\n                : null}\r\n\r\n                {/*===> Toggle Options <===*/}\r\n                <OptionControl name={`hover`} value=\"boolean\" checked={attributes.hover} onChange={set_value} type='switch-checkbox' className='small col-6 inline-block'>{__(\"Hover=>Drop\", \"pds-blocks\")}</OptionControl>\r\n                <OptionControl name={`responsive`} value=\"boolean\" checked={attributes.responsive} onChange={set_value} type='switch-checkbox' className='small col-6 inline-block'>{__(\"Responsive\", \"pds-blocks\")}</OptionControl>\r\n                <OptionControl name={`items_icon_op`} value=\"boolean\" checked={attributes.items_icon_op} onChange={set_value} type='switch-checkbox' className='small col-6 inline-block'>{__(\"with Icons\", \"pds-blocks\")}</OptionControl>\r\n                <OptionControl name={`count_badge`} value=\"boolean\" checked={attributes.count_badge} onChange={set_value} type='switch-checkbox' className='small col-6 inline-block'>{__(\"Count Items\", \"pds-blocks\")}</OptionControl>\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            {attributes.responsive ? <>\r\n                <PanelBody title=\"Responsive Options\" initialOpen={true}>\r\n                    {/*===> Elements Group <===*/}\r\n                    <div className='row gpx-20'>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-6 mb-5'>\r\n                            <PhenixSelect name=\"mobile_mode\" key=\"mobile_mode\" label={__(\"Mode\", \"pds-blocks\")} value={attributes.mobile_mode} onChange={set_value} options={[\r\n                                { label: 'Default', value: '' },\r\n                                { label: 'Dropdown', value: 'dropdown' },\r\n                                { label: 'Offcanvas', value: 'custom' },\r\n                            ]}/>\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-6 mb-5'>\r\n                            <PhenixSelect name=\"effect\" key=\"effect\" label={__(\"Effect\", \"pds-blocks\")} value={attributes.effect} onChange={set_value} options={[\r\n                                { label: 'Default', value: '' },\r\n                                { label: 'Sliding', value: 'slide' },\r\n                                { label: 'Fading', value: 'fade' },\r\n                                { label: 'Custom', value: 'custom' },\r\n                            ]}/>\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl name={`trigger`} value=\"boolean\" checked={attributes.trigger} onChange={set_value} type='switch-checkbox' className='small me-10 inline-block'>{__(\"Attach Trigger Button\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                        {/*===> // Column <===*/}\r\n                    </div>\r\n                </PanelBody>\r\n            </> : \"\"}\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        {attributes.preview ? <img src={PreviewImage} alt=\"\" className=\"fluid\" /> : <div {...blockProps}  key={`${uniqueKey}`}>\r\n            <ServerSideRender block=\"phenix/navigation\" attributes={attributes} />\r\n        </div>}\r\n    </>);\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\nimport { select } from '@wordpress/data';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {}\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Get Data <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        //===> Properties <===//\r\n        const {type, value, label, rotate, colorsOnly, onlyCG, isSmall, placeholder, onChange, customOnly} = this.props;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n        const customGradientsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            //===> Default and User Custom <===//\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            if (!colorsOnly) {\r\n                editorColors.gradients?.default?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n                editorColors.gradients?.custom?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n            }\r\n        }\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: type,\r\n            rotate: rotate,\r\n            value: value || \"\",\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_type = type => {\r\n            //===> Set Value <===//\r\n            options.type = type;\r\n\r\n            //===> change value <===//\r\n            if (options.type === 'image') {options.value = PhenixBlocks.palette.placeholder;} \r\n            else {options.value = \"\";}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_rotate = rotate => {\r\n            //===> Set Value <===//\r\n            options.rotate = rotate;\r\n            //===> change value <===//\r\n            if (options.type !== 'gradient') options.value = \"\";\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button?.getAttribute('data-value');\r\n\r\n            //===> Colors & Gradients <===//\r\n            if (type !== 'image' && type !== \"video\") {options.value = value;}\r\n            //===> Image Type <===//\r\n            else {options.value = clicked.url;}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = name,\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace('--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setBackground,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {\"width\":\"30px\",\"height\":\"16px\", backgroundColor: name.includes('var(') && !name.includes('--gradient') ? name : null, backgroundImage: name.includes('--wp--preset--gradient') ? name : null},\r\n                    \"className\":`${isColor && !name.includes('var') ? name : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"} ${classes?classes:\"\"}`\r\n                }\r\n\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        {type !== \"image\" && type !== \"video\" ? <>\r\n                            <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\", backgroundColor: value.includes('--wp--preset--color') ? value : null, backgroundImage: value.includes('--wp--preset--gradient') ? value : null}}></span>\r\n                            <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                        </> : <>\r\n                        <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                            <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                        </>}\r\n                        {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    {!colorsOnly && !onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'image',   value: 'image' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                            { label: 'video',   value: 'video' },\r\n                        ]}/>\r\n                    : onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                        ]}/>\r\n                    : null}\r\n                </div>\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox options-list ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pdy-15 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    {type === \"color\" ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].main, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-10 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                        {customColorsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Colors\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customColorsList, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Dark Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-white fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].darkAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Light Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-dark fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].lightAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].status, \"radius-xxl\")}\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Offwhite Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.colors.offwhite, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].brands, \"radius-xxl\")}\r\n                    </>\r\n                    : type === \"gradient\" ? <>\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Phenix Gradients\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.gradients, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        {customGradientsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Gradients\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customGradientsList, \"radius-xxl\")}\r\n                        </>:null}\r\n                    </>:\r\n                    null}\r\n                    {type === \"image\" || type === \"video\" ? <MediaUploader key=\"upload-file\" value={!value ? PhenixBlocks.palette.placeholder : value} setValue={setBackground}></MediaUploader> : null}\r\n                </div>\r\n                {/*===> Rotation Select <===*/}\r\n                {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                    <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                    <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                        { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                        { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                        { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                        { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                        { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                        { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                        { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                        { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                        { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                    ]}/>\r\n                </div> : null}\r\n                {/*===> Rotation Select <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {value, label, isSmall, placeholder, onChange} = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = window.PhenixBlocks.dataLists.paletteText;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n\r\n        //===> Set Color <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = list[index],\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else {\r\n                    title = \"Reset\";\r\n                }\r\n\r\n                //===> Button Attributes <====//\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setColor,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {width: \"30px\", height:\"16px\", backgroundColor: name.includes('var') ? name : null},\r\n                    \"className\": `${isColor && !name.includes('var') ? name.replace('color-','bg-') : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : null}  ${classes?classes:\"\"}`,\r\n                };\r\n\r\n                //===> Push the Button <===//\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel  = Phenix(button).next(\".options-list\");\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Trigger <===*/}\r\n                <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                    <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value.replace(\"color-\",\"bg-\") : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\", backgroundColor: value && value.includes('var') ? value : null}}></span>\r\n                    <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                    {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n                </button>\r\n                {/*===> Panel <===*/}\r\n                <div className='flexbox px-scrollbar overflow-y-auto options-list pdb-20 pdt-10 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12`}>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.main, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                    {customColorsList.length > 0 ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                            {__(\"Custom Colors\", \"pds-blocks\")}\r\n                        </label>\r\n                        {makeButtons(customColorsList, \"radius-xxl\")}\r\n                    </>:null}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.status, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.social, \"radius-xxl\")}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PxDropDown extends Component {\r\n    //===> States <===//\r\n    state = {opened:false};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            button,\r\n            support,\r\n            dropList,\r\n            children,\r\n            className,\r\n            dataPosition,\r\n            title,\r\n        } = this.props;\r\n\r\n        const attributes = {};\r\n\r\n        if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n        if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n        if (this.props.key) attributes.key = this.props.key;\r\n\r\n        //===> Render Component <===//\r\n        return (<>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Icons <===//\r\nexport default class PhenixIcons extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        icons_page : 1,\r\n        icon_type  : \"far\",\r\n        icon_name  : \"fa-icons\",\r\n        icons_file : \"fa6-pro.json\",\r\n        icons_list : [],\r\n        icons_pages: {},\r\n\r\n        icons_types : [\r\n            { value: 'fab', label: 'Brands' },\r\n\r\n            { value: 'fat', label: 'Thin' },\r\n            { value: 'fal', label: 'Light' },\r\n            { value: 'far', label: 'Regular' },\r\n            { value: 'fas', label: 'Solid' },\r\n            { value: 'fad', label: 'Duotone' },\r\n\r\n            { value: 'fast', label: 'Sharp Thin' },\r\n            { value: 'fasl', label: 'Sharp Light' },\r\n            { value: 'fass', label: 'Sharp Solid' },\r\n            { value: 'fasr', label: 'Sharp Regular' },\r\n        ],\r\n\r\n        icons_version : \"fa6\",\r\n        return_type: null\r\n    };\r\n\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        apiFetch({ path: \"pds-blocks/v2/options\" }).then((options) => {\r\n            //===> Get Icons Data <===//\r\n            let icons_pages = this.state.icons_pages,\r\n                icons_version = this.state.icons_version,\r\n                icons_file = this.state.icons_file,\r\n                icon_type = this.state.icon_type,\r\n                icon_name = this.state.icon_name,\r\n                icons_list = this.state.icons_list;\r\n\r\n            //===> Get Icons Version <===//\r\n            if (options.pds_icon_font) {\r\n                icons_version = options.pds_icon_font.replace(\"fontawesome-\", \"fa\").replace(\"-free\",\"\").replace(\"-pro\",\"\");\r\n            }\r\n\r\n            //===> Define FontAwesome Icons File <===//\r\n            if (this.props.value.includes(\"fab\")) {\r\n                icons_file = `${icons_version}-brands.json`;\r\n            } else {\r\n                icons_file = `${icons_version}-pro.json`;\r\n            }\r\n\r\n            //===> FontAwesome Version Correct <===//\r\n            if(icons_version.includes(\"6\")) icons_file = icons_file.replace(\"5\", \"6\");\r\n\r\n            //===> Set Icon Type <===//\r\n            const icon_value = this.props.value.split(\" \");\r\n\r\n            //===> Reset Icons List <===//\r\n            if (icon_type.includes('fab') && !icon_value[0].includes('fab')) icons_list = [];\r\n\r\n            //===> Set Icon Type <===//\r\n            icon_name = icon_value[1];\r\n            icon_type = icon_value[0];\r\n\r\n            //===> Start Fetching <===//\r\n            if (icons_list.length < 1) {\r\n                fetch(`${PDS_WP_KEY.json}/${icons_file}`).then((res) => res.json()).then((json) => {\r\n                    //===> Assign Icons List <===//\r\n                    if (json.icons !== icons_list) icons_list = json.icons;\r\n                    //===> Divide List into Pages <===//\r\n                    for(let item = 0; item < icons_list.length; item += 200) {\r\n                        //===> Define Page Number <===//\r\n                        let pageNumber = Math.floor(item / 200) + 1;\r\n                        //===> Add item to Pages Object <===//\r\n                        icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                    }\r\n                    //===> Update State <===//\r\n                    this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n                });\r\n            } else {\r\n                //===> Divide List into Pages <===//\r\n                for(let item = 0; item < icons_list.length; item += 200) {\r\n                    //===> Define Page Number <===//\r\n                    let pageNumber = Math.floor(item / 200) + 1;\r\n                    //===> Add item to Pages Object <===//\r\n                    icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                }\r\n                //===> Update State <===//\r\n                this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n            }\r\n        });\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, version, onChange } = this.props;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: value.split(\" \")[0],\r\n            value: value.split(\" \")[1],\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_value = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                theValue  = button?.getAttribute('data-value');\r\n\r\n            //===> Set Value <===//\r\n            options.value = theValue;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        const set_type = value => {\r\n            //===> Set Value <===//\r\n            options.type = value;\r\n\r\n            //===> Switched to Brand <===//\r\n            if (value === \"fab\" && !this.props.value.includes('fab')) options.value = \"fa-wordpress\";\r\n\r\n            //===> Switched from Brand <===//\r\n            if (this.props.value.includes('fab') && value !== \"fab\") options.value = \"fa-icons\";\r\n\r\n            //===> Return Options <===//\r\n            this.setState({icon_type: value, icons_list: [], icons_pages: {}, icons_page: 1, icon_name: options.value}, () => {\r\n                return onChange(options);\r\n            });\r\n        };\r\n\r\n        //===> Traveling Buttons <===//\r\n        const travelingButton = (event) => {\r\n            //===> Get the icons List Wrapper <====//\r\n            let element = event.target,\r\n                travelType = element.getAttribute('data-travel');\r\n\r\n            //===> Get Next Page <===//\r\n            if (travelType === 'next') {\r\n                //===> Exit if Last Page <===//\r\n                if (this.state.icons_page === Object.keys(this.state.icons_pages).length) return;\r\n                //===> Go to Next Page <===//\r\n                this.setState({icons_page: this.state.icons_page + 1});\r\n            }\r\n\r\n            //===> Get Previous Page <===//\r\n            else if (travelType === 'previous') {\r\n                //===> Exit if First Page <===//\r\n                if (this.state.icons_page === 1) return;\r\n\r\n                //===> Go to Previous Page <===//\r\n                this.setState({icons_page: this.state.icons_page - 1});\r\n            }\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            //===> Exit if has no items <===//\r\n            if (!list || list.length < 1) return;\r\n\r\n            //===> Define Data <===//\r\n            let buttonsList  = [],\r\n                buttonsStyle = {\"fontSize\": \"20px\", \"lineHeight\": \"32px\", \"width\":\"32px\", \"height\":\"32px\", \"borderRadius\": \"3px\", \"padding\": 0},\r\n                buttonItem = (item) => {\r\n                    return <button key={`${item}`} onClick={set_value} title={item} data-value={item} className={`reset-button icon-btn-item ${type} ${item} ${this.state.icon_name === item?'px-active bg-offwhite-primary':\"\"}`} style={buttonsStyle}></button>;\r\n                };\r\n\r\n            //===> Create Buttons <===//\r\n            list.forEach((item) => buttonsList.push(buttonItem(item)));\r\n\r\n            //===> Return Buttons <===//\r\n            return buttonsList;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n            }\r\n        };\r\n\r\n        //===> Search in icons <===//\r\n        const iconsFilter = changed => {\r\n            //===> Define Data <===//\r\n            let input = changed.target,\r\n                icons_list = this.state.icons_list,\r\n                value = input.value;\r\n\r\n            //===> Find the searched icon and remove the reset <===//\r\n            let searchedList = icons_list.filter(icon => icon.includes(value));\r\n            \r\n            //===> Set the New List <===//\r\n            if (value.length > 0)  this.setState({icons_list: searchedList, icons_page: 1, icons_pages: {}});\r\n            else this.setState({icons_list: [], icons_page: 1, icons_pages: {}});\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`px-gb-component position-rv mb-10 px-icons-selector ${!label?'pdt-10':''}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label?<label className='mb-10 tx-UpperCase fs-13'>{label}</label>:null}\r\n\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col-6 w-max-150 fs-13 h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        <span className={`col tx-nowrap pde-5`} style={{\"lineHeight\": \"20px\"}}>\r\n                            <span className={`pds-icon-preview inline-block me-5 radius-circle bg-alpha-05 ${this.props.value} position-rv`}></span>\r\n                            {__(\"Replace\", \"pds-blocks\")}\r\n                        </span>\r\n                        <i className='fas fa-pencil fs-12 color-gray'></i>\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    <PhenixSelect key={`icons-type`} name=\"icons-type\" className=\"col-6\" value={value.split(\" \")[0]} onChange={(target) => set_type(target.value)} options={this.state.icons_types} />\r\n                </div>\r\n\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox align-center tx-align-center options-list pdb-15 pdt-5 bg-white border-1 border-solid border-alpha-25 radius-md radius-bottom hidden fluid`}>\r\n                    <input name=\"pds-icons-search\" className='reset-input pdy-5 fs-12 divider-b fluid tx-align-center' onChange={iconsFilter} placeholder={__(\"Search in icons\", \"pds-blocks\")} />\r\n                    {/*===> Buttons List <===*/}\r\n                    <div className=\"bg-alpha-05 fluid pdx-15 pdy-10 icons-listing align-center flexbox px-scrollbar overflow-y-auto mb-10 divider-y\" style={{gap:\"10px\", maxHeight: \"220px\"}}>\r\n                        {this.state.icons_list.length > 0 ? \r\n                            makeButtons(this.state.icons_pages[this.state.icons_page], this.state.icon_type) : \"No Icons Found.\"\r\n                        }\r\n                    </div>\r\n                    {/*===> Pagination <===*/}\r\n                    <div className='fluid flexbox align-between align-center-y pagination-btns pdx-15'>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"next\" className=\"btn tiny fs-12 radius-sm primary\">{__(\"Next\", \"pds-blocks\")}</button> \r\n                        <span className=\"fs-14 weight-medium\">{this.state.icons_page}/{Object.keys(this.state.icons_pages).length}</span>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"previous\" className=\"btn tiny fs-12 radius-sm gray\">{__(\"Previous\", \"pds-blocks\")}</button> \r\n                    </div>\r\n                    {/*===> // Pagination <===*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseFloat(min) || 0,\r\n                  maxNum  = parseFloat(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseFloat(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseFloat(max) || 9999999,\r\n                step    = steps ? parseFloat(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseFloat(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class SelectFromData extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        dataFetched: 0,\r\n        options: [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}],\r\n    };\r\n\r\n    //===> Component Rendered Hook <===//\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        if(this.state.options.length < 2) {\r\n            //===> for PDS Menu Locations <===//\r\n            if (this.props.options === \"menu-locations\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                        locations = options.menu_locations,\r\n                        new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n        \r\n                    //===> add Locations to a List <===//\r\n                    for (const [key, item] of Object.entries(locations)) {\r\n                        new_options_list.push({label: item.title, value: item.name});\r\n                    }\r\n    \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for taxonomies <====//\r\n            else if (this.props.options === \"taxonomies\") {\r\n                //===> Fetch Taxonomies <===//\r\n                apiFetch({path: 'wp/v2/taxonomies'}).then(taxonomies => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n\r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(taxonomies)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        let isCoreType = false;\r\n                        ['nav_menu', 'wp_pattern'].forEach(keyword => key.includes(keyword) ? isCoreType = true : null);\r\n                        //===> If not Core Type Added it <===//\r\n                        if (!isCoreType) new_options_list.push({\"value\":key, \"label\":value.name});\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for taxonomies Terms <====//\r\n            if (this.props.options === \"taxonomies-terms\") {\r\n                //===> Fetch Taxonomies <===//\r\n                apiFetch({path: `wp/v2/${this.props.termType}`}).then(terms => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n\r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(terms)) {\r\n                        new_options_list.push({\"value\": value.id, \"label\": value.name});\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for Post-Types <====//\r\n            else if (this.props.options === \"post-types\") {\r\n                //===> Fetch Post Types <===//\r\n                apiFetch({path: 'wp/v2/types'}).then(post_types => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n            \r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(post_types)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        let isCoreType = false;\r\n                        ['attachment','nav_menu_item','wp_block','wp_navigation','wp_template','wp_template_part','wp_font'].forEach(keyword => key.includes(keyword) ? isCoreType = true : null);\r\n                        //===> If not Core Type Added it <===//\r\n                        if (!isCoreType) new_options_list.push({\"value\":key, \"label\":value.name});\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n\r\n                });\r\n            }\r\n            //====> for Users-Roles <====//\r\n            else if (this.props.options === \"users-roles\") {\r\n                //===> Fetch Roles <===//\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n            \r\n                    //===> Get Current Roles <===//\r\n                    for (const [key, value] of Object.entries(options.users_roles)) {\r\n                        new_options_list.push({\"value\": value.name, \"label\": value.name});\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for Template-Parts <====//\r\n            else if (this.props.options === \"template-parts\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                          template_parts = options.theme_parts,\r\n                          new_options_list = [];\r\n\r\n                    //===> Loop Through Theme-Parts <===//\r\n                    if(template_parts) {\r\n                        Object.entries(template_parts).forEach(([key, value]) => {\r\n                            //===> if its direct theme-part <===//\r\n                            if(typeof(value) === 'string') {\r\n                                new_options_list.push(<option key={`${value}`} value={value.replace(\".php\", \"\")}>{value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}</option>);\r\n                            }\r\n                            //===> if its nested theme-part in a directory <===//\r\n                            else {\r\n                                //===> Define Directory Files <===//\r\n                                let files_list = [];\r\n                                //===> Loop Through Files <===//\r\n                                Object.entries(value).forEach(([key2, value]) => {\r\n                                    //===> add the file to the list <===//\r\n                                    files_list.push(<option key={`${key}-${value}`} value={`${key}/${value.replace(\".php\", \"\")}`}>{`${value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}`}</option>);\r\n                                });\r\n                                //===> Push the Options Group <===//\r\n                                new_options_list.push(<optgroup key={`${key}-group`} label={`${key}`}>{files_list}</optgroup>);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {options, name, type, size, label, value, multiple, valueSetter, className, search, termType } = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Render Component <===//\r\n        return <PhenixSelect key={this.state.dataFetched} type={type} options={this.state.options} multiple={multiple} name={name} placeholder={__(\"Default\", \"pds-blocks\")} label={label} value={value} onChange={valueSetter} className={className} search={search} size={size} />\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixSelect extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    //===> Component Rendered when Props Change <===//\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return (nextProps.value !== this.props.value || nextProps.options !== this.props.options);\r\n    // }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = this.props;\r\n        const uniqueKey = `pds-select-controller`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {onChange: setValue};\r\n\r\n        //===> add Options <===//\r\n        if (search) attributes['data-search'] = 1;\r\n        if (multiple) attributes.multiple = multiple;\r\n        if (placeholder) attributes['data-placeholder'] = placeholder;\r\n\r\n        //===> Get Options List <===//\r\n        let options_list = [];\r\n\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal Lost of Options <===//\r\n            options.forEach(item => {\r\n                options_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            options_list = options;\r\n        } else{\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                options_list.push(options_group);\r\n            });\r\n        }\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n            {/*===> Control Element <===*/}\r\n            <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n                <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from '../number';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Options Lists <===//\r\n        const font_weights = PhenixBlocks.typography.weights;\r\n        const font_lineheight = PhenixBlocks.typography.lineheight;\r\n        const text_shadows = PhenixBlocks.typography.shadows;\r\n        const font_families = PhenixBlocks.typography.families;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [{ \"label\": \"Default\",  \"value\": \"\"}],\r\n              display_sizes = [];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        PhenixBlocks.sizes_range.font_sizes.map(size => {\r\n            //===> Normal Size <===//\r\n            if (typeof(size) === \"number\") {\r\n                sizes_list.push({\"label\": size, \"value\": `fs${screenPoint}-${size}`});\r\n            } else {\r\n                sizes_list.push({\"label\": `H${size.replace('h', '')}`, \"value\": `${size}${screenPoint}`});\r\n                display_sizes.push({\"label\": `DH${size.replace('h', '')}`, \"value\": `display${screenPoint}-${size}`});\r\n            }\r\n        });\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect key={`font-size${screenPoint}`} className=\"mb-15\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Family <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`family`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Family\", \"pds-blocks\")} value={attributes.typography[`family`]} onChange={mainSetter} options={font_families} />\r\n                </div>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Margin for List Items <===*/}\r\n                {attributes.type?.includes('list-') || attributes.type === \"list\" ? <>\r\n                <div className='col col-6'>\r\n                    <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.typography[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                </div>\r\n                </> :null}\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {!options || options.includes(\"align\") ? <>\r\n                {/*===> Label <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox mb-15'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={mainSetter} type='button-radio' className='small'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n            {!options || options.includes(\"styles\") ? <>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, value, checked, onChange, children, required, className} = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, size, type, setValue, className } = this.props;\r\n        const largeImage = (src) => <img src={src} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> ;\r\n        const smallImage = (src) => <img src={src} style={{\"maxHeight\": \"1.5rem\"}} />;\r\n        const largePlaceholder = \"https://placehold.co/600x400/1c1c1c/CCC?text=Change%20Source\";\r\n        const smallPlaceholder = \"https://placehold.co/200x75/1c1c1c/CCC?text=Change%20Source\";\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"} mouse-no-events`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? smallImage(value || smallPlaceholder) : smallImage(smallPlaceholder)}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></button>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? largeImage(value || largePlaceholder) : largeImage(largePlaceholder)}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata.name, {\r\n    title      : metadata.title,\r\n    category   : metadata.category,\r\n    attributes : metadata.attributes,\r\n    icon  : <svg fill=\"none\" viewBox=\"0 0 32 32\"><path fill=\"#000\" fillRule=\"evenodd\" d=\"M16 30C8.268 30 2 23.732 2 16S8.268 2 16 2s14 6.268 14 14-6.268 14-14 14zM0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16S0 24.837 0 16zm9-6a1 1 0 100 2h15a1 1 0 100-2H9zm-1 6a1 1 0 011-1h15a1 1 0 110 2H9a1 1 0 01-1-1zm1 4a1 1 0 100 2h15a1 1 0 100-2H9z\" clipRule=\"evenodd\"/></svg>,\r\n    /**===> @see ./edit.js <===*/\r\n    edit  : Edit,\r\n    save  : () => null\r\n});"],"names":["Edit","props","PhenixBlocks","window","set_value","target","attributes","setAttributes","set_typography","screen","setObject","blockProps","useBlockProps","uniqueKey","id","metadata","name","ListViewItem","document","querySelector","textContent","createElement","Fragment","BlockControls","ToolbarGroup","key","label","__","className","PhenixSelect","placeholder","value","tagName","onChange","options","dataLists","nav_tags","style","width","menu_type","PxDropDown","title","button","dropList","direction","PhenixColor","isSmall","typography","color","color_hvr","PhenixBackground","colorsOnly","background","styles","type","rotate","background_hvr","TypographySet","mainSetter","PhenixNumber","min","set_style","InspectorControls","PanelBody","initialOpen","SelectFromData","menu_id","valueSetter","post_type","items_count","PhenixIcons","arrow_icon","icon","items_icon_op","items_icon","OptionControl","checked","hover","responsive","count_badge","mobile_mode","effect","trigger","preview","src","PreviewImage","alt","ServerSideRender","block","Component","state","render","onlyCG","customOnly","this","setting","wp","data","select","getSettings","editorColors","customColorsList","customGradientsList","palette","default","forEach","push","slug","custom","gradients","gradient","set_type","setBackground","clicked","getAttribute","url","makeButtons","list","classes","output","index","length","isColor","includes","replace","replaceAll","c","toUpperCase","buttonAttributes","backgroundColor","backgroundImage","onClick","wrapper","Phenix","ancestor","panel","toggleClass","fadeToggle","slideToggle","gap","maxHeight","main","components","darkAlpha","lightAlpha","status","colors","offwhite","brands","MediaUploader","setValue","_","set_rotate","PhenixColors","pxPallete","paletteText","setColor","height","next","social","opened","componentDidMount","componentsBuilder","componentDidUpdate","support","children","dataPosition","icons_page","icon_type","icon_name","icons_file","icons_list","icons_pages","icons_types","icons_version","return_type","reRender","apiFetch","path","then","pds_icon_font","icon_value","split","fetch","PDS_WP_KEY","json","res","icons","item","pageNumber","Math","floor","slice","setState","version","theValue","travelingButton","event","travelType","Object","keys","changed","input","searchedList","filter","buttonsList","buttonsStyle","buttonItem","max","steps","DecreaseNum","minNum","parseFloat","step","newVal","maxNum","checkVal","dataFetched","new_state","locations","menu_locations","new_options_list","entries","taxonomies","isCoreType","keyword","termType","terms","post_types","users_roles","template_parts","theme_parts","files_list","key2","size","multiple","search","Date","now","toString","random","substr","options_list","Array","isArray","group_list","options_group","marginBottom","defaultValue","screenPoint","font_weights","weights","font_lineheight","lineheight","text_shadows","shadows","font_families","families","sizes_list","display_sizes","sizes_range","font_sizes","map","weight","required","defaultChecked","largePlaceholder","smallPlaceholder","MediaUpload","onSelect","open","largeImage","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","category","fill","viewBox","fillRule","clipRule","edit","save"],"sourceRoot":""}