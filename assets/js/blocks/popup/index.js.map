{"version":3,"file":"blocks/popup/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/popup/edit.js","webpack://pds-blocks-pro/./src/blocks/px-controls/alignment.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/panel-scripts.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/flexbox.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/popup/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport {useEffect} from '@wordpress/element';\r\nimport {PanelBody, TextControl, Toolbar} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps, useInnerBlocksProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixSelect from '../px-controls/select';\r\nimport OptionControl from '../px-controls/switch';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport FlexboxSet from '../px-controls/sets/flexbox';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\nimport PhenixComponentsBuilder from '../px-controls/panel-scripts';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    //===> Set Settings <===//\r\n    const set_id = id => setAttributes({ id });\r\n\r\n    //===> Get Block Properties <===//\r\n    const blockProps = useBlockProps();\r\n\r\n    //===> Modal Settings <===//\r\n    blockProps.className += ` px-modal hidden align-center`;\r\n    if(attributes.id) blockProps.id = attributes.id;\r\n\r\n    //===> Full Width Editing <===//\r\n    if (!attributes.align) setAttributes({ align: 'full' });\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <Toolbar label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                \r\n            </Toolbar>\r\n        </BlockControls>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\" initialOpen={true}>\r\n                {/*===> Form Control <===*/}\r\n                <TextControl key=\"id\" label={__(\"Modal ID\", \"pds-blocks\")} value={ attributes.id } onChange={set_id}/>\r\n            </PanelBody>\r\n        </InspectorControls>\r\n        {/*===> Modal Component <===*/}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> :<div {...blockProps}>\r\n            <div className='modal-content col'>\r\n                <InnerBlocks />\r\n            </div>\r\n        </div>}\r\n        {/*===> // Modal Component <===*/}\r\n    </>);\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> Media Uploader <===//\r\nexport default class FlexAlignment extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, onChange, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-align-${screen}-option`;\r\n\r\n        //===> Value Handler <===//\r\n        const set_alignment = target => {\r\n            //===> Define Data <===//\r\n            let align_val  = value;\r\n            const current_val = value.trim(),\r\n                  current_values  = current_val.split(\" \"),\r\n                  xTypes = [\"-x\", \"between\", \"around\"],\r\n                  allTypes = [\"-x\", \"between\", \"around\", \"-y\"];\r\n\r\n            //===> Check if the Value has an option with the same type as the target value <===//\r\n            const itHasType = allTypes.some(type => current_val.includes(type)),\r\n                  align_type = xTypes.some(type => target.getAttribute('name').includes(type)) ? \"x\" : \"y\",\r\n                  foundedType = xTypes.some(type => current_val.includes(type)) ? \"x\" : \"y\";\r\n\r\n            //===> if the Value has an Option and the option type is the same as the target <===//\r\n            if (itHasType && align_type === foundedType) {\r\n                //===> Loop on Values <===//\r\n                current_values.forEach(current_value => {\r\n                    //===> if the Founded Type is the same is the Value, Replace the Value <===//\r\n                    if (current_value.includes(align_type)) {\r\n                        align_val = align_val.replace(current_value, target.value);\r\n                    }\r\n                });\r\n            }\r\n            //===> if its a new Value add it <===//\r\n            else {\r\n                align_val += ` ${target.value}`;\r\n            }\r\n\r\n            //===> Return new Value <===//\r\n            return onChange(align_val.trim());\r\n        },\r\n\r\n        //===> Reset Value Method <===//\r\n        reset_align = (clicked) => onChange(\"align-reset\");\r\n\r\n        //===> Output <===//\r\n        return (<div className='components-flex-item flex-alignment-btns'>\r\n            {/*===> Label <===*/}\r\n            <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n                <label className='fs-13 weight-bold'>{label}</label>\r\n                <button type=\"button\" data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"flexbox align-between\"}>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-start-x`)} value={`align${screenPoint}-start-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-center-x`)} value={`align${screenPoint}-center-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-between`)} value={`align${screenPoint}-between`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-around`)} value={`align${screenPoint}-around`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-end-x`)} value={`align${screenPoint}-end-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-start-y`)} value={`align${screenPoint}-start-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-center-y`)} value={`align${screenPoint}-center-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-end-y`)} value={`align${screenPoint}-end-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        colors : [\r\n            \"fas fa-redo tx-align-center\",\r\n\r\n            \"bg-inherit\",\r\n            \"bg-transparent\",\r\n            \"bg-primary\",\r\n            \"bg-primary-dark\",\r\n            \"bg-secondary\",\r\n            \"bg-secondary-dark\",\r\n            \"bg-gray\",\r\n            \"bg-dark\",\r\n            \"bg-white\",\r\n            \"bg-success\",\r\n            \"bg-danger\",\r\n            \"bg-warning\",\r\n            \"bg-info\",\r\n\r\n            \"bg-offwhite-primary\",\r\n            \"bg-offwhite-secondary\",\r\n            \"bg-offwhite-info\",\r\n            \"bg-offwhite-success\",\r\n            \"bg-offwhite-danger\",\r\n            \"bg-offwhite-warning\",\r\n\r\n            \"bg-offwhite-smoke\",\r\n            \"bg-offwhite-gray\",\r\n            \"bg-offwhite-snow\",\r\n            \"bg-offwhite-honeydew\",\r\n            \"bg-offwhite-aliceblue\",\r\n            \"bg-offwhite-ghost\",\r\n            \"bg-offwhite-seashell\",\r\n            \"bg-offwhite-beige\",\r\n            \"bg-offwhite-oldlace\",\r\n            \"bg-offwhite-floral\",\r\n            \"bg-offwhite-antique\",\r\n            \"bg-offwhite-linen\",\r\n            \"bg-offwhite-lavenderblush\",\r\n\r\n            \"bg-facebook\",\r\n            \"bg-twitter\",\r\n            \"bg-youtube\",\r\n            \"bg-instagram\",\r\n            \"bg-snapchat\",\r\n            \"bg-whatsapp\",\r\n            \"bg-pinterest\",\r\n            \"bg-linkedin\",\r\n            \"bg-behance\",\r\n            \"bg-dribbble\",\r\n            \"bg-flicker\",\r\n\r\n            \"bg-alpha-05\",\r\n            \"bg-alpha-10\",\r\n            \"bg-alpha-15\",\r\n            \"bg-alpha-25\",\r\n            \"bg-alpha-50\",\r\n            \"bg-alpha-75\",\r\n\r\n            \"bg-revert-05\",\r\n            \"bg-revert-10\",\r\n            \"bg-revert-15\",\r\n            \"bg-revert-25\",\r\n            \"bg-revert-50\",\r\n            \"bg-revert-75\",\r\n        ],\r\n\r\n        gradients: [\r\n            \"bg-grade-primary\",\r\n            \"bg-grade-secondary\",\r\n            \"bg-grade-warning\",\r\n            \"bg-grade-danger\",\r\n            \"bg-grade-success\",\r\n            \"bg-grade-water\",\r\n            \"bg-grade-ice\",\r\n            \"bg-grade-fire\",\r\n            \"bg-grade-purple\",\r\n            \"bg-grade-primary-offwhite\",\r\n            \"bg-grade-secondary-offwhite\",\r\n            \"bg-grade-primary-secondary\",\r\n            \"bg-grade-primary-secondary-2nd\",\r\n            \"bg-grade-danger-purple\",\r\n            \"bg-grade-primary-purple\",\r\n            \"bg-grade-silver\",\r\n            \"bg-grade-silver-2nd\",\r\n            \"bg-grade-offwhite-red\",\r\n            \"bg-grade-offwhite-blue\",\r\n            \"bg-grade-offwhite-green\",\r\n            \"bg-grade-offwhite-yellow\",\r\n            \"bg-grade-offwhite-silver\",\r\n            \"bg-grade-offwhite-info\",\r\n            \"bg-grade-offwhite-purple\",\r\n            \"bg-grade-offwhite-danger\",\r\n            \"bg-grade-offwhite-yellow-2nd\",\r\n            \"bg-grade-offwhite-blue-2nd \",\r\n            \"bg-grade-offwhite-blue-3rd\",\r\n            \"bg-grade-offwhite-blue-4th\",\r\n        ],\r\n\r\n        rotation : [\r\n            'bg-grade-0',\r\n            'bg-grade-45',\r\n            'bg-grade-90',\r\n            'bg-grade-120',\r\n            'bg-grade-120n',\r\n            'bg-grade-90n',\r\n            'bg-grade-45n',\r\n            'bg-grade-180',\r\n        ],\r\n\r\n        placeholder : \"https://via.placeholder.com/480x200.webp?text=Example\",\r\n    }\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            type,\r\n            value,\r\n            label,\r\n            rotate,\r\n            colorsOnly,\r\n            onlyCG,\r\n            isSmall,\r\n            placeholder,\r\n            onChange\r\n        } = this.props;\r\n\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: type,\r\n            rotate: rotate,\r\n            value: value || \"\",\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_type = type => {\r\n            //===> Set Value <===//\r\n            options.type = type;\r\n\r\n            //===> change value <===//\r\n            if (options.type === 'image') {\r\n                options.value = this.state.placeholder;\r\n            } else {\r\n                options.value = \"\";\r\n            }\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_rotate = rotate => {\r\n            //===> Set Value <===//\r\n            options.rotate = rotate;\r\n\r\n            //===> change value <===//\r\n            if (options.type !== 'gradient') options.value = \"\";\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button?.getAttribute('data-value');\r\n\r\n            //===> Colors & Gradients <===//\r\n            if (type !== 'image') {options.value = value;}\r\n            //===> Image Type <===//\r\n            else {options.value = clicked.url;}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = \"\",\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    title = list[index].replace('bg-', '').replace('-', ' ');\r\n\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                output.push(<button key={`${name.replaceAll(\" \", \"-\")}`} onClick={setBackground} title={title} data-value={isColor ? name : \"\"} className={`${isColor ? name : `${name} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"}`} style={{\"width\":\"30px\",\"height\":\"16px\",\"borderRadius\":\"16px\"}}></button>);\r\n            }\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        {type !== \"image\" ? <>\r\n                            <span className={`me-5 radius-circle inline-block ${value?.length > 0 ? value : \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\"}}></span>\r\n                            <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 ? value.replaceAll(\"-\", \" \").replace(\"bg\",\"\") : placeholder ? placeholder : \"Default\"}</span>\r\n                        </> : <>\r\n                        <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                            <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                        </>}\r\n                        {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    {!colorsOnly && !onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'image',   value: 'image' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                        ]}/>\r\n                    : onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                        ]}/>\r\n                    : null}\r\n                </div>\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox options-list align-between ${type !== \"image\" ? 'pd-15 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: 150}}>\r\n                    {type === \"color\" ? makeButtons(this.state.colors) : type === \"gradient\" ? makeButtons(this.state.gradients) : null}\r\n                    {type === \"image\" ? <MediaUploader key=\"upload-file\" value={!value ? this.state.placeholder : value} setValue={setBackground}></MediaUploader> : null}\r\n                </div>\r\n                {/*===> Rotation Select <===*/}\r\n                {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                    <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                    <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                        { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                        { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                        { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                        { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                        { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                        { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                        { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                        { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                        { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                    ]}/>\r\n                </div> : null}\r\n                {/*===> Rotation Select <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            value,\r\n            label,\r\n            isSmall,\r\n            placeholder,\r\n            onChange\r\n        } = this.props;\r\n\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = [\r\n            \"color-inherit\",\r\n            \"color-transparent\",\r\n            \"color-primary\",\r\n            \"color-primary-dark\",\r\n            \"color-secondary\",\r\n            \"color-secondary-dark\",\r\n            \"color-gray\",\r\n            \"color-dark\",\r\n            \"color-white\",\r\n            \"color-success\",\r\n            \"color-danger\",\r\n            \"color-warning\",\r\n            \"color-info\",\r\n            \"color-facebook\",\r\n            \"color-twitter\",\r\n            \"color-youtube\",\r\n            \"color-instagram\",\r\n            \"color-snapchat\",\r\n            \"color-whatsapp\",\r\n            \"color-pinterest\",\r\n            \"color-linkedin\",\r\n            \"color-behance\",\r\n            \"color-dribbble\",\r\n            \"color-flicker\",\r\n            \"fas fa-redo tx-align-center\"\r\n        ];\r\n\r\n        //===> Set Color <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = \"\",\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    title = list[index].replace('color-', '').replace('-', ' ');\r\n    \r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                output.push(<button key={`${name.replaceAll(\" \", \"-\")}`} onClick={setColor} title={title} data-value={isColor ? name : \"\"} className={`${isColor ? name.replace('color-','bg-') : `${name} color-gray fs-12`} reset-button ${value === name ? 'px-active' : null}`} style={{\"width\":\"30px\",\"height\":\"16px\",\"borderRadius\":\"16px\"}}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel  = Phenix(button).next(\".options-list\");\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Trigger <===*/}\r\n                <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                    <span className={`me-5 radius-circle inline-block ${value?.length > 0 ? value.replace(\"color-\",\"bg-\") : \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\"}}></span>\r\n                    <span className='col'>{value?.length > 0 && !placeholder ? value?.replaceAll(\"-\", \" \").replace(\"color\",\"\") : placeholder ? placeholder : \"Default\"}</span>\r\n                    {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n                </button>\r\n                {/*===> Panel <===*/}\r\n                <div className='flexbox px-scrollbar overflow-y-auto options-list align-between pd-20 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: 150}}>\r\n                    {makeButtons(pxPallete)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport PhenixComponentsBuilder from './panel-scripts';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PxDropDown extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { PhenixComponentsBuilder(); };\r\n    componentDidUpdate() { PhenixComponentsBuilder(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            button,\r\n            support,\r\n            dropList,\r\n            children,\r\n            className,\r\n            dataPosition,\r\n            title,\r\n        } = this.props;\r\n\r\n        const attributes = {};\r\n\r\n\r\n        if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n        if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n\r\n        //===> Render Component <===//\r\n        return (<>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </>)\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseInt(min) || 0,\r\n                  maxNum  = parseInt(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseInt(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseInt(max) || 9999999,\r\n                step    = steps ? parseInt(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseInt(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseInt(value) ? parseInt(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Script Runner <===//\r\nconst PhenixComponentsBuilder = () => {\r\n    //===> Create Time Loop to Find the Elements <===//\r\n    let finder_counter = 0,\r\n        element_finder = setInterval(() => {\r\n            //===> Get Elements <===//\r\n            let elements = document.querySelectorAll('.pds-tm-control');\r\n\r\n            //===> Loop Through Elements <===//\r\n            elements.forEach(element => {\r\n                //===> Define Element Data <===//\r\n                let class_names = element.classList;\r\n\r\n                //===> for Selects <===//\r\n                if (class_names.contains('px-select') && !Phenix(element).ancestor('.px-dropdown')) {\r\n                    Phenix(element).select();\r\n                } else if (class_names.contains('px-dropdown')) {\r\n                    Phenix(element).dropdown();\r\n                    element.querySelectorAll('.pds-tm-control.px-select').forEach(element => Phenix(element).select());\r\n                }\r\n            });\r\n\r\n            //===> Increase Counter <===//\r\n            finder_counter++;\r\n\r\n            //===> Clear Timer Loop <===//\r\n            if (finder_counter > 30) clearInterval(element_finder);\r\n        }, 500);\r\n\r\n    //===> Get View iFrame <===//\r\n    let viewScript = (the_document) => {\r\n        //===> Define Data <===//\r\n        let time_counter = 0,\r\n        //===> Timer Loop <===//\r\n        pds_elements_timer = setInterval(() => {\r\n            //===> Run Multimedia <===//\r\n            the_document.querySelectorAll(`.px-media:not([style*=\"background-image\"])`).forEach(element => {\r\n                element.style.backgroundImage = null;\r\n                Phenix(element).multimedia();\r\n            });\r\n\r\n            //===> Run Sliders <===//\r\n            the_document.querySelectorAll(\".px-slider:not(.block-editor-block-list__block)\").forEach(element => {\r\n                //===> Mark as Editing Mode <===//\r\n                element.classList.add('edit-mode');\r\n\r\n                //===> Disable Autoplay <===//\r\n                if(element.getAttribute('data-autoplay')) element.setAttribute('data-autoplay', false);\r\n\r\n                //===> Replace Data Attributes with Row/Columns Classes <===//\r\n                const slider_cols_fixer = (row) => {\r\n                    //===> Contain the Slides in One Line <====//\r\n                    row.classList.add('flow-nowrap');\r\n                    if (element.getAttribute('data-md')) row.classList.add(`row-cols-md-${element.getAttribute('data-md')}`);\r\n                    if (element.getAttribute('data-lg')) row.classList.add(`row-cols-md-${element.getAttribute('data-lg')}`);\r\n                    if (element.getAttribute('data-xl')) row.classList.add(`row-cols-md-${element.getAttribute('data-xl')}`);\r\n                }\r\n\r\n                slider_cols_fixer(element);\r\n\r\n                //===> Stretch Fix <===//\r\n                // let slider_element = element.querySelector(\".splide__list\"),\r\n                //===> Slides List Finder <===//\r\n                // slider_element_finder = setInterval(() => {\r\n                //     if (!slider_element) {\r\n                //         slider_cols_fixer(element);\r\n                //         slider_element = element.querySelector(\".splide__list\");\r\n                //     } else {\r\n                //         //===> Assign a Max Height for Stretch <===//\r\n                //         slider_element.style.maxHeight = Phenix(slider_element).height();\r\n\r\n                //         //===> Assign Columns Sizes <===//\r\n                //         slider_cols_fixer(slider_element);\r\n                //         element.classList.forEach(class_name => class_name.includes('row-cols') || class_name.includes('flow-') ? element.classList.remove(class_name) : null);\r\n\r\n                //         //===> Clear Timer <===//\r\n                //         clearInterval(slider_element_finder);\r\n                //     }\r\n                // }, 100);\r\n                //===> Run the Slider <===//\r\n                // Phenix(element).slider({autoplay: false});\r\n            });\r\n\r\n            //===> Run Menus <===//\r\n            the_document.querySelectorAll(\".px-navigation\").forEach(element => Phenix(element).menu());\r\n\r\n            //====> Clear Timer <===//\r\n            time_counter += 1; if (time_counter > 100) clearInterval(pds_elements_timer);\r\n        }, 500);\r\n    };\r\n\r\n    //===> Run View Script <===//\r\n    if (window.frames['editor-canvas']) {\r\n        viewScript(window.frames['editor-canvas'].document);\r\n        //===> Load Assets in Frame <====//\r\n        let trying_times = 0, loadAssetTimer = setInterval(()=> {\r\n            //====> if the Document unloaded clear the timer <====//\r\n            if (!window.frames['editor-canvas'] || !window.frames['editor-canvas'].document) {\r\n                clearInterval(loadAssetTimer);\r\n                return;\r\n            } else {\r\n                //===> When the Frame is Found <===//\r\n                if (!window.frames['editor-canvas'].document.querySelector(\"#fontawesome-css\")) {\r\n                    //===> Check in the Editor <===//\r\n                    let frameDoc = window.frames['editor-canvas'].document,\r\n                        fontAwesome = document.querySelector(\"#fontawesome-css\"),\r\n                        importedEl = fontAwesome ? document.importNode(fontAwesome, true) : false;\r\n    \r\n                    //===> Load Font <===//\r\n                    if(importedEl && frameDoc.body) {\r\n                        frameDoc.body.appendChild(importedEl);\r\n                        clearInterval(loadAssetTimer);\r\n                    }\r\n                    \r\n                    //===> Add Scrollbar <===//\r\n                    if (frameDoc && frameDoc.querySelector('html')) {\r\n                        frameDoc.querySelector('html')?.classList.add('px-scrollbar');\r\n                    };\r\n                } else {\r\n                    //===> Increase Counter <===//\r\n                    trying_times += 1;\r\n                    if (trying_times > 10) clearInterval(loadAssetTimer);\r\n                }\r\n            }\r\n        }, 300);\r\n    } else if (window.Phenix) {\r\n        window.document ? viewScript(window.document) : null;\r\n    }\r\n}\r\n\r\nexport default PhenixComponentsBuilder;","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixComponentsBuilder from './panel-scripts';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixSelect extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { PhenixComponentsBuilder(); };\r\n    componentDidUpdate() { PhenixComponentsBuilder(); };\r\n    //===> Component Rendered when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value || nextProps.options !== this.props.options);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {onChange: setValue};\r\n\r\n        //===> add Options <===//\r\n        if (search) attributes['data-search'] = 1;\r\n        if (value) attributes.defaultValue = value;\r\n        if (multiple) attributes.multiple = multiple;\r\n        if (placeholder) attributes['data-placeholder'] = placeholder;\r\n\r\n        //===> Get Options List <===//\r\n        let options_list = [];\r\n\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal Lost of Options <===//\r\n            options.forEach(item => {\r\n                options_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            options_list = options;\r\n        } else{\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                options_list.push(options_group);\r\n            });\r\n        }\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n            {/*===> Control Element <===*/}\r\n            <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`}>\r\n                <select key={`select-element`} name={name} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Options List\r\n//=> entrance-animation, exit-animation, duration, delay\r\n//=> lazyloading, flow/into, offset, lazygroup, effect-animations\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = {\r\n            \"Fading Entrances\" : [\r\n                { \"label\": \"None\", \"value\": \"\"},\r\n                { \"label\": \"fadeIn\", \"value\": \"fadeIn\"},\r\n                { \"label\": \"fadeInUp\", \"value\": \"fadeInUp\"},\r\n                { \"label\": \"fadeInDown\", \"value\": \"fadeInDown\"},\r\n                { \"label\": \"fadeInStart\", \"value\": \"fadeInStart\"},\r\n                { \"label\": \"fadeInEnd\", \"value\": \"fadeInEnd\"},\r\n                { \"label\": \"fadeInTopStart\", \"value\": \"fadeInTopStart\"},\r\n                { \"label\": \"fadeInTopEnd\", \"value\": \"fadeInTopEnd\"},\r\n                { \"label\": \"fadeInBottomStart\", \"value\": \"fadeInBottomStart\"},\r\n                { \"label\": \"fadeInBottomEnd\", \"value\": \"fadeInBottomEnd\"},\r\n                { \"label\": \"fadeInUpBig\", \"value\": \"fadeInUpBig\"},\r\n                { \"label\": \"fadeInDownBig\", \"value\": \"fadeInDownBig\"},\r\n                { \"label\": \"fadeInStartBig\", \"value\": \"fadeInStartBig\"},\r\n                { \"label\": \"fadeInEndBig\", \"value\": \"fadeInEndBig\"},\r\n            ],\r\n\r\n            \"Back Entrances\" : [\r\n                { \"label\": \"backInUp\", \"value\": \"backInUp\"},\r\n                { \"label\": \"backInStart\", \"value\": \"backInStart\"},\r\n                { \"label\": \"backInEnd\", \"value\": \"backInEnd\"},\r\n                { \"label\": \"backInDown\", \"value\": \"backInDown\"},\r\n            ],\r\n            \r\n            \"Bouncing Entrances\" : [\r\n                { \"label\": \"bounceIn\", \"value\": \"bounceIn\"},\r\n                { \"label\": \"bounceInUp\", \"value\": \"bounceInUp\"},\r\n                { \"label\": \"bounceInStart\", \"value\": \"bounceInStart\"},\r\n                { \"label\": \"bounceInEnd\", \"value\": \"bounceInEnd\"},\r\n                { \"label\": \"bounceInDown\", \"value\": \"bounceInDown\"},\r\n            ],\r\n\r\n            \"Flippers Entrances\" : [\r\n                { \"label\": \"flipInX\", \"value\": \"flipInX\"},\r\n                { \"label\": \"flipInY\", \"value\": \"flipInY\"},\r\n            ],\r\n\r\n            \"Lightspeed Entrances\" : [\r\n                { \"label\": \"lightSpeedInStart\", \"value\": \"lightSpeedInStart\"},\r\n                { \"label\": \"lightSpeedInEnd\", \"value\": \"lightSpeedInEnd\"},\r\n            ],\r\n\r\n            \"Rotating Entrances\" : [\r\n                { \"label\": \"rotateIn\", \"value\": \"rotateIn\"},\r\n                { \"label\": \"rotateInDownStart\", \"value\": \"rotateInDownStart\"},\r\n                { \"label\": \"rotateInDownEnd\", \"value\": \"rotateInDownEnd\"},\r\n                { \"label\": \"rotateInUpStart\", \"value\": \"rotateInUpStart\"},\r\n                { \"label\": \"rotateInUpEnd\", \"value\": \"rotateInUpEnd\"},\r\n            ],\r\n\r\n            \"Zooming Entrances\" : [\r\n                { \"label\": \"zoomIn\", \"value\": \"zoomIn\"},\r\n                { \"label\": \"zoomInDown\", \"value\": \"zoomInDown\"},\r\n                { \"label\": \"zoomInStart\", \"value\": \"zoomInStart\"},\r\n                { \"label\": \"zoomInEnd\", \"value\": \"zoomInEnd\"},\r\n                { \"label\": \"zoomInUp\", \"value\": \"zoomInUp\"},\r\n            ],\r\n\r\n            \"Sliding Entrances\" : [\r\n                { \"label\": \"slideInDown\", \"value\": \"slideInDown\"},\r\n                { \"label\": \"slideInStart\", \"value\": \"slideInStart\"},\r\n                { \"label\": \"slideInEnd\", \"value\": \"slideInEnd\"},\r\n                { \"label\": \"slideInUp\", \"value\": \"slideInUp\"},\r\n            ],\r\n\r\n            \"Specials Entrances\" : [\r\n                { \"label\": \"hinge\", \"value\": \"hinge\"},\r\n                { \"label\": \"jackInTheBox\", \"value\": \"jackInTheBox\"},\r\n                { \"label\": \"rollIn\", \"value\": \"rollIn\"},\r\n            ],\r\n\r\n            \"Attention seekers\" : [\r\n                { \"label\": \"bounce\", \"value\": \"bounce\"},\r\n                { \"label\": \"flash\", \"value\": \"flash\"},\r\n                { \"label\": \"pulse\", \"value\": \"pulse\"},\r\n                { \"label\": \"flip\", \"value\": \"flip\"},\r\n                { \"label\": \"rubberBand\", \"value\": \"rubberBand\"},\r\n                { \"label\": \"shakeX\", \"value\": \"shakeX\"},\r\n                { \"label\": \"shakeY\", \"value\": \"shakeY\"},\r\n                { \"label\": \"headShake\", \"value\": \"headShake\"},\r\n                { \"label\": \"swing\", \"value\": \"swing\"},\r\n                { \"label\": \"tada\", \"value\": \"tada\"},\r\n                { \"label\": \"wobble\", \"value\": \"wobble\"},\r\n                { \"label\": \"jello\", \"value\": \"jello\"},\r\n                { \"label\": \"heartBeat\", \"value\": \"heartBeat\"},\r\n            ],\r\n        };\r\n\r\n        const exits_animations = {\r\n            \"Fading Exits\" : [\r\n                { \"label\": \"fadeOut\", \"value\": \"fadeOut\"},\r\n                { \"label\": \"fadeOutUp\", \"value\": \"fadeOutDown\"},\r\n                { \"label\": \"fadeOutDown\", \"value\": \"fadeOutDown\"},\r\n                { \"label\": \"fadeOutStart\", \"value\": \"fadeOutStart\"},\r\n                { \"label\": \"fadeOutEnd\", \"value\": \"fadeOutEnd\"},\r\n                { \"label\": \"fadeOutTopStart\", \"value\": \"fadeOutTopStart\"},\r\n                { \"label\": \"fadeOutTopEnd\", \"value\": \"fadeOutTopEnd\"},\r\n                { \"label\": \"fadeOutBottomStart\", \"value\": \"fadeOutBottomStart\"},\r\n                { \"label\": \"fadeOutBottomEnd\", \"value\": \"fadeOutBottomEnd\"},\r\n                { \"label\": \"fadeOutUpBig\", \"value\": \"fadeOutUpBig\"},\r\n                { \"label\": \"fadeOutDownBig\", \"value\": \"fadeOutDownBig\"},\r\n                { \"label\": \"fadeOutStartBig\", \"value\": \"fadeOutStartBig\"},\r\n                { \"label\": \"fadeOutEndBig\", \"value\": \"fadeOutEndBig\"},\r\n            ],\r\n\r\n            \"Back Exits\" : [\r\n                { \"label\": \"backOutUp\", \"value\": \"backOutUp\"},\r\n                { \"label\": \"backOutStart\", \"value\": \"backOutStart\"},\r\n                { \"label\": \"backOutEnd\", \"value\": \"backOutEnd\"},\r\n                { \"label\": \"backOutDown\", \"value\": \"backOutDown\"},\r\n            ],\r\n\r\n            \"Bouncing Exits\" : [\r\n                { \"label\": \"bounceOut\", \"value\": \"bounceOut\"},\r\n                { \"label\": \"bounceOutUp\", \"value\": \"bounceOutUp\"},\r\n                { \"label\": \"bounceOutStart\", \"value\": \"bounceOutStart\"},\r\n                { \"label\": \"bounceOutEnd\", \"value\": \"bounceOutEnd\"},\r\n                { \"label\": \"bounceOutDown\", \"value\": \"bounceOutDown\"},\r\n            ],\r\n\r\n            \"Flippers Exits\" : [\r\n                { \"label\": \"flipOutX\", \"value\": \"flipOutX\"},\r\n                { \"label\": \"flipOutY\", \"value\": \"flipOutY\"},\r\n            ],\r\n\r\n            \"Lightspeed Exits\" : [\r\n                { \"label\": \"lightSpeedOutStart\", \"value\": \"lightSpeedOutStart\"},\r\n                { \"label\": \"lightSpeedOutEnd\", \"value\": \"lightSpeedOutEnd\"},\r\n            ],\r\n\r\n            \"Rotating Exits\" : [\r\n                { \"label\": \"rotateOut\", \"value\": \"rotateOut\"},\r\n                { \"label\": \"rotateOutDownStart\", \"value\": \"rotateOutDownStart\"},\r\n                { \"label\": \"rotateOutDownEnd\", \"value\": \"rotateOutDownEnd\"},\r\n                { \"label\": \"rotateOutUpStart\", \"value\": \"rotateOutUpStart\"},\r\n                { \"label\": \"rotateOutUpEnd\", \"value\": \"rotateOutUpEnd\"},\r\n            ],\r\n\r\n            \"Zooming Exits\" : [\r\n                { \"label\": \"zoomOut\", \"value\": \"zoomOut\"},\r\n                { \"label\": \"zoomOutDown\", \"value\": \"zoomOutDown\"},\r\n                { \"label\": \"zoomOutStart\", \"value\": \"zoomOutStart\"},\r\n                { \"label\": \"zoomOutEnd\", \"value\": \"zoomOutEnd\"},\r\n                { \"label\": \"zoomOutUp\", \"value\": \"zoomOutUp\"},\r\n            ],\r\n\r\n            \"Sliding Exits\" : [\r\n                { \"label\": \"slideOutDown\", \"value\": \"slideOutDown\"},\r\n                { \"label\": \"slideOutStart\", \"value\": \"slideOutStart\"},\r\n                { \"label\": \"slideOutEnd\", \"value\": \"slideOutEnd\"},\r\n                { \"label\": \"slideOutUp\", \"value\": \"slideOutUp\"},\r\n            ],\r\n\r\n            \"Specials Exits\" : [\r\n                { \"label\": \"rollOut\", \"value\": \"rollOut\"},\r\n            ],\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                <div className='col-7 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`animation-exit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    {/* <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div> */}\r\n                    {/*===> Column <===*/}\r\n                    {/* <div className='col-12'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div> */}\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: null}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport OptionControl from '../switch';\r\nimport FlexAlignment from '../alignment';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Options List\r\n//=> align, flex-props, grid-props\r\n\r\n//===> Component <===//\r\nexport default class FlexboxSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className={`row gpx-15 ${className ? className : \"\"}`}>\r\n                {/*===> Column <===*/}\r\n                {!options || options.includes(\"align\") ? <>\r\n                <div className='col-12 mb-15'>\r\n                    <FlexAlignment screen={screen} label={__(\"Flexbox Alignment\", \"pds-blocks\")} value={attributes.flexbox[`align${screenPoint}`] || \"\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)}></FlexAlignment>\r\n                </div>\r\n                </>: null}\r\n                {/*===> Group <===*/}\r\n                <div className='col-12 row gpx-10 pdt-5 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-X Space\", \"pds-blocks\")} name={`gpx${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpx${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 flexbox gpy-5'>\r\n                    {/*===> Label <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <label className='col-12 mb-5 tx-UpperCase'>{__(\"Flow Options\", \"pds-blocks\")}</label> : null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <OptionControl name={`flow${screenPoint}`} value={!attributes.flexbox[`stacked${screenPoint}`] || attributes.flexbox[`stacked${screenPoint}`] === \"\" ? `flow${screenPoint}-reverse` : `flow${screenPoint}-columns-reverse`} checked={attributes.flexbox[`flow${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Reverse \", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl name={`stacked${screenPoint}`} value={`flow${screenPoint}-columns`} checked={attributes.flexbox[`stacked${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Stacked\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl name={`nowrap${screenPoint}`} value={`flow${screenPoint}-nowrap`} checked={attributes.flexbox[`nowrap${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Nowrap\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider && !screen ? <OptionControl name={`equals${screenPoint}`} checked={attributes.flexbox.equals} onChange={mainSetter} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Equal Cols.\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider ? <OptionControl name={`masonry${screenPoint}`} value={`px-masonry${screenPoint}`} checked={attributes.flexbox[`masonry${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Masonry\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    <OptionControl name={`gpy-fix`} value={`gpy-fix`} checked={attributes.flexbox[`gpy-fix`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Gap Y fix\", \"pds-blocks\")}</span>\r\n                    </OptionControl>\r\n                    {/*===> Other Button <===*/}\r\n                    {this.props.children ? this.props.children : null}\r\n                </div>\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const position_options = [\r\n            { \"label\": \"Default\", \"value\": \"\"},\r\n            { \"label\": \"Fixed\", \"value\": \"position-fx\"},\r\n            { \"label\": \"Static\", \"value\": \"position-none\"},\r\n            { \"label\": \"Sticky\", \"value\": \"position-st\"},\r\n            { \"label\": \"Absolute\", \"value\": \"position-ab\"},\r\n            { \"label\": \"Relative\", \"value\": \"position-rv\"},\r\n            { \"label\": \"Sticky(S)\", \"value\": \"sticky-absolute\"},\r\n        ];\r\n\r\n        const radius_sizes = [\r\n            { label: __(\"None\", \"pds-blocks\"), value: '' },\r\n            { label: __(\"Tiny\", \"pds-blocks\"), value: 'radius-sm' },\r\n            { label: __(\"Small\", \"pds-blocks\"), value: 'radius-md' },\r\n            { label: __(\"Medium\", \"pds-blocks\"), value: 'radius-lg' },\r\n            { label: __(\"Large\", \"pds-blocks\"), value: 'radius-xl' },\r\n            { label: __(\"xLarge\", \"pds-blocks\"), value: 'radius-xxl' },\r\n            { label: __(\"Circle\", \"pds-blocks\"), value: 'radius-circle' },\r\n            { label: __(\"Rounded\", \"pds-blocks\"), value: 'radius-height' },\r\n        ];\r\n\r\n        const display_options = {\r\n            \"Mobile Screens\" : [\r\n                { \"label\": \"Flex\", \"value\": \"display-flex\"},\r\n                { \"label\": \"Grid\", \"value\": \"display-grid\"},\r\n                { \"label\": \"Block\", \"value\": \"display-block\"},\r\n                { \"label\": \"Flexbox\", \"value\": \"flexbox\"},\r\n                { \"label\": \"Inline-Block\", \"value\": \"inline-block\"},\r\n                { \"label\": \"Hidden SM <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden\"},\r\n                { \"label\": \"Hidden SM <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-sm-down\"},\r\n            ],\r\n            \"Tablet Screens\" : [\r\n                { \"label\": \"Flex MD\", \"value\": \"display-md-flex\"},\r\n                { \"label\": \"Grid MD\", \"value\": \"display-md-grid\"},\r\n                { \"label\": \"Block MD\", \"value\": \"display-md-block\"},\r\n                { \"label\": \"Hidden MD <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden-md-up\"},\r\n                { \"label\": \"Hidden MD <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-md-down\"},\r\n                { \"label\": \"Inline-Block MD\", \"value\": \"inline-block-md\"},\r\n            ],\r\n            \"Laptop Screens\" : [\r\n                { \"label\": \"Flex LG\", \"value\": \"display-lg-flex\"},\r\n                { \"label\": \"Grid LG\", \"value\": \"display-lg-grid\"},\r\n                { \"label\": \"Block LG\", \"value\": \"display-lg-block\"},\r\n                { \"label\": \"Hidden LG <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden-lg-up\"},\r\n                { \"label\": \"Hidden LG <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-lg-down\"},\r\n                { \"label\": \"Inline-Block LG\", \"value\": \"inline-block-lg\"},\r\n            ],\r\n            \"Desktop Screens\" : [\r\n                { \"label\": \"Flex XL\", \"value\": \"display-xl-flex\"},\r\n                { \"label\": \"Grid XL\", \"value\": \"display-xl-grid\"},\r\n                { \"label\": \"Block XL\", \"value\": \"display-xl-block\"},\r\n                { \"label\": \"Hidden XL <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden-xl-up\"},\r\n                { \"label\": \"Hidden XL <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-xl-down\"},\r\n                { \"label\": \"Inline-Block XG\", \"value\": \"inline-block-xl\"},\r\n            ],\r\n        };\r\n\r\n        const support_options = [\r\n            { label: __(\"Margin\", \"pds-blocks\"), value: 'enable-margin' },\r\n            { label: __(\"Padding\", \"pds-blocks\"), value: 'enable-padding' },\r\n            { label: __(\"Radius\", \"pds-blocks\"), value: 'enable-radius' },\r\n            { label: __(\"Display\", \"pds-blocks\"), value: 'enable-display' },\r\n            { label: __(\"Position\", \"pds-blocks\"), value: 'enable-position' },\r\n            { label: __(\"Animations\", \"pds-blocks\"), value: 'enable-animations' },\r\n            { label: __(\"Animated Childs\", \"pds-blocks\"), value: 'px-animate' },\r\n            { label: __(\"Overlapped\", \"pds-blocks\"), value: 'overlapped' },\r\n        ];\r\n\r\n        const background_options = {\r\n            sizes : [\r\n                { label:\"all-100\", value:\"bgs-100\" },\r\n                { label:\"all-auto\", value:\"bgs-auto\"},\r\n                { label:\"width-25\", value:\"bgw-25\"},\r\n                { label:\"width-50\", value:\"bgw-50\"},\r\n                { label:\"width-75\", value:\"bgw-75\"},\r\n                { label:\"width-90\", value:\"bgw-90\"},\r\n                { label:\"width-100\", value:\"bgw-100\"},\r\n                { label:\"height-25\", value:\"bgh-25\"},\r\n                { label:\"height-50\", value:\"bgh-50\"},\r\n                { label:\"height-75\", value:\"bgh-75\"},\r\n                { label:\"height-90\", value:\"bgh-90\"},\r\n                { label:\"height-100\", value:\"bgh-100\"},\r\n            ],\r\n        \r\n            repeat : [\r\n                { label:\"repeat\", value: \"bgr\"},\r\n                { label:\"repeat-x\", value: \"bgr-x\"},\r\n                { label:\"repeat-y\", value: \"bgr-y\"},\r\n                { label:\"repeat-none\", value: \"bgr-n\"},\r\n            ],\r\n        \r\n            positions : [\r\n                { label:\"top-start\", value: \"bgp-ts\"},\r\n                { label:\"top-center\", value: \"bgp-tc\"},\r\n                { label:\"top-end\", value: \"bgp-te\"},\r\n                { label:\"center-start\", value: \"bgp-cs\"},\r\n                { label:\"center-center\", value: \"bgp-cc\"},\r\n                { label:\"center-end\", value: \"bgp-ce\"},\r\n                { label:\"bottom-start\", value: \"bgp-bs\"},\r\n                { label:\"bottom-center\", value: \"bgp-bc\"},\r\n                { label:\"bottom-end\", value: \"bgp-be\"},\r\n            ],\r\n    \r\n            animations : [\r\n                { label:\"Animated X\", value: \"bg-animated-x\"},\r\n                { label:\"Animated Y\", value: \"bg-animated-y\"},\r\n                { label:\"Zooming BG\", value: \"bg-animated-zoom\"},\r\n            ],\r\n\r\n            overlay : [\r\n                { label:\"None\", value: \"\"},\r\n                { label:\"Dark\", value: \"overlay-dark\"},\r\n                { label:\"Light\", value: \"overlay-light\"},\r\n                { label:\"Custom\", value: \"overlay-custom\"},\r\n            ],\r\n        }\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                <PhenixBackground key={`background-${uniqueKey}`} colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false} onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false} label={__(\"Background\", \"pds-blocks\")}  onChange={mainSetter} type={attributes.style.background?.type || \"color\"} value={attributes.style.background?.value || \"\"} rotate={attributes.style.background?.rotate || null} />\r\n                {attributes.style.background?.type === \"image\" ? \r\n                    <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </div>\r\n                : null }\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Support\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <div className='col col-6'>\r\n                            <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                        </div> : null}\r\n\r\n                        {/*===> Sticky Element <===*/}\r\n                        {attributes.style.support?.includes('enable-position') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`position-${uniqueKey}`} name=\"position\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style.position} onChange={mainSetter} options={position_options} />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-typography-${screen}-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [],\r\n            origin_sizes = [\r\n                ``,\r\n                `fs${screenPoint}-12`,\r\n                `fs${screenPoint}-13`,\r\n                `fs${screenPoint}-14`,\r\n                `fs${screenPoint}-15`,\r\n                `fs${screenPoint}-16`,\r\n                `fs${screenPoint}-17`,\r\n                `fs${screenPoint}-18`,\r\n                `fs${screenPoint}-19`,\r\n                `fs${screenPoint}-20`,\r\n                `fs${screenPoint}-22`,\r\n                `fs${screenPoint}-24`,\r\n                `fs${screenPoint}-25`,\r\n                `fs${screenPoint}-26`,\r\n                `fs${screenPoint}-28`,\r\n                `fs${screenPoint}-30`,\r\n                `h1${screenPoint}`, `h2${screenPoint}`, `h3${screenPoint}`, `h4${screenPoint}`, `h5${screenPoint}`, `h6${screenPoint}`,\r\n                `display${screenPoint}-h1`, `display${screenPoint}-h2`, `display${screenPoint}-h3`, `display${screenPoint}-h4`, `display${screenPoint}-h5`, `display${screenPoint}-h6`\r\n            ];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        origin_sizes.forEach(size => {\r\n            //===> Filter Value and Label <===//\r\n            let true_label =`${size.replace(`fs${screenPoint}-`, \"\").replace(`display${screenPoint}-`,\"D\").replace(screenPoint, '').replace('-','').replace(`h`, 'H')}${size.includes(`fs${screenPoint}-`) ? 'px':''}`;\r\n            if (size === \"\") true_label = __(\"Default\", \"pds-blocks\");\r\n            sizes_list.push({\"label\": true_label, \"value\": size});\r\n        });\r\n\r\n        //===> Weights List <===//\r\n        const font_weights = [\r\n            { \"label\": \"Default\",  \"value\": \"\"},\r\n            { \"label\": \"Thin\",  \"value\": \"weight-thin\"},\r\n            { \"label\": \"Light\",  \"value\": \"weight-light\"},\r\n            { \"label\": \"Extra Light\",  \"value\": \"weight-xlight\"},\r\n            { \"label\": \"Normal\",  \"value\": \"weight-normal\"},\r\n            { \"label\": \"Medium\",  \"value\": \"weight-medium\"},\r\n            { \"label\": \"Semi-Bold\",  \"value\": \"weight-bold\"},\r\n            { \"label\": \"Bold\",  \"value\": \"weight-strong\"},\r\n            { \"label\": \"Heavy\",  \"value\": \"weight-xbold\"},\r\n            { \"label\": \"Black\",  \"value\": \"weight-black\"}\r\n        ];\r\n\r\n        //===> Lineheight List <===//\r\n        const font_lineheight = [\r\n            { \"label\": \"Default\",  \"value\": \"\"},\r\n            { \"label\": \"130%\",  \"value\": \"lineheight-100\"},\r\n            { \"label\": \"130%\",  \"value\": \"lineheight-120\"},\r\n            { \"label\": \"130%\",  \"value\": \"lineheight-130\"},\r\n            { \"label\": \"150%\",  \"value\": \"lineheight-150\"},\r\n            { \"label\": \"160%\",  \"value\": \"lineheight-160\"},\r\n            { \"label\": \"170%\",  \"value\": \"lineheight-170\"},\r\n            { \"label\": \"180%\",  \"value\": \"lineheight-180\"},\r\n            { \"label\": \"inherit\",  \"value\": \"lineheight-inherit\"},\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                <PhenixSelect className=\"mb-10\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={sizes_list} search={true} />\r\n            </>: null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={sizes_list} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {!options || options.includes(\"align\") ? <>\r\n                {/*===> Label <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox mb-15'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox mb-15'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            name,\r\n            type,\r\n            value,\r\n            checked,\r\n            onChange,\r\n            children,\r\n            required,\r\n            className\r\n        } = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class ScreensTabs extends Component {\r\n    //===> States <===//\r\n    state = {screen : this.props.sm ? \"sm\" : \"md\"};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const screenContent = this.props[`${this.state.screen}`];\r\n\r\n        //===> Options Changer <===//\r\n        const changeTab = (clicked) => {\r\n            //===> Option Data <===//\r\n            let element = clicked.target;\r\n            //===> Show Options <===//\r\n            this.setState({screen: element.getAttribute('data-options')});\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className='px-gb-tabs'>\r\n                {/*===> Tabs Buttons <===*/}\r\n                <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                    {this.props.sm ? <button key=\"mobile\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"sm\" ? \"bg-alpha-05\" : \"primary\"} col far fa-mobile`} title={__(\"Mobile Screens\", \"pds-blocks\")}  data-options=\"sm\"></button> : null}\r\n                    {this.props.md ? <button key=\"tablet\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"md\" ? \"bg-alpha-05\" : \"primary\"} col far fa-tablet`} title={__(\"Tablet Screens\", \"pds-blocks\")}  data-options=\"md\"></button> : null}\r\n                    {this.props.lg ? <button key=\"laptop\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"lg\" ? \"bg-alpha-05\" : \"primary\"} col far fa-laptop`} title={__(\"Desktop Screens\", \"pds-blocks\")} data-options=\"lg\"></button> : null}\r\n                    {this.props.xl ? <button key=\"desktop\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"xl\" ? \"bg-alpha-05\" : \"primary\"} col far fa-desktop`} title={__(\"xLarge Screens\", \"pds-blocks\")}  data-options=\"xl\"></button> : null}\r\n                </div>\r\n                {/*===> Screen <====*/}\r\n                <div className={`${this.state.screen}-options`}>{screenContent(this.state.screen)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            value,\r\n            size,\r\n            type,\r\n            setValue,\r\n            className,\r\n        } = this.props;\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"}`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? <img src={value} style={{\"maxHeight\": \"1.5rem\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></button>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? <img src={value} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Modules <===//\r\nimport Edit from './edit';\r\nimport {__} from '@wordpress/i18n';\r\nimport metadata from './block.json';\r\nimport {registerBlockType} from '@wordpress/blocks';\r\nimport {InnerBlocks, useBlockProps, useInnerBlocksProps} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg fill=\"none\" viewBox=\"0 0 35 35\"><path fill=\"#000\" d=\"M32.949 16.512a1 1 0 102 0h-2zm-19.715 11.16l.875-.485a1 1 0 00-.875-.515v1zm3.101 5.591l-.875.485.875-.485zm2.307 0l.875.485-.875-.485zm3.101-5.591v-1a1 1 0 00-.874.515l.874.485zm13.206-4.185a1 1 0 00-2 0h2zm-8.672-8.137a1 1 0 000-2v2zm-17.576-2a1 1 0 100 2v-2zm9.904 7.58a1 1 0 000-2v2zm-9.904-2a1 1 0 000 2v-2zM33.949 7.678a1 1 0 000-2v2zm-32.92-2a1 1 0 000 2v-2zm33.92 10.834V3.818h-2v12.694h2zm0-12.694a3.79 3.79 0 00-3.79-3.79v2c.989 0 1.79.802 1.79 1.79h2zm-3.79-3.79H3.819v2h27.34v-2zm-27.34 0a3.79 3.79 0 00-3.79 3.79h2c0-.988.8-1.79 1.79-1.79v-2zm-3.79 3.79v19.669h2V3.818h-2zm0 19.669a5.185 5.185 0 005.184 5.185v-2a3.185 3.185 0 01-3.184-3.185h-2zm5.184 5.185h8.021v-2h-8.02v2zm7.147-.515l3.1 5.591 1.75-.97-3.101-5.591-1.75.97zm3.1 5.591c.884 1.593 3.174 1.593 4.057 0l-1.75-.97a.32.32 0 01-.557 0l-1.75.97zm4.057 0l3.1-5.591-1.748-.97-3.101 5.591 1.749.97zm2.226-5.076h8.021v-2h-8.02v2zm8.021 0a5.185 5.185 0 005.185-5.185h-2a3.185 3.185 0 01-3.185 3.185v2zM26.277 13.35H8.7v2h17.576v-2zm-7.672 5.58H8.7v2h9.904v-2zM33.949 5.678H1.029v2h32.92v-2zm.93-1.86a3.79 3.79 0 00-3.79-3.79v2c.989 0 1.79.802 1.79 1.79h2zM31.09.028a3.79 3.79 0 00-3.79 3.79h2c0-.988.802-1.79 1.79-1.79v-2zm-3.79 3.79a3.79 3.79 0 003.79 3.79v-2a1.79 1.79 0 01-1.79-1.79h-2zm3.79 3.79a3.79 3.79 0 003.79-3.79h-2a1.79 1.79 0 01-1.79 1.79v2zm-1.79-3.79a3.79 3.79 0 00-3.79-3.79v2c.989 0 1.79.802 1.79 1.79h2zM25.51.028a3.79 3.79 0 00-3.79 3.79h2c0-.988.802-1.79 1.79-1.79v-2zm-3.79 3.79a3.79 3.79 0 003.79 3.79v-2a1.79 1.79 0 01-1.79-1.79h-2zm3.79 3.79a3.79 3.79 0 003.79-3.79h-2a1.79 1.79 0 01-1.79 1.79v2z\"/></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const blockProps = useBlockProps.save();\r\n\r\n        //===> Modal Settings <===//\r\n        blockProps.className += ` px-modal hidden align-center`;\r\n        if(attributes.id) blockProps.id = attributes.id;\r\n\r\n        //===> Render <===//\r\n        return (<div {...blockProps}>\r\n            <div className='modal-content col'>\r\n                <InnerBlocks.Content />\r\n            </div>\r\n        </div>);\r\n    }\r\n});"],"names":["Edit","attributes","setAttributes","blockProps","useBlockProps","className","id","align","BlockControls","Toolbar","label","__","InspectorControls","key","PanelBody","title","initialOpen","TextControl","value","onChange","preview","src","PreviewImage","alt","InnerBlocks","FlexAlignment","this","props","screen","screenPoint","button_style","set_alignment","Date","now","toString","Math","random","substr","target","align_val","current_val","trim","current_values","split","xTypes","itHasType","some","type","includes","align_type","getAttribute","foundedType","forEach","current_value","replace","onClick","clicked","name","checked","Component","PhenixBackground","colors","gradients","rotation","placeholder","rotate","colorsOnly","onlyCG","isSmall","options","set_type","state","setBackground","button","url","makeButtons","list","output","index","length","isColor","c","toUpperCase","push","replaceAll","style","wrapper","Phenix","ancestor","panel","querySelector","toggleClass","fadeToggle","slideToggle","gap","maxHeight","setValue","_","set_rotate","PhenixColors","setColor","next","PhenixNumber","min","max","steps","icon","DecreaseNum","minNum","parseInt","step","input","newVal","changed","maxNum","checkVal","finder_counter","element_finder","setInterval","document","querySelectorAll","element","class_names","classList","contains","select","dropdown","clearInterval","viewScript","the_document","time_counter","pds_elements_timer","backgroundImage","multimedia","row","add","setAttribute","menu","window","frames","trying_times","loadAssetTimer","frameDoc","fontAwesome","importedEl","importNode","body","appendChild","PhenixSelect","PhenixComponentsBuilder","nextProps","nextState","size","multiple","search","event","defaultValue","options_list","Array","isArray","item","Object","entries","group_list","options_group","marginBottom","OptionControl","_Component","_inherits","_super","_this","_classCallCheck","_len","arguments","args","_key","_defineProperty","_assertThisInitialized","call","apply","concat","_this$props","children","required","defaultChecked","React","createElement","_extends","MediaUploader","Fragment","MediaUpload","onSelect","render","_ref","open","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","Error","p","registerBlockType","metadata","fill","viewBox","edit","save"],"sourceRoot":""}