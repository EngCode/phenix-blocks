{"version":3,"file":"blocks/popup/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;CAgBA;;AACe,SAASW,IAAT,OAA6C;EAAA,IAA7BC,UAA6B,QAA7BA,UAA6B;EAAA,IAAjBC,aAAiB,QAAjBA,aAAiB;;EACxD;EACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,EAAE;IAAA,OAAIF,aAAa,CAAC;MAAEE,EAAE,EAAFA;IAAF,CAAD,CAAjB;EAAA,CAAjB,CAFwD,CAIxD;;;EACA,IAAMC,UAAU,GAAGR,sEAAa,EAAhC;EACA,IAAMS,gBAAgB,GAAGR,4EAAmB,EAA5C,CANwD,CAQxD;;EACAO,UAAU,CAACE,SAAX;EACAD,gBAAgB,CAACC,SAAjB;EACA,IAAGN,UAAU,CAACG,EAAd,EAAkBC,UAAU,CAACD,EAAX,GAAgBH,UAAU,CAACG,EAA3B,CAXsC,CAaxD;;EACA,IAAI,CAACH,UAAU,CAACO,KAAhB,EAAuBN,aAAa,CAAC;IAAEM,KAAK,EAAE;EAAT,CAAD,CAAb,CAdiC,CAgBxD;;EACA,oBAAQ,uDAEJ,oBAAC,sEAAD;IAAmB,GAAG,EAAC;EAAvB,gBAEI,oBAAC,4DAAD;IAAW,KAAK,EAAC,kBAAjB;IAAoC,WAAW,EAAE;EAAjD,gBAEI,oBAAC,8DAAD;IAAa,GAAG,EAAC,IAAjB;IAAsB,KAAK,EAAEnB,mDAAE,CAAC,UAAD,EAAa,QAAb,CAA/B;IAAuD,KAAK,EAAGY,UAAU,CAACG,EAA1E;IAA+E,QAAQ,EAAED;EAAzF,EAFJ,CAFJ,CAFI,eAUJ,2BAASE,UAAT,eAEI,2BAASC,gBAAT,CAFJ,CAVI,CAAR;AAiBH;;;;;;;;;;ACtDD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;CAGA;;AACA;CAQA;;AACAI,oEAAiB,CAACD,wCAAD,EAAW;EACxBE,IAAI,eAAG;IAAK,OAAO,EAAC,KAAb;IAAmB,KAAK,EAAC,4BAAzB;IAAsD,CAAC,EAAC,KAAxD;IAA8D,CAAC,EAAC,KAAhE;IAAsE,OAAO,EAAC;EAA9E,gBAA0F;IAAM,IAAI,EAAC,SAAX;IAAqB,CAAC,EAAC;EAAvB,EAA1F,CADiB;;EAGxB;EACAC,IAAI,EAAGZ,6CAJiB;;EAMxB;EACAa,IAAI,EAAG,oBAAoB;IAAA,IAAjBZ,UAAiB,QAAjBA,UAAiB;IACvB;IACA,IAAMI,UAAU,GAAGR,uEAAA,EAAnB;IACA,IAAMS,gBAAgB,GAAGR,6EAAA,EAAzB,CAHuB,CAKvB;;IACAO,UAAU,CAACE,SAAX;IACAD,gBAAgB,CAACC,SAAjB;IACA,IAAGN,UAAU,CAACG,EAAd,EAAkBC,UAAU,CAACD,EAAX,GAAgBH,UAAU,CAACG,EAA3B,CARK,CAUvB;;IACA,oBAAQ,2BAASC,UAAT,eAEJ,oBAAC,wEAAD,OAFI,CAAR;EAIH;AAtBuB,CAAX,CAAjB,C","sources":["webpack://phenix-blocks/./src/blocks/popup/edit.js","webpack://phenix-blocks/external window [\"wp\",\"blockEditor\"]","webpack://phenix-blocks/external window [\"wp\",\"blocks\"]","webpack://phenix-blocks/external window [\"wp\",\"components\"]","webpack://phenix-blocks/external window [\"wp\",\"i18n\"]","webpack://phenix-blocks/webpack/bootstrap","webpack://phenix-blocks/webpack/runtime/compat get default export","webpack://phenix-blocks/webpack/runtime/define property getters","webpack://phenix-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://phenix-blocks/webpack/runtime/make namespace object","webpack://phenix-blocks/./src/blocks/popup/index.js"],"sourcesContent":["//====> WP Modules <====//\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport {\r\n    PanelBody,\r\n    TextControl,\r\n    SelectControl,\r\n    ToggleControl,\r\n    DropdownMenu,\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    RichText,\r\n    InnerBlocks,\r\n    useBlockProps,\r\n    useInnerBlocksProps,\r\n    InspectorControls\r\n} from '@wordpress/block-editor';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    //===> Set Settings <===//\r\n    const set_id = id => setAttributes({ id });\r\n\r\n    //===> Get Block Properties <===//\r\n    const blockProps = useBlockProps();\r\n    const innerBlocksProps = useInnerBlocksProps();\r\n\r\n    //===> Modal Settings <===//\r\n    blockProps.className += ` px-modal hidden align-center`;\r\n    innerBlocksProps.className += ` modal-content`;\r\n    if(attributes.id) blockProps.id = attributes.id;\r\n\r\n    //===> Full Width Editing <===//\r\n    if (!attributes.align) setAttributes({ align: 'full' });\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\" initialOpen={true}>\r\n                {/*===> Form Control <===*/}\r\n                <TextControl key=\"id\" label={__(\"Modal ID\", \"phenix\")} value={ attributes.id } onChange={set_id}/>\r\n            </PanelBody>\r\n        </InspectorControls>\r\n        {/*===> Modal Component <===*/}\r\n        <div {...blockProps}>\r\n            {/*===> Container <===*/}\r\n            <div {...innerBlocksProps}></div>\r\n            {/*===> Container <===*/}\r\n        </div>\r\n        {/*===> // Modal Component <===*/}\r\n    </>);\r\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n    useInnerBlocksProps,\r\n} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\"><path fill=\"#1E1E1E\" d=\"M21.2,2.8H2.8C1.2,2.8,0,4.1,0,5.6v12.7c0,1.6,1.3,2.8,2.8,2.8h18.4c1.6,0,2.8-1.3,2.8-2.8V5.6C24,4.1,22.8,2.8,21.2,2.8z M15.4,4.9v14.2H8.5V4.9H15.4z M2.1,18.4V5.6c0-0.4,0.3-0.7,0.7-0.7h3.5v14.2H2.8C2.4,19.1,2.1,18.8,2.1,18.4z M21.9,18.4c0,0.4-0.3,0.7-0.7,0.7h-3.7V4.9h3.7c0.4,0,0.7,0.3,0.7,0.7V18.4z\"/></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const blockProps = useBlockProps.save();\r\n        const innerBlocksProps = useInnerBlocksProps.save();\r\n\r\n        //===> Modal Settings <===//\r\n        blockProps.className += ` px-modal hidden align-center`;\r\n        innerBlocksProps.className += ` modal-content`;\r\n        if(attributes.id) blockProps.id = attributes.id;\r\n\r\n        //===> Render <===//\r\n        return (<div {...blockProps}>\r\n            {/*===> Container <===*/}\r\n            <InnerBlocks.Content />\r\n        </div>);\r\n    }\r\n});"],"names":["__","PanelBody","TextControl","SelectControl","ToggleControl","DropdownMenu","RichText","InnerBlocks","useBlockProps","useInnerBlocksProps","InspectorControls","Edit","attributes","setAttributes","set_id","id","blockProps","innerBlocksProps","className","align","metadata","registerBlockType","icon","edit","save"],"sourceRoot":""}