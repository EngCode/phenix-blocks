{"version":3,"file":"blocks/px-wrapper/index.js","mappings":"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","sources":["webpack://phenix-ui/./src/blocks/px-components/flex-alignment.js","webpack://phenix-ui/./src/blocks/px-wrapper/edit.js","webpack://phenix-ui/external window [\"wp\",\"blockEditor\"]","webpack://phenix-ui/external window [\"wp\",\"blocks\"]","webpack://phenix-ui/external window [\"wp\",\"components\"]","webpack://phenix-ui/external window [\"wp\",\"element\"]","webpack://phenix-ui/webpack/bootstrap","webpack://phenix-ui/webpack/runtime/compat get default export","webpack://phenix-ui/webpack/runtime/define property getters","webpack://phenix-ui/webpack/runtime/hasOwnProperty shorthand","webpack://phenix-ui/./src/blocks/px-wrapper/index.js"],"sourcesContent":["/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\nimport {\r\n    PanelBody,\r\n    SelectControl,\r\n    ToggleControl\r\n} from '@wordpress/components';\r\n\r\n//===> Phenix Background <===//\r\nexport default class FlexAlignment extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            flow,\r\n            value,\r\n            onChange\r\n        } = this.props;\r\n\r\n        //===> Alignment Buttons <===//\r\n        const createAlignment = (screen) => {\r\n            if (!screen) screen = \"\";\r\n            {/*===> Responsive Devices <===*/}\r\n            return (<>\r\n                <label className='mb-10 fluid weight-medium'>Horizontal Align</label>\r\n                <div className='px-group borderd-group radius-sm border-1 border-solid border-alpha-10 mb-20'>\r\n                    <button onClick={setAlignment} title=\"Start\" className={`btn small ${value.includes(`align${screen}-start-x`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-x-start`} data-screen={screen} data-value={`align${screen}-start-x`}></button>\r\n                    <button onClick={setAlignment} title=\"Center\" className={`btn small ${value.includes(`align${screen}-center-x`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-x-center`} data-screen={screen} data-value={`align${screen}-center-x`}></button>\r\n                    <button onClick={setAlignment} title=\"End\" className={`btn small ${value.includes(`align${screen}-end-x`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-x-end`} data-screen={screen} data-value={`align${screen}-end-x`}></button>\r\n                    <button onClick={setAlignment} title=\"Between\" className={`btn small ${value.includes(`align${screen}-between`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-x-between`} data-screen={screen} data-value={`align${screen}-between`}></button>\r\n                    <button onClick={setAlignment} title=\"Around\" className={`btn small ${value.includes(`align${screen}-around`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-x-around`} data-screen={screen} data-value={`align${screen}-around`}></button>\r\n                </div>\r\n                <label className='mb-10 fluid weight-medium'>Vertical Align</label>\r\n                <div className='px-group borderd-group radius-sm border-1 border-solid border-alpha-10 mb-20'>\r\n                    <button onClick={setAlignment} title=\"Start\" className={`btn small ${value.includes(`align${screen}-start-y`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-y-start`} data-screen={screen} data-value={`align${screen}-start-y`}></button>\r\n                    <button onClick={setAlignment} title=\"Center\" className={`btn small ${value.includes(`align${screen}-center-y`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-y-center`} data-screen={screen} data-value={`align${screen}-center-y`}></button>\r\n                    <button onClick={setAlignment} title=\"End\" className={`btn small ${value.includes(`align${screen}-end-y`) ? 'bg-offwhite-smoke' : 'light'} col pxi pxi-align-y-end`} data-screen={screen} data-value={`align${screen}-end-y`}></button>\r\n                </div>\r\n            </>)\r\n        }\r\n\r\n        //===> Set Alignment <===//\r\n        const setAlignment = clicked => {\r\n            //===> Element Data <===//\r\n            let button = clicked.target,\r\n                newVal = button.getAttribute('data-value'),\r\n                other  = [],\r\n                screen = button.getAttribute('data-screen') || '';\r\n\r\n            //===> Get Sibling Values <===//\r\n            button.parentNode.querySelectorAll('.btn').forEach(element => {\r\n                other.push(element.getAttribute('data-value'));\r\n            });\r\n\r\n            /*===> if Current Value has Current Screen Point <===*/\r\n            if (value.includes(screen)) value.split(' ').forEach(item => {\r\n                //===> if the siblings has the item in it remove it <===//\r\n                if (other.includes(item)) value.replace(item, '');\r\n                //===> if the item is not in siblings add it <===//\r\n                else if (item.length > 1) newVal = `${item} ${newVal}`;\r\n            });\r\n            \r\n            /*===> else if its New Screen Point <===*/\r\n            else newVal = `${value} ${newVal}`;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(`${newVal}`);\r\n        }\r\n\r\n        //===> Default Flow <===//\r\n        let isReversed = () => {\r\n            if (value.includes('flow-reverse')) return true;\r\n            else return false;\r\n        };\r\n\r\n        //===> Set Flow <===//\r\n        const setFlow = toggle => {\r\n            //===> Get Current Value <===//\r\n            let current = value;\r\n\r\n            //===> .if already reversed. <===//\r\n            if (isReversed()) {\r\n                current = current.replaceAll('flow-reverse');\r\n            }\r\n            //===> .if not make it. <===//\r\n            else {\r\n                current = `${value} flow-reverse`;\r\n            }\r\n\r\n            //===> Return Options <===//\r\n            return onChange(current);  \r\n        }\r\n\r\n        //===> Options Changer <===//\r\n        const changeTab = (clicked) => {\r\n            //===> Option Data <===//\r\n            let element = Phenix(clicked.target),\r\n                parent  = element.ancestor('.options-tabs'),\r\n                optionsList = Phenix(parent).next('.options-list'),\r\n                currentActive = Phenix(parent.querySelector('.primary')),\r\n                currentType = `${element[0].getAttribute('data-options')}-options`,\r\n                targetElement = optionsList.querySelector(`.${currentType}`);\r\n\r\n            //===> Change Active <===//\r\n            currentActive.addClass('light').removeClass('primary');\r\n            element.addClass('primary').removeClass('light');\r\n\r\n            //===> Show Options <===//\r\n            optionsList.querySelector('.flexbox:not(.hidden)')?.classList.add('hidden');\r\n            Phenix(targetElement).removeClass('hidden');\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className='px-gb-component'>\r\n                {/*=== Flow Reverse ===*/}\r\n                <ToggleControl label=\"Flow Reverse ?\" checked={isReversed()} onChange={setFlow}/>\r\n                {/* Divider */}\r\n                <span className='display-block border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                {/*===> Responsive Devices <===*/}\r\n                <div className='options-tabs px-group borderd-group radius-sm border-1 border-solid border-alpha-10 mb-20'>\r\n                    <button onClick={changeTab} className={`btn square tiny primary col far fa-mobile`} title=\"Mobile Screens\"  data-options=\"small\"></button>\r\n                    <button onClick={changeTab} className={`btn square tiny light col far fa-tablet`}   title=\"Tablet Screens\"  data-options=\"medium\"></button>\r\n                    <button onClick={changeTab} className={`btn square tiny light col far fa-laptop`}   title=\"Desktop Screens\" data-options=\"large\"></button>\r\n                    <button onClick={changeTab} className={`btn square tiny light col far fa-desktop`}  title=\"xLarge Screens\"  data-options=\"xlarge\"></button>\r\n                </div>\r\n                {/*===> Options Tabs <===*/}\r\n                <div className='options-list'>\r\n                    {/*===> Small <====*/}\r\n                    <div className={`flexbox small-options`}>\r\n                        {createAlignment()}\r\n                    </div>\r\n                    {/*===> Medium <====*/}\r\n                    <div className={`flexbox medium-options hidden`}>\r\n                        {createAlignment('-md')}\r\n                    </div>\r\n                    {/*===> Large <====*/}\r\n                    <div className={`flexbox large-options hidden`}>\r\n                        {createAlignment('-lg')}\r\n                    </div>\r\n                    {/*===> xLarge <====*/}\r\n                    <div className={`flexbox xlarge-options hidden`}>\r\n                        {createAlignment('-xl')}\r\n                    </div>\r\n                    {/*===> xLarge <====*/}\r\n                </div>\r\n                {/*===> // Options Tabs <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","//====> WP Modules <====//\r\nimport {\r\n    PanelBody,\r\n    SelectControl,\r\n    ToggleControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n    useInnerBlocksProps,\r\n    InspectorControls\r\n} from '@wordpress/block-editor';\r\n\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport FlexAlignment from '../px-components/flex-alignment';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    //===> Set Settings <===//\r\n    const set_tagName = tagName => setAttributes({ tagName });\r\n\r\n    //===> Get Block Properties <===//\r\n    const blockProps = useBlockProps();\r\n    const innerBlocksProps = useInnerBlocksProps();\r\n    const TagName = attributes.tagName;\r\n\r\n    //===> Set Flexbox <===//\r\n    const set_flexbox = value => {\r\n        //===> Get Classname <===//\r\n        let currentNames = attributes.className?.replace(/\\s{2,}/g, ' ');\r\n\r\n        //===> Set Auto Options <===//\r\n        setAttributes({\r\n            flexbox : value,\r\n            className : `${currentNames ? currentNames : ''}${value === true ? ' flexbox' : ''}`,\r\n        });\r\n\r\n        //===> Clear Options <===//\r\n        if (!attributes.flexbox && currentNames) {\r\n            currentNames = currentNames.replace('flexbox', '');\r\n            currentNames = currentNames.replace(attributes.flex_align, '');\r\n        }\r\n    }\r\n\r\n    //===> Set Alignment <===//\r\n    const set_alignment = alignment => {\r\n        //===> Check for Flexbox <===//\r\n        if (attributes.flexbox) {\r\n            //===> Get Class Names <===//\r\n            let currentNames = attributes.className?.replace(/\\s{2,}/g, ' ');\r\n    \r\n            //===> Clear Current Align <===//\r\n            currentNames = currentNames.replace(attributes.flex_align, '');\r\n    \r\n            //===> Set New Align <===//\r\n            setAttributes({\r\n                flex_align : alignment,\r\n                className : `${currentNames} ${alignment}`,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    //===> Flexbox for Inner-Blocks <===//\r\n    if (attributes.flexbox) innerBlocksProps.className += ` flexbox ${attributes.alignment || ''}`;\r\n\r\n    //===> Copy to Inner Blocks <===//\r\n    if (attributes.className) innerBlocksProps.className += ` ${attributes.className}`;\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Wrapper Settings\">\r\n                {/*=== Component <TagName> ===*/}\r\n                <SelectControl key=\"tagName\" label=\"Wrapper Tag\" value={attributes.tagName} onChange={set_tagName} options={[\r\n                    { label: 'Default <div>',  value: 'div' },\r\n                    { label: 'List <ul>',  value: 'ul' },\r\n                ]}/>\r\n\r\n                {/*=== Flexbox ===*/}\r\n                <ToggleControl label=\"Flexbox Layouts\" checked={attributes.flexbox} onChange={set_flexbox}/>\r\n            </PanelBody>\r\n            {/*=== Flexbox Alignment ===*/}\r\n            {attributes.flexbox ? <PanelBody title=\"Flexbox Alignment\" initialOpen={false}>\r\n                <FlexAlignment value={attributes.flex_align} onChange={set_alignment}></FlexAlignment>\r\n            </PanelBody> : null}\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        <TagName { ...innerBlocksProps } orientation=\"horizontal\"></TagName>\r\n    </>);\r\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M232.5 5.171C247.4-1.718 264.6-1.718 279.5 5.171L498.1 106.2C506.6 110.1 512 118.6 512 127.1C512 137.3 506.6 145.8 498.1 149.8L279.5 250.8C264.6 257.7 247.4 257.7 232.5 250.8L13.93 149.8C5.438 145.8 0 137.3 0 127.1C0 118.6 5.437 110.1 13.93 106.2L232.5 5.171zM498.1 234.2C506.6 238.1 512 246.6 512 255.1C512 265.3 506.6 273.8 498.1 277.8L279.5 378.8C264.6 385.7 247.4 385.7 232.5 378.8L13.93 277.8C5.438 273.8 0 265.3 0 255.1C0 246.6 5.437 238.1 13.93 234.2L67.13 209.6L219.1 279.8C242.5 290.7 269.5 290.7 292.9 279.8L444.9 209.6L498.1 234.2zM292.9 407.8L444.9 337.6L498.1 362.2C506.6 366.1 512 374.6 512 383.1C512 393.3 506.6 401.8 498.1 405.8L279.5 506.8C264.6 513.7 247.4 513.7 232.5 506.8L13.93 405.8C5.438 401.8 0 393.3 0 383.1C0 374.6 5.437 366.1 13.93 362.2L67.13 337.6L219.1 407.8C242.5 418.7 269.5 418.7 292.9 407.8V407.8z\"/></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const blockProps = useBlockProps.save();\r\n        const TagName = attributes.tagName;\r\n\r\n        //===> Render <===//\r\n        return (\r\n            <TagName { ...blockProps }>\r\n                <InnerBlocks.Content />\r\n            </TagName>\r\n        );\r\n    }\r\n});"],"names":["FlexAlignment","this","props","value","flow","onChange","createAlignment","screen","className","onClick","setAlignment","title","includes","clicked","button","target","newVal","getAttribute","other","parentNode","querySelectorAll","forEach","element","push","split","item","replace","length","isReversed","changeTab","Phenix","parent","ancestor","optionsList","next","currentActive","querySelector","currentType","targetElement","addClass","removeClass","classList","add","ToggleControl","label","checked","toggle","current","replaceAll","Component","Edit","attributes","setAttributes","innerBlocksProps","useBlockProps","useInnerBlocksProps","TagName","tagName","flexbox","alignment","InspectorControls","key","PanelBody","SelectControl","options","currentNames","flex_align","initialOpen","orientation","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerBlockType","metadata","icon","xmlns","viewBox","edit","save","blockProps","InnerBlocks"],"sourceRoot":""}