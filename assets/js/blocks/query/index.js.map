{"version":3,"file":"blocks/query/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/px-controls/alignment.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/input.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select-data.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/flexbox.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/sizes.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/slider.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/query/edit.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/external window [\"wp\",\"serverSideRender\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/query/index.js"],"sourcesContent":["/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> FlexAlignment <===//\r\nconst FlexAlignment = (props) => {\r\n    //===> Properties <===//\r\n    const {label, value, onChange, screen, blockKey} = props;\r\n    const screenPoint = screen ? `-${screen}` : \"\";\r\n    const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n    const uniqueKey = `${blockKey ? blockKey + \"-\" : \"\"}align-${screenPoint}-options`;\r\n\r\n    //===> Find Type <===//\r\n    const extractType = (options) => {\r\n        const xAlignments = [`${screenPoint}-x-start`, `${screenPoint}-x-end`, `${screenPoint}-x-between`, `${screenPoint}-x-around`, `${screenPoint}-x-center`];\r\n        const yAlignments = [`${screenPoint}-y-start`, `${screenPoint}-y-end`, `${screenPoint}-y-center`];\r\n        \r\n        for (let option of options) {\r\n            if (xAlignments.includes(option)) return 'x';\r\n            else if (yAlignments.includes(option)) return 'y';\r\n        }\r\n\r\n        return null;\r\n    };\r\n    \r\n    //===> Set Alignment <===//\r\n    const setAlignment = useCallback((target) => {\r\n        //====> Cleanup Empty Space and Split the Value <====/\r\n        const options = value.trim().split(/\\s+/);\r\n    \r\n        //====> Define alignment <====//\r\n        const xAlignments = [`${screenPoint}-x-start`, `${screenPoint}-x-end`, `${screenPoint}-x-between`, `${screenPoint}-x-around`, `${screenPoint}-x-center`];\r\n        const yAlignments = [`${screenPoint}-y-start`, `${screenPoint}-y-end`, `${screenPoint}-y-center`];\r\n        const allAlignments = [...xAlignments, ...yAlignments];\r\n    \r\n        //====> Extract alignment type from target attribute <====//\r\n        const targetType = target.getAttribute('name').match(/-x$/) ? 'x' : 'y';\r\n    \r\n        //====> Check if any option has the same type as target <====//\r\n        const hasOption = options.some(option => allAlignments.includes(option));\r\n    \r\n        //====> Modify value based on conditions <====//\r\n        let modifiedValue = options;\r\n        const currentType = extractType(options);\r\n        if (hasOption && targetType === currentType) {\r\n            modifiedValue = options.map(option => allAlignments.includes(option) && option.includes(targetType) ? target.value : option);\r\n        } else {\r\n            modifiedValue.push(target.value);\r\n        }\r\n    \r\n        //====> Join modified options and return <====//\r\n        return onChange(modifiedValue.join(' '));\r\n    }, [value, onChange, screenPoint]);\r\n\r\n    //===> Reset Value Method <===//\r\n    const reset_align = (clicked) => onChange(\"align-reset\");\r\n\r\n    //===> Output <===//\r\n    return (<div className='components-flex-item flex-alignment-btns' key={uniqueKey}>\r\n        {/*===> Label <===*/}\r\n        <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n            <label className='fs-13 weight-bold'>{label}</label>\r\n            <button type=\"button\" key={`reset-btn${screenPoint}`} data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n        </div>\r\n        {/*===> Counter Control <===*/}\r\n        <div className={\"flexbox align-between mb-15\"}>\r\n            {/*===> Radio Buttons <===*/}\r\n            <div className=\"col-auto border-1 border-solid border-alpha-15 radius-sm\">\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-start-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-start-x`)} value={`align${screenPoint}-start-x`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-center-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-center-x`)} value={`align${screenPoint}-center-x`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-between`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-between`)} value={`align${screenPoint}-between`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-around`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-around`)} value={`align${screenPoint}-around`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-end-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-end-x`)} value={`align${screenPoint}-end-x`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                </OptionControl>\r\n            </div>\r\n            {/*===> Radio Buttons <===*/}\r\n            <div className=\"col-auto border-1 border-solid border-alpha-15 radius-sm\">\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-start-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-start-y`)} value={`align${screenPoint}-start-y`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-center-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-center-y`)} value={`align${screenPoint}-center-y`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                </OptionControl>\r\n                {/*===> Switch Button <===*/}\r\n                <OptionControl key={`align${screenPoint}-end-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-end-y`)} value={`align${screenPoint}-end-y`} onChange={setAlignment} type='button-radio' className='tiny inline-block'>\r\n                    <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                </OptionControl>\r\n            </div>\r\n        </div>\r\n        {/*===> Counter Control <===*/}\r\n    </div>)\r\n}\r\n\r\nexport default FlexAlignment;","import React, { useEffect, Fragment } from '@wordpress/element';\r\n\r\nconst PxDropDown = ({\r\n    label,\r\n    button,\r\n    support,\r\n    dropList,\r\n    children,\r\n    className,\r\n    dataPosition,\r\n    title,\r\n    key\r\n}) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Component Attributes <===\\\\\r\n    const attributes = {};\r\n\r\n    //===> Component Classes <===\\\\\r\n    if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n    if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n    if (key) attributes.key = key;\r\n\r\n    //===> Component Render <===\\\\\r\n    return (\r\n        <Fragment>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PxDropDown;","//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixInput = (props) => {\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value,  onChange, className, placeholder } = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        if (value !== event.target.value) return onChange(event.target);\r\n    }, [value, onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = {\r\n        onBlur: setValue,\r\n        type: type || \"text\",\r\n        defaultValue: value || \"\",\r\n        placeholder: placeholder || label || \"\",\r\n    };;\r\n\r\n    //===> Render Component <===//\r\n    return (<>\r\n        {/*===> Control Label <===*/}\r\n        {label && <label className='tx-capitalize fs-13' style={{ marginBottom: 5 }}>{label}</label>}\r\n        {/*===> Control Element <===*/}\r\n        <input name={name} className={`form-control ${size ? size : \"small\"} radius-md ${className ? className : \"\"}`} {...attributes}/>\r\n    </>);\r\n}\r\n\r\nexport default PhenixInput;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport React, { useCallback } from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nconst PhenixNumber = (props) => {\r\n    //===> Properties <===//\r\n    const {label, value, min, max, steps, icon, onChange, name} = props;\r\n\r\n    //===> Set Value <===//\r\n    const setNumber = useCallback((changed) => {\r\n        //===> Get Elements <===//\r\n        const input  = changed.target;\r\n        const minNum  = parseFloat(min) || 0;\r\n        const maxNum  = parseFloat(max) || 0;\r\n        //===> Get Input Element <===//\r\n        const newVal = parseFloat(input.value);\r\n        const checkVal = (newVal >= minNum && newVal <= maxNum) ? newVal : 0;\r\n        //===> Set Data <===//\r\n        input.value = checkVal;\r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [min, max, onChange]);\r\n\r\n    //===> Increase Number <===//\r\n    const IncreaseNum = useCallback((clicked) => {\r\n        //===> Get Elements <===//\r\n        let button = clicked.target,\r\n            wrapper = button.closest(\".px-counter-input\"),\r\n            maxNum = parseFloat(max) || 9999999,\r\n            step = steps ? parseFloat(steps) : 1;\r\n    \r\n        //===> Get Input Element <===//\r\n        let input = wrapper.querySelector('input[type=\"number\"]'),\r\n            newVal = parseFloat(input.value) + step;\r\n    \r\n        //===> Set Data <===//\r\n        input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n    \r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [max, steps, onChange]);\r\n\r\n    //===> Decrease Number <===//\r\n    const DecreaseNum = useCallback((clicked) => {\r\n        //===> Get Elements <===//\r\n        let button = clicked.target,\r\n            wrapper = button.closest(\".px-counter-input\"),\r\n            minNum = parseFloat(min) || 0,\r\n            step = steps ? parseFloat(steps) : 1;\r\n    \r\n        //===> Get Input Element <===//\r\n        let input = wrapper.querySelector('input[type=\"number\"]'),\r\n            newVal = parseFloat(input.value) - step;\r\n    \r\n        //===> Set Data <===//\r\n        input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n    \r\n        //===> Return Data <===//\r\n        return onChange(input);\r\n    }, [min, steps, onChange]);\r\n\r\n    //===> Output <===//\r\n    return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n        {/*===> Label <===*/}\r\n        <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n        {/*===> Counter Control <===*/}\r\n        <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n            {/*===> Button <===*/}\r\n            {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n            {/*===> Number Input <===*/}\r\n            <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n            {/*===> Button <===*/}\r\n            <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n            </div>\r\n        </div>\r\n        {/*===> Counter Control <===*/}\r\n    </div>)\r\n}\r\n\r\nexport default PhenixNumber;","//====> .Dependencies. <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport React, { useState, useMemo, useEffect, useCallback } from '@wordpress/element';\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Form Control <===//\r\nconst SelectFromData = (props) => {\r\n    //===> States <===//\r\n    const [dataFetched, setDataFetched] = useState(0);\r\n    const [optionsList, setOptionsList] = useState([{label: __(\"Default\", \"pds-blocks\"), value: \"\"}]);\r\n\r\n    //===> Properties <===//\r\n    const {options, name, type, size, label, value, multiple, valueSetter, className, search, termType } = props;\r\n\r\n    //===> Fetch Data <===//\r\n    const fetchData = useCallback(() => {\r\n        //===> Check if Options List is Empty <===//\r\n        if (optionsList.length > 1) return;\r\n\r\n        //===> Fetching Method <===//\r\n        const fetchOptions = async (path, processData) => {\r\n            //===> Fetch Data <===//\r\n            const data = await apiFetch({ path });\r\n            //===> Create Data <===//\r\n            const newOptionsList = [{ label: __(\"Default\", \"pds-blocks\"), value: \"\" }];\r\n            //===> Process Data <===//\r\n            processData(data, newOptionsList);\r\n            //===> Set new Options List <===//\r\n            setOptionsList(prevOptions => {\r\n                //===> Check if Options are Different <===//\r\n                if (JSON.stringify(prevOptions) !== JSON.stringify(newOptionsList)) {\r\n                    //===> Increase Data Fetched <===//\r\n                    setDataFetched(prev => prev + 1);\r\n                    //===> Return new Options List <===//\r\n                    return newOptionsList;\r\n                }\r\n                //===> Return Previous Options <===//\r\n                return prevOptions;\r\n            });\r\n        };\r\n\r\n        //===> Fetching Switch Cases <===//\r\n        switch (options) {\r\n            //===> for PDS Menu Locations <===//\r\n            case \"menu-locations\":\r\n                fetchOptions('pds-blocks/v2/options', (data, newOptionsList) => {\r\n                    Object.entries(data.menu_locations).forEach(([key, item]) => {\r\n                        newOptionsList.push({ label: item.title, value: item.name });\r\n                    });\r\n                });\r\n                break;\r\n            //====> for taxonomies <====//\r\n            case \"taxonomies\":\r\n                fetchOptions('wp/v2/taxonomies', (data, newOptionsList) => {\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        if (!['nav_menu', 'wp_pattern'].some(keyword => key.includes(keyword))) {\r\n                            newOptionsList.push({ value: key, label: value.name });\r\n                        }\r\n                    });\r\n                });\r\n                break;\r\n            //====> for taxonomies Terms <====//\r\n            case \"taxonomies-terms\":\r\n                fetchOptions(`wp/v2/${termType === \"category\" ? \"categories\" : termType}`, (data, newOptionsList) => {\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        newOptionsList.push({ value: value.id, label: value.name });\r\n                    });\r\n                });\r\n                break;\r\n            //====> for Post-Types <====//\r\n            case \"post-types\":\r\n                fetchOptions('wp/v2/types', (data, newOptionsList) => {\r\n                    Object.entries(data).forEach(([key, value]) => {\r\n                        //===> Exclude Unwanted Post Types <===//\r\n                        const excluded = ['attachment', 'nav_menu_item', 'wp_block', 'wp_navigation', 'wp_template', 'wp_template_part', 'wp_font'];\r\n                        //===> Add Post Type to the List <===//\r\n                        if (!excluded.some(keyword => key.includes(keyword))) newOptionsList.push({ value: key, label: value.name });\r\n                    });\r\n                });\r\n                break;\r\n            //====> for Users-Roles <====//\r\n            case \"users-roles\":\r\n                fetchOptions('pds-blocks/v2/options', (data, newOptionsList) => {\r\n                    Object.entries(data.users_roles).forEach(([key, value]) => {\r\n                        newOptionsList.push({ value: value.name, label: value.name });\r\n                    });\r\n                });\r\n                break;\r\n            //====> for Template-Parts <====//\r\n            case \"template-parts\":\r\n                fetchOptions('pds-blocks/v2/options', (data, newOptionsList) => {\r\n                    //===> Define Data <===//\r\n                    const templateParts = data.theme_parts;\r\n                    \r\n                    if (templateParts) {\r\n                        Object.entries(templateParts).forEach(([key, value]) => {\r\n                            //===> Normal File <===//\r\n                            if (typeof value === 'string') {\r\n                                newOptionsList.push(<option key={`${value}`} value={value.replace(\".php\", \"\")}>{value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}</option>);\r\n                            } \r\n                            //===> Grouped Files <===//\r\n                            else {\r\n                                //===> Define Files List <===//\r\n                                let filesList = [];\r\n\r\n                                //===> Add Files to the List <===//\r\n                                Object.entries(value).forEach(([key, value]) => {\r\n                                    filesList.push(<option key={`${key}-${value}`} value={`${key}/${value.replace(\".php\", \"\")}`}>{`${value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}`}</option>);\r\n                                });\r\n                                //===> Add Grouped Files to the List <===//\r\n                                newOptionsList.push(<optgroup key={`${key}-group`} label={`${key}`}>{filesList}</optgroup>);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                break;\r\n            //====> .... <====//\r\n            default:\r\n                break;\r\n        }\r\n    }, [options, optionsList.length, termType]);\r\n\r\n    //===> Start Fetch Data When Rendering <===//\r\n    useEffect(() => fetchData(), [fetchData]);\r\n\r\n    //===> Memoized Options List <===//\r\n    const memoizedOptionsList = useMemo(() => optionsList, [optionsList]);\r\n\r\n    //===> Render Component <===//\r\n    return <PhenixSelect key={dataFetched} type={type} options={memoizedOptionsList} multiple={multiple} name={name} placeholder={__(\"Default\", \"pds-blocks\")} label={label} value={value} onChange={valueSetter} className={className} search={search} size={size} />\r\n}\r\n\r\nexport default SelectFromData;","//====> .Dependencies. <====//\r\nimport React, { useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixSelect = (props) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = useMemo(() => {\r\n        //===> Define Element Attributes <===//\r\n        let attrs = { onChange: setValue };\r\n        //===> Add Attributes <===//\r\n        if (search) attrs['data-search'] = 1;\r\n        if (multiple) attrs.multiple = multiple;\r\n        if (placeholder) attrs['data-placeholder'] = placeholder;\r\n        //===> Return Attributes <===//\r\n        return attrs;\r\n    }, [setValue, search, multiple, placeholder]);\r\n\r\n    //===> Get Options List <===//\r\n    const options_list = useMemo(() => {\r\n        //===> Define the Options List <===//\r\n        let list = [];\r\n\r\n        //===> Check if Array of Elements <===//\r\n        if (Array.isArray(options) && options.length > 1 && options[1].type) {\r\n            //===> Fix the Default <===//\r\n            if (!options[0].type) options[0] = <option key={0} value={options[0].value}>{`${options[0].label}`}</option>;\r\n\r\n            //===> Add Options to the List <===//\r\n            list = options;\r\n        }\r\n        //===> Grouped Options <===//\r\n        else if (typeof options === 'object' && !Array.isArray(options)) {\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                list.push(options_group);\r\n            });\r\n        } \r\n        //===> Normal Options <===//\r\n        else {\r\n            options.forEach(item => {\r\n                list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        }\r\n        return list;\r\n    }, [options]);\r\n\r\n    //===> Render Component <===//\r\n    return <>\r\n        {/*===> Control Label <===*/}\r\n        {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n        {/*===> Control Element <===*/}\r\n        <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n            <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default PhenixSelect;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport OptionControl from '../switch';\r\nimport FlexAlignment from '../alignment';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixSelect from \"../select\";\r\n\r\n//===> Options List\r\n//=> align, flex-props, grid-props\r\n\r\n//===> Component <===//\r\nexport default class FlexboxSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screenPoint}-option`;\r\n\r\n        const align_options = [\r\n            {label: \"Start\", value: `align-self${screen}-start`},\r\n            {label: \"Center\", value: `align-self${screen}-center`},\r\n            {label: \"End\", value: `align-self${screen}-end`}\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className={`row gpx-15 ${className ? className : \"\"}`} key={uniqueKey}>\r\n                {/*===> Column <===*/}\r\n                {!options || options.includes(\"align\") ? <>\r\n                    <div className='col-12 mb-15'>\r\n                        <FlexAlignment screen={screen} label={__(\"Flexbox Alignment\", \"pds-blocks\")} value={attributes.flexbox[`align${screenPoint}`] || \"\"} onChange={(target) => mainSetter(target, screen ? screen : \"\")}></FlexAlignment>\r\n                        {/*====> Self Alignment <====*/}\r\n                        {!options || options.includes('align-self') ? <>\r\n                            <PhenixSelect class=\"mt-15\" name={`align-self${screen}`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self${screen}`]} onChange={mainSetter} options={align_options} />\r\n                        </>:null}\r\n                    </div>\r\n                </>: null}\r\n                {/*===> Group <===*/}\r\n                <div className='col-12 row gpx-10 pdt-5 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} key={`gpy${screenPoint}`} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-X Space\", \"pds-blocks\")} key={`gpx${screenPoint}`} name={`gpx${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpx${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 flexbox gpy-5'>\r\n                    {/*===> Label <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <label className='col-12 mb-5 tx-UpperCase'>{__(\"Flow Options\", \"pds-blocks\")}</label> : null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <OptionControl key={`flow${screenPoint}`} name={`flow${screenPoint}`} value={!attributes.flexbox[`stacked${screenPoint}`] || attributes.flexbox[`stacked${screenPoint}`] === \"\" ? `flow${screenPoint}-reverse` : `flow${screenPoint}-columns-reverse`} checked={attributes.flexbox[`flow${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Reverse \", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`stacked${screenPoint}`} name={`stacked${screenPoint}`} value={`flow${screenPoint}-columns`} checked={attributes.flexbox[`stacked${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Stacked\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`nowrap${screenPoint}`} name={`nowrap${screenPoint}`} value={`flow${screenPoint}-nowrap`} checked={attributes.flexbox[`nowrap${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Nowrap\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider && !screen ? <OptionControl key={`equals${screenPoint}`} name={`equals${screenPoint}`} checked={attributes.flexbox.equals} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Equal Cols.\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider ? <OptionControl key={`masonry${screenPoint}`} name={`masonry${screenPoint}`} value={`px-masonry${screenPoint}`} checked={attributes.flexbox[`masonry${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Masonry\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") ?\r\n                    <OptionControl key={`gpy-fix`} name={`gpy-fix`} value={`gpy-fix`} checked={attributes.flexbox[`gpy-fix`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Gap Y fix\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Other Button <===*/}\r\n                    {this.props.children ? this.props.children : null}\r\n                </div>\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class SizesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.sizes_range;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Generate Width Sizes <===//\r\n        const width_list = PhenixBlocks.width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-${size}`} }),\r\n              min_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-min-${size}`} }),\r\n              max_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-max-${size}`} });\r\n\r\n        //===> Generate Height Sizes <===//\r\n        const height_list = PhenixBlocks.height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-${size.replace(\"%\", \"\")}`} }),\r\n              min_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-min-${size.replace(\"%\", \"\")}`} }),\r\n              max_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-max-${size.replace(\"%\", \"\")}`} });\r\n\r\n        //===> Add Default Option <===//\r\n        const default_option = { \"label\": __(\"Default\", \"pds-blocks\"), \"value\": \"\" };\r\n        width_list.unshift(default_option);\r\n        min_width_list.unshift(default_option);\r\n        max_width_list.unshift(default_option);\r\n        height_list.unshift(default_option);\r\n        min_height_list.unshift(default_option);\r\n        max_height_list.unshift(default_option);\r\n        \r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Width <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`width_size${screenPoint}`} name={`width_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Width Sizes\", \"pds-blocks\")} value={attributes.style[`width_size${screenPoint}`]} onChange={mainSetter} options={width_list} />\r\n                </div>\r\n                {/*===> Min Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_size${screenPoint}`} name={`min_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Width\", \"pds-blocks\")} value={attributes.style[`min_size${screenPoint}`]} onChange={mainSetter} options={min_width_list} />\r\n                </div>\r\n                {/*===> Max Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_size${screenPoint}`} name={`max_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Width\", \"pds-blocks\")} value={attributes.style[`max_size${screenPoint}`]} onChange={mainSetter} options={max_width_list} />\r\n                </div>\r\n\r\n                {/*===> Height <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`height_size${screenPoint}`} name={`height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Height Sizes\", \"pds-blocks\")} value={attributes.style[`height_size${screenPoint}`]} onChange={mainSetter} options={height_list} />\r\n                </div>\r\n                {/*===> Min Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_height_size${screenPoint}`} name={`min_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Height\", \"pds-blocks\")} value={attributes.style[`min_height_size${screenPoint}`]} onChange={mainSetter} options={min_height_list} />\r\n                </div>\r\n                {/*===> Max Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_height_size${screenPoint}`} name={`max_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Height\", \"pds-blocks\")} value={attributes.style[`max_height_size${screenPoint}`]} onChange={mainSetter} options={max_height_list} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixInput from '../input';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class SliderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, flexSetter, isGrid} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-slider-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const slider_types = [\r\n            { label: __('Loop', \"pds-blocks\"), value: 'loop' },\r\n            { label: __('Fading', \"pds-blocks\"),  value: 'fade' },\r\n            { label: __('Sliding', \"pds-blocks\"),  value: 'slide' },\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className='row gpx-20 gpy-15 gpy-fix'>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixSelect key=\"type\" name=\"type\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Effect Type\", \"pds-blocks\")} value={attributes.slider.type} onChange={mainSetter} options={slider_types} />\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"steps\" name=\"steps\" label={__(\"Steps\", \"pds-blocks\")} value={attributes.slider.steps || 1} onChange={mainSetter} min={1} max={12}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"duration\" name=\"duration\" label={__(\"Duration\", \"pds-blocks\")} value={attributes.slider.duration || 6000} onChange={mainSetter} min={3000} max={20000} steps={100}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"speed\" name=\"speed\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.slider.speed || 700} onChange={mainSetter} min={300} max={3000} steps={100}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 pdt-10 divider-t flexbox gpy-5 align-between'>\r\n                    <OptionControl key={`autoplay`} name={`autoplay`} value=\"boolean\" checked={attributes.slider.autoplay || true} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Autoplay\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`controls`} name={`controls`} value=\"boolean\" checked={attributes.slider.controls || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Arrows\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`pagination`} name={`pagination`} value=\"boolean\" checked={attributes.slider.pagination || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Pagination\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`isNavigation`} name={`is-navigation`} value=\"boolean\" checked={attributes.slider['is-navigation'] || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"isNavigation\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`center-mode`} name={`center`} value=\"boolean\" checked={attributes.slider.center || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Center Mode\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`autoWidth`} name={`autoWidth`} value=\"boolean\" checked={attributes.slider.autoWidth || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Free Width\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`autoHeight`} name={`autoHeight`} value=\"boolean\" checked={attributes.slider.autoHeight || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Free Height\", \"pds-blocks\")}</span></OptionControl>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixInput key=\"sync\" name=\"sync\" label={__(\"Sync with\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.sync} onChange={mainSetter} />\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                {attributes.slider.pagination ? <div className='col-12'>\r\n                    <PhenixInput key=\"page\" name=\"page\" label={__(\"Pagination Buttons Classes\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.page} onChange={mainSetter} />\r\n                    <PhenixInput key=\"pagination\" name=\"pagination\" label={__(\"Pagination Wrapper Classes\", \"pds-blocks\")} value={attributes.slider.pagination} onChange={mainSetter} />\r\n                </div> : null}\r\n                {/*===> Column <===*/}\r\n                {attributes.slider.controls || attributes.slider.controls === \"\" ? <div className='col-12'>\r\n                    <PhenixInput key=\"arrow\" name=\"arrow\" label={__(\"Arrows Buttons Classes\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.arrow} onChange={mainSetter} />\r\n                    <PhenixInput key=\"controls\" name=\"controls\" label={__(\"Arrows Wrapper Classes\", \"pds-blocks\")} value={attributes.slider.controls} onChange={mainSetter} />\r\n                </div> : null}\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>}\r\n}","//====> .Dependencies. <====//\r\nimport React, { useState, useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst OptionControl = (props) => {\r\n    //===> Properties <===//\r\n    const {name, type, value, checked, onChange, children, required, className} = props;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Data <===//\r\n    let options = `fs-12 option-control flexbox align-center-y`,\r\n        attributes = {onChange: setValue};\r\n\r\n    //===> Custom Classes <===//\r\n    if (className) options += ` ${className}`;\r\n\r\n    //===> Check if is On <===//\r\n    attributes.defaultChecked = checked;\r\n\r\n    //===> add Options <===//\r\n    if (required) attributes.required = true;\r\n    if (value) attributes.value = value;\r\n\r\n    //===> Render Component <===//\r\n    return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n        <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n        {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n        {children}\r\n    </label>)\r\n}\r\n\r\nexport default OptionControl;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useState } from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nconst ScreensTabs = (props) => {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScreensTabs;","//====> WP Modules <====//\r\n//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport ServerSideRender from '@wordpress/server-side-render';\r\nimport {PanelBody, ToolbarGroup} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.png';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport PhenixSelect from '../px-controls/select';\r\nimport OptionControl from '../px-controls/switch';\r\nimport PhenixInput from '../px-controls/input';\r\nimport SelectFromData from '../px-controls/select-data';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport SizesSet from '../px-controls/sets/sizes';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport SliderSet from '../px-controls/sets/slider';\r\nimport FlexboxSet from '../px-controls/sets/flexbox';\r\n\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit(props) {\r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n\r\n    //==> Set Object Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_flexbox = (target, screen) => PhenixBlocks.set_flexbox(target, screen, attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_slider = (target, screen) => PhenixBlocks.setObject(target, screen, 'slider', false, attributes, setAttributes);\r\n    const set_query = (target, screen) => PhenixBlocks.setObject(target, screen, \"query\", false, attributes, setAttributes);\r\n    \r\n    //===> Get Properties <===//\r\n    const {attributes, setAttributes} = props;\r\n    const blockProps = useBlockProps();\r\n    const uniqueKey = blockProps.id;\r\n\r\n    //===> List View Naming <===//\r\n    if (attributes.metadata?.name) {\r\n        let ListViewItem = document.querySelector(`.block-editor-list-view-tree a[href=\"#block-${blockProps['data-block']}\"] .components-truncate`);\r\n        if(ListViewItem) ListViewItem.textContent = attributes.metadata.name;\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.flexbox?.equals || attributes.flexbox?.slider ? <>\r\n                    <PxDropDown title={__(\"Columns Number\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-columns divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-180\">\r\n                        <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                            <PhenixNumber name={\"cols\"} icon=\"far fa-mobile\" min={0} max={13} value={attributes.flexbox?.cols || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                            <PhenixNumber name={`cols-md`} icon=\"far fa-tablet\" min={0} max={13} value={attributes.flexbox[`cols-md`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                            <PhenixNumber name={`cols-lg`} icon=\"far fa-laptop\" min={0} max={13} value={attributes.flexbox[`cols-lg`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                            <PhenixNumber name={`cols-xl`} icon=\"far fa-desktop\" min={0} max={13} value={attributes.flexbox[`cols-xl`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                </>: null}\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Sizes Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-maximize divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-320\" >\r\n                    <li key=\"sizes\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <SizesSet attributes={attributes} mainSetter={set_style} />}\r\n                            md={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            lg={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            xl={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"General Setting\", \"pds-blocks\")} initialOpen={true}>\r\n                {/*===> Group <===*/}\r\n                <div className='row gpx-10 mb-10'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        {/*=== Form Control  ===*/}\r\n                        <PhenixInput className=\"mb-15\" name=\"id\" label={__(\"HTML ID [Anchor]\", \"pds-blocks\")} value={attributes.id} onChange={set_value} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        <SelectFromData key=\"post_type\" name=\"post_type\" options=\"post-types\" label={__(\"Post-Type\", \"pds-blocks\")} value={attributes.query?.post_type || \"default\"} valueSetter={(target) => set_query(target, false)} multiple />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        <SelectFromData label={__(\"Card Template\", \"pds-blocks\")} key=\"template_part\" name=\"template_part\" options=\"template-parts\" value={attributes.template_part} valueSetter={set_value} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    {!attributes.query?.post_type?.includes(\"default\") ? <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"Order\", \"pds-blocks\")} key=\"order\" name=\"order\" value={attributes.query?.order} onChange={set_query} options={[\r\n                            { label: __('Oldest', \"pds-blocks\"), value: 'ASC' },\r\n                            { label: __('Newest', \"pds-blocks\"),  value: 'DESC' },\r\n                        ]} />\r\n                    </div> : null}\r\n                    {/*===> Column <===*/}\r\n                    {!attributes.query?.post_type?.includes(\"default\") ? <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"OrderBy\", \"pds-blocks\")} key=\"orderby\" name=\"orderby\" value={attributes.query?.orderby} onChange={set_query} options={PhenixBlocks.dataLists.queries.orderBy} />\r\n                    </div> : null}\r\n                    {/*===> Column <===*/}\r\n                    {!attributes.query?.post_type?.includes(\"default\") ? <div className='col-12 mb-10'>\r\n                        <PhenixNumber name=\"per_page\" label={__(\"Per Page\", \"pds-blocks\")} value={ attributes.query?.per_page || 5 } onChange={set_query} />\r\n                    </div> : null}\r\n                    {/*===> Column <===*/}\r\n                    {!attributes.query?.post_type?.includes(\"default\") ? <div className='col-6'>\r\n                        <OptionControl name={`pagination`} value=\"boolean\" checked={attributes.query?.pagination} onChange={set_query} type='switch-checkbox' className='small'>{__(\"Pagination\", \"pds-blocks\")}</OptionControl>\r\n                    </div> : null}\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl name={`s`} value=\"boolean\" checked={attributes.query?.s} onChange={set_query} type='switch-checkbox' className='small'>{__(\"IS Search\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl name={`isFlexbox`} value=\"boolean\" checked={attributes.isFlexbox} onChange={set_value} type='switch-checkbox' className='small'>{__(\"Grid Mode\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl name={`slider`} value=\"boolean\" checked={attributes.flexbox.slider} onChange={set_flexbox} type='switch-checkbox' className='small'>{__(\"IS Slider\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"Query by Taxonomies\", \"pds-blocks\")} initialOpen={true}>\r\n                {/*===> Taxonomies Types <===*/}\r\n                <div className='mb-15' key={`taxonomies-types-wrapper`}>\r\n                    <SelectFromData key={`taxonomies-types`} name=\"taxonomies-types\" options=\"taxonomies\" multiple={true}\r\n                        label={__(\"Taxonomies Types\", \"pds-blocks\")}\r\n                        value={attributes.query['taxonomies-types'] || [\"none\"]}\r\n                        valueSetter={(target) => set_query(target, false)} \r\n                    />\r\n                </div>\r\n\r\n                {/*===> Taxonomies Terms <===*/}\r\n                {attributes.query['taxonomies-types'] ? attributes.query['taxonomies-types'].map((tax_type) => {\r\n                    return (\r\n                        <div key={`${tax_type}-wrapper`} className='mb-15'>\r\n                            <SelectFromData key={`${tax_type}-terms-${uniqueKey}`} name={`${tax_type}-terms`} options=\"taxonomies-terms\" termType={tax_type} multiple={true}\r\n                                label={__(`Terms of \"${tax_type}\"`, \"pds-blocks\")}\r\n                                value={attributes.query[`${tax_type}-terms`] || [\"none\"]}\r\n                                valueSetter={(target) => set_query(target, false)} \r\n                            />\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"Grid Layout\", \"pds-blocks\")} initialOpen={true}>\r\n                <ScreensTabs\r\n                    sm={(screen) => <FlexboxSet attributes={attributes} mainSetter={set_flexbox}></FlexboxSet>}\r\n                    md={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                    lg={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                    xl={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                />\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            {attributes.flexbox.slider ? <PanelBody title={__(\"Slider Options\", \"pds-blocks\")} initialOpen={true}>\r\n                <SliderSet attributes={attributes} mainSetter={set_slider} flexSetter={set_flexbox} />\r\n            </PanelBody> : null}\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        {attributes.preview ? \r\n            <img src={PreviewImage} alt=\"\" className='fluid' />\r\n        :\r\n            <div {...blockProps} key={`${uniqueKey}`}>\r\n                <ServerSideRender block=\"phenix/query\" attributes={attributes} />\r\n            </div>\r\n        }\r\n    </>);\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata.name, {\r\n    title      : metadata.title,\r\n    category   : metadata.category,\r\n    attributes : metadata.attributes,\r\n    icon  : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M494.9 96.01c-38.78 0-75.22 15.09-102.6 42.5L320 210.8L247.8 138.5c-27.41-27.41-63.84-42.5-102.6-42.5C65.11 96.01 0 161.1 0 241.1v29.75c0 80.03 65.11 145.1 145.1 145.1c38.78 0 75.22-15.09 102.6-42.5L320 301.3l72.23 72.25c27.41 27.41 63.84 42.5 102.6 42.5C574.9 416 640 350.9 640 270.9v-29.75C640 161.1 574.9 96.01 494.9 96.01zM202.5 328.3c-15.31 15.31-35.69 23.75-57.38 23.75C100.4 352 64 315.6 64 270.9v-29.75c0-44.72 36.41-81.13 81.14-81.13c21.69 0 42.06 8.438 57.38 23.75l72.23 72.25L202.5 328.3zM576 270.9c0 44.72-36.41 81.13-81.14 81.13c-21.69 0-42.06-8.438-57.38-23.75l-72.23-72.25l72.23-72.25c15.31-15.31 35.69-23.75 57.38-23.75C539.6 160 576 196.4 576 241.1V270.9z\"/></svg>,\r\n    /**===> @see ./edit.js <===*/\r\n    edit  : Edit,\r\n    save  : () => null\r\n});"],"names":["props","label","value","onChange","screen","blockKey","screenPoint","button_style","uniqueKey","setAlignment","useCallback","target","options","trim","split","allAlignments","targetType","getAttribute","match","hasOption","some","option","includes","modifiedValue","currentType","xAlignments","yAlignments","extractType","map","push","join","createElement","className","key","type","title","onClick","clicked","OptionControl","name","checked","PxDropDown","button","support","dropList","children","dataPosition","useEffect","window","PhenixBlocks","componentsBuilder","attributes","Fragment","size","placeholder","onBlur","event","defaultValue","style","marginBottom","min","max","steps","icon","setNumber","changed","input","minNum","parseFloat","maxNum","newVal","checkVal","IncreaseNum","wrapper","closest","step","querySelector","DecreaseNum","dataFetched","setDataFetched","useState","optionsList","setOptionsList","__","multiple","valueSetter","search","termType","fetchData","length","fetchOptions","async","path","processData","data","apiFetch","newOptionsList","prevOptions","JSON","stringify","prev","Object","entries","menu_locations","forEach","item","keyword","id","users_roles","templateParts","theme_parts","replace","filesList","memoizedOptionsList","useMemo","PhenixSelect","setValue","attrs","options_list","list","Array","isArray","group_list","options_group","FlexboxSet","Component","render","mainSetter","this","Date","now","toString","Math","random","substr","align_options","FlexAlignment","flexbox","class","PhenixNumber","slider","equals","SizesSet","dataLists","sizes_range","width_list","width_range","min_width_list","max_width_range","max_width_list","height_list","height_range","min_height_list","max_height_range","max_height_list","default_option","unshift","SliderSet","flexSetter","isGrid","slider_types","duration","speed","autoplay","controls","pagination","center","autoWidth","autoHeight","PhenixInput","sync","page","arrow","required","defaultChecked","setScreen","sm","buttons","opts","classes","md","lg","xl","opt","Edit","set_value","setAttributes","set_flexbox","set_style","setObject","set_query","blockProps","useBlockProps","metadata","ListViewItem","document","textContent","BlockControls","ToolbarGroup","cols","ScreensTabs","InspectorControls","PanelBody","initialOpen","SelectFromData","query","post_type","template_part","order","orderby","queries","orderBy","per_page","s","isFlexbox","tax_type","set_slider","preview","src","PreviewImage","alt","ServerSideRender","block","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","category","xmlns","viewBox","edit","save"],"sourceRoot":""}