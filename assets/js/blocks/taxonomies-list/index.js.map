{"version":3,"file":"blocks/taxonomies-list/index.js","mappings":"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","sources":["webpack://phenix-blocks/./src/blocks/px-controls/number.js","webpack://phenix-blocks/./src/blocks/taxonomies-list/edit.js","webpack://phenix-blocks/external window [\"wp\",\"apiFetch\"]","webpack://phenix-blocks/external window [\"wp\",\"blockEditor\"]","webpack://phenix-blocks/external window [\"wp\",\"blocks\"]","webpack://phenix-blocks/external window [\"wp\",\"components\"]","webpack://phenix-blocks/external window [\"wp\",\"element\"]","webpack://phenix-blocks/external window [\"wp\",\"i18n\"]","webpack://phenix-blocks/external window [\"wp\",\"serverSideRender\"]","webpack://phenix-blocks/webpack/bootstrap","webpack://phenix-blocks/webpack/runtime/compat get default export","webpack://phenix-blocks/webpack/runtime/define property getters","webpack://phenix-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://phenix-blocks/./src/blocks/taxonomies-list/index.js"],"sourcesContent":["/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            let input  = changed.target,\r\n                minNum  = parseInt(min) || 0,\r\n                maxNum  = parseInt(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            let newVal = parseInt(input.value),\r\n                checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            return onChange(checkVal);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseInt(max) || 9999999,\r\n                step    = steps ? parseInt(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            return onChange(newVal < maxNum || newVal === maxNum ? newVal : maxNum);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseInt(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            return onChange(newVal > minNum || newVal === minNum ? newVal : minNum);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input type=\"number\" min={min} max={max} value={parseInt(value) ? parseInt(value) : 0} className={\"form-control small radius-sm reset-appearance\"+(!icon ? \" tx-align-center\" : \"\")} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> WP Modules <====//\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport {\r\n    PanelBody,\r\n    SelectControl,\r\n    ToggleControl,\r\n    TextControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    useBlockProps,\r\n    InspectorControls\r\n} from '@wordpress/block-editor';\r\n\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport ServerSideRender from '@wordpress/server-side-render';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixNumber from \"../px-controls/number\";\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit(props) {\r\n    //===> Get Properties <===//\r\n    const {attributes, setAttributes} = props;\r\n    const blockProps = useBlockProps();\r\n    const [PostTypes, setPostTypes] = useState([{\"value\": attributes.post_type, \"label\": __('Default', 'phenix')}]);\r\n    const [TaxonomyList, setTaxonomyList] = useState([{\"value\": attributes.taxonomy, \"label\": __('Default', 'phenix')}]);\r\n\r\n    //===> Set Attributes <===//\r\n    const set_order = order => setAttributes({ order });\r\n    const set_taxonomy = taxonomy => setAttributes({ taxonomy });\r\n    const set_post_type = post_type => setAttributes({ post_type });\r\n    const set_hide_empty = hide_empty => setAttributes({ hide_empty });\r\n    const set_query_count = query_count => setAttributes({ query_count });\r\n\r\n    //===> Update Phenix Elements <===//\r\n    useEffect(()=> {\r\n        //===> Fetch Taxonomies <===//\r\n        if (TaxonomyList.length < 2) apiFetch({path: 'wp/v2/taxonomies'}).then(taxonomies => {\r\n            //===> Define Types <===//\r\n            let new_taxonomies = [];\r\n\r\n            //===> Get Current Active Types <===//\r\n            for (const [key, value] of Object.entries(taxonomies)) {\r\n                //===> Exclude the Core Types <===//\r\n                if (!['nav_menu', 'post_tag'].includes(key)) {\r\n                    new_taxonomies.push({\"value\":key, \"label\":value.name});\r\n                }\r\n            }\r\n\r\n            //===> Set the new List if its Deferent <===//\r\n            if (TaxonomyList !== new_taxonomies) setPostTypes([...new_taxonomies]);\r\n        });\r\n\r\n        //===> Fetch Post Types <===//\r\n        if (postTypes.length < 2) apiFetch({path: 'wp/v2/types'}).then(post_types => {\r\n            //===> Define Types <===//\r\n            let new_types = [];\r\n\r\n            //===> Get Current Active Types <===//\r\n            for (const [key, value] of Object.entries(post_types)) {\r\n                //===> Exclude the Core Types <===//\r\n                if (!['attachment', 'nav_menu_item', 'wp_block', 'wp_navigation', 'wp_template', 'wp_template_part'].includes(key)) {\r\n                    new_types.push({\"value\":key, \"label\":value.name});\r\n                }\r\n            }\r\n\r\n            //===> Set the new List if its Deferent <===//\r\n            if (PostTypes !== new_types) setTaxonomyList([...new_types]);\r\n        });\r\n    }, []);\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"General Setting\", \"phenix\")} initialOpen={true}>\r\n                {/*===> Post Type <===*/}\r\n                <SelectControl label={__(\"Taxonomy Type\", \"phenix\")} value={attributes.taxonomy} onChange={set_taxonomy} options={TaxonomyList}/>\r\n\r\n                {/*===> Post Type <===*/}\r\n                <SelectControl label={__(\"Data Type\", \"phenix\")} value={attributes.post_type} onChange={set_post_type} options={PostTypes}/>\r\n            \r\n                {/*===> Max Items and Order <===*/}\r\n                <div className='row gpx-20 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Max Items\", \"phenix\")} value={ attributes.query_count } onChange={set_query_count}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <SelectControl label={__(\"Order By\", \"phenix\")} value={attributes.order} onChange={set_order} options={[\r\n                            { label: __('Oldest', \"phenix\"), value: 'ASC' },\r\n                            { label: __('Newest', \"phenix\"),  value: 'DESC' },\r\n                        ]}/>\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n\r\n                {/*===> Hide Empty <===*/}\r\n                <ToggleControl label={__(\"Hide Empty Taxonomies\", \"phenix\")} checked={attributes.hide_empty} onChange={set_hide_empty}/>\r\n            </PanelBody>\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        <div {...blockProps}>\r\n            <ServerSideRender block=\"phenix/taxonomies-list\" attributes={attributes} />\r\n        </div>\r\n    </>);\r\n}","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata.name, {\r\n    title      : metadata.title,\r\n    category   : metadata.category,\r\n    attributes : metadata.attributes,\r\n    icon  : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"> <path fillRule=\"evenodd\" d=\"M6 5.5h3a.5.5 0 01.5.5v3a.5.5 0 01-.5.5H6a.5.5 0 01-.5-.5V6a.5.5 0 01.5-.5zM4 6a2 2 0 012-2h3a2 2 0 012 2v3a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm11-.5h3a.5.5 0 01.5.5v3a.5.5 0 01-.5.5h-3a.5.5 0 01-.5-.5V6a.5.5 0 01.5-.5zM13 6a2 2 0 012-2h3a2 2 0 012 2v3a2 2 0 01-2 2h-3a2 2 0 01-2-2V6zm5 8.5h-3a.5.5 0 00-.5.5v3a.5.5 0 00.5.5h3a.5.5 0 00.5-.5v-3a.5.5 0 00-.5-.5zM15 13a2 2 0 00-2 2v3a2 2 0 002 2h3a2 2 0 002-2v-3a2 2 0 00-2-2h-3zm-9 1.5h3a.5.5 0 01.5.5v3a.5.5 0 01-.5.5H6a.5.5 0 01-.5-.5v-3a.5.5 0 01.5-.5zM4 15a2 2 0 012-2h3a2 2 0 012 2v3a2 2 0 01-2 2H6a2 2 0 01-2-2v-3z\" clipRule=\"evenodd\"></path></svg>,\r\n    /**===> @see ./edit.js <===*/\r\n    edit  : Edit,\r\n    save  : () => null\r\n});"],"names":["PhenixNumber","this","props","label","value","min","max","steps","icon","onChange","DecreaseNum","clicked","button","target","wrapper","Phenix","ancestor","minNum","parseInt","step","input","querySelector","newVal","className","onClick","type","changed","maxNum","Component","Edit","attributes","setAttributes","blockProps","useBlockProps","useState","post_type","__","PostTypes","setPostTypes","taxonomy","TaxonomyList","setTaxonomyList","useEffect","length","apiFetch","path","then","taxonomies","new_taxonomies","Object","entries","key","includes","push","name","postTypes","post_types","new_types","InspectorControls","PanelBody","title","initialOpen","SelectControl","options","query_count","order","ToggleControl","checked","hide_empty","block","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerBlockType","metadata","category","xmlns","viewBox","fillRule","clipRule","edit","save"],"sourceRoot":""}