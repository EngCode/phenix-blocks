{"version":3,"file":"blocks/taxonomies/index.js","mappings":"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","sources":["webpack://phenix-blocks/./src/blocks/px-controls/alignment.js","webpack://phenix-blocks/./src/blocks/px-controls/number.js","webpack://phenix-blocks/./src/blocks/px-controls/switch.js","webpack://phenix-blocks/./src/blocks/taxonomies/edit.js","webpack://phenix-blocks/external window [\"wp\",\"apiFetch\"]","webpack://phenix-blocks/external window [\"wp\",\"blockEditor\"]","webpack://phenix-blocks/external window [\"wp\",\"blocks\"]","webpack://phenix-blocks/external window [\"wp\",\"components\"]","webpack://phenix-blocks/external window [\"wp\",\"element\"]","webpack://phenix-blocks/external window [\"wp\",\"i18n\"]","webpack://phenix-blocks/external window [\"wp\",\"serverSideRender\"]","webpack://phenix-blocks/webpack/bootstrap","webpack://phenix-blocks/webpack/runtime/compat get default export","webpack://phenix-blocks/webpack/runtime/define property getters","webpack://phenix-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://phenix-blocks/./src/blocks/taxonomies/index.js"],"sourcesContent":["/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> Media Uploader <===//\r\nexport default class FlexAlignment extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, onChange} = this.props;\r\n        const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n\r\n        //===> Value Handler <===//\r\n        const set_alignment = target => {\r\n            //===> Define Data <===//\r\n            let align_val  = value;\r\n            const current_val = value.trim(),\r\n                  current_values  = current_val.split(\" \"),\r\n                  xTypes = [\"-x\", \"between\", \"around\"],\r\n                  allTypes = [\"-x\", \"between\", \"around\", \"-y\"];\r\n\r\n            //===> Check if the Value has an option with the same type as the target value <===//\r\n            const itHasType = allTypes.some(type => current_val.includes(type)),\r\n                  align_type = xTypes.some(type => target.getAttribute('name').includes(type)) ? \"x\" : \"y\",\r\n                  foundedType = xTypes.some(type => current_val.includes(type)) ? \"x\" : \"y\";\r\n\r\n            //===> if the Value has an Option and the option type is the same as the target <===//\r\n            if (itHasType && align_type === foundedType) {\r\n                //===> Loop on Values <===//\r\n                current_values.forEach(current_value => {\r\n                    //===> if the Founded Type is the same is the Value, Replace the Value <===//\r\n                    if (current_value.includes(align_type)) {\r\n                        align_val = align_val.replace(current_value, target.value);\r\n                    }\r\n                });\r\n            }\r\n            //===> if its a new Value add it <===//\r\n            else {\r\n                align_val += ` ${target.value}`;\r\n            }\r\n\r\n            //===> Return new Value <===//\r\n            return onChange(align_val.trim());\r\n        },\r\n\r\n        //===> Reset Value Method <===//\r\n        reset_align = (clicked) => onChange(\"align-reset\");\r\n\r\n        //===> Output <===//\r\n        return (<div className='components-flex-item flex-alignment-btns'>\r\n            {/*===> Label <===*/}\r\n            <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n                <label className='fs-13 weight-bold'>{label}</label>\r\n                <button type=\"button\" data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"flexbox align-between\"}>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-start-x\")} value={\"align-start-x\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-center-x\")} value={\"align-center-x\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-between\")} value={\"align-between\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-around\")} value={\"align-around\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-x' checked={value.includes(\"align-end-x\")} value={\"align-end-x\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-y' checked={value.includes(\"align-start-y\")} value={\"align-start-y\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-y' checked={value.includes(\"align-center-y\")} value={\"align-center-y\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name='flex-align-y' checked={value.includes(\"align-end-y\")} value={\"align-end-y\"} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            let input  = changed.target,\r\n                minNum  = parseInt(min) || 0,\r\n                maxNum  = parseInt(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            let newVal = parseInt(input.value),\r\n                checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            return onChange(checkVal);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseInt(max) || 9999999,\r\n                step    = steps ? parseInt(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            return onChange(newVal < maxNum || newVal === maxNum ? newVal : maxNum);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseInt(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            return onChange(newVal > minNum || newVal === minNum ? newVal : minNum);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseInt(value) ? parseInt(value) : 0} className={\"form-control small radius-sm reset-appearance\"+(!icon ? \" tx-align-center\" : \"\")} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            name,\r\n            type,\r\n            value,\r\n            checked,\r\n            onChange,\r\n            children,\r\n            required,\r\n            className\r\n        } = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","//====> WP Modules <====//\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport {\r\n    PanelBody,\r\n    SelectControl,\r\n    ToggleControl,\r\n    TextControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    useBlockProps,\r\n    InspectorControls\r\n} from '@wordpress/block-editor';\r\n\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport ServerSideRender from '@wordpress/server-side-render';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport FlexAlignment from \"../px-controls/alignment\";\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit(props) {\r\n    //===> Get Properties <===//\r\n    const {attributes, setAttributes} = props;\r\n    const blockProps = useBlockProps();\r\n    const [PostTypes, setPostTypes] = useState([{\"value\": attributes.post_type, \"label\": __('Default', 'phenix')}]);\r\n    const [TaxonomyList, setTaxonomyList] = useState([{\"value\": attributes.taxonomy, \"label\": __('Default', 'phenix')}]);\r\n\r\n    //===> Set Attributes <===//\r\n    const set_order = order => setAttributes({ order });\r\n    const set_taxonomy = taxonomy => setAttributes({ taxonomy });\r\n    const set_post_type = post_type => setAttributes({ post_type });\r\n    const set_hide_empty = hide_empty => setAttributes({ hide_empty });\r\n    const set_query_count = query_count => setAttributes({ query_count });\r\n    const set_template_part = template_part => setAttributes({ template_part });\r\n\r\n    //===> Grid Attributes <===//\r\n    const set_grid_mode = grid_mode => setAttributes({ grid_mode });\r\n    const set_grid_cols = grid_cols => setAttributes({ grid_cols: \"row-cols-\" + (grid_cols > 0 ? grid_cols : \"auto\") });\r\n    const set_grid_cols_stat = grid_cols_stat => setAttributes({ grid_cols_stat });\r\n    const set_grid_alignment = grid_alignment => setAttributes({ grid_alignment });\r\n\r\n    //===> Grid Features <===//\r\n    const set_grid_flow = grid_flow => grid_flow ? setAttributes({ grid_flow: \"flow-reverse\" }) : setAttributes({grid_flow :\"\"});\r\n    const set_grid_nowrap = grid_nowrap => grid_nowrap ? setAttributes({ grid_nowrap: \"flow-nowrap\" }) : setAttributes({grid_nowrap:\"\"});\r\n    const set_grid_masonry = grid_masonry => grid_masonry ? setAttributes({ grid_masonry: \"px-masonry\" }) : setAttributes({grid_masonry:\"\"});\r\n\r\n    //===> Slider Attributes <===//\r\n    const set_slider_mode = slider_mode => setAttributes({ slider_mode });\r\n\r\n    //===> Set Phenix View <===//\r\n    const setPhenixView = () => {\r\n        //===> Check Site Editor <===//\r\n        let siteEditor = window.frames['editor-canvas'];\r\n\r\n        //===> Get the Element from Site Editor <===//\r\n        if (siteEditor) {\r\n            //===> Media Active <===//\r\n            let mediaElements = siteEditor.document.querySelectorAll('.px-media');\r\n            mediaElements = [...mediaElements];\r\n            Phenix(mediaElements).multimedia();\r\n        }\r\n\r\n        //===> Set Background <===//\r\n        if (!siteEditor) {\r\n            Phenix('.px-media').multimedia();\r\n        }\r\n    };\r\n\r\n    //===> Update Phenix Elements <===//\r\n    useEffect(()=> {\r\n        //===> Active Phenix Components <===//\r\n        setPhenixView();\r\n\r\n        //===> Fetch Taxonomies <===//\r\n        if (TaxonomyList.length < 2) apiFetch({path: 'wp/v2/taxonomies'}).then(taxonomies => {\r\n            //===> Define Types <===//\r\n            let new_taxonomies = [];\r\n\r\n            //===> Get Current Active Types <===//\r\n            for (const [key, value] of Object.entries(taxonomies)) {\r\n                //===> Exclude the Core Types <===//\r\n                if (!['nav_menu', 'post_tag'].includes(key)) {\r\n                    new_taxonomies.push({\"value\":key, \"label\":value.name});\r\n                }\r\n            }\r\n\r\n            //===> Set the new List if its Deferent <===//\r\n            if (TaxonomyList !== new_taxonomies) setTaxonomyList([...new_taxonomies]);\r\n        });\r\n\r\n        //===> Fetch Post Types <===//\r\n        if (postTypes.length < 2) apiFetch({path: 'wp/v2/types'}).then(post_types => {\r\n            //===> Define Types <===//\r\n            let new_types = [];\r\n\r\n            //===> Get Current Active Types <===//\r\n            for (const [key, value] of Object.entries(post_types)) {\r\n                //===> Exclude the Core Types <===//\r\n                if (!['attachment', 'nav_menu_item', 'wp_block', 'wp_navigation', 'wp_template', 'wp_template_part'].includes(key)) {\r\n                    new_types.push({\"value\":key, \"label\":value.name});\r\n                }\r\n            }\r\n\r\n            //===> Set the new List if its Deferent <===//\r\n            if (PostTypes !== new_types) setPostTypes([...new_types]);\r\n        });\r\n    }, []);\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"General Setting\", \"phenix\")} initialOpen={true}>\r\n                {/*===> Post Type <===*/}\r\n                <SelectControl label={__(\"Taxonomy Type\", \"phenix\")} value={attributes.taxonomy} onChange={set_taxonomy} options={TaxonomyList}/>\r\n                \r\n                {/*===> Post Type <===*/}\r\n                <SelectControl label={__(\"Data Type\", \"phenix\")} value={attributes.post_type} onChange={set_post_type} options={PostTypes}/>\r\n\r\n                {/*=== Card Template ===*/}\r\n                <TextControl key=\"template-name\" label={__(\"Card Template\", \"phenix\")} value={ attributes.template_part } onChange={set_template_part}/>\r\n                \r\n                {/*===> Max Items and Order <===*/}\r\n                <div className='row gpx-20 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Max Items\", \"phenix\")} value={ attributes.query_count } onChange={set_query_count}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <SelectControl label={__(\"Order By\", \"phenix\")} value={attributes.order} onChange={set_order} options={[\r\n                            { label: __('Oldest', \"phenix\"), value: 'ASC' },\r\n                            { label: __('Newest', \"phenix\"),  value: 'DESC' },\r\n                        ]}/>\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n\r\n                {/*===> Hide Empty <===*/}\r\n                <ToggleControl label={__(\"Hide Empty Taxonomies\", \"phenix\")} checked={attributes.hide_empty} onChange={set_hide_empty}/>\r\n\r\n                {/*===> Grid and Slider <===*/}\r\n                <ToggleControl label={__(\"Enable Grid Mode\", \"phenix\")} checked={attributes.grid_mode} onChange={set_grid_mode}/>\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            {attributes.grid_mode ? <PanelBody title={__(\"Loop Grid\", \"phenix\")} initialOpen={true}>\r\n                {/*===> Columns No. in Row <===*/}\r\n                {!attributes.grid_cols_stat ? <div className=\"mb-15\">\r\n                    <PhenixNumber label={__(\"Columns in Row\", \"phenix\")} icon=\"far fa-mobile-android\" value={attributes.grid_cols.replace(\"row-cols-\", \"\")} onChange={set_grid_cols} min={0} max={12}></PhenixNumber>\r\n                </div> : \"\"}\r\n\r\n                {/*===> Free Columns Size <===*/}\r\n                <ToggleControl label={__(\"Free Columns Size ?\", \"phenix\")} checked={attributes.grid_cols_stat} onChange={set_grid_cols_stat}/>\r\n                \r\n                {/*===> Switch Buttons <===*/}\r\n                <div className='row gpx-15 mb-15'>\r\n                    {/*===> Column [For Alignment] <===*/}\r\n                    <div className='col-12 mb-20'>\r\n                        <FlexAlignment label={__(\"Flexbox Alignment\", \"phenix\")} value={attributes.grid_alignment} onChange={set_grid_alignment}></FlexAlignment>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        {/*===> Switch Button <===*/}\r\n                        <ToggleControl label={__(\"Reverse \", \"phenix\")} checked={attributes.grid_flow.length > 0} onChange={set_grid_flow}/>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        {/*===> Switch Button <===*/}\r\n                        <ToggleControl label={__(\"Nowrap\", \"phenix\")} checked={attributes.grid_nowrap.length > 0} onChange={set_grid_nowrap}/>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        {/*===> Switch Button <===*/}\r\n                        <ToggleControl label={__(\"Slider Mode\", \"phenix\")} checked={attributes.slider_mode} onChange={set_slider_mode}/>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        {/*===> Switch Button <===*/}\r\n                        <ToggleControl label={__(\"Masonry\", \"phenix\")} checked={attributes.grid_masonry.length > 0} onChange={set_grid_masonry}/>\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n            </PanelBody> : \"\"}\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        {attributes.preview ? \r\n            <img src=\"https://design.phenixthemes.com/px-assets/slider-placeholder.svg\" alt=\"\" className='fluid' />\r\n        :\r\n            <div {...blockProps}>\r\n                <ServerSideRender block=\"phenix/taxonomies\" attributes={attributes} />\r\n            </div>\r\n        }\r\n    </>);\r\n}","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata.name, {\r\n    title      : metadata.title,\r\n    category   : metadata.category,\r\n    attributes : metadata.attributes,\r\n    icon  : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M494.9 96.01c-38.78 0-75.22 15.09-102.6 42.5L320 210.8L247.8 138.5c-27.41-27.41-63.84-42.5-102.6-42.5C65.11 96.01 0 161.1 0 241.1v29.75c0 80.03 65.11 145.1 145.1 145.1c38.78 0 75.22-15.09 102.6-42.5L320 301.3l72.23 72.25c27.41 27.41 63.84 42.5 102.6 42.5C574.9 416 640 350.9 640 270.9v-29.75C640 161.1 574.9 96.01 494.9 96.01zM202.5 328.3c-15.31 15.31-35.69 23.75-57.38 23.75C100.4 352 64 315.6 64 270.9v-29.75c0-44.72 36.41-81.13 81.14-81.13c21.69 0 42.06 8.438 57.38 23.75l72.23 72.25L202.5 328.3zM576 270.9c0 44.72-36.41 81.13-81.14 81.13c-21.69 0-42.06-8.438-57.38-23.75l-72.23-72.25l72.23-72.25c15.31-15.31 35.69-23.75 57.38-23.75C539.6 160 576 196.4 576 241.1V270.9z\"/></svg>,\r\n    /**===> @see ./edit.js <===*/\r\n    edit  : Edit,\r\n    save  : () => null\r\n});"],"names":["FlexAlignment","this","props","label","value","onChange","button_style","set_alignment","target","align_val","current_val","trim","current_values","split","xTypes","itHasType","some","type","includes","align_type","getAttribute","foundedType","forEach","current_value","replace","className","title","onClick","clicked","name","checked","Component","PhenixNumber","min","max","steps","icon","DecreaseNum","button","wrapper","Phenix","ancestor","minNum","parseInt","step","input","querySelector","newVal","changed","maxNum","OptionControl","children","required","options","attributes","event","defaultChecked","Edit","setAttributes","blockProps","useBlockProps","useState","post_type","__","PostTypes","setPostTypes","taxonomy","TaxonomyList","setTaxonomyList","useEffect","siteEditor","window","frames","mediaElements","document","querySelectorAll","multimedia","setPhenixView","length","apiFetch","path","then","taxonomies","new_taxonomies","Object","entries","key","push","postTypes","post_types","new_types","InspectorControls","PanelBody","initialOpen","SelectControl","TextControl","template_part","query_count","order","ToggleControl","hide_empty","grid_mode","grid_cols_stat","grid_cols","grid_alignment","grid_flow","grid_nowrap","slider_mode","grid_masonry","preview","src","alt","block","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerBlockType","metadata","category","xmlns","viewBox","edit","save"],"sourceRoot":""}