{"version":3,"file":"blocks/taxonomies/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/px-controls/alignment.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/panel-scripts.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select-data.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/flexbox.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/margin.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/padding.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/position.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/./src/blocks/taxonomies/edit.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/external window [\"wp\",\"serverSideRender\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/taxonomies/index.js"],"sourcesContent":["/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> Media Uploader <===//\r\nexport default class FlexAlignment extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, onChange, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-align-${screen}-option`;\r\n\r\n        //===> Value Handler <===//\r\n        const set_alignment = target => {\r\n            //===> Define Data <===//\r\n            let align_val  = value;\r\n            const current_val = value.trim(),\r\n                  current_values  = current_val.split(\" \"),\r\n                  xTypes = [\"-x\", \"between\", \"around\"],\r\n                  allTypes = [\"-x\", \"between\", \"around\", \"-y\"];\r\n\r\n            //===> Check if the Value has an option with the same type as the target value <===//\r\n            const itHasType = allTypes.some(type => current_val.includes(type)),\r\n                  align_type = xTypes.some(type => target.getAttribute('name').includes(type)) ? \"x\" : \"y\",\r\n                  foundedType = xTypes.some(type => current_val.includes(type)) ? \"x\" : \"y\";\r\n\r\n            //===> if the Value has an Option and the option type is the same as the target <===//\r\n            if (itHasType && align_type === foundedType) {\r\n                //===> Loop on Values <===//\r\n                current_values.forEach(current_value => {\r\n                    //===> if the Founded Type is the same is the Value, Replace the Value <===//\r\n                    if (current_value.includes(align_type)) {\r\n                        align_val = align_val.replace(current_value, target.value);\r\n                    }\r\n                });\r\n            }\r\n            //===> if its a new Value add it <===//\r\n            else {\r\n                align_val += ` ${target.value}`;\r\n            }\r\n\r\n            //===> Return new Value <===//\r\n            return onChange(align_val.trim());\r\n        },\r\n\r\n        //===> Reset Value Method <===//\r\n        reset_align = (clicked) => onChange(\"align-reset\");\r\n\r\n        //===> Output <===//\r\n        return (<div className='components-flex-item flex-alignment-btns'>\r\n            {/*===> Label <===*/}\r\n            <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n                <label className='fs-13 weight-bold'>{label}</label>\r\n                <button type=\"button\" data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"flexbox align-between\"}>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-start-x`)} value={`align${screenPoint}-start-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-center-x`)} value={`align${screenPoint}-center-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-between`)} value={`align${screenPoint}-between`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-around`)} value={`align${screenPoint}-around`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-end-x`)} value={`align${screenPoint}-end-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-start-y`)} value={`align${screenPoint}-start-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-center-y`)} value={`align${screenPoint}-center-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-end-y`)} value={`align${screenPoint}-end-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        colors : [\r\n            \"fas fa-redo tx-align-center\",\r\n\r\n            \"bg-inherit\",\r\n            \"bg-transparent\",\r\n            \"bg-primary\",\r\n            \"bg-primary-dark\",\r\n            \"bg-secondary\",\r\n            \"bg-secondary-dark\",\r\n            \"bg-gray\",\r\n            \"bg-dark\",\r\n            \"bg-white\",\r\n            \"bg-success\",\r\n            \"bg-danger\",\r\n            \"bg-warning\",\r\n            \"bg-info\",\r\n\r\n            \"bg-offwhite-primary\",\r\n            \"bg-offwhite-secondary\",\r\n            \"bg-offwhite-info\",\r\n            \"bg-offwhite-success\",\r\n            \"bg-offwhite-danger\",\r\n            \"bg-offwhite-warning\",\r\n\r\n            \"bg-offwhite-smoke\",\r\n            \"bg-offwhite-gray\",\r\n            \"bg-offwhite-snow\",\r\n            \"bg-offwhite-honeydew\",\r\n            \"bg-offwhite-aliceblue\",\r\n            \"bg-offwhite-ghost\",\r\n            \"bg-offwhite-seashell\",\r\n            \"bg-offwhite-beige\",\r\n            \"bg-offwhite-oldlace\",\r\n            \"bg-offwhite-floral\",\r\n            \"bg-offwhite-antique\",\r\n            \"bg-offwhite-linen\",\r\n            \"bg-offwhite-lavenderblush\",\r\n\r\n            \"bg-facebook\",\r\n            \"bg-twitter\",\r\n            \"bg-youtube\",\r\n            \"bg-instagram\",\r\n            \"bg-snapchat\",\r\n            \"bg-whatsapp\",\r\n            \"bg-pinterest\",\r\n            \"bg-linkedin\",\r\n            \"bg-behance\",\r\n            \"bg-dribbble\",\r\n            \"bg-flicker\",\r\n\r\n            \"bg-alpha-05\",\r\n            \"bg-alpha-10\",\r\n            \"bg-alpha-15\",\r\n            \"bg-alpha-25\",\r\n            \"bg-alpha-50\",\r\n            \"bg-alpha-75\",\r\n\r\n            \"bg-revert-05\",\r\n            \"bg-revert-10\",\r\n            \"bg-revert-15\",\r\n            \"bg-revert-25\",\r\n            \"bg-revert-50\",\r\n            \"bg-revert-75\",\r\n        ],\r\n\r\n        gradients: [\r\n            \"bg-grade-primary\",\r\n            \"bg-grade-secondary\",\r\n            \"bg-grade-warning\",\r\n            \"bg-grade-danger\",\r\n            \"bg-grade-success\",\r\n            \"bg-grade-water\",\r\n            \"bg-grade-ice\",\r\n            \"bg-grade-fire\",\r\n            \"bg-grade-purple\",\r\n            \"bg-grade-primary-offwhite\",\r\n            \"bg-grade-secondary-offwhite\",\r\n            \"bg-grade-primary-secondary\",\r\n            \"bg-grade-primary-secondary-2nd\",\r\n            \"bg-grade-danger-purple\",\r\n            \"bg-grade-primary-purple\",\r\n            \"bg-grade-silver\",\r\n            \"bg-grade-silver-2nd\",\r\n            \"bg-grade-offwhite-red\",\r\n            \"bg-grade-offwhite-blue\",\r\n            \"bg-grade-offwhite-green\",\r\n            \"bg-grade-offwhite-yellow\",\r\n            \"bg-grade-offwhite-silver\",\r\n            \"bg-grade-offwhite-info\",\r\n            \"bg-grade-offwhite-purple\",\r\n            \"bg-grade-offwhite-danger\",\r\n            \"bg-grade-offwhite-yellow-2nd\",\r\n            \"bg-grade-offwhite-blue-2nd \",\r\n            \"bg-grade-offwhite-blue-3rd\",\r\n            \"bg-grade-offwhite-blue-4th\",\r\n        ],\r\n\r\n        rotation : [\r\n            'bg-grade-0',\r\n            'bg-grade-45',\r\n            'bg-grade-90',\r\n            'bg-grade-120',\r\n            'bg-grade-120n',\r\n            'bg-grade-90n',\r\n            'bg-grade-45n',\r\n            'bg-grade-180',\r\n        ],\r\n\r\n        placeholder : \"https://via.placeholder.com/480x200.webp?text=Example\",\r\n    }\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            type,\r\n            value,\r\n            label,\r\n            rotate,\r\n            colorsOnly,\r\n            onlyCG,\r\n            isSmall,\r\n            placeholder,\r\n            onChange\r\n        } = this.props;\r\n\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: type,\r\n            rotate: rotate,\r\n            value: value || \"\",\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_type = type => {\r\n            //===> Set Value <===//\r\n            options.type = type;\r\n\r\n            //===> change value <===//\r\n            if (options.type === 'image') {\r\n                options.value = this.state.placeholder;\r\n            } else {\r\n                options.value = \"\";\r\n            }\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_rotate = rotate => {\r\n            //===> Set Value <===//\r\n            options.rotate = rotate;\r\n\r\n            //===> change value <===//\r\n            if (options.type !== 'gradient') options.value = \"\";\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button?.getAttribute('data-value');\r\n\r\n            //===> Colors & Gradients <===//\r\n            if (type !== 'image' && type !== \"video\") {options.value = value;}\r\n            //===> Image Type <===//\r\n            else {options.value = clicked.url;}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = \"\",\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    title = list[index].replace('bg-', '').replace('-', ' ');\r\n\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                output.push(<button key={`${name.replaceAll(\" \", \"-\")}`} onClick={setBackground} title={title} data-value={isColor ? name : \"\"} className={`${isColor ? name : `${name} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"}`} style={{\"width\":\"30px\",\"height\":\"16px\",\"borderRadius\":\"16px\"}}></button>);\r\n            }\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        {type !== \"image\" && type !== \"video\" ? <>\r\n                            <span className={`me-5 radius-circle inline-block ${value?.length > 0 ? value : \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\"}}></span>\r\n                            <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 ? value.replaceAll(\"-\", \" \").replace(\"bg\",\"\") : placeholder ? placeholder : \"Default\"}</span>\r\n                        </> : <>\r\n                        <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                            <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                        </>}\r\n                        {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    {!colorsOnly && !onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'image',   value: 'image' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                            { label: 'video',   value: 'video' },\r\n                        ]}/>\r\n                    : onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                        ]}/>\r\n                    : null}\r\n                </div>\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox options-list align-between ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pd-15 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: 150}}>\r\n                    {type === \"color\" ? makeButtons(this.state.colors) : type === \"gradient\" ? makeButtons(this.state.gradients) : null}\r\n                    {type === \"image\" || type === \"video\" ? <MediaUploader key=\"upload-file\" value={!value ? this.state.placeholder : value} setValue={setBackground}></MediaUploader> : null}\r\n                </div>\r\n                {/*===> Rotation Select <===*/}\r\n                {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                    <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                    <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                        { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                        { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                        { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                        { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                        { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                        { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                        { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                        { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                        { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                    ]}/>\r\n                </div> : null}\r\n                {/*===> Rotation Select <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            value,\r\n            label,\r\n            isSmall,\r\n            placeholder,\r\n            onChange\r\n        } = this.props;\r\n\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = [\r\n            \"color-inherit\",\r\n            \"color-transparent\",\r\n            \"color-primary\",\r\n            \"color-primary-dark\",\r\n            \"color-secondary\",\r\n            \"color-secondary-dark\",\r\n            \"color-gray\",\r\n            \"color-dark\",\r\n            \"color-white\",\r\n            \"color-success\",\r\n            \"color-danger\",\r\n            \"color-warning\",\r\n            \"color-info\",\r\n            \"color-facebook\",\r\n            \"color-twitter\",\r\n            \"color-youtube\",\r\n            \"color-instagram\",\r\n            \"color-snapchat\",\r\n            \"color-whatsapp\",\r\n            \"color-pinterest\",\r\n            \"color-linkedin\",\r\n            \"color-behance\",\r\n            \"color-dribbble\",\r\n            \"color-flicker\",\r\n            \"fas fa-redo tx-align-center\"\r\n        ];\r\n\r\n        //===> Set Color <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = \"\",\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    title = list[index].replace('color-', '').replace('-', ' ');\r\n    \r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                output.push(<button key={`${name.replaceAll(\" \", \"-\")}`} onClick={setColor} title={title} data-value={isColor ? name : \"\"} className={`${isColor ? name.replace('color-','bg-') : `${name} color-gray fs-12`} reset-button ${value === name ? 'px-active' : null}`} style={{\"width\":\"30px\",\"height\":\"16px\",\"borderRadius\":\"16px\"}}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel  = Phenix(button).next(\".options-list\");\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Trigger <===*/}\r\n                <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                    <span className={`me-5 radius-circle inline-block ${value?.length > 0 ? value.replace(\"color-\",\"bg-\") : \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\"}}></span>\r\n                    <span className='col'>{value?.length > 0 && !placeholder ? value?.replaceAll(\"-\", \" \").replace(\"color\",\"\") : placeholder ? placeholder : \"Default\"}</span>\r\n                    {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n                </button>\r\n                {/*===> Panel <===*/}\r\n                <div className='flexbox px-scrollbar overflow-y-auto options-list align-between pd-20 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: 150}}>\r\n                    {makeButtons(pxPallete)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport PhenixComponentsBuilder from './panel-scripts';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PxDropDown extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { PhenixComponentsBuilder(); };\r\n    componentDidUpdate() { PhenixComponentsBuilder(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            button,\r\n            support,\r\n            dropList,\r\n            children,\r\n            className,\r\n            dataPosition,\r\n            title,\r\n        } = this.props;\r\n\r\n        const attributes = {};\r\n\r\n\r\n        if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n        if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n\r\n        //===> Render Component <===//\r\n        return (<>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </>)\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseInt(min) || 0,\r\n                  maxNum  = parseInt(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseInt(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseInt(max) || 9999999,\r\n                step    = steps ? parseInt(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseInt(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseInt(value) ? parseInt(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Script Runner <===//\r\nconst PhenixComponentsBuilder = () => {\r\n    //===> Create Time Loop to Find the Elements <===//\r\n    let finder_counter = 0,\r\n        element_finder = setInterval(() => {\r\n            //===> Get Elements <===//\r\n            let elements = document.querySelectorAll('.pds-tm-control');\r\n\r\n            //===> Loop Through Elements <===//\r\n            elements.forEach(element => {\r\n                //===> Define Element Data <===//\r\n                let class_names = element.classList;\r\n\r\n                //===> for Selects <===//\r\n                if (class_names.contains('px-select') && !Phenix(element).ancestor('.px-dropdown')) {\r\n                    Phenix(element).select();\r\n                } else if (class_names.contains('px-dropdown')) {\r\n                    Phenix(element).dropdown();\r\n                    element.querySelectorAll('.pds-tm-control.px-select').forEach(element => Phenix(element).select());\r\n                }\r\n            });\r\n\r\n            //===> Increase Counter <===//\r\n            finder_counter++;\r\n\r\n            //===> Clear Timer Loop <===//\r\n            if (finder_counter > 30) clearInterval(element_finder);\r\n        }, 500);\r\n\r\n    //===> Get View iFrame <===//\r\n    let viewScript = (the_document) => {\r\n        //===> Define Data <===//\r\n        let time_counter = 0,\r\n        //===> Timer Loop <===//\r\n        pds_elements_timer = setInterval(() => {\r\n            //===> Run Multimedia <===//\r\n            the_document.querySelectorAll(`.px-media:not([style*=\"background-image\"])`).forEach(element => {\r\n                element.style.backgroundImage = null;\r\n                Phenix(element).multimedia();\r\n            });\r\n\r\n            //===> Run Sliders <===//\r\n            the_document.querySelectorAll(\".px-slider:not(.block-editor-block-list__block)\").forEach(element => {\r\n                //===> Mark as Editing Mode <===//\r\n                element.classList.add('edit-mode');\r\n\r\n                //===> Disable Autoplay <===//\r\n                if(element.getAttribute('data-autoplay')) element.setAttribute('data-autoplay', false);\r\n\r\n                //===> Replace Data Attributes with Row/Columns Classes <===//\r\n                const slider_cols_fixer = (row) => {\r\n                    //===> Contain the Slides in One Line <====//\r\n                    row.classList.add('flow-nowrap');\r\n                    if (element.getAttribute('data-md')) row.classList.add(`row-cols-md-${element.getAttribute('data-md')}`);\r\n                    if (element.getAttribute('data-lg')) row.classList.add(`row-cols-md-${element.getAttribute('data-lg')}`);\r\n                    if (element.getAttribute('data-xl')) row.classList.add(`row-cols-md-${element.getAttribute('data-xl')}`);\r\n                }\r\n\r\n                slider_cols_fixer(element);\r\n\r\n                //===> Stretch Fix <===//\r\n                // let slider_element = element.querySelector(\".splide__list\"),\r\n                //===> Slides List Finder <===//\r\n                // slider_element_finder = setInterval(() => {\r\n                //     if (!slider_element) {\r\n                //         slider_cols_fixer(element);\r\n                //         slider_element = element.querySelector(\".splide__list\");\r\n                //     } else {\r\n                //         //===> Assign a Max Height for Stretch <===//\r\n                //         slider_element.style.maxHeight = Phenix(slider_element).height();\r\n\r\n                //         //===> Assign Columns Sizes <===//\r\n                //         slider_cols_fixer(slider_element);\r\n                //         element.classList.forEach(class_name => class_name.includes('row-cols') || class_name.includes('flow-') ? element.classList.remove(class_name) : null);\r\n\r\n                //         //===> Clear Timer <===//\r\n                //         clearInterval(slider_element_finder);\r\n                //     }\r\n                // }, 100);\r\n                //===> Run the Slider <===//\r\n                // Phenix(element).slider({autoplay: false});\r\n            });\r\n\r\n            //===> Run Menus <===//\r\n            the_document.querySelectorAll(\".px-navigation\").forEach(element => Phenix(element).menu());\r\n\r\n            //====> Clear Timer <===//\r\n            time_counter += 1; if (time_counter > 100) clearInterval(pds_elements_timer);\r\n        }, 500);\r\n    };\r\n\r\n    //===> Run View Script <===//\r\n    if (window.frames['editor-canvas']) {\r\n        viewScript(window.frames['editor-canvas'].document);\r\n        //===> Load Assets in Frame <====//\r\n        let trying_times = 0, loadAssetTimer = setInterval(()=> {\r\n            //====> if the Document unloaded clear the timer <====//\r\n            if (!window.frames['editor-canvas'] || !window.frames['editor-canvas'].document) {\r\n                clearInterval(loadAssetTimer);\r\n                return;\r\n            } else {\r\n                //===> When the Frame is Found <===//\r\n                if (!window.frames['editor-canvas'].document.querySelector(\"#fontawesome-css\")) {\r\n                    //===> Check in the Editor <===//\r\n                    let frameDoc = window.frames['editor-canvas'].document,\r\n                        fontAwesome = document.querySelector(\"#fontawesome-css\"),\r\n                        importedEl = fontAwesome ? document.importNode(fontAwesome, true) : false;\r\n    \r\n                    //===> Load Font <===//\r\n                    if(importedEl && frameDoc.body) {\r\n                        frameDoc.body.appendChild(importedEl);\r\n                        clearInterval(loadAssetTimer);\r\n                    }\r\n                    \r\n                    //===> Add Scrollbar <===//\r\n                    if (frameDoc && frameDoc.querySelector('html')) {\r\n                        frameDoc.querySelector('html')?.classList.add('px-scrollbar');\r\n                    };\r\n                } else {\r\n                    //===> Increase Counter <===//\r\n                    trying_times += 1;\r\n                    if (trying_times > 10) clearInterval(loadAssetTimer);\r\n                }\r\n            }\r\n        }, 300);\r\n    } else if (window.Phenix) {\r\n        window.document ? viewScript(window.document) : null;\r\n    }\r\n}\r\n\r\nexport default PhenixComponentsBuilder;","//====> .Dependencies. <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class SelectFromData extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        dataFetched: 0,\r\n        options: [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}],\r\n    };\r\n\r\n    //===> Component Rendered Hook <===//\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        if(this.state.options.length < 2) {\r\n            //===> for PDS Menu Locations <===//\r\n            if (this.props.options === \"menu-locations\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                        locations = options.menu_locations,\r\n                        new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n        \r\n                    //===> add Locations to a List <===//\r\n                    for (const [key, value] of Object.entries(locations)) {\r\n                        new_options_list.push({label: value, value: key});\r\n                    }\r\n    \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for taxonomies <====//\r\n            else if (this.props.options === \"taxonomies\") {\r\n                //===> Fetch Taxonomies <===//\r\n                apiFetch({path: 'wp/v2/taxonomies'}).then(taxonomies => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n\r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(taxonomies)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        if (\"nav_menu\" !== key) {\r\n                            new_options_list.push({\"value\":key, \"label\":value.name});\r\n                        }\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for Post-Types <====//\r\n            else if (this.props.options === \"post-types\") {\r\n                //===> Fetch Post Types <===//\r\n                apiFetch({path: 'wp/v2/types'}).then(post_types => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n            \r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(post_types)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        if (!['attachment', 'nav_menu_item', 'wp_block', 'wp_navigation', 'wp_template', 'wp_template_part'].includes(key)) {\r\n                            new_options_list.push({\"value\":key, \"label\":value.name});\r\n                        }\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n\r\n                });\r\n            }\r\n            //====> for Users-Roles <====//\r\n            else if (this.props.options === \"users-roles\") {\r\n                //===> Fetch Roles <===//\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n            \r\n                    //===> Get Current Roles <===//\r\n                    for (const [key, value] of Object.entries(options.users_roles)) {\r\n                        new_options_list.push({\"value\": value.name, \"label\": value.name});\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for Template-Parts <====//\r\n            else if (this.props.options === \"template-parts\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                          template_parts = options.theme_parts,\r\n                          new_options_list = [];\r\n\r\n                    //===> Loop Through Theme-Parts <===//\r\n                    Object.entries(template_parts).forEach(([key, value]) => {\r\n                        //===> if its direct theme-part <===//\r\n                        if(typeof(value) === 'string') {\r\n                            new_options_list.push(<option key={`${key}-${value}`} value={value.replace(\".php\", \"\")}>{value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}</option>);\r\n                        }\r\n                        //===> if its nested theme-part in a directory <===//\r\n                        else {\r\n                            //===> Define Directory Files <===//\r\n                            let files_list = [];\r\n                            //===> Loop Through Files <===//\r\n                            Object.entries(value).forEach(([key2, value]) => {\r\n                                //===> add the file to the list <===//\r\n                                files_list.push(<option key={`${key2}-${value}`} value={`${key}/${value.replace(\".php\", \"\")}`}>{`${value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}`}</option>);\r\n                            });\r\n                            //===> Push the Options Group <===//\r\n                            new_options_list.push(<optgroup key={`${key}-group`} label={`${key}`}>{files_list}</optgroup>);\r\n                        }\r\n                    });\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {options, name, type, size, label, value, multiple, valueSetter, className, search } = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Render Component <===//\r\n        return <PhenixSelect key={this.state.dataFetched} type={type} options={this.state.options} multiple={multiple} name={name} placeholder={__(\"Default\", \"pds-blocks\")} label={label} value={value} onChange={valueSetter} className={className} search={search} size={size} />\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixComponentsBuilder from './panel-scripts';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixSelect extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { PhenixComponentsBuilder(); };\r\n    componentDidUpdate() { PhenixComponentsBuilder(); };\r\n    //===> Component Rendered when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value || nextProps.options !== this.props.options);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {onChange: setValue};\r\n\r\n        //===> add Options <===//\r\n        if (search) attributes['data-search'] = 1;\r\n        if (value) attributes.defaultValue = value;\r\n        if (multiple) attributes.multiple = multiple;\r\n        if (placeholder) attributes['data-placeholder'] = placeholder;\r\n\r\n        //===> Get Options List <===//\r\n        let options_list = [];\r\n\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal Lost of Options <===//\r\n            options.forEach(item => {\r\n                options_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            options_list = options;\r\n        } else{\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                options_list.push(options_group);\r\n            });\r\n        }\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n            {/*===> Control Element <===*/}\r\n            <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`}>\r\n                <select key={`select-element`} name={name} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Options List\r\n//=> entrance-animation, exit-animation, duration, delay\r\n//=> lazyloading, flow/into, offset, lazygroup, effect-animations\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = {\r\n            \"Fading Entrances\" : [\r\n                { \"label\": \"None\", \"value\": \"\"},\r\n                { \"label\": \"fadeIn\", \"value\": \"fadeIn\"},\r\n                { \"label\": \"fadeInUp\", \"value\": \"fadeInUp\"},\r\n                { \"label\": \"fadeInDown\", \"value\": \"fadeInDown\"},\r\n                { \"label\": \"fadeInStart\", \"value\": \"fadeInStart\"},\r\n                { \"label\": \"fadeInEnd\", \"value\": \"fadeInEnd\"},\r\n                { \"label\": \"fadeInTopStart\", \"value\": \"fadeInTopStart\"},\r\n                { \"label\": \"fadeInTopEnd\", \"value\": \"fadeInTopEnd\"},\r\n                { \"label\": \"fadeInBottomStart\", \"value\": \"fadeInBottomStart\"},\r\n                { \"label\": \"fadeInBottomEnd\", \"value\": \"fadeInBottomEnd\"},\r\n                { \"label\": \"fadeInUpBig\", \"value\": \"fadeInUpBig\"},\r\n                { \"label\": \"fadeInDownBig\", \"value\": \"fadeInDownBig\"},\r\n                { \"label\": \"fadeInStartBig\", \"value\": \"fadeInStartBig\"},\r\n                { \"label\": \"fadeInEndBig\", \"value\": \"fadeInEndBig\"},\r\n            ],\r\n\r\n            \"Back Entrances\" : [\r\n                { \"label\": \"backInUp\", \"value\": \"backInUp\"},\r\n                { \"label\": \"backInStart\", \"value\": \"backInStart\"},\r\n                { \"label\": \"backInEnd\", \"value\": \"backInEnd\"},\r\n                { \"label\": \"backInDown\", \"value\": \"backInDown\"},\r\n            ],\r\n            \r\n            \"Bouncing Entrances\" : [\r\n                { \"label\": \"bounceIn\", \"value\": \"bounceIn\"},\r\n                { \"label\": \"bounceInUp\", \"value\": \"bounceInUp\"},\r\n                { \"label\": \"bounceInStart\", \"value\": \"bounceInStart\"},\r\n                { \"label\": \"bounceInEnd\", \"value\": \"bounceInEnd\"},\r\n                { \"label\": \"bounceInDown\", \"value\": \"bounceInDown\"},\r\n            ],\r\n\r\n            \"Flippers Entrances\" : [\r\n                { \"label\": \"flipInX\", \"value\": \"flipInX\"},\r\n                { \"label\": \"flipInY\", \"value\": \"flipInY\"},\r\n            ],\r\n\r\n            \"Lightspeed Entrances\" : [\r\n                { \"label\": \"lightSpeedInStart\", \"value\": \"lightSpeedInStart\"},\r\n                { \"label\": \"lightSpeedInEnd\", \"value\": \"lightSpeedInEnd\"},\r\n            ],\r\n\r\n            \"Rotating Entrances\" : [\r\n                { \"label\": \"rotateIn\", \"value\": \"rotateIn\"},\r\n                { \"label\": \"rotateInDownStart\", \"value\": \"rotateInDownStart\"},\r\n                { \"label\": \"rotateInDownEnd\", \"value\": \"rotateInDownEnd\"},\r\n                { \"label\": \"rotateInUpStart\", \"value\": \"rotateInUpStart\"},\r\n                { \"label\": \"rotateInUpEnd\", \"value\": \"rotateInUpEnd\"},\r\n            ],\r\n\r\n            \"Zooming Entrances\" : [\r\n                { \"label\": \"zoomIn\", \"value\": \"zoomIn\"},\r\n                { \"label\": \"zoomInDown\", \"value\": \"zoomInDown\"},\r\n                { \"label\": \"zoomInStart\", \"value\": \"zoomInStart\"},\r\n                { \"label\": \"zoomInEnd\", \"value\": \"zoomInEnd\"},\r\n                { \"label\": \"zoomInUp\", \"value\": \"zoomInUp\"},\r\n            ],\r\n\r\n            \"Sliding Entrances\" : [\r\n                { \"label\": \"slideInDown\", \"value\": \"slideInDown\"},\r\n                { \"label\": \"slideInStart\", \"value\": \"slideInStart\"},\r\n                { \"label\": \"slideInEnd\", \"value\": \"slideInEnd\"},\r\n                { \"label\": \"slideInUp\", \"value\": \"slideInUp\"},\r\n            ],\r\n\r\n            \"Specials Entrances\" : [\r\n                { \"label\": \"hinge\", \"value\": \"hinge\"},\r\n                { \"label\": \"jackInTheBox\", \"value\": \"jackInTheBox\"},\r\n                { \"label\": \"rollIn\", \"value\": \"rollIn\"},\r\n            ],\r\n\r\n            \"Attention seekers\" : [\r\n                { \"label\": \"bounce\", \"value\": \"bounce\"},\r\n                { \"label\": \"flash\", \"value\": \"flash\"},\r\n                { \"label\": \"pulse\", \"value\": \"pulse\"},\r\n                { \"label\": \"flip\", \"value\": \"flip\"},\r\n                { \"label\": \"rubberBand\", \"value\": \"rubberBand\"},\r\n                { \"label\": \"shakeX\", \"value\": \"shakeX\"},\r\n                { \"label\": \"shakeY\", \"value\": \"shakeY\"},\r\n                { \"label\": \"headShake\", \"value\": \"headShake\"},\r\n                { \"label\": \"swing\", \"value\": \"swing\"},\r\n                { \"label\": \"tada\", \"value\": \"tada\"},\r\n                { \"label\": \"wobble\", \"value\": \"wobble\"},\r\n                { \"label\": \"jello\", \"value\": \"jello\"},\r\n                { \"label\": \"heartBeat\", \"value\": \"heartBeat\"},\r\n            ],\r\n        };\r\n\r\n        const exits_animations = {\r\n            \"Fading Exits\" : [\r\n                { \"label\": \"fadeOut\", \"value\": \"fadeOut\"},\r\n                { \"label\": \"fadeOutUp\", \"value\": \"fadeOutDown\"},\r\n                { \"label\": \"fadeOutDown\", \"value\": \"fadeOutDown\"},\r\n                { \"label\": \"fadeOutStart\", \"value\": \"fadeOutStart\"},\r\n                { \"label\": \"fadeOutEnd\", \"value\": \"fadeOutEnd\"},\r\n                { \"label\": \"fadeOutTopStart\", \"value\": \"fadeOutTopStart\"},\r\n                { \"label\": \"fadeOutTopEnd\", \"value\": \"fadeOutTopEnd\"},\r\n                { \"label\": \"fadeOutBottomStart\", \"value\": \"fadeOutBottomStart\"},\r\n                { \"label\": \"fadeOutBottomEnd\", \"value\": \"fadeOutBottomEnd\"},\r\n                { \"label\": \"fadeOutUpBig\", \"value\": \"fadeOutUpBig\"},\r\n                { \"label\": \"fadeOutDownBig\", \"value\": \"fadeOutDownBig\"},\r\n                { \"label\": \"fadeOutStartBig\", \"value\": \"fadeOutStartBig\"},\r\n                { \"label\": \"fadeOutEndBig\", \"value\": \"fadeOutEndBig\"},\r\n            ],\r\n\r\n            \"Back Exits\" : [\r\n                { \"label\": \"backOutUp\", \"value\": \"backOutUp\"},\r\n                { \"label\": \"backOutStart\", \"value\": \"backOutStart\"},\r\n                { \"label\": \"backOutEnd\", \"value\": \"backOutEnd\"},\r\n                { \"label\": \"backOutDown\", \"value\": \"backOutDown\"},\r\n            ],\r\n\r\n            \"Bouncing Exits\" : [\r\n                { \"label\": \"bounceOut\", \"value\": \"bounceOut\"},\r\n                { \"label\": \"bounceOutUp\", \"value\": \"bounceOutUp\"},\r\n                { \"label\": \"bounceOutStart\", \"value\": \"bounceOutStart\"},\r\n                { \"label\": \"bounceOutEnd\", \"value\": \"bounceOutEnd\"},\r\n                { \"label\": \"bounceOutDown\", \"value\": \"bounceOutDown\"},\r\n            ],\r\n\r\n            \"Flippers Exits\" : [\r\n                { \"label\": \"flipOutX\", \"value\": \"flipOutX\"},\r\n                { \"label\": \"flipOutY\", \"value\": \"flipOutY\"},\r\n            ],\r\n\r\n            \"Lightspeed Exits\" : [\r\n                { \"label\": \"lightSpeedOutStart\", \"value\": \"lightSpeedOutStart\"},\r\n                { \"label\": \"lightSpeedOutEnd\", \"value\": \"lightSpeedOutEnd\"},\r\n            ],\r\n\r\n            \"Rotating Exits\" : [\r\n                { \"label\": \"rotateOut\", \"value\": \"rotateOut\"},\r\n                { \"label\": \"rotateOutDownStart\", \"value\": \"rotateOutDownStart\"},\r\n                { \"label\": \"rotateOutDownEnd\", \"value\": \"rotateOutDownEnd\"},\r\n                { \"label\": \"rotateOutUpStart\", \"value\": \"rotateOutUpStart\"},\r\n                { \"label\": \"rotateOutUpEnd\", \"value\": \"rotateOutUpEnd\"},\r\n            ],\r\n\r\n            \"Zooming Exits\" : [\r\n                { \"label\": \"zoomOut\", \"value\": \"zoomOut\"},\r\n                { \"label\": \"zoomOutDown\", \"value\": \"zoomOutDown\"},\r\n                { \"label\": \"zoomOutStart\", \"value\": \"zoomOutStart\"},\r\n                { \"label\": \"zoomOutEnd\", \"value\": \"zoomOutEnd\"},\r\n                { \"label\": \"zoomOutUp\", \"value\": \"zoomOutUp\"},\r\n            ],\r\n\r\n            \"Sliding Exits\" : [\r\n                { \"label\": \"slideOutDown\", \"value\": \"slideOutDown\"},\r\n                { \"label\": \"slideOutStart\", \"value\": \"slideOutStart\"},\r\n                { \"label\": \"slideOutEnd\", \"value\": \"slideOutEnd\"},\r\n                { \"label\": \"slideOutUp\", \"value\": \"slideOutUp\"},\r\n            ],\r\n\r\n            \"Specials Exits\" : [\r\n                { \"label\": \"rollOut\", \"value\": \"rollOut\"},\r\n            ],\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                <div className='col-7 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`animation-exit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    {/* <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div> */}\r\n                    {/*===> Column <===*/}\r\n                    {/* <div className='col-12'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div> */}\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: null}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport OptionControl from '../switch';\r\nimport FlexAlignment from '../alignment';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Options List\r\n//=> align, flex-props, grid-props\r\n\r\n//===> Component <===//\r\nexport default class FlexboxSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className={`row gpx-15 ${className ? className : \"\"}`}>\r\n                {/*===> Column <===*/}\r\n                {!options || options.includes(\"align\") ? <>\r\n                <div className='col-12 mb-15'>\r\n                    <FlexAlignment screen={screen} label={__(\"Flexbox Alignment\", \"pds-blocks\")} value={attributes.flexbox[`align${screenPoint}`] || \"\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)}></FlexAlignment>\r\n                </div>\r\n                </>: null}\r\n                {/*===> Group <===*/}\r\n                <div className='col-12 row gpx-10 pdt-5 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-X Space\", \"pds-blocks\")} name={`gpx${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpx${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 flexbox gpy-5'>\r\n                    {/*===> Label <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <label className='col-12 mb-5 tx-UpperCase'>{__(\"Flow Options\", \"pds-blocks\")}</label> : null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <OptionControl name={`flow${screenPoint}`} value={!attributes.flexbox[`stacked${screenPoint}`] || attributes.flexbox[`stacked${screenPoint}`] === \"\" ? `flow${screenPoint}-reverse` : `flow${screenPoint}-columns-reverse`} checked={attributes.flexbox[`flow${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Reverse \", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl name={`stacked${screenPoint}`} value={`flow${screenPoint}-columns`} checked={attributes.flexbox[`stacked${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Stacked\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl name={`nowrap${screenPoint}`} value={`flow${screenPoint}-nowrap`} checked={attributes.flexbox[`nowrap${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Nowrap\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider && !screen ? <OptionControl name={`equals${screenPoint}`} checked={attributes.flexbox.equals} onChange={mainSetter} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Equal Cols.\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider ? <OptionControl name={`masonry${screenPoint}`} value={`px-masonry${screenPoint}`} checked={attributes.flexbox[`masonry${screenPoint}`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Masonry\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    <OptionControl name={`gpy-fix`} value={`gpy-fix`} checked={attributes.flexbox[`gpy-fix`]?.length > 0} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Gap Y fix\", \"pds-blocks\")}</span>\r\n                    </OptionControl>\r\n                    {/*===> Other Button <===*/}\r\n                    {this.props.children ? this.props.children : null}\r\n                </div>\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class MarginSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-margin-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`mt${screen}`]: \"\",\r\n                [`ms${screen}`]: \"\",\r\n                [`me${screen}`]: \"\",\r\n                [`mb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`margin-controller mgx-auto`}>\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber name={`mt${screen}`} onChange={mainSetter} value={attributes.style[`mt${screen}`] || 0} min={0} max={100} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber name={`ms${screen}`} onChange={mainSetter} value={attributes.style[`ms${screen}`] || 0} min={0} max={100} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button name=\"reset-margin\" onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber name={`me${screen}`} onChange={mainSetter} value={attributes.style[`me${screen}`] || 0} min={0} max={100} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber name={`mb${screen}`} onChange={mainSetter} value={attributes.style[`mb${screen}`] || 0} min={0} max={100} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PaddingSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-padding-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pdt${screen}`]: \"\",\r\n                [`pds${screen}`]: \"\",\r\n                [`pde${screen}`]: \"\",\r\n                [`pdb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`padding-controller mgx-auto`}>\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber name={`pdt${screen}`} onChange={mainSetter} value={attributes.style[`pdt${screen}`] || 0} min={0} max={100} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber name={`pds${screen}`} onChange={mainSetter} value={attributes.style[`pds${screen}`] || 0} min={0} max={100} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button name=\"reset-padding\" onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber name={`pde${screen}`} onChange={mainSetter} value={attributes.style[`pde${screen}`] || 0} min={0} max={100} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber name={`pdb${screen}`} onChange={mainSetter} value={attributes.style[`pdb${screen}`] || 0} min={0} max={100} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PositionSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-padding-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pos-top${screen}`]: \"\",\r\n                [`pos-start${screen}`]: \"\",\r\n                [`pos-end${screen}`]: \"\",\r\n                [`pos-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`padding-controller mgx-auto`}>\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber name={`pos-top${screen}`} onChange={mainSetter} value={attributes.style[`pos-top${screen}`] || 0} min={0} max={30} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber name={`pos-start${screen}`} onChange={mainSetter} value={attributes.style[`pos-start${screen}`] || 0} min={0} max={30} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button name=\"reset-padding\" onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber name={`pos-end${screen}`} onChange={mainSetter} value={attributes.style[`pos-end${screen}`] || 0} min={0} max={30} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber name={`pos-bottom${screen}`} onChange={mainSetter} value={attributes.style[`pos-bottom${screen}`] || 0} min={0} max={30} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const zindex_options = [\r\n            { \"label\": \"Default\", \"value\": \"\"},\r\n            { \"label\": \"Level.1\", \"value\": \"z-index-1\"},\r\n            { \"label\": \"Level.2\", \"value\": \"z-index-2\"},\r\n            { \"label\": \"Level.3\", \"value\": \"z-index-3\"},\r\n            { \"label\": \"Level.4\", \"value\": \"z-index-4\"},\r\n            { \"label\": \"Level.5\", \"value\": \"z-index-5\"},\r\n            { \"label\": \"Level.6\", \"value\": \"z-index-6\"},\r\n            { \"label\": \"Level.7\", \"value\": \"z-index-7\"},\r\n            { \"label\": \"Level.8\", \"value\": \"z-index-8\"},\r\n            { \"label\": \"Level.9\", \"value\": \"z-index-9\"},\r\n            { \"label\": \"Level.10\", \"value\": \"z-index-10\"},\r\n            { \"label\": \"Lvl.Header\", \"value\": \"z-index-header\"},\r\n            { \"label\": \"Lvl.Popups\", \"value\": \"z-index-modal\"},\r\n            { \"label\": \"Lvl.Dropdowns\", \"value\": \"z-index-dropdown\"},\r\n        ];\r\n\r\n        const position_options = [\r\n            { \"label\": \"Default\", \"value\": \"\"},\r\n            { \"label\": \"Fixed\", \"value\": \"position-fx\"},\r\n            { \"label\": \"Static\", \"value\": \"position-none\"},\r\n            { \"label\": \"Sticky\", \"value\": \"position-st\"},\r\n            { \"label\": \"Absolute\", \"value\": \"position-ab\"},\r\n            { \"label\": \"Relative\", \"value\": \"position-rv\"},\r\n            { \"label\": \"Sticky(S)\", \"value\": \"sticky-absolute\"},\r\n        ];\r\n\r\n        const radius_sizes = [\r\n            { label: __(\"None\", \"pds-blocks\"), value: '' },\r\n            { label: __(\"Tiny\", \"pds-blocks\"), value: 'radius-sm' },\r\n            { label: __(\"Small\", \"pds-blocks\"), value: 'radius-md' },\r\n            { label: __(\"Medium\", \"pds-blocks\"), value: 'radius-lg' },\r\n            { label: __(\"Large\", \"pds-blocks\"), value: 'radius-xl' },\r\n            { label: __(\"xLarge\", \"pds-blocks\"), value: 'radius-xxl' },\r\n            { label: __(\"Circle\", \"pds-blocks\"), value: 'radius-circle' },\r\n            { label: __(\"Rounded\", \"pds-blocks\"), value: 'radius-height' },\r\n        ];\r\n\r\n        const display_options = {\r\n            \"Mobile Screens\" : [\r\n                { \"label\": \"Flex\", \"value\": \"display-flex\"},\r\n                { \"label\": \"Grid\", \"value\": \"display-grid\"},\r\n                { \"label\": \"Block\", \"value\": \"display-block\"},\r\n                { \"label\": \"Flexbox\", \"value\": \"flexbox\"},\r\n                { \"label\": \"Inline-Block\", \"value\": \"inline-block\"},\r\n                { \"label\": \"Hidden SM <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden\"},\r\n                { \"label\": \"Hidden SM <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-sm-down\"},\r\n            ],\r\n            \"Tablet Screens\" : [\r\n                { \"label\": \"Flex MD\", \"value\": \"display-md-flex\"},\r\n                { \"label\": \"Grid MD\", \"value\": \"display-md-grid\"},\r\n                { \"label\": \"Block MD\", \"value\": \"display-md-block\"},\r\n                { \"label\": \"Hidden MD <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden-md-up\"},\r\n                { \"label\": \"Hidden MD <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-md-down\"},\r\n                { \"label\": \"Inline-Block MD\", \"value\": \"inline-block-md\"},\r\n            ],\r\n            \"Laptop Screens\" : [\r\n                { \"label\": \"Flex LG\", \"value\": \"display-lg-flex\"},\r\n                { \"label\": \"Grid LG\", \"value\": \"display-lg-grid\"},\r\n                { \"label\": \"Block LG\", \"value\": \"display-lg-block\"},\r\n                { \"label\": \"Hidden LG <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden-lg-up\"},\r\n                { \"label\": \"Hidden LG <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-lg-down\"},\r\n                { \"label\": \"Inline-Block LG\", \"value\": \"inline-block-lg\"},\r\n            ],\r\n            \"Desktop Screens\" : [\r\n                { \"label\": \"Flex XL\", \"value\": \"display-xl-flex\"},\r\n                { \"label\": \"Grid XL\", \"value\": \"display-xl-grid\"},\r\n                { \"label\": \"Block XL\", \"value\": \"display-xl-block\"},\r\n                { \"label\": \"Hidden XL <i class='fas fa-arrow-up'><i>\", \"value\": \"hidden-xl-up\"},\r\n                { \"label\": \"Hidden XL <i class='fas fa-arrow-down'><i>\", \"value\": \"hidden-xl-down\"},\r\n                { \"label\": \"Inline-Block XG\", \"value\": \"inline-block-xl\"},\r\n            ],\r\n        };\r\n\r\n        const support_options = [\r\n            { label: __(\"Margin\", \"pds-blocks\"), value: 'enable-margin' },\r\n            { label: __(\"Padding\", \"pds-blocks\"), value: 'enable-padding' },\r\n            { label: __(\"Radius\", \"pds-blocks\"), value: 'enable-radius' },\r\n            { label: __(\"Display\", \"pds-blocks\"), value: 'enable-display' },\r\n            { label: __(\"Position\", \"pds-blocks\"), value: 'enable-position' },\r\n            { label: __(\"Animations\", \"pds-blocks\"), value: 'enable-animations' },\r\n            { label: __(\"Effects\", \"pds-blocks\"), value: 'enable-effects' },\r\n            { label: __(\"Animated Childs\", \"pds-blocks\"), value: 'px-animate' },\r\n            { label: __(\"Overlapped\", \"pds-blocks\"), value: 'pos-overlap' },\r\n        ];\r\n\r\n        const background_options = {\r\n            sizes : [\r\n                { label:\"all-100\", value:\"bgs-100\" },\r\n                { label:\"all-auto\", value:\"bgs-auto\"},\r\n                { label:\"width-25\", value:\"bgw-25\"},\r\n                { label:\"width-50\", value:\"bgw-50\"},\r\n                { label:\"width-75\", value:\"bgw-75\"},\r\n                { label:\"width-90\", value:\"bgw-90\"},\r\n                { label:\"width-100\", value:\"bgw-100\"},\r\n                { label:\"height-25\", value:\"bgh-25\"},\r\n                { label:\"height-50\", value:\"bgh-50\"},\r\n                { label:\"height-75\", value:\"bgh-75\"},\r\n                { label:\"height-90\", value:\"bgh-90\"},\r\n                { label:\"height-100\", value:\"bgh-100\"},\r\n            ],\r\n        \r\n            repeat : [\r\n                { label:\"repeat\", value: \"bgr\"},\r\n                { label:\"repeat-x\", value: \"bgr-x\"},\r\n                { label:\"repeat-y\", value: \"bgr-y\"},\r\n                { label:\"repeat-none\", value: \"bgr-n\"},\r\n            ],\r\n        \r\n            positions : [\r\n                { label:\"top-start\", value: \"bgp-ts\"},\r\n                { label:\"top-center\", value: \"bgp-tc\"},\r\n                { label:\"top-end\", value: \"bgp-te\"},\r\n                { label:\"center-start\", value: \"bgp-cs\"},\r\n                { label:\"center-center\", value: \"bgp-cc\"},\r\n                { label:\"center-end\", value: \"bgp-ce\"},\r\n                { label:\"bottom-start\", value: \"bgp-bs\"},\r\n                { label:\"bottom-center\", value: \"bgp-bc\"},\r\n                { label:\"bottom-end\", value: \"bgp-be\"},\r\n            ],\r\n    \r\n            animations : [\r\n                { label:\"Animated X\", value: \"bg-animated-x\"},\r\n                { label:\"Animated Y\", value: \"bg-animated-y\"},\r\n                { label:\"Zooming BG\", value: \"bg-animated-zoom\"},\r\n            ],\r\n\r\n            overlay : [\r\n                { label:\"None\", value: \"\"},\r\n                { label:\"Dark\", value: \"overlay-dark\"},\r\n                { label:\"Light\", value: \"overlay-light\"},\r\n                { label:\"Custom\", value: \"overlay-custom\"},\r\n            ],\r\n        }\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                <PhenixBackground key={`background-${uniqueKey}`} colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false} onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false} label={__(\"Background\", \"pds-blocks\")}  onChange={mainSetter} type={attributes.style.background?.type || \"color\"} value={attributes.style.background?.value || \"\"} rotate={attributes.style.background?.rotate || null} />\r\n                {attributes.style.background?.type === \"image\" ? \r\n                    <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </div>\r\n                : null }\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Support\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <div className='col col-6'>\r\n                            <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                        </div> : null}\r\n\r\n                        {/*===> Sticky Element <===*/}\r\n                        {attributes.style.support?.includes('enable-position') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`position-${uniqueKey}`} name=\"position\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style.position} onChange={mainSetter} options={position_options} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`position-index-${uniqueKey}`} name=\"z-index\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Index Order\", \"pds-blocks\")} value={attributes.style['z-index']} onChange={mainSetter} options={zindex_options} />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-typography-${screen}-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [],\r\n            origin_sizes = [\r\n                ``,\r\n                `fs${screenPoint}-12`,\r\n                `fs${screenPoint}-13`,\r\n                `fs${screenPoint}-14`,\r\n                `fs${screenPoint}-15`,\r\n                `fs${screenPoint}-16`,\r\n                `fs${screenPoint}-17`,\r\n                `fs${screenPoint}-18`,\r\n                `fs${screenPoint}-19`,\r\n                `fs${screenPoint}-20`,\r\n                `fs${screenPoint}-22`,\r\n                `fs${screenPoint}-24`,\r\n                `fs${screenPoint}-25`,\r\n                `fs${screenPoint}-26`,\r\n                `fs${screenPoint}-28`,\r\n                `fs${screenPoint}-30`,\r\n                `h1${screenPoint}`, `h2${screenPoint}`, `h3${screenPoint}`, `h4${screenPoint}`, `h5${screenPoint}`, `h6${screenPoint}`,\r\n                `display${screenPoint}-h1`, `display${screenPoint}-h2`, `display${screenPoint}-h3`, `display${screenPoint}-h4`, `display${screenPoint}-h5`, `display${screenPoint}-h6`\r\n            ];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        origin_sizes.forEach(size => {\r\n            //===> Filter Value and Label <===//\r\n            let true_label =`${size.replace(`fs${screenPoint}-`, \"\").replace(`display${screenPoint}-`,\"D\").replace(screenPoint, '').replace('-','').replace(`h`, 'H')}${size.includes(`fs${screenPoint}-`) ? 'px':''}`;\r\n            if (size === \"\") true_label = __(\"Default\", \"pds-blocks\");\r\n            sizes_list.push({\"label\": true_label, \"value\": size});\r\n        });\r\n\r\n        //===> Weights List <===//\r\n        const font_weights = [\r\n            { \"label\": \"Default\",  \"value\": \"\"},\r\n            { \"label\": \"Thin\",  \"value\": \"weight-thin\"},\r\n            { \"label\": \"Light\",  \"value\": \"weight-light\"},\r\n            { \"label\": \"Extra Light\",  \"value\": \"weight-xlight\"},\r\n            { \"label\": \"Normal\",  \"value\": \"weight-normal\"},\r\n            { \"label\": \"Medium\",  \"value\": \"weight-medium\"},\r\n            { \"label\": \"Semi-Bold\",  \"value\": \"weight-bold\"},\r\n            { \"label\": \"Bold\",  \"value\": \"weight-strong\"},\r\n            { \"label\": \"Heavy\",  \"value\": \"weight-xbold\"},\r\n            { \"label\": \"Black\",  \"value\": \"weight-black\"}\r\n        ];\r\n\r\n        //===> Lineheight List <===//\r\n        const font_lineheight = [\r\n            { \"label\": \"Default\",  \"value\": \"\"},\r\n            { \"label\": \"100%\",  \"value\": \"lineheight-100\"},\r\n            { \"label\": \"120%\",  \"value\": \"lineheight-120\"},\r\n            { \"label\": \"130%\",  \"value\": \"lineheight-130\"},\r\n            { \"label\": \"150%\",  \"value\": \"lineheight-150\"},\r\n            { \"label\": \"160%\",  \"value\": \"lineheight-160\"},\r\n            { \"label\": \"170%\",  \"value\": \"lineheight-170\"},\r\n            { \"label\": \"180%\",  \"value\": \"lineheight-180\"},\r\n            { \"label\": \"inherit\",  \"value\": \"lineheight-inherit\"},\r\n        ];\r\n\r\n        const text_shadows = {\r\n            \"Standard\" : [\r\n                { \"label\": \"Standard\", \"value\": \"tx-shadow-dp-1\"},\r\n                { \"label\": \"Small\", \"value\": \"tx-shadow-dp-2\"},\r\n                { \"label\": \"Medium\", \"value\": \"tx-shadow-dp-3\"},\r\n                { \"label\": \"Large\", \"value\": \"tx-shadow-dp-4\"},\r\n                { \"label\": \"xLarge\", \"value\": \"tx-shadow-dp-5\"},\r\n                { \"label\": \"Huge\", \"value\": \"tx-shadow-dp-x\"},\r\n            ],\r\n            \"TailWind\" : [\r\n                { \"label\": \"Standard\", \"value\": \"tx-shadow\"},\r\n                { \"label\": \"Small\", \"value\": \"tx-shadow-sm\"},\r\n                { \"label\": \"Medium\", \"value\": \"tx-shadow-md\"},\r\n                { \"label\": \"Large\", \"value\": \"tx-shadow-lg\"},\r\n                { \"label\": \"xLarge\", \"value\": \"tx-shadow-xl\"},\r\n                { \"label\": \"Huge\", \"value\": \"tx-shadow-xxl\"},\r\n            ],\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={sizes_list} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={sizes_list} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {!options || options.includes(\"align\") ? <>\r\n                {/*===> Label <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox mb-15'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            name,\r\n            type,\r\n            value,\r\n            checked,\r\n            onChange,\r\n            children,\r\n            required,\r\n            className\r\n        } = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class ScreensTabs extends Component {\r\n    //===> States <===//\r\n    state = {screen : this.props.sm ? \"sm\" : \"md\"};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const screenContent = this.props[`${this.state.screen}`];\r\n\r\n        //===> Options Changer <===//\r\n        const changeTab = (clicked) => {\r\n            //===> Option Data <===//\r\n            let element = clicked.target;\r\n            //===> Show Options <===//\r\n            this.setState({screen: element.getAttribute('data-options')});\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className='px-gb-tabs'>\r\n                {/*===> Tabs Buttons <===*/}\r\n                <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                    {this.props.sm ? <button key=\"mobile\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"sm\" ? \"bg-alpha-05\" : \"primary\"} col far fa-mobile`} title={__(\"Mobile Screens\", \"pds-blocks\")}  data-options=\"sm\"></button> : null}\r\n                    {this.props.md ? <button key=\"tablet\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"md\" ? \"bg-alpha-05\" : \"primary\"} col far fa-tablet`} title={__(\"Tablet Screens\", \"pds-blocks\")}  data-options=\"md\"></button> : null}\r\n                    {this.props.lg ? <button key=\"laptop\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"lg\" ? \"bg-alpha-05\" : \"primary\"} col far fa-laptop`} title={__(\"Desktop Screens\", \"pds-blocks\")} data-options=\"lg\"></button> : null}\r\n                    {this.props.xl ? <button key=\"desktop\" onClick={changeTab} className={`btn square tiny ${this.state.screen !== \"xl\" ? \"bg-alpha-05\" : \"primary\"} col far fa-desktop`} title={__(\"xLarge Screens\", \"pds-blocks\")}  data-options=\"xl\"></button> : null}\r\n                </div>\r\n                {/*===> Screen <====*/}\r\n                <div className={`${this.state.screen}-options`}>{screenContent(this.state.screen)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            value,\r\n            size,\r\n            type,\r\n            setValue,\r\n            className,\r\n        } = this.props;\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"}`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? <img src={value} style={{\"maxHeight\": \"1.5rem\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></button>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? <img src={value} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport ServerSideRender from '@wordpress/server-side-render';\r\nimport {PanelBody, Toolbar} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.png';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport PhenixSelect from '../px-controls/select';\r\nimport OptionControl from '../px-controls/switch';\r\nimport SelectFromData from '../px-controls/select-data';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport FlexboxSet from '../px-controls/sets/flexbox';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\nimport PhenixComponentsBuilder from '../px-controls/panel-scripts';\r\n\r\nimport PaddingSet from '../px-controls/sets/padding';\r\nimport MarginSet from '../px-controls/sets/margin';\r\nimport PositionSet from '../px-controls/sets/position';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit(props) {\r\n    //===> Value Handler <===//\r\n    const valueHandler = (target) => {\r\n        //===> Define Array Type <===//\r\n        let single_val,\r\n            array_val = [],\r\n            type = target instanceof HTMLElement ? (target.getAttribute('type') || target.tagName) : null;\r\n\r\n        //==> for Boolean Values <==//\r\n        if (type === 'checkbox' || type === 'radio') {\r\n            if (target.value === 'boolean') { single_val = target.checked; }\r\n            else { single_val = target.checked ? target.value : \"\"; }\r\n        }\r\n\r\n        //===> for Value of Type Array <===//\r\n        else if (type === \"SELECT\" && target.hasAttribute('multiple')) {\r\n            //===> Get Multiple Value <===//\r\n            let values = target.parentNode.getAttribute('data-value').split(',');\r\n            //===> Get Current Values <===//\r\n            values.forEach(val => val !== \"\" ? array_val.push(val) : null);\r\n            //===> Set Array Value <===//\r\n            single_val = array_val;\r\n        }\r\n\r\n        //===> for Normal Values <===//\r\n        else if (type === null) { single_val = target; }\r\n\r\n        //===> for Normal Values <===//\r\n        else { single_val = target.value; }\r\n\r\n        //===> Return Value <===//\r\n        if(single_val) return single_val;\r\n    };\r\n\r\n    const set_value = (target) => {\r\n        //==> Get Current <==//\r\n        const name = target.getAttribute('name');\r\n        const value = (typeof(target) === \"string\" || typeof(target) === \"number\") ? target : valueHandler(target);\r\n        const newAttributes = { ...attributes, [name]: value };\r\n        //==> Set Value <==//\r\n        setAttributes(newAttributes);\r\n        console.log(attributes);\r\n    };\r\n\r\n    //==> Set Responsive Method <==//\r\n    const set_attr_handler = (target, screen, attr, hasName) => {\r\n        //==> Get Current <==//\r\n        const name = hasName || (target instanceof HTMLElement && target.getAttribute('name')) || (attr === \"typography\" ? \"color\" : attr === \"style\" ? \"background\" : `${target}`);\r\n        const value = (typeof(target) === \"string\" || typeof(target) === \"number\") ? target : valueHandler(target);\r\n        \r\n        //==> Set Value <==//\r\n        const newAttributes = name.includes('animation') ? {\r\n            ...attributes[attr],\r\n            animation: { ...attributes[attr].animation, [name.replace('animation-', '')]: value }\r\n        } : {\r\n            ...attributes[attr],\r\n            [`${name}${screen && screen.length > 0 ? '-' + screen : ''}`]: value\r\n        };\r\n\r\n        setAttributes({ ...attributes, [attr]: newAttributes });\r\n    };\r\n\r\n    //==> Set Object Attributes Methods <==//\r\n    const set_slider = (target, screen) => set_attr_handler(target, screen, 'slider');\r\n    const set_query = (target, screen) => set_attr_handler(target, screen, \"query\");\r\n\r\n    //==> Set Flexbox Method <==//\r\n    const set_flexbox = (target, screen) => {\r\n        //==> Get Current <==//\r\n        const name = target instanceof HTMLElement ? target.getAttribute('name') : `${target}`;\r\n        const flexbox = attributes.flexbox;\r\n        //==> Add the Value <==//\r\n        flexbox[`${name.includes('align-') ? `align${screen?'-'+screen:\"\"}` : name}${screen?'-'+screen:\"\"}`] = (typeof(target) === \"string\" || typeof(target) === \"number\") ? target.replace(\"align-reset\", \"\") : valueHandler(target);\r\n        //==> Set Value <==//\r\n        setAttributes({ flexbox: {...flexbox} });\r\n    };\r\n\r\n    //===> Get Properties <===//\r\n    const {attributes, setAttributes} = props;\r\n    const blockProps = useBlockProps();\r\n    const uniqueKey = blockProps.id;\r\n\r\n    //===> OrderBy Options <===//\r\n    const orderBy = [\r\n        { label: __('Default', 'pds-blocks'), value: '' },\r\n        { label: __('Name', 'pds-blocks'), value: 'name' },\r\n        { label: __('ID', 'pds-blocks'), value: 'id' },\r\n        { label: __('Count', 'pds-blocks'), value: 'count' },\r\n        { label: __('Slug', 'pds-blocks'), value: 'slug' },\r\n        { label: __('Term Group', 'pds-blocks'), value: 'term_group' },\r\n        { label: __('Term Order', 'pds-blocks'), value: 'term_order' },\r\n    ];\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <Toolbar label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip' style={{width: 125}} data-title={__(\"Taxonomies\", \"pds-blocks\")}>\r\n                    <SelectFromData name=\"taxonomy\" options=\"taxonomies\" value={attributes.query?.taxonomy || null} valueSetter={(target) => set_query(target, false)} />\r\n                </div>\r\n                {/*===> Select Control <===*/}\r\n                <div className='inline-block inline-select tooltip w-100' style={{width: 125}} data-title={__(\"Post-Type\", \"pds-blocks\")}>\r\n                    <SelectFromData name=\"post_type\" options=\"post-types\" value={attributes.query?.post_type || null} valueSetter={(target) => set_query(target, false)} />\r\n                </div>\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.flexbox?.equals || attributes.flexbox?.slider ? <PxDropDown title={__(\"Columns Number\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-container-storage divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-180\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        <PhenixNumber name={\"cols\"} icon=\"far fa-mobile\" min={0} max={13} value={attributes.flexbox?.cols || 0} onChange={set_flexbox} />\r\n                        <PhenixNumber name={`cols-md`} icon=\"far fa-tablet\" min={0} max={13} value={attributes.flexbox[`cols-md`] || 0} onChange={set_flexbox} />\r\n                        <PhenixNumber name={`cols-lg`} icon=\"far fa-laptop\" min={0} max={13} value={attributes.flexbox[`cols-lg`] || 0} onChange={set_flexbox} />\r\n                        <PhenixNumber name={`cols-xl`} icon=\"far fa-desktop\" min={0} max={13} value={attributes.flexbox[`cols-xl`] || 0} onChange={set_flexbox} />\r\n                    </li>\r\n                </PxDropDown>: null} \r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.isFlexbox ? <PxDropDown title={__(\"Grid Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-columns divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"layouts\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <FlexboxSet attributes={attributes} mainSetter={set_flexbox}></FlexboxSet>}\r\n                            md={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                            lg={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                            xl={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>:null}\r\n            </Toolbar>\r\n        </BlockControls>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"General Setting\", \"pds-blocks\")} initialOpen={true}>\r\n                {/*===> Group <===*/}\r\n                <div className='row gpx-10'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-15'>\r\n                        <SelectFromData label={__(\"Card Template\", \"pds-blocks\")} name=\"template_part\" options=\"template-parts\" value={attributes.template_part} valueSetter={set_value} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"Order\", \"pds-blocks\")} name=\"order\" value={attributes.query?.order} onChange={set_query} options={[\r\n                            { label: __('Oldest', \"pds-blocks\"), value: 'ASC' },\r\n                            { label: __('Newest', \"pds-blocks\"),  value: 'DESC' },\r\n                        ]} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"OrderBy\", \"pds-blocks\")} name=\"orderby\" value={attributes.query?.orderby} onChange={set_query} options={orderBy} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        <PhenixNumber name=\"number\" label={__(\"Max Items\", \"pds-blocks\")} value={ attributes.query?.number } onChange={set_query} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl key={`hide_empty-${uniqueKey}`} name={`hide_empty`} value=\"boolean\" checked={attributes.query['hide_empty'] || false} onChange={set_query} type='switch-checkbox' className='small'>{__(\"Hide Empty\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl key={`isFlexbox-${uniqueKey}`} name={`isFlexbox`} value=\"boolean\" checked={attributes.isFlexbox} onChange={set_value} type='switch-checkbox' className='small'>{__(\"Grid Mode\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl key={`slider-${uniqueKey}`} name={`slider`} value=\"boolean\" checked={attributes.flexbox.slider} onChange={set_flexbox} type='switch-checkbox' className='small'>{__(\"Slider Mode\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                </div>\r\n                {/*===> Group <===*/}\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            {attributes.flexbox.slider ? <PanelBody title={__(\"Slider Options\", \"pds-blocks\")} initialOpen={true}>\r\n                <SliderSet attributes={attributes} mainSetter={set_slider} flexSetter={set_flexbox} />\r\n            </PanelBody> : null}\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        {attributes.preview ? \r\n            <img src={PreviewImage} alt=\"\" className='fluid' />\r\n        :\r\n            <div {...blockProps}>\r\n                <ServerSideRender block=\"phenix/taxonomies\" attributes={attributes} />\r\n            </div>\r\n        }\r\n    </>);\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata.name, {\r\n    title      : metadata.title,\r\n    category   : metadata.category,\r\n    attributes : metadata.attributes,\r\n    icon  : <svg fill=\"none\" viewBox=\"0 0 30 30\"><path fill=\"#000\" fillRule=\"evenodd\" d=\"M7.04 20.093c.44.254.92.374 1.4.374.52 0 1.04-.147 1.52-.44l1.227-.8c.733-.44 1.293-1.467 1.293-2.387v-3.867c0-.453.253-1.066.56-1.32L16.947 8.2c.586-.587 1.186-1.733 1.186-2.773V3.453a2.8 2.8 0 00-2.8-2.8H3.467c-1.574 0-2.8 1.28-2.8 2.894v2.066c0 .814.453 1.88 1.08 2.494l3.36 3.533c.28.333.506.92.506 1.267v4.76c0 1.013.534 1.92 1.427 2.426zM2.667 3.56c0-.507.346-.893.8-.893v-.014h11.866c.44 0 .8.36.8.8v1.974c0 .426-.32 1.08-.56 1.32l-3.84 3.4c-.733.626-1.253 1.786-1.253 2.84v3.866c0 .227-.187.6-.347.694l-1.24.8c-.293.186-.64.12-.853 0a.735.735 0 01-.413-.68v-4.76c0-.92-.494-1.947-1-2.574L3.187 6.72c-.294-.293-.52-.867-.52-1.093V3.56z\" clipRule=\"evenodd\"/><path fill=\"#000\" d=\"M11 29.333h8c7.24 0 10.333-3.093 10.333-10.333v-8c0-4.613-1.266-7.48-3.96-9.013-.68-.387-1.866-.707-3.613-.987a1.003 1.003 0 00-1.147.827.99.99 0 00.827 1.146c2.027.32 2.733.64 2.947.76 2.04 1.16 2.946 3.4 2.946 7.267v8c0 6.147-2.186 8.333-8.333 8.333h-8c-6.147 0-8.333-2.186-8.333-8.333v-4c0-.547-.454-1-1-1-.547 0-1 .453-1 1v4C.667 26.24 3.76 29.333 11 29.333z\"/><path fill=\"#000\" d=\"M23 17.333h-6.667c-.546 0-1-.453-1-1 0-.546.454-1 1-1H23c.547 0 1 .454 1 1 0 .547-.453 1-1 1zM13.667 22.667H23c.547 0 1-.454 1-1 0-.547-.453-1-1-1h-9.333c-.547 0-1 .453-1 1 0 .546.453 1 1 1z\"/></svg>,\r\n    /**===> @see ./edit.js <===*/\r\n    edit  : Edit,\r\n    save  : () => null\r\n});"],"names":["FlexAlignment","this","props","label","value","onChange","screen","screenPoint","button_style","set_alignment","Date","now","toString","Math","random","substr","target","align_val","current_val","trim","current_values","split","xTypes","itHasType","some","type","includes","align_type","getAttribute","foundedType","forEach","current_value","replace","className","title","onClick","clicked","name","checked","Component","PhenixBackground","colors","gradients","rotation","placeholder","rotate","colorsOnly","onlyCG","isSmall","options","set_type","state","setBackground","button","url","makeButtons","list","output","index","length","isColor","c","toUpperCase","push","key","replaceAll","style","wrapper","Phenix","ancestor","panel","querySelector","toggleClass","fadeToggle","slideToggle","__","gap","maxHeight","setValue","_","set_rotate","PhenixColors","setColor","next","PxDropDown","PhenixComponentsBuilder","support","dropList","children","dataPosition","attributes","PhenixNumber","min","max","steps","icon","DecreaseNum","minNum","parseInt","step","input","newVal","changed","maxNum","checkVal","finder_counter","element_finder","setInterval","document","querySelectorAll","element","class_names","classList","contains","select","dropdown","clearInterval","viewScript","the_document","time_counter","pds_elements_timer","backgroundImage","multimedia","row","add","setAttribute","menu","window","frames","trying_times","loadAssetTimer","frameDoc","fontAwesome","importedEl","importNode","body","appendChild","SelectFromData","dataFetched","apiFetch","path","then","new_state","locations","menu_locations","new_options_list","Object","entries","setState","taxonomies","post_types","users_roles","template_parts","theme_parts","files_list","key2","reRender","size","multiple","valueSetter","search","PhenixSelect","nextProps","nextState","event","defaultValue","options_list","Array","isArray","item","group_list","options_group","marginBottom","FlexboxSet","mainSetter","flexbox","slider","equals","OptionControl","_Component","_inherits","_super","_this","_classCallCheck","_len","arguments","args","_key","_defineProperty","_assertThisInitialized","call","apply","concat","_this$props","required","defaultChecked","React","createElement","_extends","ScreensTabs","sm","screenContent","changeTab","md","lg","xl","MediaUploader","Fragment","MediaUpload","onSelect","render","_ref","open","src","Edit","valueHandler","single_val","array_val","HTMLElement","tagName","hasAttribute","parentNode","val","set_value","newAttributes","setAttributes","console","log","set_attr_handler","attr","hasName","animation","set_query","set_flexbox","blockProps","useBlockProps","uniqueKey","id","orderBy","BlockControls","Toolbar","width","query","taxonomy","post_type","cols","isFlexbox","InspectorControls","PanelBody","initialOpen","template_part","order","orderby","number","SliderSet","flexSetter","preview","PreviewImage","alt","block","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","Error","p","registerBlockType","metadata","category","fill","viewBox","fillRule","clipRule","edit","save"],"sourceRoot":""}