{"version":3,"file":"blocks/text-list-item/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/icons.js","webpack://pds-blocks-pro/./src/blocks/px-controls/input.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/effects.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/margin.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/padding.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/position.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/sizes.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/./src/blocks/text-list-item/edit.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"data\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/text-list-item/index.js"],"sourcesContent":["/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\nimport { select } from '@wordpress/data';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {}\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Get Data <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        //===> Properties <===//\r\n        const {type, value, label, rotate, colorsOnly, onlyCG, isSmall, placeholder, onChange} = this.props;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n        const customGradientsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.gradients?.default?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n            editorColors.gradients?.custom?.forEach(gradient => customGradientsList.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n        }\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: type,\r\n            rotate: rotate,\r\n            value: value || \"\",\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_type = type => {\r\n            //===> Set Value <===//\r\n            options.type = type;\r\n\r\n            //===> change value <===//\r\n            if (options.type === 'image') {options.value = PhenixBlocks.palette.placeholder;} \r\n            else {options.value = \"\";}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_rotate = rotate => {\r\n            //===> Set Value <===//\r\n            options.rotate = rotate;\r\n            //===> change value <===//\r\n            if (options.type !== 'gradient') options.value = \"\";\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button?.getAttribute('data-value');\r\n\r\n            //===> Colors & Gradients <===//\r\n            if (type !== 'image' && type !== \"video\") {options.value = value;}\r\n            //===> Image Type <===//\r\n            else {options.value = clicked.url;}\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = name,\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else title = \"Reset\";\r\n\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setBackground,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {\"width\":\"30px\",\"height\":\"16px\", backgroundColor: name.includes('--wp--preset--color') ? name : null, backgroundImage: name.includes('--wp--preset--gradient') ? name : null},\r\n                    \"className\":`${isColor && !name.includes('var') ? name : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"} ${classes?classes:\"\"}`\r\n                }\r\n\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        {type !== \"image\" && type !== \"video\" ? <>\r\n                            <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\", backgroundColor: value.includes('--wp--preset--color') ? value : null, backgroundImage: value.includes('--wp--preset--gradient') ? value : null}}></span>\r\n                            <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                        </> : <>\r\n                        <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                            <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                        </>}\r\n                        {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    {!colorsOnly && !onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'image',   value: 'image' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                            { label: 'video',   value: 'video' },\r\n                        ]}/>\r\n                    : onlyCG ? \r\n                        <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                            { label: 'color',   value: 'color' },\r\n                            { label: 'gradient',   value: 'gradient' },\r\n                        ]}/>\r\n                    : null}\r\n                </div>\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox options-list ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pdy-15 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    {type === \"color\" ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette.colors.main, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette.colors.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                        {customColorsList.length > 0 ? <>\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                                {__(\"Custom Colors\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customColorsList, \"radius-xxl\")}\r\n                        </>:null}\r\n                        \r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Dark Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-white fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette.colors.darkAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Light Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-dark fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette.colors.lightAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette.colors.status, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Offwhite Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette.colors.offwhite, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette.colors.brands, \"radius-xxl\")}\r\n\r\n                    </>\r\n                    : type === \"gradient\" ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Phenix Gradients\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette.gradients, \"radius-xxl\")}\r\n\r\n                        {customGradientsList.length > 0 ? <>\r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                                {__(\"Custom Gradients\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customGradientsList, \"radius-xxl\")}\r\n                        </>:null}\r\n                    </>:\r\n                    null}\r\n                    {type === \"image\" || type === \"video\" ? <MediaUploader key=\"upload-file\" value={!value ? PhenixBlocks.palette.placeholder : value} setValue={setBackground}></MediaUploader> : null}\r\n                </div>\r\n                {/*===> Rotation Select <===*/}\r\n                {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                    <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                    <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                        { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                        { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                        { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                        { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                        { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                        { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                        { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                        { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                        { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                    ]}/>\r\n                </div> : null}\r\n                {/*===> Rotation Select <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {value, label, isSmall, placeholder, onChange} = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = window.PhenixBlocks.dataLists.paletteText;\r\n\r\n        //===> Get Custom Colors and Gradients <===//\r\n        const setting = wp.data.select('core/block-editor').getSettings();\r\n        const editorColors = setting['__experimentalFeatures']?.color;\r\n        const customColorsList = [];\r\n\r\n        //===> Generate Custom Colors <===//\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => customColorsList.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n\r\n        //===> Set Color <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, classes) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n                let title = list[index],\r\n                    isColor = !name.includes(\"fa-\");\r\n\r\n                //===> Convert to Title <===//\r\n                if (isColor) {\r\n                    //===> Get a Clean Title <===//\r\n                    title = title.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ');\r\n                    //===> UpperCase Title <===//\r\n                    title = title.replace(/^\\w/, function(c) {\r\n                        return c.toUpperCase();\r\n                    });\r\n                } else {\r\n                    title = \"Reset\";\r\n                }\r\n\r\n                //===> Button Attributes <====//\r\n                const buttonAttributes = {\r\n                    \"title\": title,\r\n                    \"onClick\": setColor,\r\n                    \"data-value\": isColor ? name : \"\",\r\n                    \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                    \"style\": {width: \"30px\", height:\"16px\", backgroundColor: name.includes('var') ? name : null},\r\n                    \"className\": `${isColor && !name.includes('var') ? name.replace('color-','bg-') : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : null}  ${classes?classes:\"\"}`,\r\n                };\r\n\r\n                //===> Push the Button <===//\r\n                output.push(<button {...buttonAttributes}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel  = Phenix(button).next(\".options-list\");\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                if (isSmall) {\r\n                    Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n                    Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n                } else {\r\n                    Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n                };\r\n            }\r\n        };\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n                {/*===> Trigger <===*/}\r\n                <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                    <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value.replace(\"color-\",\"bg-\") : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\", backgroundColor: value && value.includes('var') ? value : null}}></span>\r\n                    <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                    {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n                </button>\r\n                {/*===> Panel <===*/}\r\n                <div className='flexbox px-scrollbar overflow-y-auto options-list pdb-20 pdt-10 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                    <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12`}>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.main, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                    {customColorsList.length > 0 ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                            {__(\"Custom Colors\", \"pds-blocks\")}\r\n                        </label>\r\n                        {makeButtons(customColorsList, \"radius-xxl\")}\r\n                    </>:null}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.status, \"radius-xxl\")}\r\n\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                    {makeButtons(pxPallete.social, \"radius-xxl\")}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PxDropDown extends Component {\r\n    //===> States <===//\r\n    state = {opened:false};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            button,\r\n            support,\r\n            dropList,\r\n            children,\r\n            className,\r\n            dataPosition,\r\n            title,\r\n        } = this.props;\r\n\r\n        const attributes = {};\r\n\r\n        if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n        if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n        if (this.props.key) attributes.key = this.props.key;\r\n\r\n        //===> Render Component <===//\r\n        return (<>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Icons <===//\r\nexport default class PhenixIcons extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        icons_page : 1,\r\n        icon_type  : \"far\",\r\n        icon_name  : \"fa-icons\",\r\n        icons_file : \"fa6-pro.json\",\r\n        icons_list : [],\r\n        icons_pages: {},\r\n\r\n        icons_types : [\r\n            { value: 'fab', label: 'Brands' },\r\n\r\n            { value: 'fat', label: 'Thin' },\r\n            { value: 'fal', label: 'Light' },\r\n            { value: 'far', label: 'Regular' },\r\n            { value: 'fas', label: 'Solid' },\r\n            { value: 'fad', label: 'Duotone' },\r\n\r\n            { value: 'fast', label: 'Sharp Thin' },\r\n            { value: 'fasl', label: 'Sharp Light' },\r\n            { value: 'fass', label: 'Sharp Solid' },\r\n            { value: 'fasr', label: 'Sharp Regular' },\r\n        ],\r\n\r\n        icons_version : \"fa6\",\r\n        return_type: null\r\n    };\r\n\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        apiFetch({ path: \"pds-blocks/v2/options\" }).then((options) => {\r\n            //===> Get Icons Data <===//\r\n            let icons_pages = this.state.icons_pages,\r\n                icons_version = this.state.icons_version,\r\n                icons_file = this.state.icons_file,\r\n                icon_type = this.state.icon_type,\r\n                icon_name = this.state.icon_name,\r\n                icons_list = this.state.icons_list;\r\n\r\n            //===> Get Icons Version <===//\r\n            if (options.pds_icon_font) {\r\n                icons_version = options.pds_icon_font.replace(\"fontawesome-\", \"fa\").replace(\"-free\",\"\").replace(\"-pro\",\"\");\r\n            }\r\n\r\n            //===> Define FontAwesome Icons File <===//\r\n            if (this.props.value.includes(\"fab\")) {\r\n                icons_file = `${icons_version}-brands.json`;\r\n            } else {\r\n                icons_file = `${icons_version}-pro.json`;\r\n            }\r\n\r\n            //===> FontAwesome Version Correct <===//\r\n            if(icons_version.includes(\"6\")) icons_file = icons_file.replace(\"5\", \"6\");\r\n\r\n            //===> Set Icon Type <===//\r\n            const icon_value = this.props.value.split(\" \");\r\n\r\n            //===> Reset Icons List <===//\r\n            if (icon_type.includes('fab') && !icon_value[0].includes('fab')) icons_list = [];\r\n\r\n            //===> Set Icon Type <===//\r\n            icon_name = icon_value[1];\r\n            icon_type = icon_value[0];\r\n\r\n            //===> Start Fetching <===//\r\n            if (icons_list.length < 1) {\r\n                fetch(`${PDS_WP_KEY.json}/${icons_file}`).then((res) => res.json()).then((json) => {\r\n                    //===> Assign Icons List <===//\r\n                    if (json.icons !== icons_list) icons_list = json.icons;\r\n                    //===> Divide List into Pages <===//\r\n                    for(let item = 0; item < icons_list.length; item += 200) {\r\n                        //===> Define Page Number <===//\r\n                        let pageNumber = Math.floor(item / 200) + 1;\r\n                        //===> Add item to Pages Object <===//\r\n                        icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                    }\r\n                    //===> Update State <===//\r\n                    this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n                });\r\n            } else {\r\n                //===> Divide List into Pages <===//\r\n                for(let item = 0; item < icons_list.length; item += 200) {\r\n                    //===> Define Page Number <===//\r\n                    let pageNumber = Math.floor(item / 200) + 1;\r\n                    //===> Add item to Pages Object <===//\r\n                    icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                }\r\n                //===> Update State <===//\r\n                this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n            }\r\n        });\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, version, onChange } = this.props;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: value.split(\" \")[0],\r\n            value: value.split(\" \")[1],\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_value = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                theValue  = button?.getAttribute('data-value');\r\n\r\n            //===> Set Value <===//\r\n            options.value = theValue;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        const set_type = value => {\r\n            //===> Set Value <===//\r\n            options.type = value;\r\n\r\n            //===> Switched to Brand <===//\r\n            if (value === \"fab\" && !this.props.value.includes('fab')) options.value = \"fa-wordpress\";\r\n\r\n            //===> Switched from Brand <===//\r\n            if (this.props.value.includes('fab') && value !== \"fab\") options.value = \"fa-icons\";\r\n\r\n            //===> Return Options <===//\r\n            this.setState({icon_type: value, icons_list: [], icons_pages: {}, icons_page: 1, icon_name: options.value}, () => {\r\n                return onChange(options);\r\n            });\r\n        };\r\n\r\n        //===> Traveling Buttons <===//\r\n        const travelingButton = (event) => {\r\n            //===> Get the icons List Wrapper <====//\r\n            let element = event.target,\r\n                travelType = element.getAttribute('data-travel');\r\n\r\n            //===> Get Next Page <===//\r\n            if (travelType === 'next') {\r\n                //===> Exit if Last Page <===//\r\n                if (this.state.icons_page === Object.keys(this.state.icons_pages).length) return;\r\n                //===> Go to Next Page <===//\r\n                this.setState({icons_page: this.state.icons_page + 1});\r\n            }\r\n\r\n            //===> Get Previous Page <===//\r\n            else if (travelType === 'previous') {\r\n                //===> Exit if First Page <===//\r\n                if (this.state.icons_page === 1) return;\r\n\r\n                //===> Go to Previous Page <===//\r\n                this.setState({icons_page: this.state.icons_page - 1});\r\n            }\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            //===> Exit if has no items <===//\r\n            if (!list || list.length < 1) return;\r\n\r\n            //===> Define Data <===//\r\n            let buttonsList  = [],\r\n                buttonsStyle = {\"fontSize\": \"20px\", \"lineHeight\": \"32px\", \"width\":\"32px\", \"height\":\"32px\", \"borderRadius\": \"3px\", \"padding\": 0},\r\n                buttonItem = (item) => {\r\n                    return <button key={`${item}`} onClick={set_value} title={item} data-value={item} className={`reset-button icon-btn-item ${type} ${item} ${this.state.icon_name === item?'px-active bg-offwhite-primary':\"\"}`} style={buttonsStyle}></button>;\r\n                };\r\n\r\n            //===> Create Buttons <===//\r\n            list.forEach((item) => buttonsList.push(buttonItem(item)));\r\n\r\n            //===> Return Buttons <===//\r\n            return buttonsList;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                Phenix(panel).toggleClass(\"px-active\").slideToggle(300, 0, \"flex\");\r\n            }\r\n        };\r\n\r\n        //===> Search in icons <===//\r\n        const iconsFilter = changed => {\r\n            //===> Define Data <===//\r\n            let input = changed.target,\r\n                icons_list = this.state.icons_list,\r\n                value = input.value;\r\n\r\n            //===> Find the searched icon and remove the reset <===//\r\n            let searchedList = icons_list.filter(icon => icon.includes(value));\r\n            \r\n            //===> Set the New List <===//\r\n            if (value.length > 0)  this.setState({icons_list: searchedList, icons_page: 1, icons_pages: {}});\r\n            else this.setState({icons_list: [], icons_page: 1, icons_pages: {}});\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`px-gb-component position-rv mb-10 px-icons-selector ${!label?'pdt-10':''}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label?<label className='mb-10 tx-UpperCase fs-13'>{label}</label>:null}\r\n\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col-6 w-max-150 fs-13 h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        <span className={`col tx-nowrap pde-5`} style={{\"lineHeight\": \"20px\"}}>\r\n                            <span className={`pds-icon-preview inline-block me-5 radius-circle bg-alpha-05 ${this.props.value} position-rv`}></span>\r\n                            {__(\"Replace\", \"pds-blocks\")}\r\n                        </span>\r\n                        <i className='fas fa-pencil fs-12 color-gray'></i>\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    <PhenixSelect key={`icons-type`} name=\"icons-type\" className=\"col-6\" value={value.split(\" \")[0]} onChange={(target) => set_type(target.value)} options={this.state.icons_types} />\r\n                </div>\r\n\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox align-center tx-align-center options-list pdb-15 pdt-5 bg-white border-1 border-solid border-alpha-25 radius-md radius-bottom hidden fluid`}>\r\n                    <input name=\"pds-icons-search\" className='reset-input pdy-5 fs-12 divider-b fluid tx-align-center' onChange={iconsFilter} placeholder={__(\"Search in icons\", \"pds-blocks\")} />\r\n                    {/*===> Buttons List <===*/}\r\n                    <div className=\"bg-alpha-05 fluid pdx-15 pdy-10 icons-listing align-center flexbox px-scrollbar overflow-y-auto mb-10 divider-y\" style={{gap:\"10px\", maxHeight: \"220px\"}}>\r\n                        {this.state.icons_list.length > 0 ? \r\n                            makeButtons(this.state.icons_pages[this.state.icons_page], this.state.icon_type) : \"No Icons Found.\"\r\n                        }\r\n                    </div>\r\n                    {/*===> Pagination <===*/}\r\n                    <div className='fluid flexbox align-between align-center-y pagination-btns pdx-15'>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"next\" className=\"btn tiny fs-12 radius-sm primary\">{__(\"Next\", \"pds-blocks\")}</button> \r\n                        <span className=\"fs-14 weight-medium\">{this.state.icons_page}/{Object.keys(this.state.icons_pages).length}</span>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"previous\" className=\"btn tiny fs-12 radius-sm gray\">{__(\"Previous\", \"pds-blocks\")}</button> \r\n                    </div>\r\n                    {/*===> // Pagination <===*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixInput extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Force Render when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value,  onChange, className, placeholder } = this.props;\r\n        const uniqueKey = `pds-input`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            if (this.props.value !== event.target.value) return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {\r\n            onBlur: setValue,\r\n            type: type || \"text\",\r\n            defaultValue: value || \"\",\r\n            placeholder: placeholder || label || \"\",\r\n        };\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n            {/*===> Control Element <===*/}\r\n            <input name={name} className={`form-control ${size ? size : \"small\"} radius-md ${className ? className : \"\"}`} {...attributes}/>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n        const uniqueKey = `flexbox-${screen}-option`;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseInt(min) || 0,\r\n                  maxNum  = parseInt(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseInt(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseInt(max) || 9999999,\r\n                step    = steps ? parseInt(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseInt(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseInt(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseInt(value) ? parseInt(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixSelect extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    //===> Component Rendered when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value || nextProps.options !== this.props.options);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = this.props;\r\n        const uniqueKey = `pds-select-controller`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {onChange: setValue};\r\n\r\n        //===> add Options <===//\r\n        if (search) attributes['data-search'] = 1;\r\n        if (multiple) attributes.multiple = multiple;\r\n        if (placeholder) attributes['data-placeholder'] = placeholder;\r\n\r\n        //===> Get Options List <===//\r\n        let options_list = [];\r\n\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal Lost of Options <===//\r\n            options.forEach(item => {\r\n                options_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            options_list = options;\r\n        } else{\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                options_list.push(options_group);\r\n            });\r\n        }\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n            {/*===> Control Element <===*/}\r\n            <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n                <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = PhenixBlocks.animations.entrance;\r\n        const exit_animations = PhenixBlocks.animations.exit;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                {attributes.style?.animation?.hasExit ?\r\n                    <div className='col-12 mb-5'>\r\n                        <PhenixSelect name=\"exit\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Exit Animation\", \"pds-blocks\")} value={attributes.style?.animation?.exit} onChange={mainSetter} options={exit_animations} />\r\n                    </div>\r\n                :null}\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-inset\" label={__(\"Inset\", \"pds-blocks\")} value={attributes.style?.animation?.inset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: null}\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-7 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`hasExit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> .End Columns. <===*/}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\n\r\n//===> Component <===//\r\nexport default class EffectsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const hover_effect = PhenixBlocks.effects.hover;\r\n        const box_shadows = PhenixBlocks.effects.shadows;\r\n        const animations_effect = PhenixBlocks.effects.animations;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10 gpy-15`}>\r\n                {/*===> Hover Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"hover-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Hover Effects\", \"pds-blocks\")} value={typeof(attributes.style['hover-effect']) === 'string' ? [attributes.style['hover-effect']] : attributes.style['hover-effect']} onChange={mainSetter} options={hover_effect} />\r\n                </div>\r\n                {/*===> Animation Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"animated-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Always Animated\", \"pds-blocks\")} value={typeof(attributes.style['animated-effect']) === 'string' ? [attributes.style['animated-effect']] : attributes.style['animated-effect']} onChange={mainSetter} options={animations_effect} />\r\n                </div>\r\n                {/*===> Box Shadow <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"box-shadow\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Box Shadow\", \"pds-blocks\")} value={attributes.style['box-shadow']} onChange={mainSetter} options={box_shadows} />\r\n                </div>\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class MarginSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-margin-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`mt${screen}`]: \"\",\r\n                [`ms${screen}`]: \"\",\r\n                [`me${screen}`]: \"\",\r\n                [`mb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`margin-controller mgx-auto`}>\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`mt${screen}`} name={`mt${screen}`} onChange={mainSetter} value={attributes.style[`mt${screen}`] || 0} min={0} max={100} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`ms${screen}`} name={`ms${screen}`} onChange={mainSetter} value={attributes.style[`ms${screen}`] || 0} min={0} max={100} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-margin${screen}`} name={`reset-margin${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`me${screen}`} name={`me${screen}`} onChange={mainSetter} value={attributes.style[`me${screen}`] || 0} min={0} max={100} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`mb${screen}`} name={`mb${screen}`} onChange={mainSetter} value={attributes.style[`mb${screen}`] || 0} min={0} max={100} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PaddingSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-padding-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pdt${screen}`]: \"\",\r\n                [`pds${screen}`]: \"\",\r\n                [`pde${screen}`]: \"\",\r\n                [`pdb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`padding-controller mgx-auto`}>\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pdt${screen}`} name={`pdt${screen}`} onChange={mainSetter} value={attributes.style[`pdt${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pds${screen}`} name={`pds${screen}`} onChange={mainSetter} value={attributes.style[`pds${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-padding${screen}`} name={`reset-padding${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pde${screen}`} name={`pde${screen}`} onChange={mainSetter} value={attributes.style[`pde${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pdb${screen}`} name={`pdb${screen}`} onChange={mainSetter} value={attributes.style[`pdb${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PositionSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pos-top${screen}`]: \"\",\r\n                [`pos-start${screen}`]: \"\",\r\n                [`pos-end${screen}`]: \"\",\r\n                [`pos-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto`}>\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-top${screen}`} name={`pos-top${screen}`} onChange={mainSetter} value={attributes.style[`pos-top${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-start${screen}`} name={`pos-start${screen}`} onChange={mainSetter} value={attributes.style[`pos-start${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-position${screen}`} name={`reset-position${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-end${screen}`} name={`pos-end${screen}`} onChange={mainSetter} value={attributes.style[`pos-end${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-bottom${screen}`}  name={`pos-bottom${screen}`} onChange={mainSetter} value={attributes.style[`pos-bottom${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class SizesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.sizes_range;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Generate Width Sizes <===//\r\n        const width_list = PhenixBlocks.width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-${size}`} }),\r\n              min_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-min-${size}`} }),\r\n              max_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-max-${size}`} });\r\n\r\n        //===> Generate Height Sizes <===//\r\n        const height_list = PhenixBlocks.height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-${size.replace(\"%\", \"\")}`} }),\r\n              min_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-min-${size.replace(\"%\", \"\")}`} }),\r\n              max_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-max-${size.replace(\"%\", \"\")}`} });\r\n\r\n        //===> Add Default Option <===//\r\n        const default_option = { \"label\": __(\"Default\", \"pds-blocks\"), \"value\": \"\" };\r\n        width_list.unshift(default_option);\r\n        min_width_list.unshift(default_option);\r\n        max_width_list.unshift(default_option);\r\n        height_list.unshift(default_option);\r\n        min_height_list.unshift(default_option);\r\n        max_height_list.unshift(default_option);\r\n        \r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Width <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`width_size`} name={`width_size`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Width Sizes\", \"pds-blocks\")} value={attributes.style[`width_size`]} onChange={mainSetter} options={width_list} />\r\n                </div>\r\n                {/*===> Min Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_size`} name={`min_size`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Width\", \"pds-blocks\")} value={attributes.style[`min_size`]} onChange={mainSetter} options={min_width_list} />\r\n                </div>\r\n                {/*===> Max Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_size`} name={`max_size`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Width\", \"pds-blocks\")} value={attributes.style[`max_size`]} onChange={mainSetter} options={max_width_list} />\r\n                </div>\r\n\r\n                {/*===> Height <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`height_size`} name={`height_size`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Height Sizes\", \"pds-blocks\")} value={attributes.style[`height_size`]} onChange={mainSetter} options={height_list} />\r\n                </div>\r\n                {/*===> Min Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_height_size`} name={`min_height_size`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Height\", \"pds-blocks\")} value={attributes.style[`min_height_size`]} onChange={mainSetter} options={min_height_list} />\r\n                </div>\r\n                {/*===> Max Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_height_size`} name={`max_height_size`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Height\", \"pds-blocks\")} value={attributes.style[`max_height_size`]} onChange={mainSetter} options={max_height_list} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const radius_sizes = PhenixBlocks.radius_sizes;\r\n        const zindex_options = PhenixBlocks.zindex_options;\r\n        const support_options = PhenixBlocks.support_options;\r\n        const display_options = PhenixBlocks.display_options;\r\n        const position_options = PhenixBlocks.position_options;\r\n        const radius_directions = PhenixBlocks.radius_directions;\r\n        const background_options = PhenixBlocks.background_options;\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                {/*===> Colors and Gradients <===*/}\r\n                <PhenixBackground key={`background-${uniqueKey}`} \r\n                    colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false}\r\n                    onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false}\r\n                    label={__(\"Background\", \"pds-blocks\")}  onChange={mainSetter}\r\n                    type={attributes.style.background?.type || \"color\"}\r\n                    value={attributes.style.background?.value || \"\"}\r\n                    rotate={attributes.style.background?.rotate || null} \r\n                />\r\n\r\n                {/*===> Image Backgrounds <===*/}\r\n                {attributes.style.background?.type === \"image\" ? \r\n                    <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </div>\r\n                : null }\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Support\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-direction-${uniqueKey}`} name=\"radius-direction\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Radius Direction\", \"pds-blocks\")} value={attributes.style['radius-direction']} onChange={mainSetter} options={radius_directions} />\r\n                            </div>\r\n                        </> : null}\r\n\r\n                        {/*===> Sticky Element <===*/}\r\n                        {attributes.style.support?.includes('enable-position') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`position-${uniqueKey}`} name=\"position\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style.position} onChange={mainSetter} options={position_options} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`position-index-${uniqueKey}`} name=\"z-index\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Index Order\", \"pds-blocks\")} value={attributes.style['z-index']} onChange={mainSetter} options={zindex_options} />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from '../number';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Options Lists <===//\r\n        const font_weights = PhenixBlocks.typography.weights;\r\n        const font_lineheight = PhenixBlocks.typography.lineheight;\r\n        const text_shadows = PhenixBlocks.typography.shadows;\r\n        const font_families = PhenixBlocks.typography.families;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [],\r\n              display_sizes = [];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        PhenixBlocks.sizes_range.font_sizes.map(size => {\r\n            //===> Normal Size <===//\r\n            if (typeof(size) === \"number\") {\r\n                sizes_list.push({\"label\": size, \"value\": `fs${screenPoint}-${size}`});\r\n            } else {\r\n                sizes_list.push({\"label\": `H${size.replace('h', '')}`, \"value\": `${size}${screenPoint}`});\r\n                display_sizes.push({\"label\": `DH${size.replace('h', '')}`, \"value\": `display${screenPoint}-${size}`});\r\n            }\r\n        });\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect key={`font-size${screenPoint}`} className=\"mb-15\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Family <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`family`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Family\", \"pds-blocks\")} value={attributes.typography[`family`]} onChange={mainSetter} options={font_families} />\r\n                </div>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Margin for List Items <===*/}\r\n                {attributes.type?.includes('list-') || attributes.type === \"list\" ? <>\r\n                <div className='col col-6'>\r\n                    <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.typography[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                </div>\r\n                </> :null}\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {!options || options.includes(\"align\") ? <>\r\n                {/*===> Label <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox mb-15'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small me-5'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-radio' className='small'>\r\n                        <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n            {!options || options.includes(\"styles\") ? <>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={!screen ? mainSetter : (target) => mainSetter(target, screen)} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, value, checked, onChange, children, required, className} = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useState } from 'react';\r\n\r\n//===> Phenix Background <===//\r\nexport default function ScreensTabs(props) {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, size, type, setValue, className } = this.props;\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"}`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? <img src={value} style={{\"maxHeight\": \"1.5rem\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></button>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? <img src={value} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> : null}\r\n                                    <button key=\"change-media\" onClick={open} className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport {PanelBody, Toolbar} from '@wordpress/components';\r\nimport {RichText, BlockControls, InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport PhenixIcons from '../px-controls/icons';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixInput from '../px-controls/input';\r\nimport OptionControl from '../px-controls/switch';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport SizesSet from '../px-controls/sets/sizes';\r\nimport PaddingSet from '../px-controls/sets/padding';\r\nimport MarginSet from '../px-controls/sets/margin';\r\nimport PositionSet from '../px-controls/sets/position';\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\nimport EffectsSet from '../px-controls/sets/effects';\r\n\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes, clientId }) {\r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n    const OptionsRenderer = PhenixBlocks.OptionsRenderer;\r\n\r\n    //===> Value Handler <===//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_content = content => setAttributes({ content });\r\n\r\n    //==> Set Object Attributes Methods <==//\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_icon = value => PhenixBlocks.setObject(`${value.type} ${value.value}`, \"\", \"style\", \"icon\", attributes, setAttributes);\r\n    const set_typography = (target, screen) => PhenixBlocks.setObject(target, screen, \"typography\", false, attributes, setAttributes);\r\n\r\n    //===> Get Block Properties <===//\r\n    const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps()});\r\n    const blockProps = renderProps.blockProps;\r\n    const uniqueKey = blockProps.id;\r\n    const TagName = attributes.tagName;\r\n\r\n    //===> Layout Options <===//\r\n    blockProps.className += `${renderProps.container.className}`;\r\n\r\n    //===> Block Accessibility <===//\r\n    const blockAccessibility = (event) => PhenixBlocks.blockAccessibility(event, clientId, { ...attributes, content: '' }, attributes.content, attributes);\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <Toolbar key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Style Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-adjust divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} mainSetter={set_style} colorSetter={set_typography} options=\"text-colors, background\" />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Typography Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-font divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-typography\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <TypographySet key={`typography-${uniqueKey}`} attributes={attributes} mainSetter={set_typography} />}\r\n                            md={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                            lg={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                            xl={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Sizes Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-maximize divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-320\" >\r\n                    <li key=\"sizes\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <SizesSet attributes={attributes} mainSetter={set_style} />}\r\n                            md={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            lg={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            xl={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Icon Control <===*/}\r\n                {!attributes.style?.hasIcon ? \r\n                    <OptionControl key={`hasIcon-${uniqueKey}`} name={`hasIcon`} value={`boolean`} checked={attributes.style?.hasIcon} onChange={set_style} type='button-checkbox' className='inline-block divider-e border-alpha-25'>\r\n                        <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-icons h-min-100' style={{paddingTop: 2}} data-title={__(\"Add Icon\", \"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                :\r\n                    <PxDropDown title={__(\"Text Icon\", \"pds-blocks\")} button={`bg-transparent fs-16 square ${attributes.style?.icon || \"far fa-icons\"} divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"icons\" className='pdx-10 pdt-5'>\r\n                            {/*===> Icon Selector <===*/}\r\n                            <PhenixIcons key={`icon-${uniqueKey}`} value={ attributes.style?.icon || \"far fa-icons\" } onChange={set_icon} />\r\n                            {/*===> Option Control <===*/}\r\n                            <OptionControl key={`icon-large-${uniqueKey}`} name={`icon-large`} value=\"icon-lg\" checked={attributes.style['icon-large'] || false} onChange={set_style} type='switch-checkbox' className='tiny mt-5'>{__(\"Large icon\", \"pds-blocks\")}</OptionControl>\r\n                            {/*===> Disable Button <===*/}\r\n                            <div className='fluid' style={{paddingBottom: 3}}>\r\n                                <OptionControl key={`hasIcon-${uniqueKey}`} name={`hasIcon`} value={`boolean`} checked={attributes.style?.hasIcon} onChange={set_style} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                    <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Remove Icon\", \"pds-blocks\")}</span>\r\n                                </OptionControl>\r\n                            </div>\r\n                        </li>\r\n                    </PxDropDown>\r\n                }\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-animations') ?\r\n                    <PxDropDown title={__(\"Animation Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-atom-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-animations\" className='pdt-15 pdx-15 lineheight-150'>\r\n                            {/*===> Animations <===*/}\r\n                            <AnimationsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-padding') ?\r\n                    <PxDropDown title={__(\"Padding Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-outer divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-padding\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-margin') ?\r\n                    <PxDropDown title={__(\"Margin Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square fal fa-arrows-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.position ?\r\n                    <PxDropDown title={__(\"Position Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-to-dot divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-effects') ?\r\n                    <PxDropDown title={__(\"Effects Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-backpack divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <EffectsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n            </Toolbar>\r\n        </BlockControls>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\" initialOpen={true}>\r\n                {/*=== Form Control  ===*/}\r\n                <PhenixInput className=\"mb-15\" name=\"id\" label={__(\"HTML ID [Anchor]\", \"pds-blocks\")} value={ attributes.id } onChange={set_value} />\r\n                {/*===> Styles Options <===*/}\r\n                <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} mainSetter={set_style} colorSetter={set_typography} options=\"support\" />\r\n            </PanelBody>\r\n        </InspectorControls>\r\n\r\n        {/*====> Edit Layout <====*/}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> :\r\n            <RichText {...blockProps} onReplace={() => {}} onSplit={() => {}} onKeyDown={blockAccessibility} key={`${uniqueKey}`} tagName={TagName} value={attributes.content} onChange={set_content} placeholder={__(\"Enter Content\", \"pds-blocks\")} />\r\n        }\r\n    </>);\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Modules <===//\r\nimport Edit from './edit';\r\nimport {__} from '@wordpress/i18n';\r\nimport metadata from './block.json';\r\nimport {registerBlockType} from '@wordpress/blocks';\r\nimport {RichText, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Attributes Renderers <====//\r\nconst OptionsRenderer = window.PhenixBlocks.OptionsRenderer;\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg viewBox=\"0 0 24 24\"><path fill=\"#1E252B\" d=\"M0,0v2.2h24V0H0z M12,12.8h12v-2.2H12V12.8z M0,24h24v-2.2H0V24z M6,12c0-1.7-1.4-3-3-3s-3,1.3-3,3s1.4,3,3,3\tS6,13.7,6,12z\" /></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps.save()});\r\n        const blockProps = renderProps.blockProps;\r\n        const TagName = attributes.tagName;\r\n\r\n        //===> Layout Options <===//\r\n        blockProps.className += `${renderProps.container.className}`;\r\n\r\n        //===> Render <===//\r\n        return (<RichText.Content {...blockProps} tagName={TagName} value={attributes.content} />);\r\n    }\r\n});"],"names":["PhenixBackground","_Component","_inherits","_super","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_assertThisInitialized","call","apply","concat","key","value","_setting$__experiment","_editorColors$palette","_editorColors$palette2","_editorColors$gradien","_editorColors$gradien2","PhenixBlocks","window","dataLists","_this$props","this","props","type","label","rotate","colorsOnly","onlyCG","isSmall","placeholder","onChange","editorColors","wp","data","select","getSettings","color","customColorsList","customGradientsList","palette","forEach","push","slug","custom","gradients","gradient","options","set_type","setBackground","clicked","button","target","getAttribute","url","makeButtons","list","classes","output","index","name","title","isColor","includes","buttonAttributes","replace","replaceAll","c","toUpperCase","backgroundColor","backgroundImage","React","createElement","className","onClick","wrapper","Phenix","ancestor","panel","querySelector","toggleClass","fadeToggle","slideToggle","Fragment","style","__","PhenixSelect","gap","maxHeight","colors","main","components","darkAlpha","lightAlpha","status","offwhite","brands","MediaUploader","setValue","_","set_rotate","Component","PhenixColors","pxPallete","paletteText","setColor","width","height","next","social","PxDropDown","opened","componentsBuilder","support","dropList","children","dataPosition","attributes","_extends","PhenixIcons","_defineProperty","icons_page","icon_type","icon_name","icons_file","icons_list","icons_pages","icons_types","icons_version","return_type","apiFetch","path","then","state","pds_icon_font","icon_value","split","fetch","PDS_WP_KEY","json","res","icons","item","pageNumber","Math","floor","slice","setState","reRender","_this2","version","set_value","theValue","travelingButton","event","travelType","Object","keys","changed","input","searchedList","filter","icon","buttonsList","buttonsStyle","buttonItem","PhenixInput","nextProps","nextState","size","onBlur","defaultValue","marginBottom","PhenixNumber","min","max","steps","DecreaseNum","screen","minNum","parseInt","step","newVal","maxNum","checkVal","multiple","search","options_list","isArray","entries","_ref","_ref2","group_list","options_group","AnimationsSet","_attributes$style","_attributes$style2","_attributes$style3","_attributes$style4","_attributes$style5","_attributes$style6","_attributes$style7","_attributes$style8","_attributes$style9","_attributes$style10","_attributes$style11","mainSetter","entrance_animations","animations","entrance","exit_animations","exit","animation","hasExit","group","duration","delay","offset","inset","OptionControl","checked","reverse","EffectsSet","hover_effect","effects","hover","box_shadows","shadows","animations_effect","MarginSet","attrSetter","Date","now","toString","random","substr","newAttributes","_objectSpread","PaddingSet","PositionSet","SizesSet","sizes_range","screenPoint","width_list","width_range","map","min_width_list","max_width_range","max_width_list","height_list","height_range","min_height_list","max_height_range","max_height_list","default_option","unshift","StylesSet","_attributes$style$bac","_attributes$style$bac2","_attributes$style$bac3","_attributes$style$bac4","_attributes$style$sup","_attributes$style$sup2","_attributes$style$sup3","styles","colorSetter","bgOnly","uniqueKey","radius_sizes","zindex_options","support_options","display_options","position_options","radius_directions","background_options","showSupportOpts","supportedOpts","opt","PhenixColor","typography","background","marginTop","overly","overlay","sizes","positions","repeat","parallax","radius","position","display","TypographySet","_attributes$type","font_weights","weights","font_lineheight","lineheight","text_shadows","font_families","families","sizes_list","display_sizes","font_sizes","weight","document","direction","required","defaultChecked","ScreensTabs","sm","useState","setScreen","buttons","opts","md","lg","xl","MediaUpload","onSelect","render","open","src","Edit","setAttributes","clientId","OptionsRenderer","set_style","setObject","set_typography","renderProps","blockProps","useBlockProps","id","TagName","tagName","container","BlockControls","Toolbar","hasIcon","paddingBottom","paddingTop","InspectorControls","PanelBody","initialOpen","preview","PreviewImage","alt","RichText","onReplace","onSplit","onKeyDown","blockAccessibility","content","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","metadata","viewBox","fill","edit","save","Content"],"sourceRoot":""}