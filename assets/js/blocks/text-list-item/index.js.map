{"version":3,"file":"blocks/text-list-item/index.js","mappings":"8GAgBA,MA0PA,EA1P0BA,IAEtB,MAAMC,GAAeC,EAAAA,EAAAA,UAAQ,IAAMC,OAAOF,aAAaG,WAAW,KAE5D,KAACC,EAAI,MAAEC,EAAK,MAAEC,EAAK,OAAEC,EAAM,WAAEC,EAAU,OAAEC,EAAM,QAAEC,EAAO,YAAEC,EAAW,SAAEC,EAAQ,WAAEC,EAAU,MAAEC,GAASf,EAGtGgB,EAAUC,GAAGC,KAAKC,OAAO,qBAAqBC,cAC9CC,EAAeL,EAAgC,wBAAGM,MAGlDC,GAAmBrB,EAAAA,EAAAA,UAAQ,KAE7B,MAAMsB,EAAO,GAKb,OAJIH,IACAA,EAAaI,SAASC,SAASC,SAAQL,GAASE,EAAKI,KAAM,4BAA2BN,EAAMO,WAC5FR,EAAaI,SAASK,QAAQH,SAAQL,GAASE,EAAKI,KAAM,4BAA2BN,EAAMO,YAExFL,CAAI,GACZ,CAACH,IAGEU,GAAsB7B,EAAAA,EAAAA,UAAQ,KAEhC,MAAMsB,EAAO,GAKb,OAJIH,IAAiBZ,IACjBY,EAAaW,WAAWN,SAASC,SAAQM,GAAYT,EAAKI,KAAM,+BAA8BK,EAASJ,WACvGR,EAAaW,WAAWF,QAAQH,SAAQM,GAAYT,EAAKI,KAAM,+BAA8BK,EAASJ,YAEnGL,CAAI,GACZ,CAACH,IAGJ,IAAIa,EAAU,CACV7B,KAAMA,EACNG,OAAQA,EACRF,MAAOA,GAAS,IAIpB,MAAM6B,EAAW9B,IAEb6B,EAAQ7B,KAAOA,EAGM,UAAjB6B,EAAQ7B,KAAmB6B,EAAQ5B,MAAQL,EAAawB,QAAQb,YAC9DsB,EAAQ5B,MAAQ,GAGfO,EAASqB,IAcdE,EAAgBC,IAElB,IAAIC,EAASD,EAAQE,OACjBjC,EAASgC,GAAQE,aAAa,cAQlC,OAL2CN,EAAQ5B,MAAtC,UAATD,GAA6B,UAATA,EAAmCC,EAErC+B,EAAQI,IAGvB5B,EAASqB,EAAQ,EAatBQ,EAAcA,CAAClB,EAAMmB,KACvB,IAAIC,EAAS,GAEb,IAAK,IAAIC,EAAQ,EAAGA,EAAQrB,EAAKsB,OAAQD,IAAS,CAE9C,MAAME,EAAOvB,EAAKqB,GAClB,IAAIG,EAAQD,EACRE,GAAWF,EAAKG,SAAS,OAGzBD,GAEAD,EAAQA,EAAMG,QAAQ,OAAQ,IAAIA,QAAQ,wBAAyB,IAAIA,QAAQ,2BAA4B,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,MAAO,IAAIC,WAAW,IAAK,KAEnKJ,EAAQA,EAAMG,QAAQ,OAAO,SAASE,GAClC,OAAOA,EAAEC,aACb,KACGN,EAAQ,QAEf,MAAMO,EAAmB,CACrB,MAASP,EACT,QAAWZ,EACX,aAAca,EAAUF,EAAO,GAC/B,IAAQ,GAAEA,EAAKK,WAAW,IAAK,OAC/B,MAAS,CAAC,MAAQ,OAAO,OAAS,OAAQI,gBAAiBT,EAAKG,SAAS,UAAYH,EAAKG,SAAS,cAAgBH,EAAO,KAAMU,gBAAiBV,EAAKG,SAAS,0BAA4BH,EAAO,MAClM,UAAa,GAAEE,IAAYF,EAAKG,SAAS,OAASH,EAAQ,GAAGA,EAAKG,SAAS,OAAgBH,EAAKG,SAAS,WAAa,wCAA0C,GAA5EH,yCAAsHzC,IAAUyC,EAAO,YAAc,MAAMJ,GAAgB,MAGnQC,EAAOhB,MAAK8B,EAAAA,EAAAA,eAAA,aAAYH,IAC5B,CAEA,OAAOX,CAAM,EAqBjB,OACIc,EAAAA,EAAAA,eAAA,OAAKC,UAAY,mCAAkChD,EAAU,GAAG,kBAAkBJ,EAAQ,QAAU,MAE/FA,GAAQmD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,2BAA2BpD,GAAiB,MAEtEmD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,8GAEXD,EAAAA,EAAAA,eAAA,UAAQE,QAxBFvB,IACd,IAAIC,EAAUD,EAAQE,OAClBsB,EAAUC,OAAOxB,GAAQyB,SAAS,oBAClCC,EAAUH,EAAQI,cAAc,iBAGhCD,IACAF,OAAOxB,GAAQ4B,YAAY,aAC3BJ,OAAOE,GAAOE,YAAY,aAAaC,WAAW,IAAK,EAAG,QAEtDxD,GACAmD,OAAOD,GAASK,YAAY,iBAEpC,EAWoCP,UAAY,wHAAwHtD,KAAK,UACvJ,UAATA,GAA6B,UAATA,GAAmBqD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACpCV,EAAAA,EAAAA,eAAA,QAAMC,UAAY,mCAAkCrD,GAAOwC,OAAS,IAAMxC,EAAM4C,SAAS,OAAS5C,EAAQA,GAAO4C,SAAS,OAAS,GAAI,eAAgBmB,MAAO,CAAC,MAAS,OAAQ,OAAU,OAAQb,gBAAiBlD,EAAM4C,SAAS,uBAAyB5C,EAAQ,KAAMmD,gBAAiBnD,EAAM4C,SAAS,0BAA4B5C,EAAQ,SAC7UoD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,qCAAqCrD,GAAOwC,OAAS,IAAMlC,EAAcN,GAAO6C,QAAQ,4BAA6B,IAAIA,QAAQ,+BAAgC,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,MAAO,IAAIC,WAAW,IAAK,KAAOxC,GAA4B,aAC1Q8C,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACNV,EAAAA,EAAAA,eAAA,QAAMC,UAAY,kCAAkCU,MAAO,CAAC,MAAS,OAAQ,OAAU,OAAQ,gBAAoB,OAAM/D,KAAU,eAAkB,QAAS,mBAAsB,aAChLoD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,uBAAuB/C,IAA4B0D,EAAAA,EAAAA,IAAG,UAAW,gBAEnF3D,EAA+D,MAArD+C,EAAAA,EAAAA,eAAA,KAAGC,UAAU,oCAG3BlD,GAAeC,EAOfA,GACEgD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAI,UAAUb,UAAU,QAAQZ,KAAK,UAAUzC,MAAOD,GAAQ,GAAIQ,SAAW0B,GAAWJ,EAASI,EAAOjC,OAAQ4B,QAAS,CACnI,CAAE3B,MAAO,QAAWD,MAAO,SAC3B,CAAEC,MAAO,WAAcD,MAAO,eAEpC,MAXEoD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAI,UAAUb,UAAU,QAAQZ,KAAK,UAAUzC,MAAOD,GAAQ,GAAIQ,SAAW0B,GAAWJ,EAASI,EAAOjC,OAAQ4B,QAAS,CACnI,CAAE3B,MAAO,QAAWD,MAAO,SAC3B,CAAEC,MAAO,QAAWD,MAAO,SAC3B,CAAEC,MAAO,WAAcD,MAAO,YAC9B,CAAEC,MAAO,QAAWD,MAAO,cAUvCoD,EAAAA,EAAAA,eAAA,OAAKC,UAAY,qCAA6C,UAATtD,GAA8B,UAATA,GAA6B,UAATA,EAAmB,uFAAyF,oDAAqDgE,MAAO,CAACI,IAAI,OAAQC,UAAW,wBAChR,UAATrE,GAA6B,UAATA,GAAmBqD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACpCV,EAAAA,EAAAA,eAACiB,EAAAA,EAAa,CAACH,IAAI,cAAcI,KAAK,QAAQrE,MAAmB,UAATF,EAAmB,aAAe,aAAgBC,MAAQA,GAAkB,UAATD,EAAsDC,EAAnCL,EAAawB,QAAQb,YAAqBiE,SAAUzC,IAExL,UAAT/B,GAAmBqD,EAAAA,EAAAA,eAACiB,EAAAA,EAAa,CAACpE,MAAM,aAAaiE,IAAI,oBAAoBI,KAAK,QAAQtE,MAAQS,GAAQd,EAAawB,QAAQb,YAAqBiE,SAlGpJxC,IAEbH,EAAQnB,MAAQsB,EAAQI,IAGjB5B,EAASqB,MA6FwL,MAC1L,MAENwB,EAAAA,EAAAA,eAAA,OAAKC,UAAU,UAAUU,MAAO,CAAC,IAAO,YAC1B,UAAThE,GAAmBqD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAChBV,EAAAA,EAAAA,eAAA,SAAOC,UAAU,oGAAmGW,EAAAA,EAAAA,IAAG,cAAe,eACrI5B,EAAYzC,EAAawB,QAAWX,EAAW,YAAY,UAAYgE,KAAM,eAE9EpB,EAAAA,EAAAA,eAAA,SAAOC,UAAU,2GAA0GW,EAAAA,EAAAA,IAAG,oBAAqB,eAClJ5B,EAAYzC,EAAawB,QAAWX,EAAW,YAAY,UAAYiE,WAAY,oDAEnFxD,EAAiBuB,OAAS,GAAIY,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAC3BV,EAAAA,EAAAA,eAAA,SAAOC,UAAY,yEAAyE7C,EAAmB,GAAR,sCAClGwD,EAAAA,EAAAA,IAAG,gBAAiB,eAExB5B,EAAYnB,EAAkB,eAC/B,MAEJmC,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,aAAc,gBAC3IZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,uDACVjB,EAAYzC,EAAawB,QAAWX,EAAW,YAAY,UAAYkE,UAAW,MAGvFtB,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,cAAe,gBAC5IZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,sDACVjB,EAAYzC,EAAawB,QAAWX,EAAW,YAAY,UAAYmE,WAAY,MAGxFvB,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,gBAAiB,eAC7I5B,EAAYzC,EAAawB,QAAWX,EAAW,YAAY,UAAYoE,OAAQ,cAC9EpE,EAGE,MAHW4C,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACXV,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,kBAAmB,eAC/I5B,EAAYzC,EAAawB,QAAQ0D,OAAOC,SAAU,gBAGvD1B,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,eAAgB,eAC5I5B,EAAYzC,EAAawB,QAAWX,EAAW,YAAY,UAAYuE,OAAQ,eAEzE,aAAThF,GAAsBqD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAClBtD,EAGE,MAHW4C,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACXV,EAAAA,EAAAA,eAAA,SAAOC,UAAU,oGAAmGW,EAAAA,EAAAA,IAAG,mBAAoB,eAC1I5B,EAAYzC,EAAawB,QAAQO,UAAW,eAGhDD,EAAoBe,OAAS,GAAIY,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAC9BV,EAAAA,EAAAA,eAAA,SAAOC,UAAY,yEAAyE7C,EAAmB,GAAR,sCAClGwD,EAAAA,EAAAA,IAAG,mBAAoB,eAE3B5B,EAAYX,EAAqB,eAClC,MAER,OAIE,aAAT1B,GAAsBqD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,4BAClCD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,4BAA6B,GAAE2B,EAAE,WAAY,kBAC9D5B,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAI,qBAAqBzB,KAAO,qBAAqBzC,MAAOE,GAAU,GAAIK,SAAW0B,GApL5F/B,KAEf0B,EAAQ1B,OAASA,EAEI,aAAjB0B,EAAQ7B,OAAqB6B,EAAQ5B,MAAQ,IAE1CO,EAASqB,IA8KsGqD,CAAWhD,EAAOjC,OAAQ4B,QAAS,CAC7I,CAAE3B,OAAO+D,EAAAA,EAAAA,IAAG,UAAW,cAAehE,MAAO,IAC7C,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,YAAa,cAAehE,MAAO,eAC/C,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAehE,MAAO,gBAChD,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,YAAa,cAAehE,MAAO,eAC/C,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAehE,MAAO,gBAChD,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAehE,MAAO,gBAChD,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAO,iBACjD,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAehE,MAAO,gBAChD,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAO,qBAEhD,KAEP,C,oEC1Pd,MAyHA,EAzHsBN,IAElB,MAAM,MAACM,EAAK,MAAEC,EAAK,QAAEI,EAAO,YAAEC,EAAW,SAAEC,GAAYb,EAGjDwF,GAAYtF,EAAAA,EAAAA,UAAQ,IAAMC,OAAOF,aAAaG,UAAUqF,aAAa,IAGrEzE,EAAUC,GAAGC,KAAKC,OAAO,qBAAqBC,cAC9CC,EAAeL,EAAgC,wBAAGM,MAClDC,GAAmBrB,EAAAA,EAAAA,UAAQ,KAE7B,MAAMsB,EAAO,GAKb,OAJIH,IACAA,EAAaI,SAASC,SAASC,SAAQL,GAASE,EAAKI,KAAM,4BAA2BN,EAAMO,WAC5FR,EAAaI,SAASK,QAAQH,SAAQL,GAASE,EAAKI,KAAM,4BAA2BN,EAAMO,YAExFL,CAAI,GACZ,CAACH,IAGEqE,EAAWrD,IAEb,IACI/B,EADS+B,EAAQE,OACDC,aAAa,cAEjC,OAAO3B,EAASP,EAAM,EAIpBoC,EAAcA,CAAClB,EAAMmB,KACvB,IAAIC,EAAS,GAEb,IAAK,IAAIC,EAAQ,EAAGA,EAAQrB,EAAKsB,OAAQD,IAAS,CAE9C,MAAME,EAAOvB,EAAKqB,GAClB,IAAIG,EAAQxB,EAAKqB,GACbI,GAAWF,EAAKG,SAAS,OAGzBD,GAEAD,EAAQA,EAAMG,QAAQ,OAAQ,IAAIA,QAAQ,wBAAyB,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,SAAU,IAAIC,WAAW,IAAK,KAE9HJ,EAAQA,EAAMG,QAAQ,OAAO,SAASE,GAClC,OAAOA,EAAEC,aACb,KAEAN,EAAQ,QAIZ,MAAMO,EAAmB,CACrB,MAASP,EACT,QAAW0C,EACX,aAAczC,EAAUF,EAAO,GAC/B,IAAQ,GAAEA,EAAKK,WAAW,IAAK,OAC/B,MAAS,CAACuC,MAAO,OAAQC,OAAO,OAAQpC,gBAAiBT,EAAKG,SAAS,OAASH,EAAO,MACvF,UAAc,GAAEE,IAAYF,EAAKG,SAAS,OAASH,EAAKI,QAAQ,SAAS,OAAU,GAAGJ,EAAKG,SAAS,OAAgBH,EAAKG,SAAS,WAAa,wCAA0C,GAA5EH,yCAAsHzC,IAAUyC,EAAO,YAAc,SAASJ,GAAgB,MAI/RC,EAAOhB,MAAK8B,EAAAA,EAAAA,eAAA,aAAYH,IAC5B,CAGA,OAAOX,CAAM,EAoBjB,OACIc,EAAAA,EAAAA,eAAA,OAAKC,UAAY,kCAAiChD,EAAU,GAAG,kBAAkBJ,EAAQ,QAAU,MAE9FA,GAAQmD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,2BAA2BpD,GAAiB,MAEtEmD,EAAAA,EAAAA,eAAA,UAAQE,QArBEvB,IACd,IAAIC,EAASD,EAAQE,OACjBsB,EAAUC,OAAOxB,GAAQyB,SAAS,oBAClCC,EAASF,OAAOxB,GAAQuD,KAAK,iBAE7B7B,IACAF,OAAOxB,GAAQ4B,YAAY,aAC3BJ,OAAOE,GAAOE,YAAY,aAAaC,WAAW,IAAK,EAAG,QAEtDxD,GACAmD,OAAOD,GAASK,YAAY,iBAEpC,EASgCP,UAAY,uHAAuHtD,KAAK,WAChKqD,EAAAA,EAAAA,eAAA,QAAMC,UAAY,mCAAkCrD,GAAOwC,OAAS,IAAMxC,EAAM4C,SAAS,OAAS5C,EAAM6C,QAAQ,SAAS,OAAS7C,GAAO4C,SAAS,OAAS,GAAI,eAAgBmB,MAAO,CAAC,MAAS,OAAQ,OAAU,OAAQb,gBAAiBlD,GAASA,EAAM4C,SAAS,OAAS5C,EAAQ,SACpRoD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,qCAAqCrD,GAAOwC,OAAS,IAAMlC,EAAcN,GAAO6C,QAAQ,4BAA6B,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,SAAU,IAAIC,WAAW,IAAK,KAAOxC,GAA4B,WACjOD,EAA8C,MAApC+C,EAAAA,EAAAA,eAAA,KAAGC,UAAU,oBAG7BD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,6JAA6JU,MAAO,CAACI,IAAI,OAAQC,UAAW,yBACvMhB,EAAAA,EAAAA,eAAA,SAAOC,UAAY,oGAAmGW,EAAAA,EAAAA,IAAG,cAAe,eACvI5B,EAAY8C,EAAUV,KAAM,eAE7BpB,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,oBAAqB,eACjJ5B,EAAY8C,EAAUT,WAAY,oDAElCxD,EAAiBuB,OAAS,GAAIY,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAC3BV,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GACZW,EAAAA,EAAAA,IAAG,gBAAiB,eAExB5B,EAAYnB,EAAkB,eAC/B,MAEJmC,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,gBAAiB,eAC7I5B,EAAY8C,EAAUN,OAAQ,eAE/BxB,EAAAA,EAAAA,eAAA,SAAOC,UAAU,0GAAyGW,EAAAA,EAAAA,IAAG,eAAgB,eAC5I5B,EAAY8C,EAAUM,OAAQ,eAEjC,C,0DC/Hd,MAwCA,EAxCmBC,EACfxF,QACA+B,SACA0D,UACAC,WACAC,WACAvC,YACAwC,eACAnD,QACAwB,WAGA4B,EAAAA,EAAAA,YAAU,KACNjG,OAAOF,aAAaoG,mBAAmB,GACxC,IAGH,MAAMC,EAAa,CAAC,EAQpB,OALIN,GAAS9C,SAAS,WAAUoD,EAAW,cAAgB,QACvDH,IAAcG,EAAW,iBAAmBH,GAC5C3B,IAAK8B,EAAW9B,IAAMA,IAItBd,EAAAA,EAAAA,eAACU,EAAAA,SAAQ,MAELV,EAAAA,EAAAA,eAAA,OAAKC,UAAY,8BAA6BA,GAAwB,QAAU2C,IAE5E5C,EAAAA,EAAAA,eAAA,UAAQC,UAAY,iBAAgBrB,KAAUU,EAAQ,iBAAmB,KAAM,aAAYA,GAAQzC,IAEnGmD,EAAAA,EAAAA,eAAA,MAAIC,UAAY,4HAA2HsC,GAAsB,qBAAsBC,IAIpL,C,gGCxBJ,MAAMK,UAAoBC,EAAAA,UAErCC,MAAQ,CACJC,WAAa,EACbC,UAAa,MACbC,UAAa,WACbC,WAAa,eACbC,WAAa,GACbC,YAAa,CAAC,EAEdC,YAAc,CACV,CAAE1G,MAAO,MAAOC,MAAO,UAEvB,CAAED,MAAO,MAAOC,MAAO,QACvB,CAAED,MAAO,MAAOC,MAAO,SACvB,CAAED,MAAO,MAAOC,MAAO,WACvB,CAAED,MAAO,MAAOC,MAAO,SACvB,CAAED,MAAO,MAAOC,MAAO,WAEvB,CAAED,MAAO,OAAQC,MAAO,cACxB,CAAED,MAAO,OAAQC,MAAO,eACxB,CAAED,MAAO,OAAQC,MAAO,eACxB,CAAED,MAAO,OAAQC,MAAO,kBAG5B0G,cAAgB,MAChBC,YAAa,MAGjBC,SAAWA,KAEPC,IAAS,CAAEC,KAAM,0BAA2BC,MAAMpF,IAE9C,IAAI6E,EAAcQ,KAAKd,MAAMM,YACzBE,EAAgBM,KAAKd,MAAMQ,cAC3BJ,EAAaU,KAAKd,MAAMI,WACxBF,EAAYY,KAAKd,MAAME,UACvBC,EAAYW,KAAKd,MAAMG,UACvBE,EAAaS,KAAKd,MAAMK,WAGxB5E,EAAQsF,gBACRP,EAAgB/E,EAAQsF,cAAcrE,QAAQ,eAAgB,MAAMA,QAAQ,QAAQ,IAAIA,QAAQ,OAAO,KAKvG0D,EADAU,KAAKvH,MAAMM,MAAM4C,SAAS,OACZ,GAAE+D,gBAEF,GAAEA,aAIjBA,EAAc/D,SAAS,OAAM2D,EAAaA,EAAW1D,QAAQ,IAAK,MAGrE,MAAMsE,EAAaF,KAAKvH,MAAMM,MAAMoH,MAAM,KAU1C,GAPIf,EAAUzD,SAAS,SAAWuE,EAAW,GAAGvE,SAAS,SAAQ4D,EAAa,IAG9EF,EAAYa,EAAW,GACvBd,EAAYc,EAAW,GAGnBX,EAAWhE,OAAS,EACpB6E,MAAO,GAAEC,WAAWC,QAAQhB,KAAcS,MAAMQ,GAAQA,EAAID,SAAQP,MAAMO,IAElEA,EAAKE,QAAUjB,IAAYA,EAAae,EAAKE,OAEjD,IAAI,IAAIC,EAAO,EAAGA,EAAOlB,EAAWhE,OAAQkF,GAAQ,IAAK,CAErD,IAAIC,EAAaC,KAAKC,MAAMH,EAAO,KAAO,EAE1CjB,EAAYkB,GAAcnB,EAAWsB,MAAMJ,EAAMA,EAAO,IAC5D,CAEAT,KAAKc,SAAS,CAAC1B,YAAWC,YAAWC,aAAYC,aAAYG,gBAAeF,eAAa,QAE1F,CAEH,IAAI,IAAIiB,EAAO,EAAGA,EAAOlB,EAAWhE,OAAQkF,GAAQ,IAAK,CAErD,IAAIC,EAAaC,KAAKC,MAAMH,EAAO,KAAO,EAE1CjB,EAAYkB,GAAcnB,EAAWsB,MAAMJ,EAAMA,EAAO,IAC5D,CAEAT,KAAKc,SAAS,CAAC1B,YAAWC,YAAWC,aAAYC,aAAYG,gBAAeF,eAChF,IACF,EAINuB,iBAAAA,GAAsBf,KAAKJ,UAAY,CAEvCoB,kBAAAA,GAAuBhB,KAAKJ,UAAY,CAGxCqB,MAAAA,GAEI,MAAM,MAAEjI,EAAK,MAAED,EAAK,QAAEmI,EAAO,SAAE5H,GAAa0G,KAAKvH,MAGjD,IAAIkC,EAAU,CACV7B,KAAMC,EAAMoH,MAAM,KAAK,GACvBpH,MAAOA,EAAMoH,MAAM,KAAK,IAI5B,MAAMgB,EAAYrG,IAEd,IAAIC,EAASD,EAAQE,OACjBoG,EAAYrG,GAAQE,aAAa,cAMrC,OAHAN,EAAQ5B,MAAQqI,EAGT9H,EAASqB,EAAQ,EAGtBC,EAAW7B,IAEb4B,EAAQ7B,KAAOC,EAGD,QAAVA,GAAoBiH,KAAKvH,MAAMM,MAAM4C,SAAS,SAAQhB,EAAQ5B,MAAQ,gBAGtEiH,KAAKvH,MAAMM,MAAM4C,SAAS,QAAoB,QAAV5C,IAAiB4B,EAAQ5B,MAAQ,YAGzEiH,KAAKc,SAAS,CAAC1B,UAAWrG,EAAOwG,WAAY,GAAIC,YAAa,CAAC,EAAGL,WAAY,EAAGE,UAAW1E,EAAQ5B,QAAQ,IACjGO,EAASqB,IAClB,EAIA0G,EAAmBC,IAErB,IACIC,EADUD,EAAMtG,OACKC,aAAa,eAGtC,GAAmB,SAAfsG,EAAuB,CAEvB,GAAIvB,KAAKd,MAAMC,aAAeqC,OAAOC,KAAKzB,KAAKd,MAAMM,aAAajE,OAAQ,OAE1EyE,KAAKc,SAAS,CAAC3B,WAAYa,KAAKd,MAAMC,WAAa,GACvD,MAGK,GAAmB,aAAfoC,EAA2B,CAEhC,GAA8B,IAA1BvB,KAAKd,MAAMC,WAAkB,OAGjCa,KAAKc,SAAS,CAAC3B,WAAYa,KAAKd,MAAMC,WAAa,GACvD,GAmDJ,OACIhD,EAAAA,EAAAA,eAAA,OAAKC,UAAY,wDAAuDpD,EAAe,GAAT,WAEzEA,GAAMmD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,4BAA4BpD,GAAe,MAGnEmD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,8GAEXD,EAAAA,EAAAA,eAAA,UAAQE,QApCFvB,IACd,IAAIC,EAAUD,EAAQE,OAElByB,EADUF,OAAOxB,GAAQyB,SAAS,oBAChBE,cAAc,iBAGhCD,IACAF,OAAOxB,GAAQ4B,YAAY,aAC3BJ,OAAOE,GAAOE,YAAY,aAAaC,WAAW,IAAK,EAAG,QAC9D,EA2BoCR,UAAY,gIAAgItD,KAAK,WACzKqD,EAAAA,EAAAA,eAAA,QAAMC,UAAY,sBAAsBU,MAAO,CAAC,WAAc,UAC1DX,EAAAA,EAAAA,eAAA,QAAMC,UAAY,gEAA+D4D,KAAKvH,MAAMM,uBAC3FgE,EAAAA,EAAAA,IAAG,UAAW,gBAEnBZ,EAAAA,EAAAA,eAAA,KAAGC,UAAU,qCAGjBD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,aAAazB,KAAK,aAAaY,UAAU,QAAQrD,MAAOA,EAAMoH,MAAM,KAAK,GAAI7G,SAAW0B,GAAWJ,EAASI,EAAOjC,OAAQ4B,QAASqF,KAAKd,MAAMO,gBAIvKtD,EAAAA,EAAAA,eAAA,OAAKC,UAAY,uJACbD,EAAAA,EAAAA,eAAA,SAAOX,KAAK,mBAAmBY,UAAU,0DAA0D9C,SApC3FoI,IAEhB,IAAIC,EAAQD,EAAQ1G,OAChBuE,EAAaS,KAAKd,MAAMK,WACxBxG,EAAQ4I,EAAM5I,MAGd6I,EAAerC,EAAWsC,QAAOC,GAAQA,EAAKnG,SAAS5C,KAGvDA,EAAMwC,OAAS,EAAIyE,KAAKc,SAAS,CAACvB,WAAYqC,EAAczC,WAAY,EAAGK,YAAa,CAAC,IACxFQ,KAAKc,SAAS,CAACvB,WAAY,GAAIJ,WAAY,EAAGK,YAAa,CAAC,GAAG,EAyB8DnG,aAAa0D,EAAAA,EAAAA,IAAG,kBAAmB,iBAE7JZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,kHAAkHU,MAAO,CAACI,IAAI,OAAQC,UAAW,UAC3J6C,KAAKd,MAAMK,WAAWhE,OAAS,EAvE5BJ,EAAClB,EAAMnB,KAEvB,IAAKmB,GAAQA,EAAKsB,OAAS,EAAG,OAG9B,IAAIwG,EAAe,GACfC,EAAe,CAAC,SAAY,OAAQ,WAAc,OAAQ,MAAQ,OAAQ,OAAS,OAAQ,aAAgB,MAAO,QAAW,GAC7HC,EAAcxB,IACHtE,EAAAA,EAAAA,eAAA,UAAQc,IAAM,GAAEwD,IAAQpE,QAAS8E,EAAW1F,MAAOgF,EAAM,aAAYA,EAAMrE,UAAY,8BAA6BtD,KAAQ2H,KAAQT,KAAKd,MAAMG,YAAcoB,EAAK,gCAAgC,KAAM3D,MAAOkF,IAO9N,OAHA/H,EAAKG,SAASqG,GAASsB,EAAY1H,KAAK4H,EAAWxB,MAG5CsB,CAAW,EAyDF5G,CAAY6E,KAAKd,MAAMM,YAAYQ,KAAKd,MAAMC,YAAaa,KAAKd,MAAME,WAAa,oBAI3FjD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,sEACXD,EAAAA,EAAAA,eAAA,UAAQE,QAASgF,EAAiBvI,KAAK,SAAS,cAAY,OAAOsD,UAAU,qCAAoCW,EAAAA,EAAAA,IAAG,OAAQ,gBAC5HZ,EAAAA,EAAAA,eAAA,QAAMC,UAAU,uBAAuB4D,KAAKd,MAAMC,WAAW,IAAEqC,OAAOC,KAAKzB,KAAKd,MAAMM,aAAajE,SACnGY,EAAAA,EAAAA,eAAA,UAAQE,QAASgF,EAAiBvI,KAAK,SAAS,cAAY,WAAWsD,UAAU,kCAAiCW,EAAAA,EAAAA,IAAG,WAAY,iBAMrJ,E,0DClQW,MAAMmF,UAAoBjD,EAAAA,UAErCC,MAAQ,CAAC,EAGTiD,qBAAAA,CAAsBC,EAAWC,GAC7B,OAAQD,EAAUrJ,QAAUiH,KAAKvH,MAAMM,KAC3C,CAEAkI,MAAAA,GAEI,MAAM,KAACzF,EAAI,KAAE1C,EAAI,KAAEuE,EAAI,MAAErE,EAAK,MAAED,EAAK,SAAGO,EAAQ,UAAE8C,EAAS,YAAE/C,GAAgB2G,KAAKvH,MASlF,IAAIsG,EAAa,CACbuD,OANchB,IACd,GAAItB,KAAKvH,MAAMM,QAAUuI,EAAMtG,OAAOjC,MAAO,OAAOO,EAASgI,EAAMtG,OAAO,EAM1ElC,KAAMA,GAAQ,OACdyJ,aAAcxJ,GAAS,GACvBM,YAAaA,GAAeL,GAAS,IAIzC,OAAOmD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAEF7D,GAAMmD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,sBAAsBU,MAAO,CAAC0F,aAAc,IAAM,GAAExJ,KAAiB,MAE7FmD,EAAAA,EAAAA,eAAA,SAAOX,KAAMA,EAAMY,UAAY,gBAAeiB,GAAc,qBAAqBjB,GAAwB,QAAU2C,IAE3H,E,0DC7BW,MAAM0D,UAAqBxD,EAAAA,UACtCgC,MAAAA,GAEI,MAAM,MAACjI,EAAK,MAAED,EAAK,IAAE2J,EAAG,IAAEC,EAAG,MAAEC,EAAK,KAAEd,EAAI,SAAExI,EAAQ,KAAEkC,GAAQwE,KAAKvH,MAoCnEoK,EAAe/H,IAEX,IAAIC,EAAUD,EAAQE,OAClBsB,EAAUC,OAAOxB,GAAQyB,SAAS,qBAClCsG,EAAUC,WAAWL,IAAQ,EAC7BM,EAAUJ,GAAgB,EAG1BjB,EAAQrF,EAAQI,cAAc,wBAC9BuG,EAASF,WAAWpB,EAAM5I,OAASiK,EAIvC,OADArB,EAAM5I,MAAQkK,EAASH,GAAUG,IAAWH,EAASG,EAASH,EACvDxJ,EAASqI,EAAM,EAI1B,OAAQxF,EAAAA,EAAAA,eAAA,OAAKC,UAAU,mDAEnBD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,4DAA4DpD,IAE7EmD,EAAAA,EAAAA,eAAA,OAAKC,UAAW,uCAAyC0F,GAAc,KAEjEA,EAAmK,IAA5J3F,EAAAA,EAAAA,eAAA,UAAQE,QAASwG,EAAazG,UAAU,2GAGjDD,EAAAA,EAAAA,eAAA,SAAOX,KAAMA,EAAM1C,KAAK,SAAS4J,IAAKA,EAAKC,IAAKA,EAAK5J,MAAOgK,WAAWhK,GAASgK,WAAWhK,GAAS,EAAGqD,UAAW,gEAAiE9C,SA3DxKoI,IAEf,MAAMC,EAASD,EAAQ1G,OACjB8H,EAAUC,WAAWL,IAAQ,EAC7BQ,EAAUH,WAAWJ,IAAQ,EAG7BM,EAASF,WAAWpB,EAAM5I,OAC1BoK,EAAYF,GAAUH,GAAUG,GAAUC,EAAUD,EAAS,EAInE,OADAtB,EAAM5I,MAAQoK,EACP7J,EAASqI,EAAM,KAkDlBxF,EAAAA,EAAAA,eAAA,OAAKC,UAAU,8CACV0F,GAAO3F,EAAAA,EAAAA,eAAA,UAAQE,QAASwG,EAAazG,UAAU,wEAAkF,IAClID,EAAAA,EAAAA,eAAA,UAAQE,QAhDLvB,IAEX,IAAIC,EAAUD,EAAQE,OAClBsB,EAAUC,OAAOxB,GAAQyB,SAAS,qBAClC0G,EAAUH,WAAWJ,IAAQ,QAC7BK,EAAUJ,EAAQG,WAAWH,GAAS,EAGtCjB,EAASrF,EAAQI,cAAc,wBAC/BuG,EAASF,WAAWpB,EAAM5I,OAASiK,EAIvC,OADArB,EAAM5I,MAAQkK,EAASC,GAAUD,IAAWC,EAASD,EAASC,EACvD5J,EAASqI,EAAM,EAmCgBvF,UAAU,yEAKxD,E,yDCjFJ,MAmEA,EAnEsB3D,KAElBoG,EAAAA,EAAAA,YAAU,KACNjG,OAAOF,aAAaoG,mBAAmB,GACxC,IAGH,MAAOI,EAAO4B,IAAYsC,EAAAA,EAAAA,UAAS,CAAC,IAG9B,KAAC5H,EAAI,KAAE1C,EAAI,KAAEuE,EAAI,MAAErE,EAAK,MAAED,EAAK,QAAE4B,EAAO,SAAE0I,EAAQ,SAAE/J,EAAQ,UAAE8C,EAAS,YAAE/C,EAAW,OAAEiK,GAAW7K,EAIjG6E,GAAWiG,EAAAA,EAAAA,cAAajC,GACnBhI,EAASgI,EAAMtG,SACvB,CAAC1B,IAGEyF,GAAapG,EAAAA,EAAAA,UAAQ,KACvB,IAAI6K,EAAQ,CAAElK,SAAUgE,GAIxB,OAHIgG,IAAQE,EAAM,eAAiB,GAC/BH,IAAUG,EAAMH,SAAWA,GAC3BhK,IAAamK,EAAM,oBAAsBnK,GACtCmK,CAAK,GACb,CAAClG,EAAUgG,EAAQD,EAAUhK,IAG1BoK,GAAe9K,EAAAA,EAAAA,UAAQ,KACzB,IAAIsB,EAAO,GAuBX,OAtBIyJ,MAAMC,QAAQhJ,KAAaA,EAAQ,GAAG7B,KAEtC6B,EAAQP,SAAQqG,IACZxG,EAAKI,MAAK8B,EAAAA,EAAAA,eAAA,UAAQc,IAAKwD,EAAK1H,MAAOA,MAAO0H,EAAK1H,OAAS,GAAE0H,EAAKzH,SAAkB,IAE9E2B,EAAQ,IAAMA,EAAQ,GAAG7B,KAChCmB,EAAOU,EAGP6G,OAAOoC,QAAQjJ,GAASP,SAAQ,EAAE6C,EAAKtC,MAEnC,IAAIkJ,EAAa,GAEjBlJ,EAAQP,SAAQqG,IACZoD,EAAWxJ,MAAK8B,EAAAA,EAAAA,eAAA,UAAQc,IAAKwD,EAAK1H,MAAOA,MAAO0H,EAAK1H,OAAS,GAAE0H,EAAKzH,SAAkB,IAG3F,IAAI8K,GAAgB3H,EAAAA,EAAAA,eAAA,YAAUc,IAAM,GAAEA,UAAajE,MAAQ,GAAEiE,KAAQ4G,GAErE5J,EAAKI,KAAKyJ,EAAc,IAGzB7J,CAAI,GACZ,CAACU,IAGJ,OAAOwB,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAEF7D,GAAMmD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,sBAAsBU,MAAO,CAAC0F,aAAc,IAAM,GAAExJ,KAAiB,MAG7FmD,EAAAA,EAAAA,eAAA,OAAKc,IAAM,iBAAiBb,UAAY,aAAYA,GAAwB,KAAM,aAAYrD,IAC1FoD,EAAAA,EAAAA,eAAA,UAAQc,IAAM,iBAAiBzB,KAAMA,EAAM+G,aAAcxJ,EAAOqD,UAAY,yCAAwCiB,GAAc,uBAAyB0B,GAAa0E,IAE7K,C,iGCpDQ,MAAMM,UAAsB9E,EAAAA,UACvCgC,MAAAA,GAEI,MAAMvI,EAAeE,OAAOF,aAAaG,WACnC,WAACkG,EAAU,QAAEpE,EAAO,WAAEqJ,GAAchE,KAAKvH,MAGzCwL,EAAsBvL,EAAawL,WAAWC,SAC9CC,EAAkB1L,EAAawL,WAAWG,KAGhD,OAAOlI,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAEFmD,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,MAG7CxC,EAAAA,EAAAA,eAAA,OAAKC,UAAY,eAEbD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,gBACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,iBAAiBY,UAAU,QAAQ/C,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAeuG,QAAQ,EAAMtK,OAAO+D,EAAAA,EAAAA,IAAG,sBAAuB,cAAehE,MAAOgG,EAAWjC,OAAOwH,WAAW9I,KAAMlC,SAAU0K,EAAYrJ,QAASsJ,KAEvOlF,EAAWjC,OAAOwH,WAAWC,SAC1BpI,EAAAA,EAAAA,eAAA,OAAKC,UAAU,gBACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,OAAOY,UAAU,QAAQ/C,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAeuG,QAAQ,EAAMtK,OAAO+D,EAAAA,EAAAA,IAAG,iBAAkB,cAAehE,MAAOgG,EAAWjC,OAAOwH,WAAWD,KAAM/K,SAAU0K,EAAYrJ,QAASyJ,KAE5N,KACCrF,EAAWjC,OAAOwH,WAAWE,MAsB1B,MAtBkCrI,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAEnCV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACjH,KAAK,qBAAqBxC,OAAO+D,EAAAA,EAAAA,IAAG,QAAS,cAAehE,MAAOgG,EAAWjC,OAAOwH,WAAWG,UAAY,IAAMnL,SAAU0K,EAAYtB,IAAK,EAAGC,IAAK,KAAOC,MAAO,QAGrLzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACjH,KAAK,kBAAkBxC,OAAO+D,EAAAA,EAAAA,IAAG,QAAS,cAAehE,MAAOgG,EAAWjC,OAAOwH,WAAWI,OAAS,EAAGpL,SAAU0K,EAAYtB,IAAK,EAAGC,IAAK,IAAMC,MAAO,QAG3KzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACjH,KAAK,mBAAmBxC,OAAO+D,EAAAA,EAAAA,IAAG,SAAU,cAAehE,MAAOgG,EAAWjC,OAAOwH,WAAWK,QAAU,EAAGrL,SAAU0K,EAAYtB,IAAK,EAAGC,IAAK,IAAMC,MAAO,MAG9KzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACjH,KAAK,kBAAkBxC,OAAO+D,EAAAA,EAAAA,IAAG,QAAS,cAAehE,MAAOgG,EAAWjC,OAAOwH,WAAWM,OAAS,EAAGtL,SAAU0K,EAAYtB,IAAK,EAAGC,IAAK,IAAMC,MAAO,MAG3KzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WACXD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,oBAAoBzC,MAAM,MAAM+L,QAAS/F,EAAWjC,OAAOwH,WAAWS,QAASzL,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,UAASW,EAAAA,EAAAA,IAAG,cAAe,kBAK/LZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,kBAAkBzC,MAAM,UAAU+L,QAAS/F,EAAWjC,OAAOwH,WAAWE,MAAOlL,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,UAASW,EAAAA,EAAAA,IAAG,eAAgB,iBAG5LZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,UAAUzC,MAAM,UAAU+L,QAAS/F,EAAWjC,OAAOwH,WAAWC,QAASjL,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,UAASW,EAAAA,EAAAA,IAAG,WAAY,iBAM9L,E,0GC5DW,MAAMiI,UAAkB/F,EAAAA,UACnCgC,MAAAA,GAEI,MAAM,WAAClC,EAAU,QAAEpE,EAAO,WAAEqJ,EAAU,OAAEiB,EAAM,WAAEC,EAAU,aAAEC,EAAY,cAAEC,GAAiBpF,KAAKvH,MAC1FC,EAAeE,OAAOF,aAiBtB4E,EAAYtC,IAEd,IAAIqK,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,eAAgB,cAEbC,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAC7DC,EAFQ,CAAC,aAAc,iBAEXF,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAG7DF,EAEID,EADAtG,EAAWjC,MAAO,iBAAgBmI,KAClB,IAAIlG,EAAWjC,MAAO,CAAE,eAAcmI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,aAAYkM,KAAWS,SAAS1K,EAAOjC,QAElH,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,QAIzF0M,IAEDJ,EADAtG,EAAWjC,MAAO,iBAAgBmI,KAClB,IAAIlG,EAAWjC,MAAO,CAAE,aAAYmI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,gBAAekM,KAAWS,SAAS1K,EAAOjC,QAEnH,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,SAKlGmM,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,EAIzD,OAAOlJ,EAAAA,EAAAA,eAAA,OAAKC,UAAY,gCAElB6I,GAAqB,KAAXA,EAqBR,MArBwB9I,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACxBV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,2CAEXD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cAEXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,eAAenC,aAAa0D,EAAAA,EAAAA,IAAG,QAAS,cAAeX,UAAY,sBAAsBrD,MAAOgG,EAAWjC,MAAM,gBAAiBxD,SAAU0K,EAAYrJ,QAASjC,EAAaG,UAAU8M,OAAOC,kBAGtNzJ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cAEXD,EAAAA,EAAAA,eAAC0J,EAAAA,EAAgB,CAAC5I,IAAM,eACpB7D,SAAS,EACTF,YAAY,EACZK,YAAY,EACZD,SAAWP,GAAUoM,EAAapM,EAAO,GAAI,QAAS,eAAgBgG,EAAYqG,GAClFtM,KAAMiG,EAAWjC,MAAM,iBAAiBhE,MAAQ,QAChDC,MAAOgG,EAAWjC,MAAM,iBAAiB/D,OAAS,GAClDE,OAAQ8F,EAAWjC,MAAM,iBAAiB7D,QAAU,WAKpEkD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,gBAEXD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,iBAAgBgI,IAAUzJ,KAAO,iBAAgByJ,IAAUH,QAAS/F,EAAWjC,MAAO,iBAAgBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,yCAC9OD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,gIAAgI,cAAYW,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,iBAAgBgI,IAAUzJ,KAAO,iBAAgByJ,IAAUH,QAAS/F,EAAWjC,MAAO,iBAAgBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,2CAC9OD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,6HAA6H,cAAYW,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,iBAAiBU,MAAO,CAACsB,MAAO,OAC3CjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,aAAYgI,IAAUzJ,KAAO,aAAYyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,aAAYmI,MAAa,EAAGvC,IAAK,EAAGC,IAAK,IAAKC,MAAO,MAG7KzG,EAAAA,EAAAA,eAAA,OAAKC,UAAY,+CAEbD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,eAAcgI,IAAUzJ,KAAO,eAAcyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,eAAcmI,MAAa,EAAGvC,IAAK,EAAGC,IAAK,IAAKC,MAAO,MAGnLzG,EAAAA,EAAAA,eAAA,UAAQc,IAAM,eAAcgI,IAAUzJ,KAAO,eAAcyJ,IAAU5I,QAzFnEyJ,KAEV,MAAMT,EAAgB,IACftG,EAAWjC,MACd,CAAE,aAAYmI,KAAW,GACzB,CAAE,eAAcA,KAAW,GAC3B,CAAE,aAAYA,KAAW,GACzB,CAAE,gBAAeA,KAAW,IAGhCC,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,EA+EwCjJ,UAAU,gDAE/FD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,aAAYgI,IAAUzJ,KAAO,aAAYyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,aAAYmI,MAAa,EAAGvC,IAAK,EAAGC,IAAK,IAAKC,MAAO,OAIjLzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WAAWU,MAAO,CAACsB,MAAO,OACrCjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,gBAAegI,IAAWzJ,KAAO,gBAAeyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,gBAAemI,MAAa,EAAGvC,IAAK,EAAGC,IAAK,IAAKC,MAAO,MAInM,E,6EC/GW,MAAMmD,UAAmB9G,EAAAA,UACpCgC,MAAAA,GAEI,MAAMvI,EAAeE,OAAOF,aAAaG,WACnC,WAACkG,EAAU,QAAEpE,EAAO,WAAEqJ,GAAchE,KAAKvH,MAGzCuN,EAAetN,EAAauN,QAAQC,MACpCC,EAAczN,EAAauN,QAAQG,QACnCC,EAAoB3N,EAAauN,QAAQ/B,WACzCoC,EAAgB5N,EAAauN,QAAQK,cAG3C,OAAOnK,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAEFmD,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,MAG7CxC,EAAAA,EAAAA,eAAA,OAAKC,UAAY,sBAEbD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,eACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,eAAe6B,KAAK,SAAShE,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAeX,UAAU,kBAAkBkH,QAAQ,EAAMD,UAAU,EAAMrK,OAAO+D,EAAAA,EAAAA,IAAG,gBAAiB,cAAehE,MAAoD,iBAAtCgG,EAAWjC,MAAM,gBAAgC,CAACiC,EAAWjC,MAAM,iBAAmBiC,EAAWjC,MAAM,gBAAiBxD,SAAU0K,EAAYrJ,QAASqL,MAGpW7J,EAAAA,EAAAA,eAAA,OAAKC,UAAU,eACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,kBAAkB6B,KAAK,SAAShE,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAeX,UAAU,kBAAkBkH,QAAQ,EAAMD,UAAU,EAAMrK,OAAO+D,EAAAA,EAAAA,IAAG,kBAAmB,cAAehE,MAAuD,iBAAzCgG,EAAWjC,MAAM,mBAAmC,CAACiC,EAAWjC,MAAM,oBAAsBiC,EAAWjC,MAAM,mBAAoBxD,SAAU0K,EAAYrJ,QAAS0L,MAGlXlK,EAAAA,EAAAA,eAAA,OAAKC,UAAU,eACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,aAAa6B,KAAK,SAAShE,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAeX,UAAU,kBAAkBpD,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAehE,MAAOgG,EAAWjC,MAAM,cAAexD,SAAU0K,EAAYrJ,QAASwL,MAGlOhK,EAAAA,EAAAA,eAAA,OAAKC,UAAU,eACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,gBAAgB6B,KAAK,SAAShE,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAeX,UAAU,kBAAkBpD,OAAO+D,EAAAA,EAAAA,IAAG,gBAAiB,cAAehE,MAAOgG,EAAWjC,MAAM,iBAAkBuG,UAAU,EAAM/J,SAAU0K,EAAYrJ,QAAS2L,MAKvQ,E,iGCpCW,MAAMC,UAAkBtH,EAAAA,UACnCgC,MAAAA,GAEI,MAAM,WAAClC,EAAU,QAAEpE,EAAO,WAAEqJ,EAAU,OAAEiB,EAAM,WAAEC,GAAclF,KAAKvH,MAkB7D6E,GAjBYkJ,KAAKC,MAAMC,SAAS,IAAM/F,KAAKgG,SAASD,SAAS,IAAIE,OAAO,EAAG,GAiB/D5L,IAEd,IAAIqK,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,KAAM,MAEHC,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAC7DC,EAFQ,CAAC,KAAM,MAEHF,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAG7DF,EAEID,EADAtG,EAAWjC,MAAO,iBAAgBmI,KAClB,IAAIlG,EAAWjC,MAAO,CAAE,KAAImI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,KAAIkM,KAAWS,SAAS1K,EAAOjC,QAEhG,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,QAIzF0M,IAEDJ,EADAtG,EAAWjC,MAAO,iBAAgBmI,KAClB,IAAIlG,EAAWjC,MAAO,CAAE,KAAImI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,KAAIkM,KAAWS,SAAS1K,EAAOjC,QAEhG,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,SAKlGmM,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,GAIzD,OAAOlJ,EAAAA,EAAAA,eAAA,OAAKC,UAAY,2CAEpBD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,iBAAgBgI,IAAUzJ,KAAO,iBAAgByJ,IAAUH,QAAS/F,EAAWjC,MAAO,iBAAgBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,yCAC9OD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,gIAAgI,cAAYW,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,iBAAgBgI,IAAUzJ,KAAO,iBAAgByJ,IAAUH,QAAS/F,EAAWjC,MAAO,iBAAgBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,2CAC9OD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,6HAA6H,cAAYW,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,iBAAiBU,MAAO,CAACsB,MAAO,OAC3CjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,KAAIgI,IAAUzJ,KAAO,KAAIyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,KAAImI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAOC,MAAO,MAG3JzG,EAAAA,EAAAA,eAAA,OAAKC,UAAY,+CAEbD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,KAAIgI,IAAUzJ,KAAO,KAAIyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,KAAImI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAOC,MAAO,MAG3JzG,EAAAA,EAAAA,eAAA,UAAQc,IAAM,eAAcgI,IAAUzJ,KAAO,eAAcyJ,IAAU5I,QAjE/DyJ,KAEV,MAAMT,EAAgB,IACftG,EAAWjC,MACd,CAAE,KAAImI,KAAW,GACjB,CAAE,KAAIA,KAAW,GACjB,CAAE,KAAIA,KAAW,GACjB,CAAE,KAAIA,KAAW,IAGrBC,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,EAuDoCjJ,UAAU,gDAE/FD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,KAAIgI,IAAUzJ,KAAO,KAAIyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,KAAImI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAOC,MAAO,OAI/JzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WAAWU,MAAO,CAACsB,MAAO,OACrCjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,KAAIgI,IAAUzJ,KAAO,KAAIyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,KAAImI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAOC,MAAO,KAG1J5C,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,KAErD,E,iGCrFW,MAAMkI,UAAmB5H,EAAAA,UACpCgC,MAAAA,GAEI,MAAM,WAAClC,EAAU,QAAEpE,EAAO,WAAEqJ,EAAU,OAAEiB,EAAM,WAAEC,GAAclF,KAAKvH,MAkB7D6E,GAjBYkJ,KAAKC,MAAMC,SAAS,IAAM/F,KAAKgG,SAASD,SAAS,IAAIE,OAAO,EAAG,GAiB/D5L,IAEd,IAAIqK,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,MAAO,OAEJC,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAC7DC,EAFQ,CAAC,MAAO,OAEJF,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAG7DF,EAEID,EADAtG,EAAWjC,MAAO,kBAAiBmI,KACnB,IAAIlG,EAAWjC,MAAO,CAAE,MAAKmI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,MAAKkM,KAAWS,SAAS1K,EAAOjC,QAElG,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,QAIzF0M,IAEDJ,EADAtG,EAAWjC,MAAO,kBAAiBmI,KACnB,IAAIlG,EAAWjC,MAAO,CAAE,MAAKmI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,MAAKkM,KAAWS,SAAS1K,EAAOjC,QAElG,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,SAKlGmM,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,GAIzD,OAAOlJ,EAAAA,EAAAA,eAAA,OAAKC,UAAY,4CAEpBD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,kBAAiBgI,IAAUzJ,KAAO,kBAAiByJ,IAAUH,QAAS/F,EAAWjC,MAAO,kBAAiBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,yCACjPD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,gIAAgI,cAAYW,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,kBAAiBgI,IAAUzJ,KAAO,kBAAiByJ,IAAUH,QAAS/F,EAAWjC,MAAO,kBAAiBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,2CACjPD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,6HAA6H,cAAYW,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,iBAAiBU,MAAO,CAACsB,MAAO,OAC3CjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,MAAKgI,IAAUzJ,KAAO,MAAKyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,MAAKmI,MAAa,EAAGvC,KAAM,EAAGC,IAAK,KAAMC,MAAO,MAG1JzG,EAAAA,EAAAA,eAAA,OAAKC,UAAY,+CAEbD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,MAAKgI,IAAUzJ,KAAO,MAAKyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,MAAKmI,MAAa,EAAGvC,KAAM,EAAGC,IAAK,KAAMC,MAAO,MAG1JzG,EAAAA,EAAAA,eAAA,UAAQc,IAAM,gBAAegI,IAAUzJ,KAAO,gBAAeyJ,IAAU5I,QAjEjEyJ,KAEV,MAAMT,EAAgB,IACftG,EAAWjC,MACd,CAAE,MAAKmI,KAAW,GAClB,CAAE,MAAKA,KAAW,GAClB,CAAE,MAAKA,KAAW,GAClB,CAAE,MAAKA,KAAW,IAGtBC,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,EAuDsCjJ,UAAU,gDAEjGD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,MAAKgI,IAAUzJ,KAAO,MAAKyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,MAAKmI,MAAa,EAAGvC,KAAM,EAAGC,IAAK,KAAMC,MAAO,OAI9JzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WAAWU,MAAO,CAACsB,MAAO,OACrCjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,MAAKgI,IAAUzJ,KAAO,MAAKyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,MAAKmI,MAAa,EAAGvC,KAAM,EAAGC,IAAK,KAAMC,MAAO,KAGzJ5C,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,KAErD,E,iGCrFW,MAAMmI,UAAoB7H,EAAAA,UACrCgC,MAAAA,GAEI,MAAM,WAAClC,EAAU,QAAEpE,EAAO,WAAEqJ,EAAU,OAAEiB,EAAM,WAAEC,GAAclF,KAAKvH,MAC7DC,EAAeE,OAAOF,aAAaG,UAAU8M,OAC7CoB,EAAiBrO,EAAaqO,eAAeC,KAAIxB,IAASA,EAAIzM,OAAU,GAAEkM,IAAiBO,KAC3FyB,EAAmBvO,EAAauO,iBAAiBD,KAAIxB,IAASA,EAAIzM,OAAU,GAAEkM,IAAiBO,KAC/F0B,EAAmBxO,EAAawO,iBAAiBF,KAAIxB,IAASA,EAAIzM,OAAU,GAAEkM,IAAiBO,KAiB/FlI,EAAYtC,IAEd,IAAIqK,EAAgB,CAAC,EAGjBC,EAFQ,CAAC,YAAa,WAEVC,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAC7DC,EAFQ,CAAC,UAAW,cAERF,MAAKC,GAAOxK,EAAOC,aAAa,QAAQU,SAAS6J,KAG7DF,EAEID,EADAtG,EAAWjC,MAAO,mBAAkBmI,KACpB,IAAIlG,EAAWjC,MAAO,CAAE,YAAWmI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,UAASkM,KAAWS,SAAS1K,EAAOjC,QAE5G,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,QAIzF0M,IAEDJ,EADAtG,EAAWjC,MAAO,mBAAkBmI,KACpB,IAAIlG,EAAWjC,MAAO,CAAE,UAASmI,KAAWS,SAAS1K,EAAOjC,OAAQ,CAAE,aAAYkM,KAAWS,SAAS1K,EAAOjC,QAE7G,IAAIgG,EAAWjC,MAAO,CAAE,GAAE9B,EAAOC,aAAa,WAAYyK,SAAS1K,EAAOjC,SAKlGmM,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,EAIzD,OAAOlJ,EAAAA,EAAAA,eAAA,OAAKC,UAAY,6CAEpBD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,mBAAkBgI,IAAUzJ,KAAO,mBAAkByJ,IAAUH,QAAS/F,EAAWjC,MAAO,mBAAkBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,yCACpPD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,gIAAgI,cAAYW,EAAAA,EAAAA,IAAG,kBAAmB,kBAGtLZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,mBAAkBgI,IAAUzJ,KAAO,mBAAkByJ,IAAUH,QAAS/F,EAAWjC,MAAO,mBAAkBmI,KAAWlM,MAAO,OAAQO,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,GAAc,IAAKnM,KAAK,kBAAkBsD,UAAU,2CACpPD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,6HAA6H,cAAYW,EAAAA,EAAAA,IAAG,mBAAoB,kBAIpLZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,iBAAiBU,MAAO,CAACsB,MAAO,OAC3CjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,UAASgI,IAAUzJ,KAAO,UAASyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,UAASmI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAMC,MAAO,MAGzKzG,EAAAA,EAAAA,eAAA,OAAKC,UAAY,+CAEbD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,YAAWgI,IAAUzJ,KAAO,YAAWyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,YAAWmI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAMC,MAAO,MAG/KzG,EAAAA,EAAAA,eAAA,UAAQc,IAAM,iBAAgBgI,IAAUzJ,KAAO,iBAAgByJ,IAAU5I,QAjEnEyJ,KAEV,MAAMT,EAAgB,IACftG,EAAWjC,MACd,CAAE,UAASmI,KAAW,GACtB,CAAE,YAAWA,KAAW,GACxB,CAAE,UAASA,KAAW,GACtB,CAAE,aAAYA,KAAW,IAG7BC,EAAW,IAAKnG,EAAY,MAASsG,GAAgB,EAuDwCjJ,UAAU,gDAEnGD,EAAAA,EAAAA,eAAA,OAAKW,MAAO,CAACsB,MAAO,OAChBjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,UAASgI,IAAUzJ,KAAO,UAASyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,UAASmI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAMC,MAAO,OAI7KzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WAAWU,MAAO,CAACsB,MAAO,OACrCjC,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,aAAYgI,IAAWzJ,KAAO,aAAYyJ,IAAU3L,SAAUgE,EAAUvE,MAAOgG,EAAWjC,MAAO,aAAYmI,MAAa,EAAGvC,KAAM,KAAMC,IAAK,KAAMC,MAAO,MAGnLzG,EAAAA,EAAAA,eAAA,OAAKC,UAAU,6CACXD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,WAAUgI,IAAUzJ,KAAO,WAAUyJ,IAAU5L,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,gBAAiB,cAAehE,MAAOgG,EAAWjC,MAAO,WAAUmI,KAAW3L,SAAU0K,EAAYrJ,QAASsM,MAExO9K,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,iBAAgBgI,IAAUzJ,KAAO,UAASyJ,IAAU5L,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAOgG,EAAWjC,MAAO,UAASmI,KAAW3L,SAAU0K,EAAYrJ,QAASoM,MAE1O5K,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,kBAAiBgI,IAAUzJ,KAAO,kBAAiByJ,IAAU5L,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,kBAAmB,cAAehE,MAAOgG,EAAWjC,MAAO,kBAAiBmI,KAAW3L,SAAU0K,EAAYrJ,QAASuM,MAGlQlH,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,KAErD,E,qFCpGW,MAAMwI,UAAiBlI,EAAAA,UAClCgC,MAAAA,GAEI,MAAMvI,EAAeE,OAAOF,aAAaG,UAAUuO,aAC7C,WAACrI,EAAU,QAAEpE,EAAO,WAAEqJ,EAAU,OAAEiB,GAAUjF,KAAKvH,MACjD4O,EAAcpC,EAAU,IAAGA,IAAW,GAGtCqC,EAAa5O,EAAa6O,YAAYP,KAAI3J,IAAiB,CAAE,MAASA,EAAM,MAAU,IAAGgK,KAAehK,QACxGmK,EAAiB9O,EAAa+O,gBAAgBT,KAAI3J,IAAiB,CAAE,MAASA,EAAM,MAAU,IAAGgK,SAAmBhK,QACpHqK,EAAiBhP,EAAa+O,gBAAgBT,KAAI3J,IAAiB,CAAE,MAASA,EAAM,MAAU,IAAGgK,SAAmBhK,QAGpHsK,EAAcjP,EAAakP,aAAaZ,KAAI3J,IAAiB,CAAE,MAASA,EAAM,MAAU,IAAGgK,KAAehK,EAAKzB,QAAQ,IAAK,UAC5HiM,EAAkBnP,EAAaoP,iBAAiBd,KAAI3J,IAAiB,CAAE,MAASA,EAAM,MAAU,IAAGgK,SAAmBhK,EAAKzB,QAAQ,IAAK,UACxImM,EAAkBrP,EAAaoP,iBAAiBd,KAAI3J,IAAiB,CAAE,MAASA,EAAM,MAAU,IAAGgK,SAAmBhK,EAAKzB,QAAQ,IAAK,UAGxIoM,EAAiB,CAAE,OAASjL,EAAAA,EAAAA,IAAG,UAAW,cAAe,MAAS,IASxE,OARAuK,EAAWW,QAAQD,GACnBR,EAAeS,QAAQD,GACvBN,EAAeO,QAAQD,GACvBL,EAAYM,QAAQD,GACpBH,EAAgBI,QAAQD,GACxBD,EAAgBE,QAAQD,IAGjB7L,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAEDlC,EA6BOqF,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,MA7BzCxC,EAAAA,EAAAA,eAAA,OAAKC,UAAU,sBAEvBD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,aAAYoK,IAAe7L,KAAO,aAAY6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAOgG,EAAWjC,MAAO,aAAYuK,KAAgB/N,SAAU0K,EAAYrJ,QAAS2M,MAG3PnL,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,WAAUoK,IAAe7L,KAAO,WAAU6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,YAAa,cAAehE,MAAOgG,EAAWjC,MAAO,WAAUuK,KAAgB/N,SAAU0K,EAAYrJ,QAAS6M,MAGnPrL,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,WAAUoK,IAAe7L,KAAO,WAAU6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,YAAa,cAAehE,MAAOgG,EAAWjC,MAAO,WAAUuK,KAAgB/N,SAAU0K,EAAYrJ,QAAS+M,MAInPvL,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,cAAaoK,IAAe7L,KAAO,cAAa6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,eAAgB,cAAehE,MAAOgG,EAAWjC,MAAO,cAAauK,KAAgB/N,SAAU0K,EAAYrJ,QAASgN,MAG/PxL,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,kBAAiBoK,IAAe7L,KAAO,kBAAiB6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAehE,MAAOgG,EAAWjC,MAAO,kBAAiBuK,KAAgB/N,SAAU0K,EAAYrJ,QAASkN,MAGzQ1L,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,kBAAiBoK,IAAe7L,KAAO,kBAAiB6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAehE,MAAOgG,EAAWjC,MAAO,kBAAiBuK,KAAgB/N,SAAU0K,EAAYrJ,QAASoN,KAGxQ/H,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,MAIzD,E,qHCtDW,MAAMuJ,UAAkBjJ,EAAAA,UACnCgC,MAAAA,GAEI,MAAMvI,EAAeE,OAAOF,aAAaG,UAAU8M,QAC7C,WAAC5G,EAAU,QAAEpE,EAAO,WAAEqJ,EAAU,YAAEmE,EAAW,OAAEC,EAAM,aAAEjD,EAAY,cAAEC,GAAiBpF,KAAKvH,MAC3F4P,EAAY,IAGZC,EAAe5P,EAAa4P,aAC5BC,EAAkB7P,EAAa6P,gBAC/BC,EAAkB9P,EAAa8P,gBAC/BC,EAAoB/P,EAAa+P,kBACjCC,EAAqBhQ,EAAagQ,mBAGxC,IAAIC,GAAkB,EACtB,MAAMC,EAAgB,CAAC,gBAAgB,kBAAkB,iBAAkB,kBAK3E,OAJoB7J,EAAWjC,OAAO2B,SAAW,IACrCrE,SAAQoL,GAAOoD,EAAcjN,SAAS6J,GAAOmD,GAAkB,EAAyBA,KAG7FxM,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAEFmD,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,MAG3ChE,GAAWA,EAAQgB,SAAS,gBAC1BQ,EAAAA,EAAAA,eAAC0M,EAAAA,EAAW,CAAC5L,IAAM,YAAWoL,IAAarP,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAezD,SAAU6O,EAAapP,MAAOgG,EAAW+J,WAAW/O,QACxI,MAGAY,GAAWA,EAAQgB,SAAS,eAAcQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAExCV,EAAAA,EAAAA,eAAC0J,EAAAA,EAAgB,CAAC5I,IAAM,cAAaoL,IACjCnP,cAAYkP,IAAUA,EAAOzM,SAAS,eACtCxC,UAAQiP,IAAUA,EAAOzM,SAAS,WAClC3C,OAAO+D,EAAAA,EAAAA,IAAG,aAAc,cAAezD,SAAU0K,EACjDlL,KAAMiG,EAAWjC,MAAMiM,YAAYjQ,MAAQ,QAC3CC,MAAOgG,EAAWjC,MAAMiM,YAAYhQ,OAAS,GAC7CE,OAAQ8F,EAAWjC,MAAMiM,YAAY9P,QAAU,QAInDkD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBAAoBU,MAAO,CAACkM,WAAY,MAEnD7M,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACZ,UAAU,kBAAkBpD,MAAO+F,EAAWjC,MAAMmM,QAAQlM,EAAAA,EAAAA,IAAG,UAAW,cAAc,KAAME,IAAM,UAASoL,IAAa7M,KAAK,SAASnC,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAehE,MAAOgG,EAAWjC,MAAMmM,OAAQ3P,SAAU0K,EAAYrJ,QAAS+N,EAAmBQ,WAErRnK,EAAWjC,MAAMmM,QAAS9M,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAC3BV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACjH,KAAK,iBAAiBxC,OAAO+D,EAAAA,EAAAA,IAAG,kBAAmB,cAAehE,MAAQ2M,SAAS3G,EAAWjC,MAAMqM,iBAAmB,GAAI7P,SAAU0K,MAEnJ,KAEyB,mBAA5BjF,EAAWjC,MAAMmM,QAA8B9M,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAChDV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WAEXD,EAAAA,EAAAA,eAAC0J,EAAAA,EAAgB,CAAC5I,IAAM,sBAAqBoL,IACzC9O,YAAY,EACZP,OAAO+D,EAAAA,EAAAA,IAAG,qBAAsB,cAAgBzD,SAAWP,GAAUoM,EAAapM,EAAO,GAAI,QAAS,YAAagG,EAAYqG,GAC/HtM,KAAMiG,EAAWjC,MAAMsM,WAAWtQ,MAAQ,QAC1CC,MAAOgG,EAAWjC,MAAMsM,WAAWrQ,OAAS,GAC5CE,OAAQ8F,EAAWjC,MAAMsM,WAAWnQ,QAAU,SAGlD,KAGmC,UAAtC8F,EAAWjC,MAAMiM,YAAYjQ,MAAkBqD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAE5CV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACZ,UAAU,kBAAkBa,IAAM,WAAUoL,IAAa7M,KAAK,UAAUnC,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAehE,MAAOgG,EAAWjC,MAAM,WAAYxD,SAAU0K,EAAYrJ,QAAS+N,EAAmBW,UAGvNlN,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACZ,UAAU,kBAAkBa,IAAM,eAAcoL,IAAa7M,KAAK,cAAcnC,aAAa0D,EAAAA,EAAAA,IAAG,WAAY,cAAehE,MAAOgG,EAAWjC,MAAM,eAAgBxD,SAAU0K,EAAYrJ,QAAS+N,EAAmBY,cAGvOnN,EAAAA,EAAAA,eAAA,OAAKC,UAAU,oBACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACZ,UAAU,kBAAkBa,IAAM,aAAYoL,IAAa7M,KAAK,YAAYnC,aAAa0D,EAAAA,EAAAA,IAAG,SAAU,cAAehE,MAAOgG,EAAWjC,MAAM,aAAcxD,SAAU0K,EAAYrJ,QAAS+N,EAAmBa,WAG/NpN,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACZ,UAAU,kBAAkBa,IAAM,gBAAeoL,IAAa7M,KAAK,eAAenC,aAAa0D,EAAAA,EAAAA,IAAG,YAAa,cAAehE,MAAOgG,EAAWjC,MAAM,gBAAiBxD,SAAU0K,EAAYrJ,QAAS+N,EAAmBxE,eAG3O/H,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WACXD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,YAAWoL,IAAa7M,KAAO,WAAWzC,MAAM,cAAc+L,QAAS/F,EAAWjC,MAAM0M,WAAY,EAAOlQ,SAAW0B,GAAWgJ,EAAWhJ,EAAQiK,QAAkB,IAAKnM,KAAK,kBAAkBsD,UAAU,UAASW,EAAAA,EAAAA,IAAG,cAAe,iBAEhQ,OAER,MAGFpC,GAAWA,EAAQgB,SAAS,YAAaQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACvCV,EAAAA,EAAAA,eAAA,OAAKC,UAAY,YAA6B,IAApBuM,EAAyB,QAAQ,WACvDxM,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,UAAUnC,aAAa0D,EAAAA,EAAAA,IAAG,QAAS,cAAeuG,QAAQ,EAAMtK,OAAO+D,EAAAA,EAAAA,IAAG,mBAAoB,cAAehE,MAAOgG,EAAWjC,MAAM2B,QAASnF,SAAU0K,EAAYrJ,QAAS4N,EAAiBlF,UAAU,EAAMjH,UAAU,sBAG1N,IAApBuM,GAA2BxM,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACxBV,EAAAA,EAAAA,eAAA,OAAKC,UAAY,qBAEZ2C,EAAWjC,MAAM2B,SAAS9C,SAAS,kBAAmBQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACnDV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,UAASoL,IAAa7M,KAAK,SAASnC,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAOgG,EAAWjC,MAAM2M,OAAQnQ,SAAU0K,EAAYrJ,QAAS2N,MAE1MnM,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,oBAAmBoL,IAAa7M,KAAK,mBAAmBnC,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,mBAAoB,cAAehE,MAAOgG,EAAWjC,MAAM,oBAAqBxD,SAAU0K,EAAYrJ,QAAS8N,MAEjP,KAGL1J,EAAWjC,MAAM2B,SAAS9C,SAAS,mBAAoBQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACpDV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,WACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,UAAUnC,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAeuG,QAAQ,EAAMtK,OAAO+D,EAAAA,EAAAA,IAAG,qBAAsB,cAAehE,MAAOgG,EAAWjC,MAAM4M,QAASpQ,SAAU0K,EAAYrJ,QAAS6N,EAAiBnF,UAAU,EAAMjH,UAAU,sBAElP,KAGJ2C,EAAWjC,MAAM2B,SAAS9C,SAAS,mBAAoBQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACpDV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,WAAUoL,IAAa7M,KAAK,UAAUnC,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,oBAAqB,cAAehE,MAAOgG,EAAWjC,MAAM6M,QAASrQ,SAAU0K,EAAYrJ,QAAS,CAC3M,CAAE3B,OAAO+D,EAAAA,EAAAA,IAAG,OAAQ,cAAehE,MAAO,IAC1C,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,eAAgB,cAAehE,MAAO,cAClD,CAAEC,OAAO+D,EAAAA,EAAAA,IAAG,gBAAiB,cAAehE,MAAO,2BAG3DoD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,wBAAuBW,EAAAA,EAAAA,IAAG,QAAS,gBACpDZ,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACxF,IAAM,gBAAgBzB,KAAO,gBAAgBlC,SAAU0K,EAAYjL,MAAOgG,EAAWjC,MAAO,kBAAmB,GAAI4F,IAAK,MAExI,OAEV,MACH,KAEb,E,iGC1IW,MAAMkH,UAAsB3K,EAAAA,UACvCgC,MAAAA,GAEI,MAAMvI,EAAeE,OAAOF,aAAaG,WACnC,WAACkG,EAAU,QAAEpE,EAAO,WAAEqJ,EAAU,QAAE6F,EAAO,OAAE5E,GAAUjF,KAAKvH,MAC1D4O,EAAcpC,EAAU,IAAGA,IAAW,GAGtC6E,EAAepR,EAAaoQ,WAAWiB,QACvCC,EAAkBtR,EAAaoQ,WAAWmB,WAC1CC,EAAexR,EAAaoQ,WAAW1C,QACvC+D,EAAgBzR,EAAaoQ,WAAWsB,SAGxCC,EAAa,CAAC,CAAE,MAAS,UAAY,MAAS,KAC9CC,EAAgB,GActB,OAXA5R,EAAa0O,YAAYmD,WAAWvD,KAAI3J,IAEf,iBAAVA,EACPgN,EAAWhQ,KAAK,CAAC,MAASgD,EAAM,MAAU,KAAIgK,KAAehK,OAE7DgN,EAAWhQ,KAAK,CAAC,MAAU,IAAGgD,EAAKzB,QAAQ,IAAK,MAAO,MAAU,GAAEyB,IAAOgK,MAC1EiD,EAAcjQ,KAAK,CAAC,MAAU,KAAIgD,EAAKzB,QAAQ,IAAK,MAAO,MAAU,UAASyL,KAAehK,MACjG,KAIGlB,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,KAEFlC,GAAWA,EAAQgB,SAAS,SAAUQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAEnCV,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACC,IAAM,YAAWoK,IAAejL,UAAU,QAAQZ,KAAO,OAAM6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,YAAa,cAAehE,MAAOgG,EAAW+J,WAAY,OAAMzB,KAAgB/N,SAAU0K,EAAYrJ,QAAS,IAAI0P,KAAeC,GAAgBhH,QAAQ,KACxS,KAEJ3I,EA8BOqF,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,MA9BzCxC,EAAAA,EAAAA,eAAA,OAAKC,UAAU,sBAEvBD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAO,SAASnC,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAOgG,EAAW+J,WAAmB,OAAGxP,SAAU0K,EAAYrJ,QAASwP,MAG3LhO,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAO,OAAM6L,IAAehO,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,YAAa,cAAehE,MAAOgG,EAAW+J,WAAY,OAAMzB,KAAgB/N,SAAU0K,EAAYrJ,QAAS,IAAI0P,KAAeC,GAAgBhH,QAAQ,MAG5PnH,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,SAASnC,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAOgG,EAAW+J,WAAW0B,OAAQlR,SAAU0K,EAAYrJ,QAASmP,MAGtL3N,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,aAAanC,aAAa0D,EAAAA,EAAAA,IAAG,UAAW,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAOgG,EAAW+J,WAAWmB,WAAY3Q,SAAU0K,EAAYrJ,QAASqP,MAG9L7N,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACa,EAAAA,EAAY,CAACxB,KAAK,cAAcnC,aAAa0D,EAAAA,EAAAA,IAAG,OAAQ,cAAe/D,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAehE,MAAOgG,EAAWjC,MAAM,eAAgBxD,SAAU0K,EAAYrJ,QAASuP,KAG1LnL,EAAWjG,MAAM6C,SAAS,UAAgC,SAApBoD,EAAWjG,MAAkBqD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACpEV,EAAAA,EAAAA,eAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,eAACsG,EAAAA,EAAY,CAACzJ,OAAO+D,EAAAA,EAAAA,IAAG,cAAe,cAAevB,KAAO,MAAK6L,IAAe/N,SAAU0K,EAAYjL,MAAOgG,EAAW+J,WAAY,MAAKzB,MAAkB,EAAG3E,IAAK,EAAGC,IAAK,GAAIC,MAAO,MAEtL,KAEJ5C,KAAKvH,MAAMkG,SAAWqB,KAAKvH,MAAMkG,SAAW,MAIhDkL,GAAWA,EAAQlO,SAAS,SAAW,MAAOQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACzClC,GAAWA,EAAQgB,SAAS,UAAWQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAErCV,EAAAA,EAAAA,eAAA,SAAOC,UAAY,mCAAkCW,EAAAA,EAAAA,IAAG,iBAAkB,gBAE1EZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,kBAEXD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,QAAO6L,IAAevC,SAAU/F,EAAW+J,WAAY,QAAOzB,MAAmE,KAAjDtI,EAAW+J,WAAY,QAAOzB,KAAuBtO,MAAO,GAAIO,SAAU0K,EAAYlL,KAAK,eAAesD,UAAU,eACtND,EAAAA,EAAAA,eAAA,QAAMC,UAAU,iEAGpBD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,QAAO6L,IAAevC,QAAS/F,EAAW+J,WAAY,QAAOzB,OAAoB,WAAUA,UAAoCtO,MAAQ,WAAUsO,UAAqB/N,SAAU0K,EAAYlL,KAAK,eAAesD,UAAU,eAC5OD,EAAAA,EAAAA,eAAA,QAAMC,UAAY,oDAAoF,QAAjCG,OAAOkO,UAAUC,YAAwB,OAAS,wBAG3HvO,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,QAAO6L,IAAevC,QAAS/F,EAAW+J,WAAY,QAAOzB,OAAoB,WAAUA,YAAsCtO,MAAQ,WAAUsO,YAAuB/N,SAAU0K,EAAYlL,KAAK,eAAesD,UAAU,eAChPD,EAAAA,EAAAA,eAAA,QAAMC,UAAY,yEAGtBD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,QAAO6L,IAAevC,QAAS/F,EAAW+J,WAAY,QAAOzB,OAAoB,WAAUA,WAAqCtO,MAAQ,WAAUsO,WAAsB/N,SAAU0K,EAAYlL,KAAK,eAAesD,UAAU,eAC9OD,EAAAA,EAAAA,eAAA,QAAMC,UAAY,wEAGtBD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,QAAO6L,IAAevC,QAAS/F,EAAW+J,WAAY,QAAOzB,OAAoB,WAAUA,QAAkCtO,MAAQ,WAAUsO,QAAmB/N,SAAU0K,EAAYlL,KAAK,eAAesD,UAAU,UACxOD,EAAAA,EAAAA,eAAA,QAAMC,UAAY,oDAAoF,QAAjCG,OAAOkO,UAAUC,YAAwB,OAAS,yBAG9H,OAEP/P,GAAWA,EAAQgB,SAAS,WAAYQ,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAEtCV,EAAAA,EAAAA,eAAA,SAAOC,UAAY,mCAAkCW,EAAAA,EAAAA,IAAG,aAAc,gBAEtEZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,mBAEXD,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,gBAAgBsJ,QAAS/F,EAAW+J,WAAY,iBAAiB/P,MAAO,gBAAiBO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eAClKD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,0EAA0E,cAAYW,EAAAA,EAAAA,IAAG,aAAa,kBAG1HZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,eAAesJ,QAAS/F,EAAW+J,WAAY,gBAAgB/P,MAAO,eAAgBO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eAC/JD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,qEAAqE,cAAYW,EAAAA,EAAAA,IAAG,YAAY,kBAGpHZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,eAAesJ,QAAS/F,EAAW+J,WAAY,gBAAgB/P,MAAO,eAAgBO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eAC/JD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,0EAA0E,cAAYW,EAAAA,EAAAA,IAAG,YAAY,kBAGzHZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,kBAAkBsJ,QAAS/F,EAAW+J,WAAY,mBAAmB/P,MAAO,kBAAmBO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eACxKD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,8EAA8E,cAAYW,EAAAA,EAAAA,IAAG,gBAAgB,kBAGjIZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,eAAesJ,QAAmD,QAA1C/F,EAAW+J,WAAY,gBAA0B/P,MAAO,MAAOO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eAChKD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,0EAA0E,cAAYW,EAAAA,EAAAA,IAAG,MAAM,kBAGnHZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,eAAesJ,QAAmD,QAA1C/F,EAAW+J,WAAY,gBAA0B/P,MAAO,MAAOO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eAChKD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,8EAA8E,cAAYW,EAAAA,EAAAA,IAAG,MAAM,kBAGvHZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,YAAYsJ,QAAS/F,EAAW+J,WAAY,aAAa/P,MAAO,YAAaO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eACtJD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,2EAA2E,cAAYW,EAAAA,EAAAA,IAAG,SAAS,kBAGvHZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,eAAesJ,QAAS/F,EAAW+J,WAAY,gBAAgB/P,MAAO,eAAgBO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eAC/JD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,0EAA0E,cAAYW,EAAAA,EAAAA,IAAG,YAAY,kBAWzHZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAACrJ,KAAO,eAAesJ,QAAS/F,EAAW+J,WAAY,gBAAgB/P,MAAO,aAAcO,SAAU0K,EAAYlL,KAAK,kBAAkBsD,UAAU,eAC7JD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,oFAAoF,cAAYW,EAAAA,EAAAA,IAAG,kBAAkB,mBAG5I,KAEb,E,0DCnKW,MAAM8H,UAAsB5F,EAAAA,UAEvCC,MAAQ,CAAC,EAET+B,MAAAA,GAEI,MAAM,KAACzF,EAAI,KAAE1C,EAAI,MAAEC,EAAK,QAAE+L,EAAO,SAAExL,EAAQ,SAAEqF,EAAQ,SAAEgM,EAAQ,UAAEvO,GAAa4D,KAAKvH,MAQnF,IAAIkC,EAAW,8CACXoE,EAAa,CAACzF,SANAgI,GACPhI,EAASgI,EAAMtG,SAkB1B,OAVIoB,IAAWzB,GAAY,IAAGyB,KAG9B2C,EAAW6L,eAAiB9F,EAGxB6F,IAAU5L,EAAW4L,UAAW,GAChC5R,IAAOgG,EAAWhG,MAAQA,IAGtBoD,EAAAA,EAAAA,eAAA,SAAOC,UAAWzB,EAAS,YAAW7B,GAAM6C,SAAS,UAAY,SAAW7C,EAAK6C,SAAS,UAAY,SAAW7C,IACrHqD,EAAAA,EAAAA,eAAA,SAAOrD,KAAMA,GAAM8C,QAAQ,UAAU,IAAIA,QAAQ,UAAW,IAAKJ,KAAMA,KAAUuD,IAChFjG,GAAM6C,SAAS,WAAYQ,EAAAA,EAAAA,eAAA,QAAMC,UAAU,WAAmB,KAC9DuC,EAET,E,0DC1BW,SAASkM,EAAYpS,GAEhC,MAAOwM,EAAQ6F,GAAarS,EAAMsS,IAAK3H,EAAAA,EAAAA,UAAS,OAAQA,EAAAA,EAAAA,UAAS,MAG3D4H,EAAU,CACZC,KAAM,CAAC,KAAM,KAAM,KAAM,MACzB7P,QAAS,0BACT2P,GAAI,CAAC9N,IAAI,SAAUxB,OAAOsB,EAAAA,EAAAA,IAAG,iBAAkB,eAC/CmO,GAAI,CAACjO,IAAI,SAAUxB,OAAOsB,EAAAA,EAAAA,IAAG,iBAAkB,eAC/CoO,GAAI,CAAClO,IAAI,SAAUxB,OAAOsB,EAAAA,EAAAA,IAAG,kBAAmB,eAChDqO,GAAI,CAACnO,IAAI,UAAWxB,OAAOsB,EAAAA,EAAAA,IAAG,iBAAkB,gBAIpD,OACIZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,eAEXD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,sEAAsEU,MAAO,CAAC,WAAY,IACpGkO,EAAQC,KAAKjE,KAAKxB,IACf,GAAI/M,EAAM+M,GACN,OAAOrJ,EAAAA,EAAAA,eAAA,UAAQc,IAAK+N,EAAQxF,GAAKvI,IAAKZ,QAASA,IAAMyO,EAAUtF,GAAMpJ,UAAY,GAAE4O,EAAQ5P,WAAW6J,IAAWO,EAAM,cAAgB,gBAAgBwF,EAAQxF,GAAKvI,MAAOxB,MAAOuP,EAAQxF,GAAK/J,MAAO,eAAc+J,GACxN,MAIRrJ,EAAAA,EAAAA,eAAA,OAAKC,UAAY,GAAE6I,aAAmBxM,EAAMwM,IAAWxM,EAAMwM,GAAQA,IAGjF,C,mEC9Be,MAAM7H,UAAsB6B,EAAAA,UACvCgC,MAAAA,GAEI,MAAM,MAAEjI,EAAK,MAAED,EAAK,KAAEsE,EAAI,KAAEvE,EAAI,SAAEwE,EAAQ,UAAElB,GAAc4D,KAAKvH,MAGzD4S,EAAmB,+DACnBC,EAAmB,8DAGzB,OAAQnP,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MACJV,EAAAA,EAAAA,eAACoP,EAAAA,YAAW,CAACC,SAAWlO,EAAWvE,MAAOA,EAAOkI,OAAQA,EAAEwK,WACnDtP,SAAAA,EAAAA,eAAA,OAAKC,UAAU,gBAAgBC,QAASoP,GAEnCzS,GAAQmD,EAAAA,EAAAA,eAAA,SAAOC,UAAU,QAAQpD,GAAiB,IAEnDmD,EAAAA,EAAAA,eAAA,OAAKC,WAAcA,EAAa,GAAEA,IAAc,IAA/B,oBACH,UAATiB,GACGlB,EAAAA,EAAAA,eAAA,OAAKC,UAAU,8FAbnBsP,EAcU5S,GAAiB,UAATA,EAAsEwS,EAAxCvS,GAASuS,GAdjDnP,EAAAA,EAAAA,eAAA,OAAKuP,IAAKA,EAAK5O,MAAO,CAAC,UAAa,cAepCX,EAAAA,EAAAA,eAAA,QAAMc,IAAI,eAAeb,UAAU,4DAGvCD,EAAAA,EAAAA,eAAA,OAAKC,UAAU,wCAnBnBsP,KAAQvP,EAAAA,EAAAA,eAAA,OAAKuP,IAAKA,EAAKtP,UAAU,uBAAuBU,MAAO,CAAC,SAAY,OAAQ,QAAW,WAoBlB6O,CAAnE7S,GAAiB,UAATA,EAAsEuS,EAAxCtS,GAASsS,IACjDlP,EAAAA,EAAAA,eAAA,QAAMc,IAAI,eAAeb,UAAU,gFAA+E,kBApB1HsP,KA0BV,IAId,E,mOCrBW,SAASE,GAAK,WAAE7M,EAAU,cAAEqG,EAAa,SAAEyG,IAEtD,MAAMnT,EAAeE,OAAOF,aACtBoT,EAAkBpT,EAAaoT,gBAO/BC,EAAYA,CAAC/Q,EAAQiK,IAAWvM,EAAasT,UAAUhR,EAAQiK,EAAQ,SAAS,EAAOlG,EAAYqG,GAEnG6G,EAAiBA,CAACjR,EAAQiK,IAAWvM,EAAasT,UAAUhR,EAAQiK,EAAQ,cAAc,EAAOlG,EAAYqG,GAG7G8G,EAAcJ,EAAgB,CAAC/M,WAAYA,EAAYoN,YAAYC,EAAAA,EAAAA,mBACnED,EAAaD,EAAYC,WACzB9D,EAAY8D,EAAWE,GACvBC,EAAUvN,EAAWwN,QAS3B,OANAJ,EAAW/P,WAAc,GAAE8P,EAAYM,UAAUpQ,aAMzCD,EAAAA,EAAAA,eAAAU,EAAAA,SAAA,MAEJV,EAAAA,EAAAA,eAACsQ,EAAAA,cAAa,MACVtQ,EAAAA,EAAAA,eAACuQ,EAAAA,aAAY,CAACzP,IAAM,GAAEoL,YAAqBrP,OAAO+D,EAAAA,EAAAA,IAAG,iBAAkB,gBAEnEZ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,gBAAiB,cAAehC,OAAS,4EAA4E2D,SAAS,oBAChJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,aAAab,UAAU,uCAC3BD,EAAAA,EAAAA,eAAC+L,EAAAA,EAAS,CAACjL,IAAM,UAASoL,IAAatJ,WAAYA,EAAYqG,cAAeA,EAAeD,aAAczM,EAAasT,UAAWhI,WAAY+H,EAAW5D,YAAa8D,EAAgBtR,QAAQ,+BAIvMwB,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,qBAAsB,cAAehC,OAAS,0EAA0E2D,SAAS,oBACnJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,iBAAiBb,UAAU,iCAC/BD,EAAAA,EAAAA,eAAC0O,EAAAA,EAAW,CACRE,GAAK9F,IAAW9I,EAAAA,EAAAA,eAACyN,EAAAA,EAAa,CAAC3M,IAAM,cAAaoL,IAAatJ,WAAYA,EAAYiF,WAAYiI,IACnGf,GAAKjG,IAAW9I,EAAAA,EAAAA,eAACyN,EAAAA,EAAa,CAAC3E,OAAQA,EAAQlG,WAAYA,EAAYiF,WAAYiI,EAAgBtR,QAAQ,gBAC3GwQ,GAAKlG,IAAW9I,EAAAA,EAAAA,eAACyN,EAAAA,EAAa,CAAC3E,OAAQA,EAAQlG,WAAYA,EAAYiF,WAAYiI,EAAgBtR,QAAQ,gBAC3GyQ,GAAKnG,IAAW9I,EAAAA,EAAAA,eAACyN,EAAAA,EAAa,CAAC3E,OAAQA,EAAQlG,WAAYA,EAAYiF,WAAYiI,EAAgBtR,QAAQ,qBAKvHwB,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,gBAAiB,cAAehC,OAAS,qFAAqF2D,SAAS,oBACzJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,QAAQb,UAAU,iCACtBD,EAAAA,EAAAA,eAAC0O,EAAAA,EAAW,CACRE,GAAK9F,IAAW9I,EAAAA,EAAAA,eAACgL,EAAAA,EAAQ,CAACpI,WAAYA,EAAYiF,WAAY+H,IAC9Db,GAAKjG,IAAW9I,EAAAA,EAAAA,eAACgL,EAAAA,EAAQ,CAAClC,OAAQA,EAAQlG,WAAYA,EAAYiF,WAAY+H,IAC9EZ,GAAKlG,IAAW9I,EAAAA,EAAAA,eAACgL,EAAAA,EAAQ,CAAClC,OAAQA,EAAQlG,WAAYA,EAAYiF,WAAY+H,IAC9EX,GAAKnG,IAAW9I,EAAAA,EAAAA,eAACgL,EAAAA,EAAQ,CAAClC,OAAQA,EAAQlG,WAAYA,EAAYiF,WAAY+H,QAKxFhN,EAAWjC,OAAO6P,SAKhBxQ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,YAAa,cAAehC,OAAS,+BAA8BgE,EAAWjC,OAAOgF,MAAQ,iDAAkDpD,SAAS,oBAC1KvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,QAAQb,UAAU,iBAEtBD,EAAAA,EAAAA,eAAC6C,EAAAA,EAAW,CAAC/B,IAAM,QAAOoL,IAAatP,MAAQgG,EAAWjC,OAAOgF,MAAQ,eAAiBxI,SAzDjGP,GAASL,EAAasT,UAAW,GAAEjT,EAAMD,QAAQC,EAAMA,QAAS,GAAI,QAAS,OAAQgG,EAAYqG,MA2D1FjJ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,cAAaoL,IAAa7M,KAAO,aAAazC,MAAM,UAAU+L,QAAS/F,EAAWjC,MAAM,gBAAiB,EAAOxD,SAAUyS,EAAWjT,KAAK,kBAAkBsD,UAAU,cAAaW,EAAAA,EAAAA,IAAG,aAAc,gBAEzNZ,EAAAA,EAAAA,eAAA,OAAKC,UAAU,QAAQU,MAAO,CAAC8P,cAAe,KAC1CzQ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,WAAUoL,IAAa7M,KAAO,UAAUzC,MAAQ,UAAU+L,QAAS/F,EAAWjC,OAAO6P,QAASrT,SAAUyS,EAAWjT,KAAK,WAAWsD,UAAU,6CAC9JD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,sDAAqDW,EAAAA,EAAAA,IAAG,cAAe,oBAbvGZ,EAAAA,EAAAA,eAAC0I,EAAAA,EAAa,CAAC5H,IAAM,WAAUoL,IAAa7M,KAAO,UAAUzC,MAAQ,UAAU+L,QAAS/F,EAAWjC,OAAO6P,QAASrT,SAAUyS,EAAWjT,KAAK,kBAAkBsD,UAAU,2CACrKD,EAAAA,EAAAA,eAAA,QAAMC,UAAU,wEAAwEU,MAAO,CAAC+P,WAAY,GAAI,cAAY9P,EAAAA,EAAAA,IAAG,WAAY,iBAmBlJgC,EAAWjC,OAAO2B,SAAS9C,SAAS,sBACjCQ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,oBAAqB,cAAehC,OAAS,8EAA8E2D,SAAS,oBACtJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,iBAAiBb,UAAU,iCAE/BD,EAAAA,EAAAA,eAAC4H,EAAAA,EAAa,CAAChF,WAAYA,EAAYiF,WAAY+H,MAG9D,KAEAhN,EAAWjC,OAAO2B,SAAS9C,SAAS,mBACjCQ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,kBAAmB,cAAehC,OAAS,kFAAkF2D,SAAS,oBACxJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,cAAcb,UAAU,iCAC5BD,EAAAA,EAAAA,eAAC0O,EAAAA,EAAW,CACRE,GAAK9F,IAAW9I,EAAAA,EAAAA,eAAC0K,EAAAA,EAAU,CAAC9H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAO,GAAGjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MACjIkQ,GAAKjG,IAAW9I,EAAAA,EAAAA,eAAC0K,EAAAA,EAAU,CAAC9H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAC7ImQ,GAAKlG,IAAW9I,EAAAA,EAAAA,eAAC0K,EAAAA,EAAU,CAAC9H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAC7IoQ,GAAKnG,IAAW9I,EAAAA,EAAAA,eAAC0K,EAAAA,EAAU,CAAC9H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,UAI5J,KAEA+D,EAAWjC,OAAO2B,SAAS9C,SAAS,kBACjCQ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,iBAAkB,cAAehC,OAAS,gFAAgF2D,SAAS,oBACrJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,aAAab,UAAU,iCAC3BD,EAAAA,EAAAA,eAAC0O,EAAAA,EAAW,CACRE,GAAK9F,IAAW9I,EAAAA,EAAAA,eAACoK,EAAAA,EAAS,CAACxH,WAAYA,EAAYmG,WAAYE,EAAeH,OAAO,GAAGjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAChIkQ,GAAKjG,IAAW9I,EAAAA,EAAAA,eAACoK,EAAAA,EAAS,CAACxH,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAC5ImQ,GAAKlG,IAAW9I,EAAAA,EAAAA,eAACoK,EAAAA,EAAS,CAACxH,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAC5IoQ,GAAKnG,IAAW9I,EAAAA,EAAAA,eAACoK,EAAAA,EAAS,CAACxH,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,UAI3J,KAEA+D,EAAWjC,OAAO2B,SAAS9C,SAAS,oBACjCQ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,mBAAoB,cAAehC,OAAS,mFAAmF2D,SAAS,oBAC1JvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,aAAab,UAAU,iCAC3BD,EAAAA,EAAAA,eAAC0O,EAAAA,EAAW,CACRE,GAAK9F,IAAW9I,EAAAA,EAAAA,eAAC2K,EAAAA,EAAW,CAAC/H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAO,GAAGjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAClIkQ,GAAKjG,IAAW9I,EAAAA,EAAAA,eAAC2K,EAAAA,EAAW,CAAC/H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAC9ImQ,GAAKlG,IAAW9I,EAAAA,EAAAA,eAAC2K,EAAAA,EAAW,CAAC/H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAC9IoQ,GAAKnG,IAAW9I,EAAAA,EAAAA,eAAC2K,EAAAA,EAAW,CAAC/H,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,UAI7J,KAEA+D,EAAWjC,OAAO2B,SAAS9C,SAAS,kBACjCQ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,iBAAkB,cAAehC,OAAS,gFAAgF2D,SAAS,oBACrJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,aAAab,UAAU,iCAE3BD,EAAAA,EAAAA,eAAC0O,EAAAA,EAAW,CACRE,GAAK9F,IAAW9I,EAAAA,EAAAA,eAAC6I,EAAAA,EAAS,CAACI,cAAeA,EAAeD,aAAczM,EAAasT,UAAWjN,WAAYA,EAAYmG,WAAYE,EAAeH,OAAO,GAAGjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MACpMkQ,GAAKjG,IAAW9I,EAAAA,EAAAA,eAAC6I,EAAAA,EAAS,CAACI,cAAeA,EAAeD,aAAczM,EAAasT,UAAWjN,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAChNmQ,GAAKlG,IAAW9I,EAAAA,EAAAA,eAAC6I,EAAAA,EAAS,CAACI,cAAeA,EAAeD,aAAczM,EAAasT,UAAWjN,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,MAChNoQ,GAAKnG,IAAW9I,EAAAA,EAAAA,eAAC6I,EAAAA,EAAS,CAACI,cAAeA,EAAeD,aAAczM,EAAasT,UAAWjN,WAAYA,EAAYmG,WAAYE,EAAeH,OAAS,IAAGA,IAAUjB,WAAYhJ,GAAU+Q,EAAU/Q,EAAQ,UAI/N,KAEA+D,EAAWjC,OAAO2B,SAAS9C,SAAS,mBACjCQ,EAAAA,EAAAA,eAACqC,EAAAA,EAAU,CAAC/C,OAAOsB,EAAAA,EAAAA,IAAG,kBAAmB,cAAehC,OAAS,8EAA8E2D,SAAS,oBACpJvC,EAAAA,EAAAA,eAAA,MAAIc,IAAI,aAAab,UAAU,iCAC3BD,EAAAA,EAAAA,eAAC4J,EAAAA,EAAU,CAAChH,WAAYA,EAAYiF,WAAY+H,MAG3D,QAIT5P,EAAAA,EAAAA,eAAC2Q,EAAAA,kBAAiB,CAAC7P,IAAM,GAAEoL,gBAEvBlM,EAAAA,EAAAA,eAAC4Q,EAAAA,UAAS,CAACtR,MAAM,mBAAmBuR,aAAa,IAE7C7Q,EAAAA,EAAAA,eAAC+F,EAAAA,EAAW,CAAC9F,UAAU,QAAQZ,KAAK,KAAKxC,OAAO+D,EAAAA,EAAAA,IAAG,mBAAoB,cAAehE,MAAQgG,EAAWsN,GAAK/S,SAvJvG0B,GAAWtC,EAAayI,UAAUnG,EAAQ+D,EAAYqG,MAyJ7DjJ,EAAAA,EAAAA,eAAC+L,EAAAA,EAAS,CAACjL,IAAM,UAASoL,IAAatJ,WAAYA,EAAYqG,cAAeA,EAAeD,aAAczM,EAAasT,UAAWhI,WAAY+H,EAAW5D,YAAa8D,EAAgBtR,QAAQ,cAKtMoE,EAAWkO,SAAW9Q,EAAAA,EAAAA,eAAA,OAAKuP,IAAKwB,EAAcC,IAAI,GAAG/Q,UAAU,WAC5DD,EAAAA,EAAAA,eAACiR,EAAAA,SAAQ,IAAKjB,EAAYkB,UAAWA,OAAUC,UAAW,GAAIC,UA7I1CjM,GAAU5I,EAAa8U,mBAAmBlM,EAAOuK,EAAU,IAAK9M,EAAY0O,QAAS,IAAM1O,EAAW0O,QAAS1O,GA6ItC9B,IAAM,GAAEoL,IAAakE,QAASD,EAASvT,MAAOgG,EAAW0O,QAASnU,SA9JnJmU,GAAWrI,EAAc,CAAEqI,YA8J+IpU,aAAa0D,EAAAA,EAAAA,IAAG,gBAAiB,gBAGnO,C,uECjMA2Q,EAAOC,QAAU/U,OAAc,K,WCA/B8U,EAAOC,QAAU/U,OAAW,GAAY,Q,WCAxC8U,EAAOC,QAAU/U,OAAW,GAAe,W,WCA3C8U,EAAOC,QAAU/U,OAAW,GAAU,M,WCAtC8U,EAAOC,QAAU/U,OAAW,GAAc,U,WCA1C8U,EAAOC,QAAU/U,OAAW,GAAW,O,WCAvC8U,EAAOC,QAAU/U,OAAW,GAAQ,I,22BCChCgV,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaJ,QAGrB,IAAID,EAASE,EAAyBE,GAAY,CAGjDH,QAAS,CAAC,GAOX,OAHAM,EAAoBH,GAAUJ,EAAQA,EAAOC,QAASE,GAG/CH,EAAOC,OACf,CCrBAE,EAAoBK,EAAKR,IACxB,IAAIS,EAAST,GAAUA,EAAOU,WAC7B,IAAOV,EAAiB,QACxB,IAAM,EAEP,OADAG,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACV,EAASY,KACjC,IAAI,IAAItR,KAAOsR,EACXV,EAAoBW,EAAED,EAAYtR,KAAS4Q,EAAoBW,EAAEb,EAAS1Q,IAC5EuE,OAAOiN,eAAed,EAAS1Q,EAAK,CAAEyR,YAAY,EAAMC,IAAKJ,EAAWtR,IAE1E,ECND4Q,EAAoBe,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO7O,MAAQ,IAAI8O,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXnW,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBiV,EAAoBW,EAAI,CAACQ,EAAKC,IAAUzN,OAAO0N,UAAUC,eAAeC,KAAKJ,EAAKC,G,MCAlF,IAAII,EACAxB,EAAoBe,EAAEU,gBAAeD,EAAYxB,EAAoBe,EAAEW,SAAW,IACtF,IAAI9E,EAAWoD,EAAoBe,EAAEnE,SACrC,IAAK4E,GAAa5E,IACbA,EAAS+E,gBACZH,EAAY5E,EAAS+E,cAAc9D,MAC/B2D,GAAW,CACf,IAAII,EAAUhF,EAASiF,qBAAqB,UAC5C,GAAGD,EAAQlU,OAEV,IADA,IAAIoU,EAAIF,EAAQlU,OAAS,EAClBoU,GAAK,IAAMN,GAAWA,EAAYI,EAAQE,KAAKjE,GAExD,CAID,IAAK2D,EAAW,MAAM,IAAIO,MAAM,yDAChCP,EAAYA,EAAUzT,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFiS,EAAoBgC,EAAIR,EAAY,Q,2ECHpC,MAAMvD,EAAkBlT,OAAOF,aAAaoT,iBAG5CgE,EAAAA,EAAAA,mBAAkBC,EAAU,CACxBjO,MAAO3F,EAAAA,EAAAA,eAAA,OAAK6T,QAAQ,cAAY7T,EAAAA,EAAAA,eAAA,QAAM8T,KAAK,UAAU5B,EAAE,8HAGvD6B,KAAOtE,EAAAA,EAGPuE,KAAOA,EAAGpR,iBAEN,MAAMmN,EAAcJ,EAAgB,CAAC/M,WAAYA,EAAYoN,WAAYC,EAAAA,cAAc+D,OAAQC,QAAQ,IACjGjE,EAAaD,EAAYC,WACzBG,EAAUvN,EAAWwN,QAM3B,OAHAJ,EAAW/P,WAAc,GAAE8P,EAAYM,UAAUpQ,aAGzCD,EAAAA,EAAAA,eAACiR,EAAAA,SAASiD,QAAO,IAAKlE,EAAYI,QAASD,EAASvT,MAAOgG,EAAW0O,SAAW,G","sources":["webpack://pds-blocks-pro/./src/blocks/px-controls/colors/background.js","webpack://pds-blocks-pro/./src/blocks/px-controls/colors/text.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/icons.js","webpack://pds-blocks-pro/./src/blocks/px-controls/input.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/animations.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/border.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/effects.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/margin.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/padding.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/position.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/sizes.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/styles.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/typography.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/px-controls/uploader.js","webpack://pds-blocks-pro/./src/blocks/text-list-item/edit.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/text-list-item/index.js"],"sourcesContent":["/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useState, useMemo } from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport MediaUploader from '../uploader';\r\n\r\n//===> Phenix Background <===//\r\nconst PhenixBackground = (props) => {\r\n    //===> Get Data <===//\r\n    const PhenixBlocks = useMemo(() => window.PhenixBlocks.dataLists, []);\r\n    //===> Properties <===//\r\n    const {type, value, label, rotate, colorsOnly, onlyCG, isSmall, placeholder, onChange, customOnly, cover} = props;\r\n\r\n    //===> Get Custom Colors and Gradients <===//\r\n    const setting = wp.data.select('core/block-editor').getSettings();\r\n    const editorColors = setting['__experimentalFeatures']?.color;\r\n\r\n    //===> Custom Colors List <===//\r\n    const customColorsList = useMemo(() => {\r\n        //===> Default and User Custom <===//\r\n        const list = [];\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Custom Gradients List <===//\r\n    const customGradientsList = useMemo(() => {\r\n        //===> Default and User Custom <===//\r\n        const list = [];\r\n        if (editorColors && !colorsOnly) {\r\n            editorColors.gradients?.default?.forEach(gradient => list.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n            editorColors.gradients?.custom?.forEach(gradient => list.push(`var(--wp--preset--gradient--${gradient.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Returned Value <===//\r\n    let options = {\r\n        type: type,\r\n        rotate: rotate,\r\n        value: value || \"\",\r\n    };\r\n\r\n    //===> Set Type <===//\r\n    const set_type = type => {\r\n        //===> Set Value <===//\r\n        options.type = type;\r\n\r\n        //===> change value <===//\r\n        if (options.type === 'image') {options.value = PhenixBlocks.palette.placeholder;} \r\n        else {options.value = \"\";}\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Type <===//\r\n    const set_rotate = rotate => {\r\n        //===> Set Value <===//\r\n        options.rotate = rotate;\r\n        //===> change value <===//\r\n        if (options.type !== 'gradient') options.value = \"\";\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Background <===//\r\n    const setBackground = clicked => {\r\n        //===> Get Value <===//\r\n        let button = clicked.target,\r\n            value  = button?.getAttribute('data-value');\r\n\r\n        //===> Colors & Gradients <===//\r\n        if (type !== 'image' && type !== \"video\") {options.value = value;}\r\n        //===> Image Type <===//\r\n        else {options.value = clicked.url;}\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Set Cover <===//\r\n    const setCover = clicked => {\r\n        //===> Set value <===//\r\n        options.cover = clicked.url;\r\n\r\n        //===> Return Options <===//\r\n        return onChange(options);\r\n    };\r\n\r\n    //===> Buttons Creator <===//\r\n    const makeButtons = (list, classes) => {\r\n        let output = [];\r\n        //===> for each item <===//\r\n        for (let index = 0; index < list.length; index++) {\r\n            //===> Get Value <===//\r\n            const name = list[index];\r\n            let title = name,\r\n                isColor = !name.includes(\"fa-\");\r\n\r\n            //===> Convert to Title <===//\r\n            if (isColor) {\r\n                //===> Get a Clean Title <===//\r\n                title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace('--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ');\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n            } else title = \"Reset\";\r\n\r\n            const buttonAttributes = {\r\n                \"title\": title,\r\n                \"onClick\": setBackground,\r\n                \"data-value\": isColor ? name : \"\",\r\n                \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                \"style\": {\"width\":\"30px\",\"height\":\"16px\", backgroundColor: name.includes('var(') && !name.includes('--gradient') ? name : null, backgroundImage: name.includes('--wp--preset--gradient') ? name : null},\r\n                \"className\":`${isColor && !name.includes('var') ? name : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : \"\"} ${classes?classes:\"\"}`\r\n            }\r\n\r\n            output.push(<button {...buttonAttributes}></button>);\r\n        }\r\n        //===> Return Buttons <===//\r\n        return output;\r\n    };\r\n\r\n    //===> Colors Panel <===//\r\n    const showPanel = clicked => {\r\n        let button  = clicked.target,\r\n            wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n            panel   = wrapper.querySelector(\".options-list\");\r\n\r\n        //=== Show/Hide Panel ===//\r\n        if (panel) {\r\n            Phenix(button).toggleClass(\"px-active\");\r\n            Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n\r\n            if (isSmall) {\r\n                Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n            }\r\n        }\r\n    };\r\n\r\n    //===> Component Design <===//\r\n    return (\r\n        <div className={`colors-selector px-gb-component ${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n            {/*===> Toggle Button <===*/}\r\n            {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n            {/*===> Group <===*/}\r\n            <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                {/*===> Panel Trigger */}\r\n                <button onClick={showPanel} className={`col fs-13 col h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                    {type !== \"image\" && type !== \"video\" ? <>\r\n                        <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"17px\", \"height\": \"17px\", backgroundColor: value.includes('--wp--preset--color') ? value : null, backgroundImage: value.includes('--wp--preset--gradient') ? value : null}}></span>\r\n                        <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace('var(--wp--preset--gradient--', '').replace(')', '').replace('bg-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                    </> : <>\r\n                    <span className={`me-5 radius-circle inline-block`} style={{\"width\": \"22px\", \"height\": \"22px\", \"backgroundImage\": `url(${value})`, \"backgroundSize\": \"cover\", \"backgroundPosition\": \"center\"}}></span>\r\n                        <span className='col tx-nowrap pde-5'>{placeholder ? placeholder : __(\"Replace\", \"pds-blocks\")}</span>\r\n                    </>}\r\n                    {!isSmall ? <i className='fas fa-pencil fs-12 color-gray'></i> : null}\r\n                </button>\r\n                {/*===> Type Select <===*/}\r\n                {!colorsOnly && !onlyCG ? \r\n                    <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                        { label: 'color',   value: 'color' },\r\n                        { label: 'image',   value: 'image' },\r\n                        { label: 'gradient',   value: 'gradient' },\r\n                        { label: 'video',   value: 'video' },\r\n                    ]}/>\r\n                : onlyCG ? \r\n                    <PhenixSelect key=\"bg-type\" className=\"col-5\" name=\"bg-type\" value={type || \"\"} onChange={(target) => set_type(target.value)} options={[\r\n                        { label: 'color',   value: 'color' },\r\n                        { label: 'gradient',   value: 'gradient' },\r\n                    ]}/>\r\n                : null}\r\n            </div>\r\n            {/*===> Panel <===*/}\r\n            <div className={`flexbox flow-columns options-list ${type !== \"image\"  && type !== \"video\" && type !== \"embed\" ? 'pdy-15 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom' : 'pdt-5'} hidden fluid px-scrollbar overflow-y-auto`} style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                {type === \"image\" || type === \"video\" ? <>\r\n                    <MediaUploader key=\"upload-file\" size=\"small\" label={`${type === \"video\" ? \"Video File\" : \"Image File\"}`} value={!value || type === \"video\" ? PhenixBlocks.palette.placeholder : value} setValue={setBackground}></MediaUploader>\r\n\r\n                    {type === \"video\" ? <MediaUploader label=\"Cover File\" key=\"upload-cover-file\" size=\"small\" value={!cover ? PhenixBlocks.palette.placeholder : cover} setValue={setCover}></MediaUploader> : null}\r\n                </> : null}\r\n                {/*===> Colors Set <====*/}\r\n                <div className='flexbox' style={{\"gap\": \"0.75rem\"}}>\r\n                    {type === \"color\" ? <>\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].main, \"radius-xxl\")}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-10 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                        {customColorsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Colors\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customColorsList, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Dark Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-white fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].darkAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Light Alpha\", \"pds-blocks\")}</label>\r\n                        <div className='pd-5 radius-sm bg-dark fluid flexbox align-between'>\r\n                            {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].lightAlpha, \"\")}\r\n                        </div>\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].status, \"radius-xxl\")}\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Offwhite Colors\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.colors.offwhite, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12 mt-10'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                        {makeButtons(PhenixBlocks.palette[`${customOnly?'variables':'colors'}`].brands, \"radius-xxl\")}\r\n                    </>\r\n                    : type === \"gradient\" ? <>\r\n                        {!customOnly ? <> \r\n                            <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12'>{__(\"Phenix Gradients\", \"pds-blocks\")}</label>\r\n                            {makeButtons(PhenixBlocks.palette.gradients, \"radius-xxl\")}\r\n                        </>:null}\r\n\r\n                        {customGradientsList.length > 0 ? <>\r\n                            <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 ${!customOnly?\"mt-10\":''} tx-UpperCase fs-12 col-12`}>\r\n                                {__(\"Custom Gradients\", \"pds-blocks\")}\r\n                            </label>\r\n                            {makeButtons(customGradientsList, \"radius-xxl\")}\r\n                        </>:null}\r\n                    </>:\r\n                    null}\r\n                </div>\r\n            </div>\r\n            {/*===> Rotation Select <===*/}\r\n            {type === \"gradient\" ? <div className='divider-t pdt-15 col-12'>\r\n                <label className='mb-5 fs-13 weight-medium'>{`${_(\"Rotation\", \"pds-blocks\")}`}</label>\r\n                <PhenixSelect key=\"gradient-direction\" name={`gradient-direction`} value={rotate || \"\"} onChange={(target) => set_rotate(target.value)} options={[\r\n                    { label: __('Default' ,\"pds-blocks\"), value: '' },\r\n                    { label: __('45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45' },\r\n                    { label: __('-45 Degree' ,\"pds-blocks\"), value: 'bg-grade-45n' },\r\n                    { label: __('90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90' },\r\n                    { label: __('-90 Degree' ,\"pds-blocks\"), value: 'bg-grade-90n' },\r\n                    { label: __('120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120' },\r\n                    { label: __('-120 Degree' ,\"pds-blocks\"), value: 'bg-grade-120n' },\r\n                    { label: __('180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180' },\r\n                    { label: __('-180 Degree' ,\"pds-blocks\"), value: 'bg-grade-180n' },\r\n                ]}/>\r\n            </div> : null}\r\n            {/*===> Rotation Select <===*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhenixBackground;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport React, { useMemo } from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nconst PhenixColors = (props) => {\r\n    //===> Properties <===//\r\n    const {value, label, isSmall, placeholder, onChange} = props;\r\n\r\n    //===> Colors List <===//\r\n    const pxPallete = useMemo(() => window.PhenixBlocks.dataLists.paletteText, []);\r\n\r\n    //===> Get Custom Colors and Gradients <===//\r\n    const setting = wp.data.select('core/block-editor').getSettings();\r\n    const editorColors = setting['__experimentalFeatures']?.color;\r\n    const customColorsList = useMemo(() => {\r\n        //===> Generate Custom Colors <===//\r\n        const list = [];\r\n        if (editorColors) {\r\n            editorColors.palette?.default?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n            editorColors.palette?.custom?.forEach(color => list.push(`var(--wp--preset--color--${color.slug})`));\r\n        }\r\n        return list;\r\n    }, [editorColors]);\r\n\r\n    //===> Set Color <===//\r\n    const setColor = clicked => {\r\n        //===> Get Value <===//\r\n        let button = clicked.target,\r\n            value  = button.getAttribute('data-value');\r\n        //===> Return Options <===//\r\n        return onChange(value);\r\n    };\r\n\r\n    //===> Buttons Creator <===//\r\n    const makeButtons = (list, classes) => {\r\n        let output = [];\r\n        //===> for each item <===//\r\n        for (let index = 0; index < list.length; index++) {\r\n            //===> Get Value <===//\r\n            const name = list[index];\r\n            let title = list[index],\r\n                isColor = !name.includes(\"fa-\");\r\n\r\n            //===> Convert to Title <===//\r\n            if (isColor) {\r\n                //===> Get a Clean Title <===//\r\n                title = title.replace(\"var(\", \"\").replace('--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ');\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n            } else {\r\n                title = \"Reset\";\r\n            }\r\n\r\n            //===> Button Attributes <====//\r\n            const buttonAttributes = {\r\n                \"title\": title,\r\n                \"onClick\": setColor,\r\n                \"data-value\": isColor ? name : \"\",\r\n                \"key\": `${name.replaceAll(\" \", \"-\")}`,\r\n                \"style\": {width: \"30px\", height:\"16px\", backgroundColor: name.includes('var') ? name : null},\r\n                \"className\": `${isColor && !name.includes('var') ? name.replace('color-','bg-') : `${!name.includes('var') ? name : name.includes('--white') ? 'border-1 border-solid border-alpha-10' : ''} color-gray fs-12`} col reset-button ${value === name ? 'px-active' : null}  ${classes?classes:\"\"}`,\r\n            };\r\n\r\n            //===> Push the Button <===//\r\n            output.push(<button {...buttonAttributes}></button>);\r\n        }\r\n\r\n        //===> Return Buttons <===//\r\n        return output;\r\n    };\r\n\r\n    //===> Colors Panel <===//\r\n    const showPanel = clicked => {\r\n        let button = clicked.target,\r\n            wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n            panel  = Phenix(button).next(\".options-list\");\r\n        //=== Show/Hide Panel ===//\r\n        if (panel) {\r\n            Phenix(button).toggleClass(\"px-active\");\r\n            Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n            \r\n            if (isSmall) {\r\n                Phenix(wrapper).toggleClass(\"overlay-panel\")\r\n            };\r\n        }\r\n    };\r\n\r\n    //===> Component Output <===//\r\n    return (\r\n        <div className={`colors-selector px-gb-component${isSmall ? \"\":\" position-rv \"}${label ? \"mb-10\" : \"\"}`}>\r\n            {/*===> Toggle Button <===*/}\r\n            {label ? <label className='mb-5 tx-UpperCase fs-12'>{label}</label> : null}\r\n            {/*===> Trigger <===*/}\r\n            <button onClick={showPanel} className={`options-toggle form-control small flexbox align-between align-center-y radius-md tx-align-start border-alpha-25 mb-5`} type=\"button\">\r\n                <span className={`me-5 radius-circle inline-block ${value?.length > 0 && !value.includes('var') ? value.replace(\"color-\",\"bg-\") : value?.includes('var') ? '': \"bg-inherit\"}`} style={{\"width\": \"20px\", \"height\": \"20px\", backgroundColor: value && value.includes('var') ? value : null}}></span>\r\n                <span className='col tx-nowrap pde-5 tx-capitalize'>{value?.length > 0 && !placeholder ? value?.replace('var(--wp--preset--color--', '').replace(')', '').replace('color-', '').replaceAll('-', ' ') : placeholder ? placeholder : \"Default\"}</span>\r\n                {!isSmall ? <i className='fas fa-pencil'></i> : null}\r\n            </button>\r\n            {/*===> Panel <===*/}\r\n            <div className='flexbox px-scrollbar overflow-y-auto options-list pdb-20 pdt-10 pdx-10 bg-white border-1 border-solid border-alpha-20 radius-md radius-bottom hidden fluid' style={{gap:\"10px\", maxHeight: \"calc(100vh - 350px)\"}}>\r\n                <label className={`tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 tx-UpperCase fs-12 col-12`}>{__(\"Main Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.main, \"radius-xxl\")}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Components Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.components, \"radius-xxl border-1 border-alpha-15 border-solid\")}\r\n\r\n                {customColorsList.length > 0 ? <>\r\n                    <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>\r\n                        {__(\"Custom Colors\", \"pds-blocks\")}\r\n                    </label>\r\n                    {makeButtons(customColorsList, \"radius-xxl\")}\r\n                </>:null}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Status Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.status, \"radius-xxl\")}\r\n\r\n                <label className='tx-align-center pdb-5 pdy-5 lineheight-100 bg-alpha-05 radius-sm mb-0 mt-10 tx-UpperCase fs-12 col-12'>{__(\"Brand Colors\", \"pds-blocks\")}</label>\r\n                {makeButtons(pxPallete.social, \"radius-xxl\")}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhenixColors;","import React, { useEffect, Fragment } from '@wordpress/element';\r\n\r\nconst PxDropDown = ({\r\n    label,\r\n    button,\r\n    support,\r\n    dropList,\r\n    children,\r\n    className,\r\n    dataPosition,\r\n    title,\r\n    key\r\n}) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Component Attributes <===\\\\\r\n    const attributes = {};\r\n\r\n    //===> Component Classes <===\\\\\r\n    if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n    if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n    if (key) attributes.key = key;\r\n\r\n    //===> Component Render <===\\\\\r\n    return (\r\n        <Fragment>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PxDropDown;","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Icons <===//\r\nexport default class PhenixIcons extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        icons_page : 1,\r\n        icon_type  : \"far\",\r\n        icon_name  : \"fa-icons\",\r\n        icons_file : \"fa6-pro.json\",\r\n        icons_list : [],\r\n        icons_pages: {},\r\n\r\n        icons_types : [\r\n            { value: 'fab', label: 'Brands' },\r\n\r\n            { value: 'fat', label: 'Thin' },\r\n            { value: 'fal', label: 'Light' },\r\n            { value: 'far', label: 'Regular' },\r\n            { value: 'fas', label: 'Solid' },\r\n            { value: 'fad', label: 'Duotone' },\r\n\r\n            { value: 'fast', label: 'Sharp Thin' },\r\n            { value: 'fasl', label: 'Sharp Light' },\r\n            { value: 'fass', label: 'Sharp Solid' },\r\n            { value: 'fasr', label: 'Sharp Regular' },\r\n        ],\r\n\r\n        icons_version : \"fa6\",\r\n        return_type: null\r\n    };\r\n\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        apiFetch({ path: \"pds-blocks/v2/options\" }).then((options) => {\r\n            //===> Get Icons Data <===//\r\n            let icons_pages = this.state.icons_pages,\r\n                icons_version = this.state.icons_version,\r\n                icons_file = this.state.icons_file,\r\n                icon_type = this.state.icon_type,\r\n                icon_name = this.state.icon_name,\r\n                icons_list = this.state.icons_list;\r\n\r\n            //===> Get Icons Version <===//\r\n            if (options.pds_icon_font) {\r\n                icons_version = options.pds_icon_font.replace(\"fontawesome-\", \"fa\").replace(\"-free\",\"\").replace(\"-pro\",\"\");\r\n            }\r\n\r\n            //===> Define FontAwesome Icons File <===//\r\n            if (this.props.value.includes(\"fab\")) {\r\n                icons_file = `${icons_version}-brands.json`;\r\n            } else {\r\n                icons_file = `${icons_version}-pro.json`;\r\n            }\r\n\r\n            //===> FontAwesome Version Correct <===//\r\n            if(icons_version.includes(\"6\")) icons_file = icons_file.replace(\"5\", \"6\");\r\n\r\n            //===> Set Icon Type <===//\r\n            const icon_value = this.props.value.split(\" \");\r\n\r\n            //===> Reset Icons List <===//\r\n            if (icon_type.includes('fab') && !icon_value[0].includes('fab')) icons_list = [];\r\n\r\n            //===> Set Icon Type <===//\r\n            icon_name = icon_value[1];\r\n            icon_type = icon_value[0];\r\n\r\n            //===> Start Fetching <===//\r\n            if (icons_list.length < 1) {\r\n                fetch(`${PDS_WP_KEY.json}/${icons_file}`).then((res) => res.json()).then((json) => {\r\n                    //===> Assign Icons List <===//\r\n                    if (json.icons !== icons_list) icons_list = json.icons;\r\n                    //===> Divide List into Pages <===//\r\n                    for(let item = 0; item < icons_list.length; item += 200) {\r\n                        //===> Define Page Number <===//\r\n                        let pageNumber = Math.floor(item / 200) + 1;\r\n                        //===> Add item to Pages Object <===//\r\n                        icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                    }\r\n                    //===> Update State <===//\r\n                    this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n                });\r\n            } else {\r\n                //===> Divide List into Pages <===//\r\n                for(let item = 0; item < icons_list.length; item += 200) {\r\n                    //===> Define Page Number <===//\r\n                    let pageNumber = Math.floor(item / 200) + 1;\r\n                    //===> Add item to Pages Object <===//\r\n                    icons_pages[pageNumber] = icons_list.slice(item, item + 200);\r\n                }\r\n                //===> Update State <===//\r\n                this.setState({icon_type, icon_name, icons_file, icons_list, icons_version, icons_pages});\r\n            }\r\n        });\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, version, onChange } = this.props;\r\n\r\n        //===> Returned Value <===//\r\n        let options = {\r\n            type: value.split(\" \")[0],\r\n            value: value.split(\" \")[1],\r\n        };\r\n\r\n        //===> Set Type <===//\r\n        const set_value = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                theValue  = button?.getAttribute('data-value');\r\n\r\n            //===> Set Value <===//\r\n            options.value = theValue;\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        };\r\n\r\n        const set_type = value => {\r\n            //===> Set Value <===//\r\n            options.type = value;\r\n\r\n            //===> Switched to Brand <===//\r\n            if (value === \"fab\" && !this.props.value.includes('fab')) options.value = \"fa-wordpress\";\r\n\r\n            //===> Switched from Brand <===//\r\n            if (this.props.value.includes('fab') && value !== \"fab\") options.value = \"fa-icons\";\r\n\r\n            //===> Return Options <===//\r\n            this.setState({icon_type: value, icons_list: [], icons_pages: {}, icons_page: 1, icon_name: options.value}, () => {\r\n                return onChange(options);\r\n            });\r\n        };\r\n\r\n        //===> Traveling Buttons <===//\r\n        const travelingButton = (event) => {\r\n            //===> Get the icons List Wrapper <====//\r\n            let element = event.target,\r\n                travelType = element.getAttribute('data-travel');\r\n\r\n            //===> Get Next Page <===//\r\n            if (travelType === 'next') {\r\n                //===> Exit if Last Page <===//\r\n                if (this.state.icons_page === Object.keys(this.state.icons_pages).length) return;\r\n                //===> Go to Next Page <===//\r\n                this.setState({icons_page: this.state.icons_page + 1});\r\n            }\r\n\r\n            //===> Get Previous Page <===//\r\n            else if (travelType === 'previous') {\r\n                //===> Exit if First Page <===//\r\n                if (this.state.icons_page === 1) return;\r\n\r\n                //===> Go to Previous Page <===//\r\n                this.setState({icons_page: this.state.icons_page - 1});\r\n            }\r\n        };\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            //===> Exit if has no items <===//\r\n            if (!list || list.length < 1) return;\r\n\r\n            //===> Define Data <===//\r\n            let buttonsList  = [],\r\n                buttonsStyle = {\"fontSize\": \"20px\", \"lineHeight\": \"32px\", \"width\":\"32px\", \"height\":\"32px\", \"borderRadius\": \"3px\", \"padding\": 0},\r\n                buttonItem = (item) => {\r\n                    return <button key={`${item}`} onClick={set_value} title={item} data-value={item} className={`reset-button icon-btn-item ${type} ${item} ${this.state.icon_name === item?'px-active bg-offwhite-primary':\"\"}`} style={buttonsStyle}></button>;\r\n                };\r\n\r\n            //===> Create Buttons <===//\r\n            list.forEach((item) => buttonsList.push(buttonItem(item)));\r\n\r\n            //===> Return Buttons <===//\r\n            return buttonsList;\r\n        };\r\n\r\n        //===> Colors Panel <===//\r\n        const showPanel = clicked => {\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor('.px-gb-component'),\r\n                panel   = wrapper.querySelector(\".options-list\");\r\n\r\n            //=== Show/Hide Panel ===//\r\n            if (panel) {\r\n                Phenix(button).toggleClass(\"px-active\");\r\n                Phenix(panel).toggleClass(\"px-active\").fadeToggle(300, 0, \"flex\");\r\n            }\r\n        };\r\n\r\n        //===> Search in icons <===//\r\n        const iconsFilter = changed => {\r\n            //===> Define Data <===//\r\n            let input = changed.target,\r\n                icons_list = this.state.icons_list,\r\n                value = input.value;\r\n\r\n            //===> Find the searched icon and remove the reset <===//\r\n            let searchedList = icons_list.filter(icon => icon.includes(value));\r\n            \r\n            //===> Set the New List <===//\r\n            if (value.length > 0)  this.setState({icons_list: searchedList, icons_page: 1, icons_pages: {}});\r\n            else this.setState({icons_list: [], icons_page: 1, icons_pages: {}});\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className={`px-gb-component position-rv mb-10 px-icons-selector ${!label?'pdt-10':''}`}>\r\n                {/*===> Toggle Button <===*/}\r\n                {label?<label className='mb-10 tx-UpperCase fs-13'>{label}</label>:null}\r\n\r\n                {/*===> Group <===*/}\r\n                <div className='form-control small flexbox border-alpha-25 mb-5 tx-align-start radius-md align-center-y pdx-0 flow-nowrap'>\r\n                    {/*===> Panel Trigger */}\r\n                    <button onClick={showPanel} className={`col-6 w-max-150 fs-13 h-min-100 reset-button options-toggle flexbox flow-nowrap align-between align-center-y pdx-10 divider-e`} type=\"button\">\r\n                        <span className={`col tx-nowrap pde-5`} style={{\"lineHeight\": \"20px\"}}>\r\n                            <span className={`pds-icon-preview inline-block me-5 radius-circle bg-alpha-05 ${this.props.value} position-rv`}></span>\r\n                            {__(\"Replace\", \"pds-blocks\")}\r\n                        </span>\r\n                        <i className='fas fa-pencil fs-12 color-gray'></i>\r\n                    </button>\r\n                    {/*===> Type Select <===*/}\r\n                    <PhenixSelect key={`icons-type`} name=\"icons-type\" className=\"col-6\" value={value.split(\" \")[0]} onChange={(target) => set_type(target.value)} options={this.state.icons_types} />\r\n                </div>\r\n\r\n                {/*===> Panel <===*/}\r\n                <div className={`flexbox align-center tx-align-center options-list pdb-15 pdt-5 bg-white border-1 border-solid border-alpha-25 radius-md radius-bottom hidden fluid`}>\r\n                    <input name=\"pds-icons-search\" className='reset-input pdy-5 fs-12 divider-b fluid tx-align-center' onChange={iconsFilter} placeholder={__(\"Search in icons\", \"pds-blocks\")} />\r\n                    {/*===> Buttons List <===*/}\r\n                    <div className=\"bg-alpha-05 fluid pdx-15 pdy-10 icons-listing align-center flexbox px-scrollbar overflow-y-auto mb-10 divider-y\" style={{gap:\"10px\", maxHeight: \"220px\"}}>\r\n                        {this.state.icons_list.length > 0 ? \r\n                            makeButtons(this.state.icons_pages[this.state.icons_page], this.state.icon_type) : \"No Icons Found.\"\r\n                        }\r\n                    </div>\r\n                    {/*===> Pagination <===*/}\r\n                    <div className='fluid flexbox align-between align-center-y pagination-btns pdx-15'>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"next\" className=\"btn tiny fs-12 radius-sm primary\">{__(\"Next\", \"pds-blocks\")}</button> \r\n                        <span className=\"fs-14 weight-medium\">{this.state.icons_page}/{Object.keys(this.state.icons_pages).length}</span>\r\n                        <button onClick={travelingButton} type=\"button\" data-travel=\"previous\" className=\"btn tiny fs-12 radius-sm gray\">{__(\"Previous\", \"pds-blocks\")}</button> \r\n                    </div>\r\n                    {/*===> // Pagination <===*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixInput extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Force Render when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value,  onChange, className, placeholder } = this.props;\r\n        const uniqueKey = `pds-input`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            if (this.props.value !== event.target.value) return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {\r\n            onBlur: setValue,\r\n            type: type || \"text\",\r\n            defaultValue: value || \"\",\r\n            placeholder: placeholder || label || \"\",\r\n        };\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n            {/*===> Control Element <===*/}\r\n            <input name={name} className={`form-control ${size ? size : \"small\"} radius-md ${className ? className : \"\"}`} {...attributes}/>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseFloat(min) || 0,\r\n                  maxNum  = parseFloat(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseFloat(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseFloat(max) || 9999999,\r\n                step    = steps ? parseFloat(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseFloat(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React, { useState, useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixSelect = (props) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> initial state <===//\r\n    const [state, setState] = useState({});\r\n\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = props;\r\n    const uniqueKey = `pds-select-controller`;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = useMemo(() => {\r\n        let attrs = { onChange: setValue };\r\n        if (search) attrs['data-search'] = 1;\r\n        if (multiple) attrs.multiple = multiple;\r\n        if (placeholder) attrs['data-placeholder'] = placeholder;\r\n        return attrs;\r\n    }, [setValue, search, multiple, placeholder]);\r\n\r\n    //===> Get Options List <===//\r\n    const options_list = useMemo(() => {\r\n        let list = [];\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal List of Options <===//\r\n            options.forEach(item => {\r\n                list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            list = options;\r\n        } else {\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                list.push(options_group);\r\n            });\r\n        }\r\n        return list;\r\n    }, [options]);\r\n\r\n    //===> Render Component <===//\r\n    return <>\r\n        {/*===> Control Label <===*/}\r\n        {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n        {/*===> Control Element <===*/}\r\n        <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n            <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default PhenixSelect;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport PhenixNumber from \"../number\";\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class AnimationsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const entrance_animations = PhenixBlocks.animations.entrance;\r\n        const exit_animations = PhenixBlocks.animations.exit;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10`}>\r\n                {/*===> Animation Name <===*/}\r\n                <div className='col-12 mb-5'>\r\n                    <PhenixSelect name=\"animation-name\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Entrances Animation\", \"pds-blocks\")} value={attributes.style?.animation?.name} onChange={mainSetter} options={entrance_animations} />\r\n                </div>\r\n                {attributes.style?.animation?.hasExit ?\r\n                    <div className='col-12 mb-5'>\r\n                        <PhenixSelect name=\"exit\" className=\"mb-15\" placeholder={__(\"None\", \"pds-blocks\")} search={true} label={__(\"Exit Animation\", \"pds-blocks\")} value={attributes.style?.animation?.exit} onChange={mainSetter} options={exit_animations} />\r\n                    </div>\r\n                :null}\r\n                {!attributes.style?.animation?.group ? <>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-duration\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.style?.animation?.duration || 1000} onChange={mainSetter} min={0} max={15000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-delay\" label={__(\"Delay\", \"pds-blocks\")} value={attributes.style?.animation?.delay || 0} onChange={mainSetter} min={0} max={3000} steps={100}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-offset\" label={__(\"Offset\", \"pds-blocks\")} value={attributes.style?.animation?.offset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 col mb-10'>\r\n                        <PhenixNumber name=\"animation-inset\" label={__(\"Inset\", \"pds-blocks\")} value={attributes.style?.animation?.inset || 0} onChange={mainSetter} min={0} max={3000} steps={1}></PhenixNumber>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12'>\r\n                        <OptionControl name={`animation-reverse`} value=\"end\" checked={attributes.style?.animation?.reverse} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Revers Flow\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> .End Columns. <===*/}\r\n                </>: null}\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-7 col mb-10'>\r\n                    <OptionControl name={`animation-group`} value=\"boolean\" checked={attributes.style?.animation?.group} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Use as Group\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> . Columns. <===*/}\r\n                <div className='col-5 col mb-10'>\r\n                    <OptionControl name={`hasExit`} value=\"boolean\" checked={attributes.style?.animation?.hasExit} onChange={mainSetter} type='switch-checkbox' className='small'>{__(\"Has Exit\", \"pds-blocks\")}</OptionControl>\r\n                </div>\r\n                {/*===> .End Columns. <===*/}\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Component <===//\r\nexport default class BorderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter, objectSetter, setAttributes} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks;\r\n\r\n        //===> Reset border <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`border-top${screen}`]: \"\",\r\n                [`border-start${screen}`]: \"\",\r\n                [`border-end${screen}`]: \"\",\r\n                [`border-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"border-start\", \"border-end\"],\r\n                propY = [\"border-top\", \"border-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-border-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-start${screen}`]: parseInt(target.value), [`border-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-border-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`border-top${screen}`]: parseInt(target.value), [`border-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto`}>\r\n            {/*===> Other Options <===*/}\r\n            {!screen || screen !== \"\" ? <>\r\n                <div className='row gpx-15 divider-b mb-15 position-rv'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixSelect name=\"border-style\" placeholder={__(\"Style\", \"pds-blocks\")} className={`mb-10 weight-medium`} value={attributes.style['border-style']} onChange={mainSetter} options={PhenixBlocks.dataLists.styles.border_styles} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col col-6'>\r\n                        {/*===> Border Style <===*/}\r\n                        <PhenixBackground key={`border-color`}\r\n                            isSmall={true}\r\n                            colorsOnly={true}\r\n                            customOnly={true}\r\n                            onChange={(value) => objectSetter(value, \"\", \"style\", \"border-color\", attributes, setAttributes)}\r\n                            type={attributes.style['border-color']?.type || \"color\"}\r\n                            value={attributes.style['border-color']?.value || \"\"}\r\n                            rotate={attributes.style['border-color']?.rotate || null} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>:null}\r\n            <div className='position-rv'>\r\n                {/*===> Bound X <===*/}\r\n                <OptionControl key={`bound-border-x${screen}`} name={`bound-border-x${screen}`} checked={attributes.style[`bound-border-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n                {/*===> Bound Y <===*/}\r\n                <OptionControl key={`bound-border-y${screen}`} name={`bound-border-y${screen}`} checked={attributes.style[`bound-border-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                    <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n                </OptionControl>\r\n\r\n                {/*===> Top Controller <===*/}\r\n                <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-top${screen}`} name={`border-top${screen}`} onChange={setValue} value={attributes.style[`border-top${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n                {/*===> X Controls <===*/}\r\n                <div className={`flexbox align-between align-center-y mb-15`}>\r\n                    {/*===> Start Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-start${screen}`} name={`border-start${screen}`} onChange={setValue} value={attributes.style[`border-start${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                    {/*===> Reset Button <===*/}\r\n                    <button key={`reset-border${screen}`} name={`reset-border${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                    {/*===> End Button <===*/}\r\n                    <div style={{width: 100}}>\r\n                        <PhenixNumber key={`border-end${screen}`} name={`border-end${screen}`} onChange={setValue} value={attributes.style[`border-end${screen}`] || 0} min={0} max={250} steps={1} />\r\n                    </div>\r\n                </div>\r\n                {/*===> Bottom Controller <===*/}\r\n                <div className='mgx-auto' style={{width: 100}}>\r\n                    <PhenixNumber key={`border-bottom${screen}`}  name={`border-bottom${screen}`} onChange={setValue} value={attributes.style[`border-bottom${screen}`] || 0} min={0} max={250} steps={1} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\n\r\n//===> Component <===//\r\nexport default class EffectsSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter} = this.props;\r\n\r\n        //===> Define Controls Options <===//\r\n        const hover_effect = PhenixBlocks.effects.hover;\r\n        const box_shadows = PhenixBlocks.effects.shadows;\r\n        const animations_effect = PhenixBlocks.effects.animations;\r\n        const other_effects = PhenixBlocks.effects.other_effects;\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Layout Group <===*/}\r\n            <div className={`row gpx-10 gpy-15`}>\r\n                {/*===> Hover Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"hover-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Hover Effects\", \"pds-blocks\")} value={typeof(attributes.style['hover-effect']) === 'string' ? [attributes.style['hover-effect']] : attributes.style['hover-effect']} onChange={mainSetter} options={hover_effect} />\r\n                </div>\r\n                {/*===> Animation Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"animated-effect\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" search={true} multiple={true} label={__(\"Always Animated\", \"pds-blocks\")} value={typeof(attributes.style['animated-effect']) === 'string' ? [attributes.style['animated-effect']] : attributes.style['animated-effect']} onChange={mainSetter} options={animations_effect} />\r\n                </div>\r\n                {/*===> Box Shadow <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"box-shadow\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Box Shadow\", \"pds-blocks\")} value={attributes.style['box-shadow']} onChange={mainSetter} options={box_shadows} />\r\n                </div>\r\n                {/*===> Other Effects <===*/}\r\n                <div className='col col-12'>\r\n                    <PhenixSelect name=\"other-effects\" size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Other Effects\", \"pds-blocks\")} value={attributes.style['other-effects']} multiple={true} onChange={mainSetter} options={other_effects} />\r\n                </div>\r\n            </div>\r\n            {/*===> // Layout Group <===*/}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class MarginSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-margin-option`;\r\n\r\n        //===> Reset <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`mt${screen}`]: \"\",\r\n                [`ms${screen}`]: \"\",\r\n                [`me${screen}`]: \"\",\r\n                [`mb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"ms\", \"me\"],\r\n                propY = [\"mt\", \"mb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-margin-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`ms${screen}`]: parseInt(target.value), [`me${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-margin-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`mt${screen}`]: parseInt(target.value), [`mb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`margin-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-margin-x${screen}`} name={`bound-margin-x${screen}`} checked={attributes.style[`bound-margin-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-margin-y${screen}`} name={`bound-margin-y${screen}`} checked={attributes.style[`bound-margin-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`mt${screen}`} name={`mt${screen}`} onChange={setValue} value={attributes.style[`mt${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`ms${screen}`} name={`ms${screen}`} onChange={setValue} value={attributes.style[`ms${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-margin${screen}`} name={`reset-margin${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`me${screen}`} name={`me${screen}`} onChange={setValue} value={attributes.style[`me${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`mb${screen}`} name={`mb${screen}`} onChange={setValue} value={attributes.style[`mb${screen}`] || 0} min={-2500} max={2500}  steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PaddingSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-padding-option`;\r\n\r\n        //===> Reset Padding <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pdt${screen}`]: \"\",\r\n                [`pds${screen}`]: \"\",\r\n                [`pde${screen}`]: \"\",\r\n                [`pdb${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pds\", \"pde\"],\r\n                propY = [\"pdt\", \"pdb\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-padding-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pds${screen}`]: parseInt(target.value), [`pde${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-padding-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pdt${screen}`]: parseInt(target.value), [`pdb${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`padding-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-padding-x${screen}`} name={`bound-padding-x${screen}`} checked={attributes.style[`bound-padding-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-padding-y${screen}`} name={`bound-padding-y${screen}`} checked={attributes.style[`bound-padding-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n\r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pdt${screen}`} name={`pdt${screen}`} onChange={setValue} value={attributes.style[`pdt${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pds${screen}`} name={`pds${screen}`} onChange={setValue} value={attributes.style[`pds${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-padding${screen}`} name={`reset-padding${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pde${screen}`} name={`pde${screen}`} onChange={setValue} value={attributes.style[`pde${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pdb${screen}`} name={`pdb${screen}`} onChange={setValue} value={attributes.style[`pdb${screen}`] || 0} min={-5} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class PositionSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {attributes, options, mainSetter, screen, attrSetter} = this.props;\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const zindex_options = PhenixBlocks.zindex_options.map(opt => { opt.value += `${screen}`; return opt; });\r\n        const position_options = PhenixBlocks.position_options.map(opt => { opt.value += `${screen}`; return opt; });\r\n        const preset_positions = PhenixBlocks.preset_positions.map(opt => { opt.value += `${screen}`; return opt; });\r\n\r\n        //===> Reset position <===//\r\n        const reset = () => {\r\n            //==> Set Value <==//\r\n            const newAttributes = {\r\n                ...attributes.style,\r\n                [`pos-top${screen}`]: \"\",\r\n                [`pos-start${screen}`]: \"\",\r\n                [`pos-end${screen}`]: \"\",\r\n                [`pos-bottom${screen}`]: \"\"\r\n            };\r\n\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Value Setter <===//\r\n        const setValue = (target) => {\r\n            //==> Checker <===//\r\n            let newAttributes = {},\r\n                propX = [\"pos-start\", \"pos-end\"],\r\n                propY = [\"pos-top\", \"pos-bottom\"],\r\n                isX = propX.some(opt => target.getAttribute('name').includes(opt)),\r\n                isY = propY.some(opt => target.getAttribute('name').includes(opt));\r\n\r\n            //===> Correct the New Attributes <===//\r\n            if (isX) {\r\n                if (attributes.style[`bound-position-x${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-start${screen}`]: parseInt(target.value), [`pos-end${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            else if (isY) {\r\n                if (attributes.style[`bound-position-y${screen}`]) {\r\n                    newAttributes = {...attributes.style, [`pos-top${screen}`]: parseInt(target.value), [`pos-bottom${screen}`]: parseInt(target.value)};\r\n                } else {\r\n                    newAttributes = {...attributes.style, [`${target.getAttribute('name')}`]: parseInt(target.value)};\r\n                }\r\n            }\r\n\r\n            //==> Set Value <==//\r\n            attrSetter({ ...attributes, \"style\": newAttributes });\r\n        };\r\n\r\n        //===> Output <===//\r\n        return <div className={`position-controller mgx-auto position-rv`}>\r\n            {/*===> Bound X <===*/}\r\n            <OptionControl key={`bound-position-x${screen}`} name={`bound-position-x${screen}`} checked={attributes.style[`bound-position-x${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-end-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-left-right tooltip-bottom' data-title={__(\"Bound Start/End\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            {/*===> Bound Y <===*/}\r\n            <OptionControl key={`bound-position-y${screen}`} name={`bound-position-y${screen}`} checked={attributes.style[`bound-position-y${screen}`]} value={\"true\"} onChange={(target) => mainSetter(target, screen?screen:\"\")} type='button-checkbox' className=\"tiny position-ab pos-top-0 pos-start-0\">\r\n                <span className='btn bg-transparent tiny fs-15 border-1 border-dashed radius-sm border-alpha-10 square far fa-arrows-up-down tooltip-bottom' data-title={__(\"Bound Top/Bottom\", \"pds-blocks\")}></span>\r\n            </OptionControl>\r\n            \r\n            {/*===> Top Controller <===*/}\r\n            <div className='mgx-auto mb-15' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-top${screen}`} name={`pos-top${screen}`} onChange={setValue} value={attributes.style[`pos-top${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> X Controls <===*/}\r\n            <div className={`flexbox align-between align-center-y mb-15`}>\r\n                {/*===> Start Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-start${screen}`} name={`pos-start${screen}`} onChange={setValue} value={attributes.style[`pos-start${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n                {/*===> Reset Button <===*/}\r\n                <button key={`reset-position${screen}`} name={`reset-position${screen}`} onClick={reset} className='btn square far fa-redo bg-transparent tiny'></button>\r\n                {/*===> End Button <===*/}\r\n                <div style={{width: 100}}>\r\n                    <PhenixNumber key={`pos-end${screen}`} name={`pos-end${screen}`} onChange={setValue} value={attributes.style[`pos-end${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n                </div>\r\n            </div>\r\n            {/*===> Bottom Controller <===*/}\r\n            <div className='mgx-auto' style={{width: 100}}>\r\n                <PhenixNumber key={`pos-bottom${screen}`}  name={`pos-bottom${screen}`} onChange={setValue} value={attributes.style[`pos-bottom${screen}`] || 0} min={-2500} max={2500} steps={5} />\r\n            </div>\r\n            {/*===> Other Options <===*/}\r\n            <div className='col-12 pdt-10 divider-t mt-15 row gpx-15'>\r\n                <div className='mb-10 col'>\r\n                    <PhenixSelect key={`position${screen}`} name={`position${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Position Type\", \"pds-blocks\")} value={attributes.style[`position${screen}`]} onChange={mainSetter} options={position_options} />\r\n                </div>\r\n                <div className='mb-10 col col-6'>\r\n                    <PhenixSelect key={`position-index${screen}`} name={`z-index${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Index Order\", \"pds-blocks\")} value={attributes.style[`z-index${screen}`]} onChange={mainSetter} options={zindex_options} />\r\n                </div>\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`position-preset${screen}`} name={`position-preset${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Preset Position\", \"pds-blocks\")} value={attributes.style[`position-preset${screen}`]} onChange={mainSetter} options={preset_positions} />\r\n                </div>\r\n            </div>\r\n            {this.props.children ? this.props.children : null}\r\n        </div>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class SizesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.sizes_range;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Generate Width Sizes <===//\r\n        const width_list = PhenixBlocks.width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-${size}`} }),\r\n              min_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-min-${size}`} }),\r\n              max_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-max-${size}`} });\r\n\r\n        //===> Generate Height Sizes <===//\r\n        const height_list = PhenixBlocks.height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-${size.replace(\"%\", \"\")}`} }),\r\n              min_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-min-${size.replace(\"%\", \"\")}`} }),\r\n              max_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-max-${size.replace(\"%\", \"\")}`} });\r\n\r\n        //===> Add Default Option <===//\r\n        const default_option = { \"label\": __(\"Default\", \"pds-blocks\"), \"value\": \"\" };\r\n        width_list.unshift(default_option);\r\n        min_width_list.unshift(default_option);\r\n        max_width_list.unshift(default_option);\r\n        height_list.unshift(default_option);\r\n        min_height_list.unshift(default_option);\r\n        max_height_list.unshift(default_option);\r\n        \r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Width <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`width_size${screenPoint}`} name={`width_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Width Sizes\", \"pds-blocks\")} value={attributes.style[`width_size${screenPoint}`]} onChange={mainSetter} options={width_list} />\r\n                </div>\r\n                {/*===> Min Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_size${screenPoint}`} name={`min_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Width\", \"pds-blocks\")} value={attributes.style[`min_size${screenPoint}`]} onChange={mainSetter} options={min_width_list} />\r\n                </div>\r\n                {/*===> Max Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_size${screenPoint}`} name={`max_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Width\", \"pds-blocks\")} value={attributes.style[`max_size${screenPoint}`]} onChange={mainSetter} options={max_width_list} />\r\n                </div>\r\n\r\n                {/*===> Height <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`height_size${screenPoint}`} name={`height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Height Sizes\", \"pds-blocks\")} value={attributes.style[`height_size${screenPoint}`]} onChange={mainSetter} options={height_list} />\r\n                </div>\r\n                {/*===> Min Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_height_size${screenPoint}`} name={`min_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Height\", \"pds-blocks\")} value={attributes.style[`min_height_size${screenPoint}`]} onChange={mainSetter} options={min_height_list} />\r\n                </div>\r\n                {/*===> Max Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_height_size${screenPoint}`} name={`max_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Height\", \"pds-blocks\")} value={attributes.style[`max_height_size${screenPoint}`]} onChange={mainSetter} options={max_height_list} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixNumber from '../number';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixColor from '../colors/text';\r\nimport PhenixBackground from '../colors/background';\r\n\r\n//===> Options List\r\n//=> text-colors, background, support\r\n\r\n//===> Component <===//\r\nexport default class StylesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.styles;\r\n        const {attributes, options, mainSetter, colorSetter, bgOnly, objectSetter, setAttributes} = this.props;\r\n        const uniqueKey = 'x';//Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-styles-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const radius_sizes = PhenixBlocks.radius_sizes;\r\n        const support_options = PhenixBlocks.support_options;\r\n        const display_options = PhenixBlocks.display_options;\r\n        const radius_directions = PhenixBlocks.radius_directions;\r\n        const background_options = PhenixBlocks.background_options;\r\n\r\n        //====> Support Options Checker <====//\r\n        let showSupportOpts = false;\r\n        const supportedOpts = [\"enable-radius\",\"enable-position\",\"enable-display\", \"enable-marquee\"];\r\n        const SupportOpts = attributes.style?.support || [];\r\n        SupportOpts.forEach(opt => supportedOpts.includes(opt) ? showSupportOpts = true : showSupportOpts = showSupportOpts);\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Other Options <===*/}\r\n            {this.props.children ? this.props.children : null}\r\n\r\n            {/*===> Text Color <===*/}\r\n            {!options || options.includes(\"text-colors\") ?\r\n                <PhenixColor key={`px-color-${uniqueKey}`} label={__(\"Text Color\", \"pds-blocks\")} onChange={colorSetter} value={attributes.typography.color} />\r\n            : null}\r\n\r\n            {/*===> Background <===*/}\r\n            {!options || options.includes(\"background\")?<>\r\n                {/*===> Colors and Gradients <===*/}\r\n                <PhenixBackground key={`background-${uniqueKey}`}\r\n                    colorsOnly={bgOnly && bgOnly.includes('colorsOnly') ? true : false}\r\n                    onlyCG={bgOnly && bgOnly.includes('onlyCG') ? true : false}\r\n                    label={__(\"Background\", \"pds-blocks\")} onChange={mainSetter}\r\n                    type={attributes.style.background?.type || \"color\"}\r\n                    value={attributes.style.background?.value || \"\"}\r\n                    rotate={attributes.style.background?.rotate || null} \r\n                />\r\n\r\n                {/*===> Image Backgrounds <===*/}\r\n                <div className='row gpx-15 pdt-10' style={{marginTop: -10}}>\r\n                    {/*===> Overlay Options <===*/}\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixSelect className=\"border-alpha-25\" label={attributes.style.overly ?__(\"Overlay\", \"pds-blocks\"):null} key={`overly-${uniqueKey}`} name=\"overly\" placeholder={__(\"Overlay\", \"pds-blocks\")} value={attributes.style.overly} onChange={mainSetter} options={background_options.overlay} />\r\n                    </div>\r\n                    {attributes.style.overly ? <>\r\n                    <div className='col col-6 mb-10'>\r\n                        <PhenixNumber name=\"overly_opacity\" label={__(\"Overlay Opacity\", \"pds-blocks\")} value={ parseInt(attributes.style.overly_opacity) || 50} onChange={mainSetter} />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {attributes.style.overly === \"overlay-custom\" ? <>\r\n                    <div className='col-12'>\r\n                        {/*===> Colors and Gradients <===*/}\r\n                        <PhenixBackground key={`overlay-background-${uniqueKey}`}\r\n                            customOnly={true}\r\n                            label={__(\"Overlay Background\", \"pds-blocks\")}  onChange={(value) => objectSetter(value, \"\", \"style\", \"overly_bg\", attributes, setAttributes)}\r\n                            type={attributes.style.overly_bg?.type || \"color\"}\r\n                            value={attributes.style.overly_bg?.value || \"\"}\r\n                            rotate={attributes.style.overly_bg?.rotate || null} \r\n                        />\r\n                    </div>\r\n                    </>:null}\r\n\r\n                    {/*===> Image Options <===*/}\r\n                    {attributes.style.background?.type === \"image\"? <>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-size-${uniqueKey}`} name=\"bg-size\" placeholder={__(\"Size\", \"pds-blocks\")} value={attributes.style['bg-size']} onChange={mainSetter} options={background_options.sizes} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-position-${uniqueKey}`} name=\"bg-position\" placeholder={__(\"Position\", \"pds-blocks\")} value={attributes.style['bg-position']} onChange={mainSetter} options={background_options.positions} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6 mb-10'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-repeat-${uniqueKey}`} name=\"bg-repeat\" placeholder={__(\"Repeat\", \"pds-blocks\")} value={attributes.style['bg-repeat']} onChange={mainSetter} options={background_options.repeat} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col col-6'>\r\n                            <PhenixSelect className=\"border-alpha-25\" key={`bg-animation-${uniqueKey}`} name=\"bg-animation\" placeholder={__(\"Animation\", \"pds-blocks\")} value={attributes.style['bg-animation']} onChange={mainSetter} options={background_options.animations} />\r\n                        </div>\r\n                        {/*===> Column <===*/}\r\n                        <div className='col-12'>\r\n                            <OptionControl key={`parallax-${uniqueKey}`} name={`parallax`} value=\"bg-parallax\" checked={attributes.style.parallax || false} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='switch-checkbox' className='small'>{__(\"Parallax BG\", \"pds-blocks\")}</OptionControl>\r\n                        </div>\r\n                    </>:null}\r\n                </div>\r\n            </>:null}\r\n\r\n            {/*===> Support <===*/}\r\n            {!options || options.includes(\"support\") ? <>\r\n                <div className={`col-12 ${showSupportOpts === true?\"mb-20\":\"mb-10\"}`}>\r\n                    <PhenixSelect name=\"support\" placeholder={__(\"add..\", \"pds-blocks\")} search={true} label={__(\"Style Properties\", \"pds-blocks\")} value={attributes.style.support} onChange={mainSetter} options={support_options} multiple={true} className=\"stacked-options\" />\r\n                </div>\r\n                {/*===> Additional Styles <===*/}\r\n                {showSupportOpts === true ? <>\r\n                    <div className={`row gpx-15 gpy-15`}>\r\n                        {/*===> Border Radius <===*/}\r\n                        {attributes.style.support?.includes('enable-radius') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-${uniqueKey}`} name=\"radius\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Radius Size\", \"pds-blocks\")} value={attributes.style.radius} onChange={mainSetter} options={radius_sizes} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`radius-direction-${uniqueKey}`} name=\"radius-direction\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Radius Direction\", \"pds-blocks\")} value={attributes.style['radius-direction']} onChange={mainSetter} options={radius_directions} />\r\n                            </div>\r\n                        </> : null}\r\n\r\n                        {/*===> Display <===*/}\r\n                        {attributes.style.support?.includes('enable-display') ? <>\r\n                            <div className='col-12'>\r\n                                <PhenixSelect name=\"display\" placeholder={__(\"Default\", \"pds-blocks\")} search={true} label={__(\"Responsive Display\", \"pds-blocks\")} value={attributes.style.display} onChange={mainSetter} options={display_options} multiple={true} className=\"stacked-options\" />\r\n                            </div>\r\n                        </>: null}\r\n\r\n                        {/*===> Marquee Slider <===*/}\r\n                        {attributes.style.support?.includes('enable-marquee') ? <>\r\n                            <div className='col col-6'>\r\n                                <PhenixSelect key={`marquee-${uniqueKey}`} name=\"marquee\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Marquee Direction\", \"pds-blocks\")} value={attributes.style.marquee} onChange={mainSetter} options={[\r\n                                    { label: __(\"None\", \"pds-blocks\"), value: '' },\r\n                                    { label: __(\"Marquee Left\", \"pds-blocks\"), value: 'px-marquee' },\r\n                                    { label: __(\"Marquee Right\", \"pds-blocks\"), value: 'px-marquee-reverse' },\r\n                                ]} />\r\n                            </div>\r\n                            <div className='col col-6'>\r\n                                <label className='tx-capitalize fs-13'>{__(\"Speed\", \"pds-blocks\")}</label>\r\n                                <PhenixNumber key={`marquee-speed`} name={`marquee-speed`} onChange={mainSetter} value={attributes.style[`marquee-speed`] || 15} min={5} />\r\n                            </div>\r\n                        </> : null}\r\n                    </div>\r\n                </>:null}\r\n            </>: null}\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from '../number';\r\n\r\n//===> Options List\r\n//=> align, size, weight\r\n\r\n//===> Component <===//\r\nexport default class TypographySet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists;\r\n        const {attributes, options, mainSetter, exclude, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Options Lists <===//\r\n        const font_weights = PhenixBlocks.typography.weights;\r\n        const font_lineheight = PhenixBlocks.typography.lineheight;\r\n        const text_shadows = PhenixBlocks.typography.shadows;\r\n        const font_families = PhenixBlocks.typography.families;\r\n\r\n        //===> Define Controls Options <===//\r\n        const sizes_list = [{ \"label\": \"Default\",  \"value\": \"\"}],\r\n              display_sizes = [];\r\n\r\n        //===> Generate Responsive Sizes <===//\r\n        PhenixBlocks.sizes_range.font_sizes.map(size => {\r\n            //===> Normal Size <===//\r\n            if (typeof(size) === \"number\") {\r\n                sizes_list.push({\"label\": size, \"value\": `fs${screenPoint}-${size}`});\r\n            } else {\r\n                sizes_list.push({\"label\": `H${size.replace('h', '')}`, \"value\": `${size}${screenPoint}`});\r\n                display_sizes.push({\"label\": `DH${size.replace('h', '')}`, \"value\": `display${screenPoint}-${size}`});\r\n            }\r\n        });\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Size Only <===*/}\r\n            {options && options.includes(\"size\") ? <>\r\n                {/*===> Size <===*/}\r\n                <PhenixSelect key={`font-size${screenPoint}`} className=\"mb-15\" name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n            </> : null}\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Family <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`family`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Family\", \"pds-blocks\")} value={attributes.typography[`family`]} onChange={mainSetter} options={font_families} />\r\n                </div>\r\n                {/*===> Size <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name={`size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Size\", \"pds-blocks\")} value={attributes.typography[`size${screenPoint}`]} onChange={mainSetter} options={[...sizes_list, ...display_sizes]} search={true} />\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"weight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Font Weight\", \"pds-blocks\")} value={attributes.typography.weight} onChange={mainSetter} options={font_weights}/>\r\n                </div>\r\n                {/*===> Weight <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"lineheight\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Line Height\", \"pds-blocks\")} value={attributes.typography.lineheight} onChange={mainSetter} options={font_lineheight}/>\r\n                </div>\r\n                {/*===> Shadow <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect name=\"text-shadow\" placeholder={__(\"None\", \"pds-blocks\")} label={__(\"Text Shadow\", \"pds-blocks\")} value={attributes.style['text-shadow']} onChange={mainSetter} options={text_shadows} />\r\n                </div>\r\n                {/*===> Margin for List Items <===*/}\r\n                {attributes.type?.includes('list-') || attributes.type === \"list\" ? <>\r\n                <div className='col col-6'>\r\n                    <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.typography[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                </div>\r\n                </> :null}\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n            {/*===> Alignment Options <===*/}\r\n            {exclude && exclude.includes(\"align\") ? null : <>\r\n                {!options || options.includes(\"align\") ? <>\r\n                    {/*===> Label <===*/}\r\n                    <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Alignment\", \"pds-blocks\")}</label>\r\n                    {/*===> Elements Group <===*/}\r\n                    <div className='flexbox mb-15'>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={!attributes.typography[`align${screenPoint}`] || attributes.typography[`align${screenPoint}`] === \"\"} value={\"\"} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className='btn small square outline gray far fa-align-slash radius-sm'></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-start` ? true : false} value={`tx-align${screenPoint}-start`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"ltr\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-justify` ? true : false} value={`tx-align${screenPoint}-justify`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-justify radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-center` ? true : false} value={`tx-align${screenPoint}-center`} onChange={mainSetter} type='button-radio' className='small me-5'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-center radius-sm`}></span>\r\n                        </OptionControl>\r\n                        {/*===> Switch Button <===*/}\r\n                        <OptionControl name={`align${screenPoint}`} checked={attributes.typography[`align${screenPoint}`] === `tx-align${screenPoint}-end` ? true : false} value={`tx-align${screenPoint}-end`} onChange={mainSetter} type='button-radio' className='small'>\r\n                            <span className={`btn small square outline gray fs-17 far fa-align-${Phenix(document).direction() === \"rtl\" ? 'left' : \"right\"} radius-sm`}></span>\r\n                        </OptionControl>\r\n                    </div>\r\n                </>: null}\r\n            </>}\r\n            {!options || options.includes(\"styles\") ? <>\r\n                {/*===> Style Options <===*/}\r\n                <label className={`col-12 mb-5 tx-UpperCase fs-13`}>{__(\"Text Style\", \"pds-blocks\")}</label>\r\n                {/*===> Elements Group <===*/}\r\n                <div className='flexbox gpy-10'>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-capitalize`} checked={attributes.typography[`tx-capitalize`]} value={\"tx-capitalize\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-font-case radius-sm' data-title={__(\"Capitalize\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-uppercase`} checked={attributes.typography[`tx-uppercase`]} value={\"tx-uppercase\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-text radius-sm' data-title={__(\"Uppercase\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-underline`} checked={attributes.typography[`tx-underline`]} value={\"tx-underline\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-underline radius-sm' data-title={__(\"Underline\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-line-through`} checked={attributes.typography[`tx-line-through`]} value={\"tx-line-through\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-strikethrough radius-sm' data-title={__(\"Strikethrough\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"ltr\"} value={\"ltr\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph radius-sm' data-title={__(\"LTR\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-direction`} checked={attributes.typography[`tx-direction`] === \"rtl\"} value={\"rtl\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-paragraph-rtl radius-sm' data-title={__(\"RTL\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`tx-nowrap`} checked={attributes.typography[`tx-nowrap`]} value={\"tx-nowrap\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-ellipsis-h radius-sm' data-title={__(\"Nowrap\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`bg-clip-text`} checked={attributes.typography[`bg-clip-text`]} value={\"bg-clip-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-box-heart radius-sm' data-title={__(\"Clip Text\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    {/* <OptionControl name={`colored-word`} checked={attributes.typography[`colored-word`]} value={\"colored-word\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-tint radius-sm' data-title={__(\"Colored Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl> */}\r\n                    {/*===> Switch Button <===*/}\r\n                    {/* <OptionControl name={`gradient-text`} checked={attributes.typography[`gradient-text`]} value={\"gradient-text\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-brush radius-sm' data-title={__(\"Gradient Words\",\"pds-blocks\")}></span>\r\n                    </OptionControl> */}\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl name={`animated-num`} checked={attributes.typography[`animated-num`]} value={\"px-counter\"} onChange={mainSetter} type='button-checkbox' className='small me-5'>\r\n                        <span className='btn small square tooltip-bottom outline gray fas fa-sort-numeric-up-alt radius-sm' data-title={__(\"Animated Number\",\"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </>: null}\r\n        </>\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, value, checked, onChange, children, required, className} = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useState } from 'react';\r\n\r\n//===> Phenix Background <===//\r\nexport default function ScreensTabs(props) {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {MediaUpload} from '@wordpress/block-editor';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class MediaUploader extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const { label, value, size, type, setValue, className } = this.props;\r\n        const largeImage = (src) => <img src={src} className=\"radius-sm radius-top\" style={{\"maxWidth\": \"100%\", \"display\": \"block\"}} /> ;\r\n        const smallImage = (src) => <img src={src} style={{\"maxHeight\": \"1.5rem\"}} />;\r\n        const largePlaceholder = \"https://placehold.co/600x400/1c1c1c/CCC?text=Change%20Source\";\r\n        const smallPlaceholder = \"https://placehold.co/200x75/1c1c1c/CCC?text=Change%20Source\";\r\n\r\n        //===> Output <===//\r\n        return (<>\r\n            <MediaUpload onSelect={ setValue } value={value} render={({open}) => (\r\n                    <div className=\"mouse-pointer\" onClick={open}>\r\n                        {/* label */}\r\n                        {label ? <label className=\"mb-5\">{label}</label> : ''}\r\n                        {/* elements group */}\r\n                        <div className={`${className ? `${className}` : \"\"} mouse-no-events`}>\r\n                            {size === 'small' ?\r\n                                <div className='flexbox align-center-y align-between pd-5 border-solid border-1 border-alpha-15 radius-sm'>\r\n                                    {!type || type === 'image' ? smallImage(value || smallPlaceholder) : smallImage(smallPlaceholder)}\r\n                                    <span key=\"change-media\" className=\"btn square primary tiny radius-sm fs-12 fas fa-upload\"></span>\r\n                                </div>\r\n                                :\r\n                                <div className='flexbox align-center-y align-between'>\r\n                                    {!type || type === 'image' ? largeImage(value || largePlaceholder) : largeImage(largePlaceholder)}\r\n                                    <span key=\"change-media\" className=\"btn fluid primary small radius-sm radius-bottom fs-13 far fa-camera btn-icon\">Select File</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* //elements group */}\r\n                    </div>\r\n                )}\r\n            />\r\n        </>\r\n        )\r\n    }\r\n}","//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport {PanelBody, ToolbarGroup} from '@wordpress/components';\r\nimport {RichText, BlockControls, InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport PhenixIcons from '../px-controls/icons';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixInput from '../px-controls/input';\r\nimport OptionControl from '../px-controls/switch';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport SizesSet from '../px-controls/sets/sizes';\r\nimport PaddingSet from '../px-controls/sets/padding';\r\nimport MarginSet from '../px-controls/sets/margin';\r\nimport PositionSet from '../px-controls/sets/position';\r\nimport StylesSet from '../px-controls/sets/styles';\r\nimport TypographySet from '../px-controls/sets/typography';\r\nimport AnimationsSet from '../px-controls/sets/animations';\r\nimport EffectsSet from '../px-controls/sets/effects';\r\nimport BorderSet from '../px-controls/sets/border';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes, clientId }) {\r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n    const OptionsRenderer = PhenixBlocks.OptionsRenderer;\r\n\r\n    //===> Value Handler <===//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_content = content => setAttributes({ content });\r\n\r\n    //==> Set Object Attributes Methods <==//\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_icon = value => PhenixBlocks.setObject(`${value.type} ${value.value}`, \"\", \"style\", \"icon\", attributes, setAttributes);\r\n    const set_typography = (target, screen) => PhenixBlocks.setObject(target, screen, \"typography\", false, attributes, setAttributes);\r\n\r\n    //===> Get Block Properties <===//\r\n    const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps()});\r\n    const blockProps = renderProps.blockProps;\r\n    const uniqueKey = blockProps.id;\r\n    const TagName = attributes.tagName;\r\n\r\n    //===> Layout Options <===//\r\n    blockProps.className += `${renderProps.container.className}`;\r\n\r\n    //===> Block Accessibility <===//\r\n    const blockAccessibility = (event) => PhenixBlocks.blockAccessibility(event, clientId, { ...attributes, content: '' }, attributes.content, attributes);\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Style Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-adjust divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"text-colors, background\" />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Typography Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-font divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"pds-typography\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <TypographySet key={`typography-${uniqueKey}`} attributes={attributes} mainSetter={set_typography} />}\r\n                            md={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                            lg={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                            xl={(screen) => <TypographySet screen={screen} attributes={attributes} mainSetter={set_typography} options=\"size, align\" />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Sizes Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-maximize divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-320\" >\r\n                    <li key=\"sizes\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <SizesSet attributes={attributes} mainSetter={set_style} />}\r\n                            md={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            lg={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            xl={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n                {/*===> Icon Control <===*/}\r\n                {!attributes.style?.hasIcon ? \r\n                    <OptionControl key={`hasIcon-${uniqueKey}`} name={`hasIcon`} value={`boolean`} checked={attributes.style?.hasIcon} onChange={set_style} type='button-checkbox' className='inline-block divider-e border-alpha-25'>\r\n                        <span className='btn bg-transparent fs-16 square tooltip-bottom far fa-icons h-min-100' style={{paddingTop: 2}} data-title={__(\"Add Icon\", \"pds-blocks\")}></span>\r\n                    </OptionControl>\r\n                :\r\n                    <PxDropDown title={__(\"Text Icon\", \"pds-blocks\")} button={`bg-transparent fs-16 square ${attributes.style?.icon || \"far fa-icons\"} divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"icons\" className='pdx-10 pdt-5'>\r\n                            {/*===> Icon Selector <===*/}\r\n                            <PhenixIcons key={`icon-${uniqueKey}`} value={ attributes.style?.icon || \"far fa-icons\" } onChange={set_icon} />\r\n                            {/*===> Option Control <===*/}\r\n                            <OptionControl key={`icon-large-${uniqueKey}`} name={`icon-large`} value=\"icon-lg\" checked={attributes.style['icon-large'] || false} onChange={set_style} type='switch-checkbox' className='tiny mt-5'>{__(\"Large icon\", \"pds-blocks\")}</OptionControl>\r\n                            {/*===> Disable Button <===*/}\r\n                            <div className='fluid' style={{paddingBottom: 3}}>\r\n                                <OptionControl key={`hasIcon-${uniqueKey}`} name={`hasIcon`} value={`boolean`} checked={attributes.style?.hasIcon} onChange={set_style} type='checkbox' className='tiny fluid align-center-x divider-t mt-5'>\r\n                                    <span className='btn small fluid bg-transparent fs-12 color-danger'>{__(\"Remove Icon\", \"pds-blocks\")}</span>\r\n                                </OptionControl>\r\n                            </div>\r\n                        </li>\r\n                    </PxDropDown>\r\n                }\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-animations') ?\r\n                    <PxDropDown title={__(\"Animation Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-atom-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-animations\" className='pdt-15 pdx-15 lineheight-150'>\r\n                            {/*===> Animations <===*/}\r\n                            <AnimationsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-padding') ?\r\n                    <PxDropDown title={__(\"Padding Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-outer divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-padding\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PaddingSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-margin') ?\r\n                    <PxDropDown title={__(\"Margin Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square fal fa-arrows-alt divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <MarginSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-position') ?\r\n                    <PxDropDown title={__(\"Position Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-to-dot divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <ScreensTabs\r\n                                sm={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <PositionSet attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-border') ?\r\n                    <PxDropDown title={__(\"Border Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-border-all divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            {/*===> Border Size <===*/}\r\n                            <ScreensTabs\r\n                                sm={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen=\"\" mainSetter={target => set_style(target, \"\")} />}\r\n                                md={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                lg={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                                xl={(screen) => <BorderSet setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} attributes={attributes} attrSetter={setAttributes} screen={`-${screen}`} mainSetter={target => set_style(target, \"\")} />}\r\n                            />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.style?.support?.includes('enable-effects') ?\r\n                    <PxDropDown title={__(\"Effects Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-backpack divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                        <li key=\"pds-margin\" className='pdy-15 pdx-15 lineheight-150'>\r\n                            <EffectsSet attributes={attributes} mainSetter={set_style} />\r\n                        </li>\r\n                    </PxDropDown>\r\n                :null}\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/*====> Controls Layout <====*/}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"General Settings\" initialOpen={true}>\r\n                {/*=== Form Control  ===*/}\r\n                <PhenixInput className=\"mb-15\" name=\"id\" label={__(\"HTML ID [Anchor]\", \"pds-blocks\")} value={ attributes.id } onChange={set_value} />\r\n                {/*===> Styles Options <===*/}\r\n                <StylesSet key={`styles-${uniqueKey}`} attributes={attributes} setAttributes={setAttributes} objectSetter={PhenixBlocks.setObject} mainSetter={set_style} colorSetter={set_typography} options=\"support\" />\r\n            </PanelBody>\r\n        </InspectorControls>\r\n\r\n        {/*====> Edit Layout <====*/}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> :\r\n            <RichText {...blockProps} onReplace={() => {}} splitting={\"\"} onKeyDown={blockAccessibility} key={`${uniqueKey}`} tagName={TagName} value={attributes.content} onChange={set_content} placeholder={__(\"Enter Content\", \"pds-blocks\")} />\r\n        }\r\n    </>);\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Modules <===//\r\nimport Edit from './edit';\r\nimport {__} from '@wordpress/i18n';\r\nimport metadata from './block.json';\r\nimport {registerBlockType} from '@wordpress/blocks';\r\nimport {RichText, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Attributes Renderers <====//\r\nconst OptionsRenderer = window.PhenixBlocks.OptionsRenderer;\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg viewBox=\"0 0 24 24\"><path fill=\"#1E252B\" d=\"M0,0v2.2h24V0H0z M12,12.8h12v-2.2H12V12.8z M0,24h24v-2.2H0V24z M6,12c0-1.7-1.4-3-3-3s-3,1.3-3,3s1.4,3,3,3\tS6,13.7,6,12z\" /></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const renderProps = OptionsRenderer({attributes: attributes, blockProps: useBlockProps.save(), isSave: true});\r\n        const blockProps = renderProps.blockProps;\r\n        const TagName = attributes.tagName;\r\n\r\n        //===> Layout Options <===//\r\n        blockProps.className += `${renderProps.container.className}`;\r\n\r\n        //===> Render <===//\r\n        return (<RichText.Content {...blockProps} tagName={TagName} value={attributes.content} />);\r\n    }\r\n});"],"names":["props","PhenixBlocks","useMemo","window","dataLists","type","value","label","rotate","colorsOnly","onlyCG","isSmall","placeholder","onChange","customOnly","cover","setting","wp","data","select","getSettings","editorColors","color","customColorsList","list","palette","default","forEach","push","slug","custom","customGradientsList","gradients","gradient","options","set_type","setBackground","clicked","button","target","getAttribute","url","makeButtons","classes","output","index","length","name","title","isColor","includes","replace","replaceAll","c","toUpperCase","buttonAttributes","backgroundColor","backgroundImage","createElement","className","onClick","wrapper","Phenix","ancestor","panel","querySelector","toggleClass","fadeToggle","Fragment","style","__","PhenixSelect","key","gap","maxHeight","MediaUploader","size","setValue","main","components","darkAlpha","lightAlpha","status","colors","offwhite","brands","_","set_rotate","pxPallete","paletteText","setColor","width","height","next","social","PxDropDown","support","dropList","children","dataPosition","useEffect","componentsBuilder","attributes","PhenixIcons","Component","state","icons_page","icon_type","icon_name","icons_file","icons_list","icons_pages","icons_types","icons_version","return_type","reRender","apiFetch","path","then","this","pds_icon_font","icon_value","split","fetch","PDS_WP_KEY","json","res","icons","item","pageNumber","Math","floor","slice","setState","componentDidMount","componentDidUpdate","render","version","set_value","theValue","travelingButton","event","travelType","Object","keys","changed","input","searchedList","filter","icon","buttonsList","buttonsStyle","buttonItem","PhenixInput","shouldComponentUpdate","nextProps","nextState","onBlur","defaultValue","marginBottom","PhenixNumber","min","max","steps","DecreaseNum","minNum","parseFloat","step","newVal","maxNum","checkVal","useState","multiple","search","useCallback","attrs","options_list","Array","isArray","entries","group_list","options_group","AnimationsSet","mainSetter","entrance_animations","animations","entrance","exit_animations","exit","animation","hasExit","group","duration","delay","offset","inset","OptionControl","checked","reverse","BorderSet","screen","attrSetter","objectSetter","setAttributes","newAttributes","isX","some","opt","isY","parseInt","styles","border_styles","PhenixBackground","reset","EffectsSet","hover_effect","effects","hover","box_shadows","shadows","animations_effect","other_effects","MarginSet","Date","now","toString","random","substr","PaddingSet","PositionSet","zindex_options","map","position_options","preset_positions","SizesSet","sizes_range","screenPoint","width_list","width_range","min_width_list","max_width_range","max_width_list","height_list","height_range","min_height_list","max_height_range","max_height_list","default_option","unshift","StylesSet","colorSetter","bgOnly","uniqueKey","radius_sizes","support_options","display_options","radius_directions","background_options","showSupportOpts","supportedOpts","PhenixColor","typography","background","marginTop","overly","overlay","overly_opacity","overly_bg","sizes","positions","repeat","parallax","radius","display","marquee","TypographySet","exclude","font_weights","weights","font_lineheight","lineheight","text_shadows","font_families","families","sizes_list","display_sizes","font_sizes","weight","document","direction","required","defaultChecked","ScreensTabs","setScreen","sm","buttons","opts","md","lg","xl","largePlaceholder","smallPlaceholder","MediaUpload","onSelect","open","src","largeImage","Edit","clientId","OptionsRenderer","set_style","setObject","set_typography","renderProps","blockProps","useBlockProps","id","TagName","tagName","container","BlockControls","ToolbarGroup","hasIcon","paddingBottom","paddingTop","InspectorControls","PanelBody","initialOpen","preview","PreviewImage","alt","RichText","onReplace","splitting","onKeyDown","blockAccessibility","content","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","metadata","viewBox","fill","edit","save","isSave","Content"],"sourceRoot":""}