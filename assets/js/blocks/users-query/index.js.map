{"version":3,"file":"blocks/users-query/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/px-controls/alignment.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/input.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select-data.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/flexbox.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/sizes.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/slider.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/users-query/edit.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/external window [\"wp\",\"serverSideRender\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/users-query/index.js"],"sourcesContent":["/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> Media Uploader <===//\r\nexport default class FlexAlignment extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, onChange, screen, blockKey} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n        const uniqueKey = `${blockKey ? blockKey+\"-\" : \"\"}align-${screenPoint}-options`;\r\n\r\n        const set_alignment = (target) => {\r\n            //====> Cleanup Empty Space and Split the Value <====/\r\n            const options = value.trim().split(/\\s+/);\r\n\r\n            //====> Define alignment <====//\r\n            const xAlignments = [`${screenPoint}-x-start`, `${screenPoint}-x-end`, `${screenPoint}-x-between`, `${screenPoint}-x-around`, `${screenPoint}-x-center`];\r\n            const yAlignments = [`${screenPoint}-y-start`, `${screenPoint}-y-end`, `${screenPoint}-y-center`];\r\n            const allAlignments = [...xAlignments, ...yAlignments];\r\n\r\n            //====> Extract alignment type from target attribute <====//\r\n            const targetType = target.getAttribute('name').match(/-x$/) ? 'x' : 'y';\r\n          \r\n            //====> Check if any option has the same type as target <====//\r\n            const hasOption = options.some(option => allAlignments.includes(option));\r\n          \r\n            //====> Modify value based on conditions <====//\r\n            let modifiedValue = options;\r\n            if (hasOption && targetType === extractType(options)) {\r\n              modifiedValue = options.map(option => option === extractType(options) ? target.value : option);\r\n            } else {\r\n              modifiedValue.push(target.value);\r\n            }\r\n          \r\n            //====> Join modified options and return <====//\r\n            return onChange(modifiedValue.join(' '));\r\n        },\r\n\r\n        extractType = (options) => options.find(option => xAlignments.includes(option) || yAlignments.includes(option)),\r\n\r\n        //===> Reset Value Method <===//\r\n        reset_align = (clicked) => onChange(\"align-reset\");\r\n\r\n        //===> Output <===//\r\n        return (<div className='components-flex-item flex-alignment-btns' key={uniqueKey}>\r\n            {/*===> Label <===*/}\r\n            <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n                <label className='fs-13 weight-bold'>{label}</label>\r\n                <button type=\"button\" key={`reset-btn${screenPoint}`} data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"flexbox align-between mb-15\"}>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-start-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-start-x`)} value={`align${screenPoint}-start-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-center-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-center-x`)} value={`align${screenPoint}-center-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-between`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-between`)} value={`align${screenPoint}-between`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-around`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-around`)} value={`align${screenPoint}-around`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-end-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-end-x`)} value={`align${screenPoint}-end-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-start-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-start-y`)} value={`align${screenPoint}-start-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-center-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-center-y`)} value={`align${screenPoint}-center-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-end-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-end-y`)} value={`align${screenPoint}-end-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","import React, { useEffect, Fragment } from '@wordpress/element';\r\n\r\nconst PxDropDown = ({\r\n    label,\r\n    button,\r\n    support,\r\n    dropList,\r\n    children,\r\n    className,\r\n    dataPosition,\r\n    title,\r\n    key\r\n}) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> Component Attributes <===\\\\\r\n    const attributes = {};\r\n\r\n    //===> Component Classes <===\\\\\r\n    if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n    if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n    if (key) attributes.key = key;\r\n\r\n    //===> Component Render <===\\\\\r\n    return (\r\n        <Fragment>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PxDropDown;","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixInput extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Force Render when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value,  onChange, className, placeholder } = this.props;\r\n        const uniqueKey = `pds-input`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            if (this.props.value !== event.target.value) return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {\r\n            onBlur: setValue,\r\n            type: type || \"text\",\r\n            defaultValue: value || \"\",\r\n            placeholder: placeholder || label || \"\",\r\n        };\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n            {/*===> Control Element <===*/}\r\n            <input name={name} className={`form-control ${size ? size : \"small\"} radius-md ${className ? className : \"\"}`} {...attributes}/>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseFloat(min) || 0,\r\n                  maxNum  = parseFloat(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseFloat(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseFloat(max) || 9999999,\r\n                step    = steps ? parseFloat(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseFloat(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport React, { useState, useMemo, useEffect, useCallback, Component } from '@wordpress/element';\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class SelectFromData extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        dataFetched: 0,\r\n        options: [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}],\r\n    };\r\n\r\n    //===> Component Rendered Hook <===//\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        if(this.state.options.length < 2) {\r\n            //===> for PDS Menu Locations <===//\r\n            if (this.props.options === \"menu-locations\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                        locations = options.menu_locations,\r\n                        new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n        \r\n                    //===> add Locations to a List <===//\r\n                    for (const [key, item] of Object.entries(locations)) {\r\n                        new_options_list.push({label: item.title, value: item.name});\r\n                    }\r\n    \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for taxonomies <====//\r\n            else if (this.props.options === \"taxonomies\") {\r\n                //===> Fetch Taxonomies <===//\r\n                apiFetch({path: 'wp/v2/taxonomies'}).then(taxonomies => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n\r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(taxonomies)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        let isCoreType = false;\r\n                        ['nav_menu', 'wp_pattern'].forEach(keyword => key.includes(keyword) ? isCoreType = true : null);\r\n                        //===> If not Core Type Added it <===//\r\n                        if (!isCoreType) new_options_list.push({\"value\":key, \"label\":value.name});\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for taxonomies Terms <====//\r\n            if (this.props.options === \"taxonomies-terms\") {\r\n                //===> Fetch Taxonomies <===//\r\n                apiFetch({path: `wp/v2/${this.props.termType === \"category\" ? \"categories\" : this.props.termType}`}).then(terms => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n\r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(terms)) {\r\n                        new_options_list.push({\"value\": value.id, \"label\": value.name});\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for Post-Types <====//\r\n            else if (this.props.options === \"post-types\") {\r\n                //===> Fetch Post Types <===//\r\n                apiFetch({path: 'wp/v2/types'}).then(post_types => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n            \r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(post_types)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        let isCoreType = false;\r\n                        ['attachment','nav_menu_item','wp_block','wp_navigation','wp_template','wp_template_part','wp_font'].forEach(keyword => key.includes(keyword) ? isCoreType = true : null);\r\n                        //===> If not Core Type Added it <===//\r\n                        if (!isCoreType) new_options_list.push({\"value\":key, \"label\":value.name});\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n\r\n                });\r\n            }\r\n            //====> for Users-Roles <====//\r\n            else if (this.props.options === \"users-roles\") {\r\n                //===> Fetch Roles <===//\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n            \r\n                    //===> Get Current Roles <===//\r\n                    for (const [key, value] of Object.entries(options.users_roles)) {\r\n                        new_options_list.push({\"value\": value.name, \"label\": value.name});\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for Template-Parts <====//\r\n            else if (this.props.options === \"template-parts\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                          template_parts = options.theme_parts,\r\n                          new_options_list = [];\r\n\r\n                    //===> Loop Through Theme-Parts <===//\r\n                    if(template_parts) {\r\n                        Object.entries(template_parts).forEach(([key, value]) => {\r\n                            //===> if its direct theme-part <===//\r\n                            if(typeof(value) === 'string') {\r\n                                new_options_list.push(<option key={`${value}`} value={value.replace(\".php\", \"\")}>{value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}</option>);\r\n                            }\r\n                            //===> if its nested theme-part in a directory <===//\r\n                            else {\r\n                                //===> Define Directory Files <===//\r\n                                let files_list = [];\r\n                                //===> Loop Through Files <===//\r\n                                Object.entries(value).forEach(([key2, value]) => {\r\n                                    //===> add the file to the list <===//\r\n                                    files_list.push(<option key={`${key}-${value}`} value={`${key}/${value.replace(\".php\", \"\")}`}>{`${value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}`}</option>);\r\n                                });\r\n                                //===> Push the Options Group <===//\r\n                                new_options_list.push(<optgroup key={`${key}-group`} label={`${key}`}>{files_list}</optgroup>);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {options, name, type, size, label, value, multiple, valueSetter, className, search, termType } = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Render Component <===//\r\n        return <PhenixSelect key={this.state.dataFetched} type={type} options={this.state.options} multiple={multiple} name={name} placeholder={__(\"Default\", \"pds-blocks\")} label={label} value={value} onChange={valueSetter} className={className} search={search} size={size} />\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React, { useState, useMemo, useEffect, useCallback } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nconst PhenixSelect = (props) => {\r\n    //===> Component View Script Function <===\\\\\r\n    useEffect(() => {\r\n        window.PhenixBlocks.componentsBuilder();\r\n    }, []);\r\n\r\n    //===> initial state <===//\r\n    const [state, setState] = useState({});\r\n\r\n    //===> Properties <===//\r\n    const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = props;\r\n    const uniqueKey = `pds-select-controller`;\r\n\r\n    //===> Change Value <===//\r\n    const setValue = useCallback((event) => {\r\n        return onChange(event.target);\r\n    }, [onChange]);\r\n\r\n    //===> Define Element Attributes <===//\r\n    const attributes = useMemo(() => {\r\n        let attrs = { onChange: setValue };\r\n        if (search) attrs['data-search'] = 1;\r\n        if (multiple) attrs.multiple = multiple;\r\n        if (placeholder) attrs['data-placeholder'] = placeholder;\r\n        return attrs;\r\n    }, [setValue, search, multiple, placeholder]);\r\n\r\n    //===> Get Options List <===//\r\n    const options_list = useMemo(() => {\r\n        let list = [];\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal List of Options <===//\r\n            options.forEach(item => {\r\n                list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            list = options;\r\n        } else {\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                list.push(options_group);\r\n            });\r\n        }\r\n        return list;\r\n    }, [options]);\r\n\r\n    //===> Render Component <===//\r\n    return <>\r\n        {/*===> Control Label <===*/}\r\n        {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n        {/*===> Control Element <===*/}\r\n        <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n            <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default PhenixSelect;","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport OptionControl from '../switch';\r\nimport FlexAlignment from '../alignment';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixSelect from \"../select\";\r\n\r\n//===> Options List\r\n//=> align, flex-props, grid-props\r\n\r\n//===> Component <===//\r\nexport default class FlexboxSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screenPoint}-option`;\r\n\r\n        const align_options = [\r\n            {label: \"Start\", value: `align-self${screen}-start`},\r\n            {label: \"Center\", value: `align-self${screen}-center`},\r\n            {label: \"End\", value: `align-self${screen}-end`}\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className={`row gpx-15 ${className ? className : \"\"}`} key={uniqueKey}>\r\n                {/*===> Column <===*/}\r\n                {!options || options.includes(\"align\") ? <>\r\n                    <div className='col-12 mb-15'>\r\n                        <FlexAlignment screen={screen} label={__(\"Flexbox Alignment\", \"pds-blocks\")} value={attributes.flexbox[`align${screenPoint}`] || \"\"} onChange={(target) => mainSetter(target, screen ? screen : \"\")}></FlexAlignment>\r\n                        {/*====> Self Alignment <====*/}\r\n                        {!options || options.includes('align-self') ? <>\r\n                            <PhenixSelect class=\"mt-15\" name={`align-self${screen}`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self${screen}`]} onChange={mainSetter} options={align_options} />\r\n                        </>:null}\r\n                    </div>\r\n                </>: null}\r\n                {/*===> Group <===*/}\r\n                <div className='col-12 row gpx-10 pdt-5 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} key={`gpy${screenPoint}`} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-X Space\", \"pds-blocks\")} key={`gpx${screenPoint}`} name={`gpx${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpx${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 flexbox gpy-5'>\r\n                    {/*===> Label <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <label className='col-12 mb-5 tx-UpperCase'>{__(\"Flow Options\", \"pds-blocks\")}</label> : null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <OptionControl key={`flow${screenPoint}`} name={`flow${screenPoint}`} value={!attributes.flexbox[`stacked${screenPoint}`] || attributes.flexbox[`stacked${screenPoint}`] === \"\" ? `flow${screenPoint}-reverse` : `flow${screenPoint}-columns-reverse`} checked={attributes.flexbox[`flow${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Reverse \", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`stacked${screenPoint}`} name={`stacked${screenPoint}`} value={`flow${screenPoint}-columns`} checked={attributes.flexbox[`stacked${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Stacked\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`nowrap${screenPoint}`} name={`nowrap${screenPoint}`} value={`flow${screenPoint}-nowrap`} checked={attributes.flexbox[`nowrap${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Nowrap\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider && !screen ? <OptionControl key={`equals${screenPoint}`} name={`equals${screenPoint}`} checked={attributes.flexbox.equals} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Equal Cols.\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider ? <OptionControl key={`masonry${screenPoint}`} name={`masonry${screenPoint}`} value={`px-masonry${screenPoint}`} checked={attributes.flexbox[`masonry${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Masonry\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") ?\r\n                    <OptionControl key={`gpy-fix`} name={`gpy-fix`} value={`gpy-fix`} checked={attributes.flexbox[`gpy-fix`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny col-6'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Gap Y fix\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Other Button <===*/}\r\n                    {this.props.children ? this.props.children : null}\r\n                </div>\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class SizesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.sizes_range;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Generate Width Sizes <===//\r\n        const width_list = PhenixBlocks.width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-${size}`} }),\r\n              min_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-min-${size}`} }),\r\n              max_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-max-${size}`} });\r\n\r\n        //===> Generate Height Sizes <===//\r\n        const height_list = PhenixBlocks.height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-${size.replace(\"%\", \"\")}`} }),\r\n              min_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-min-${size.replace(\"%\", \"\")}`} }),\r\n              max_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-max-${size.replace(\"%\", \"\")}`} });\r\n\r\n        //===> Add Default Option <===//\r\n        const default_option = { \"label\": __(\"Default\", \"pds-blocks\"), \"value\": \"\" };\r\n        width_list.unshift(default_option);\r\n        min_width_list.unshift(default_option);\r\n        max_width_list.unshift(default_option);\r\n        height_list.unshift(default_option);\r\n        min_height_list.unshift(default_option);\r\n        max_height_list.unshift(default_option);\r\n        \r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Width <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`width_size${screenPoint}`} name={`width_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Width Sizes\", \"pds-blocks\")} value={attributes.style[`width_size${screenPoint}`]} onChange={mainSetter} options={width_list} />\r\n                </div>\r\n                {/*===> Min Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_size${screenPoint}`} name={`min_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Width\", \"pds-blocks\")} value={attributes.style[`min_size${screenPoint}`]} onChange={mainSetter} options={min_width_list} />\r\n                </div>\r\n                {/*===> Max Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_size${screenPoint}`} name={`max_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Width\", \"pds-blocks\")} value={attributes.style[`max_size${screenPoint}`]} onChange={mainSetter} options={max_width_list} />\r\n                </div>\r\n\r\n                {/*===> Height <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`height_size${screenPoint}`} name={`height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Height Sizes\", \"pds-blocks\")} value={attributes.style[`height_size${screenPoint}`]} onChange={mainSetter} options={height_list} />\r\n                </div>\r\n                {/*===> Min Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_height_size${screenPoint}`} name={`min_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Height\", \"pds-blocks\")} value={attributes.style[`min_height_size${screenPoint}`]} onChange={mainSetter} options={min_height_list} />\r\n                </div>\r\n                {/*===> Max Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_height_size${screenPoint}`} name={`max_height_size${screenPoint}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Height\", \"pds-blocks\")} value={attributes.style[`max_height_size${screenPoint}`]} onChange={mainSetter} options={max_height_list} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixInput from '../input';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class SliderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, flexSetter, isGrid} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-slider-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const slider_types = [\r\n            { label: __('Loop', \"pds-blocks\"), value: 'loop' },\r\n            { label: __('Fading', \"pds-blocks\"),  value: 'fade' },\r\n            { label: __('Sliding', \"pds-blocks\"),  value: 'slide' },\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className='row gpx-20 gpy-15 gpy-fix'>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixSelect key=\"type\" name=\"type\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Effect Type\", \"pds-blocks\")} value={attributes.slider.type} onChange={mainSetter} options={slider_types} />\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"steps\" name=\"steps\" label={__(\"Steps\", \"pds-blocks\")} value={attributes.slider.steps || 1} onChange={mainSetter} min={1} max={12}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"duration\" name=\"duration\" label={__(\"Duration\", \"pds-blocks\")} value={attributes.slider.duration || 6000} onChange={mainSetter} min={3000} max={20000} steps={100}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"speed\" name=\"speed\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.slider.speed || 700} onChange={mainSetter} min={300} max={3000} steps={100}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 pdt-10 divider-t flexbox gpy-5 align-between'>\r\n                    <OptionControl key={`autoplay`} name={`autoplay`} value=\"boolean\" checked={attributes.slider.autoplay || true} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Autoplay\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`controls`} name={`controls`} value=\"boolean\" checked={attributes.slider.controls || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Arrows\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`pagination`} name={`pagination`} value=\"boolean\" checked={attributes.slider.pagination || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Pagination\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`isNavigation`} name={`is-navigation`} value=\"boolean\" checked={attributes.slider['is-navigation'] || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"isNavigation\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`center-mode`} name={`center`} value=\"boolean\" checked={attributes.slider.center || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Center Mode\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`autoWidth`} name={`autoWidth`} value=\"boolean\" checked={attributes.slider.autoWidth || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Free Width\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`autoHeight`} name={`autoHeight`} value=\"boolean\" checked={attributes.slider.autoHeight || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Free Height\", \"pds-blocks\")}</span></OptionControl>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixInput key=\"sync\" name=\"sync\" label={__(\"Sync with\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.sync} onChange={mainSetter} />\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                {attributes.slider.pagination ? <div className='col-12'>\r\n                    <PhenixInput key=\"page\" name=\"page\" label={__(\"Pagination Buttons Classes\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.page} onChange={mainSetter} />\r\n                    <PhenixInput key=\"pagination\" name=\"pagination\" label={__(\"Pagination Wrapper Classes\", \"pds-blocks\")} value={attributes.slider.pagination} onChange={mainSetter} />\r\n                </div> : null}\r\n                {/*===> Column <===*/}\r\n                {attributes.slider.controls || attributes.slider.controls === \"\" ? <div className='col-12'>\r\n                    <PhenixInput key=\"arrow\" name=\"arrow\" label={__(\"Arrows Buttons Classes\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.arrow} onChange={mainSetter} />\r\n                    <PhenixInput key=\"controls\" name=\"controls\" label={__(\"Arrows Wrapper Classes\", \"pds-blocks\")} value={attributes.slider.controls} onChange={mainSetter} />\r\n                </div> : null}\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>}\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, value, checked, onChange, children, required, className} = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useState } from 'react';\r\n\r\n//===> Phenix Background <===//\r\nexport default function ScreensTabs(props) {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};","//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport ServerSideRender from '@wordpress/server-side-render';\r\nimport {PanelBody, ToolbarGroup} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport SizesSet from '../px-controls/sets/sizes';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport PhenixSelect from '../px-controls/select';\r\nimport OptionControl from '../px-controls/switch';\r\nimport SelectFromData from '../px-controls/select-data';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport SliderSet from '../px-controls/sets/slider';\r\nimport FlexboxSet from '../px-controls/sets/flexbox';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit(props) {\r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n\r\n    //==> Set Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_flexbox = (target, screen) => PhenixBlocks.set_flexbox(target, screen, attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_slider = (target, screen) => PhenixBlocks.setObject(target, screen, 'slider', false, attributes, setAttributes);\r\n    const set_query = (target, screen) => PhenixBlocks.setObject(target, screen, \"query\", false, attributes, setAttributes);\r\n\r\n    //===> Get Properties <===//\r\n    const {attributes, setAttributes} = props;\r\n    const blockProps = useBlockProps();\r\n    const uniqueKey = blockProps.id;\r\n\r\n    //===> List View Naming <===//\r\n    if (attributes.metadata?.name) {\r\n        let ListViewItem = document.querySelector(`.block-editor-list-view-tree a[href=\"#block-${blockProps['data-block']}\"] .components-truncate`);\r\n        if(ListViewItem) ListViewItem.textContent = attributes.metadata.name;\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <ToolbarGroup key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.flexbox?.equals || attributes.flexbox?.slider ? <PxDropDown title={__(\"Columns Number\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-container-storage divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-180\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        <PhenixNumber name={\"cols\"} icon=\"far fa-mobile\" min={0} max={13} value={attributes.flexbox?.cols || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                        <PhenixNumber name={`cols-md`} icon=\"far fa-tablet\" min={0} max={13} value={attributes.flexbox[`cols-md`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                        <PhenixNumber name={`cols-lg`} icon=\"far fa-laptop\" min={0} max={13} value={attributes.flexbox[`cols-lg`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                        <PhenixNumber name={`cols-xl`} icon=\"far fa-desktop\" min={0} max={13} value={attributes.flexbox[`cols-xl`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                    </li>\r\n                </PxDropDown>: null} \r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.isFlexbox ? <PxDropDown title={__(\"Grid Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-columns divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"layouts\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <FlexboxSet attributes={attributes} mainSetter={set_flexbox}></FlexboxSet>}\r\n                            md={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                            lg={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                            xl={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>:null}\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Sizes Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-maximize divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-320\" >\r\n                    <li key=\"sizes\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <SizesSet attributes={attributes} mainSetter={set_style} />}\r\n                            md={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            lg={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            xl={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n            </ToolbarGroup>\r\n        </BlockControls>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"General Setting\", \"pds-blocks\")} initialOpen={true}>\r\n                {/*===> Group <===*/}\r\n                <div className='row gpx-10'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        <SelectFromData name=\"role\" options=\"users-roles\" label={__(\"User Roles\", \"pds-blocks\")} value={attributes.query?.role || null} valueSetter={(target) => set_query(target, false)} multiple />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-15'>\r\n                        <SelectFromData label={__(\"Card Template\", \"pds-blocks\")} name=\"template_part\" options=\"template-parts\" value={attributes.template_part} valueSetter={set_value} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"Order\", \"pds-blocks\")} name=\"order\" value={attributes.query?.order} onChange={set_query} options={[\r\n                            { label: __('Oldest', \"pds-blocks\"), value: 'ASC' },\r\n                            { label: __('Newest', \"pds-blocks\"),  value: 'DESC' },\r\n                        ]} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"OrderBy\", \"pds-blocks\")} name=\"orderby\" value={attributes.query?.orderby} onChange={set_query} options={PhenixBlocks.dataLists.queries.usersOrderBy} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        <PhenixNumber name=\"number\" label={__(\"Max Items\", \"pds-blocks\")} value={ attributes.query?.number } onChange={set_query} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <OptionControl key={`has_published_posts-${uniqueKey}`} name={`has_published_posts`} value=\"boolean\" checked={attributes.query['has_published_posts'] || false} onChange={set_query} type='switch-checkbox' className='small'>{__(\"Has Posts\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl key={`isFlexbox-${uniqueKey}`} name={`isFlexbox`} value=\"boolean\" checked={attributes.isFlexbox} onChange={set_value} type='switch-checkbox' className='small'>{__(\"Grid Mode\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl key={`slider-${uniqueKey}`} name={`slider`} value=\"boolean\" checked={attributes.flexbox.slider} onChange={set_flexbox} type='switch-checkbox' className='small'>{__(\"Slider Mode\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                </div>\r\n                {/*===> Group <===*/}\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            {attributes.flexbox.slider ? <PanelBody title={__(\"Slider Options\", \"pds-blocks\")} initialOpen={true}>\r\n                <SliderSet attributes={attributes} mainSetter={set_slider} flexSetter={set_flexbox} />\r\n            </PanelBody> : null}\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> :\r\n            <div {...blockProps} key={`${uniqueKey}`}>\r\n                <ServerSideRender block=\"phenix/users-query\" attributes={attributes} />\r\n            </div>\r\n        }\r\n    </>);\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata.name, {\r\n    title      : metadata.title,\r\n    category   : metadata.category,\r\n    attributes : metadata.attributes,\r\n    icon  : <svg fill=\"none\" viewBox=\"0 0 28 30\"><path fill=\"#000\" fillRule=\"evenodd\" d=\"M14 29.334a5.17 5.17 0 01-2.6-.694l-7.92-4.573a5.235 5.235 0 01-2.6-4.507v-9.12c0-1.853 1-3.573 2.6-4.507L11.4 1.36a5.179 5.179 0 015.2 0l7.92 4.573c1.6.934 2.6 2.654 2.6 4.507v9.12c0 1.854-1 3.574-2.6 4.507L16.6 28.64a5.17 5.17 0 01-2.6.694zm0-26.667c-.546 0-1.106.146-1.6.426L4.48 7.667a3.208 3.208 0 00-1.6 2.773v9.12c0 1.134.614 2.2 1.6 2.774l7.92 4.573a3.192 3.192 0 003.2 0l7.92-4.573a3.209 3.209 0 001.6-2.774v-9.12c0-1.133-.613-2.2-1.6-2.773L15.6 3.093a3.268 3.268 0 00-1.6-.426zm0 12a4.108 4.108 0 01-4.107-4.107A4.108 4.108 0 0114 6.453a4.108 4.108 0 014.107 4.107A4.108 4.108 0 0114 14.667zm0-6.214c-1.16 0-2.107.947-2.107 2.107 0 1.16.947 2.107 2.107 2.107 1.16 0 2.107-.947 2.107-2.107 0-1.16-.947-2.107-2.107-2.107zm4.334 12.76c0 .547.453 1 1 1 .546 0 1-.453 1-1 0-2.946-2.84-5.346-6.334-5.346-3.493 0-6.333 2.4-6.333 5.346 0 .547.453 1 1 1 .547 0 1-.453 1-1 0-1.84 1.947-3.346 4.333-3.346 2.387 0 4.334 1.506 4.334 3.346z\" clipRule=\"evenodd\"/></svg>,\r\n    /**===> @see ./edit.js <===*/\r\n    edit  : Edit,\r\n    save  : () => null\r\n});"],"names":["FlexAlignment","Component","render","label","value","onChange","screen","blockKey","this","props","screenPoint","button_style","uniqueKey","set_alignment","target","options","trim","split","allAlignments","targetType","getAttribute","match","hasOption","some","option","includes","modifiedValue","extractType","map","push","join","find","xAlignments","yAlignments","createElement","className","key","type","title","onClick","clicked","OptionControl","name","checked","PxDropDown","button","support","dropList","children","dataPosition","useEffect","window","PhenixBlocks","componentsBuilder","attributes","Fragment","PhenixInput","state","shouldComponentUpdate","nextProps","nextState","size","placeholder","onBlur","event","defaultValue","style","marginBottom","PhenixNumber","min","max","steps","icon","DecreaseNum","wrapper","Phenix","ancestor","minNum","parseFloat","step","input","querySelector","newVal","changed","maxNum","checkVal","SelectFromData","dataFetched","__","reRender","length","apiFetch","path","then","new_state","locations","menu_locations","new_options_list","item","Object","entries","setState","taxonomies","isCoreType","forEach","keyword","termType","terms","id","post_types","users_roles","template_parts","theme_parts","replace","files_list","key2","componentDidMount","componentDidUpdate","multiple","valueSetter","search","Date","now","toString","Math","random","substr","PhenixSelect","useState","setValue","useCallback","useMemo","attrs","options_list","list","Array","isArray","group_list","options_group","FlexboxSet","mainSetter","align_options","flexbox","class","slider","equals","SizesSet","dataLists","sizes_range","width_list","width_range","min_width_list","max_width_range","max_width_list","height_list","height_range","min_height_list","max_height_range","max_height_list","default_option","unshift","SliderSet","flexSetter","isGrid","slider_types","duration","speed","autoplay","controls","pagination","center","autoWidth","autoHeight","sync","page","arrow","required","defaultChecked","ScreensTabs","setScreen","sm","buttons","opts","classes","md","lg","xl","opt","Edit","set_value","setAttributes","set_flexbox","set_style","setObject","set_query","blockProps","useBlockProps","metadata","ListViewItem","document","textContent","BlockControls","ToolbarGroup","cols","isFlexbox","InspectorControls","PanelBody","initialOpen","query","role","template_part","order","orderby","queries","usersOrderBy","number","set_slider","preview","src","PreviewImage","alt","ServerSideRender","block","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","category","fill","viewBox","fillRule","clipRule","edit","save"],"sourceRoot":""}