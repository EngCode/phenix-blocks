{"version":3,"file":"blocks/users-query/index.js","mappings":"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","sources":["webpack://pds-blocks-pro/./src/blocks/px-controls/alignment.js","webpack://pds-blocks-pro/./src/blocks/px-controls/dropdown.js","webpack://pds-blocks-pro/./src/blocks/px-controls/input.js","webpack://pds-blocks-pro/./src/blocks/px-controls/number.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select-data.js","webpack://pds-blocks-pro/./src/blocks/px-controls/select.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/flexbox.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/sizes.js","webpack://pds-blocks-pro/./src/blocks/px-controls/sets/slider.js","webpack://pds-blocks-pro/./src/blocks/px-controls/switch.js","webpack://pds-blocks-pro/./src/blocks/px-controls/tabs.js","webpack://pds-blocks-pro/./src/blocks/users-query/edit.js","webpack://pds-blocks-pro/external window \"React\"","webpack://pds-blocks-pro/external window [\"wp\",\"apiFetch\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blockEditor\"]","webpack://pds-blocks-pro/external window [\"wp\",\"blocks\"]","webpack://pds-blocks-pro/external window [\"wp\",\"components\"]","webpack://pds-blocks-pro/external window [\"wp\",\"element\"]","webpack://pds-blocks-pro/external window [\"wp\",\"i18n\"]","webpack://pds-blocks-pro/external window [\"wp\",\"serverSideRender\"]","webpack://pds-blocks-pro/webpack/bootstrap","webpack://pds-blocks-pro/webpack/runtime/compat get default export","webpack://pds-blocks-pro/webpack/runtime/define property getters","webpack://pds-blocks-pro/webpack/runtime/global","webpack://pds-blocks-pro/webpack/runtime/hasOwnProperty shorthand","webpack://pds-blocks-pro/webpack/runtime/publicPath","webpack://pds-blocks-pro/./src/blocks/users-query/index.js"],"sourcesContent":["/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\nimport OptionControl from './switch';\r\n\r\n//===> Media Uploader <===//\r\nexport default class FlexAlignment extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, onChange, screen, blockKey} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const button_style = \"btn tiny bg-transparent fs-12 square pxi\";\r\n        const uniqueKey = `${blockKey ? blockKey+\"-\" : \"\"}align-${screenPoint}-options`;\r\n\r\n        //===> Value Handler <===//\r\n        // const set_alignment = target => {\r\n        //     //===> Define Data <===//\r\n        //     let align_val  = value;\r\n        //     const current_val = value.trim(),\r\n        //           current_values  = current_val.split(\" \"),\r\n        //           xTypes = [`x`, `${screenPoint}-between`, `${screenPoint}-around`],\r\n        //           allTypes = [`${screenPoint}-end-x`,`${screenPoint}-start-x`,`${screenPoint}-center-x`, `${screenPoint}-between`, `${screenPoint}-around`, `${screenPoint}-end-y`,`${screenPoint}-start-y`, `${screenPoint}-center-y`];\r\n\r\n        //     //===> Check if the Value has an option with the same type as the target value <===//\r\n        //     const itHasType = allTypes.some(type => current_val.includes(type)),\r\n        //           align_type = xTypes.some(type => target.getAttribute('name').includes(type)) ? `${screenPoint}-x` : `${screenPoint}-y`,\r\n        //           foundedType = xTypes.some(type => current_val.includes(type)) ? `x` : `y`;\r\n\r\n        //     //===> if the Value has an Option and the option type is the same as the target <===//\r\n        //     if (itHasType && align_type === foundedType) {\r\n        //         //===> Loop on Values <===//\r\n        //         current_values.forEach(current_value => {\r\n        //             //===> if the Founded Type is the same as the Value, Replace the Value <===//\r\n        //             if (current_value.includes(align_type)) {\r\n        //                 align_val = align_val.replace(current_value, target.value);\r\n        //             }\r\n        //         });\r\n        //     }\r\n        //     //===> if its a new Value add it <===//\r\n        //     else {\r\n        //         align_val += ` ${target.value}`;\r\n        //     }\r\n\r\n        //     //===> Return new Value <===//\r\n        //     return onChange(align_val.trim());\r\n        // },\r\n\r\n        const set_alignment = (target) => {\r\n            //====> Cleanup Empty Space and Split the Value <====/\r\n            const options = value.trim().split(/\\s+/);\r\n\r\n            //====> Define alignment <====//\r\n            const xAlignments = [`${screenPoint}-x-start`, `${screenPoint}-x-end`, `${screenPoint}-x-between`, `${screenPoint}-x-around`, `${screenPoint}-x-center`];\r\n            const yAlignments = [`${screenPoint}-y-start`, `${screenPoint}-y-end`, `${screenPoint}-y-center`];\r\n            const allAlignments = [...xAlignments, ...yAlignments];\r\n\r\n            //====> Extract alignment type from target attribute <====//\r\n            const targetType = target.getAttribute('name').match(/-x$/) ? 'x' : 'y';\r\n          \r\n            //====> Check if any option has the same type as target <====//\r\n            const hasOption = options.some(option => allAlignments.includes(option));\r\n          \r\n            //====> Modify value based on conditions <====//\r\n            let modifiedValue = options;\r\n            if (hasOption && targetType === extractType(options)) {\r\n              modifiedValue = options.map(option => option === extractType(options) ? target.value : option);\r\n            } else {\r\n              modifiedValue.push(target.value);\r\n            }\r\n          \r\n            //====> Join modified options and return <====//\r\n            return onChange(modifiedValue.join(' '));\r\n        },\r\n\r\n        extractType = (options) => options.find(option => xAlignments.includes(option) || yAlignments.includes(option)),\r\n\r\n        //===> Reset Value Method <===//\r\n        reset_align = (clicked) => onChange(\"align-reset\");\r\n\r\n        //===> Output <===//\r\n        return (<div className='components-flex-item flex-alignment-btns' key={uniqueKey}>\r\n            {/*===> Label <===*/}\r\n            <div className={\"flexbox align-between mb-5 align-center-y\"}>\r\n                <label className='fs-13 weight-bold'>{label}</label>\r\n                <button type=\"button\" key={`reset-btn${screenPoint}`} data-value=\"\" title=\"Reset\" className='btn tiny bg-transparent fs-12 square far fa-redo' onClick={reset_align}></button>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"flexbox align-between\"}>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-start-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-start-x`)} value={`align${screenPoint}-start-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span title=\"Start\" className={`${button_style} pxi-align-x-start`}></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-center-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-center-x`)} value={`align${screenPoint}-center-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-between`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-between`)} value={`align${screenPoint}-between`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-between`} title=\"Between\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-around`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-around`)} value={`align${screenPoint}-around`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-around`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-end-x`} name={`flex-align${screenPoint}-x`} checked={value.includes(`align${screenPoint}-end-x`)} value={`align${screenPoint}-end-x`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-x-end`} title=\"Around\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n                {/*===> Radio Buttons <===*/}\r\n                <div className=\"col-auto pdx-5 border-1 border-solid border-alpha-15 radius-sm\">\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-start-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-start-y`)} value={`align${screenPoint}-start-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-start`} title=\"Start\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-center-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-center-y`)} value={`align${screenPoint}-center-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-center`} title=\"Center\"></span>\r\n                    </OptionControl>\r\n                    {/*===> Switch Button <===*/}\r\n                    <OptionControl key={`align${screenPoint}-end-y`} name={`flex-align${screenPoint}-y`} checked={value.includes(`align${screenPoint}-end-y`)} value={`align${screenPoint}-end-y`} onChange={set_alignment} type='button-radio' className='tiny inline-block'>\r\n                        <span className={`${button_style} pxi-align-y-end`} title=\"End\"></span>\r\n                    </OptionControl>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PxDropDown extends Component {\r\n    //===> States <===//\r\n    state = {opened:false};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            label,\r\n            button,\r\n            support,\r\n            dropList,\r\n            children,\r\n            className,\r\n            dataPosition,\r\n            title,\r\n        } = this.props;\r\n\r\n        const attributes = {};\r\n\r\n        if (support?.includes(\"hover\")) attributes[\"data-hover\"] = \"true\";\r\n        if (dataPosition) attributes[\"data-position\"] = dataPosition;\r\n        if (this.props.key) attributes.key = this.props.key;\r\n\r\n        //===> Render Component <===//\r\n        return (<>\r\n            {/* Dropdown Wrapper */}\r\n            <div className={`px-dropdown pds-tm-control ${className ? className : \"\"}`} {...attributes}>\r\n                {/* Toggle Button */}\r\n                <button className={`px-toggle btn ${button} ${title ? \"tooltip-bottom\" : \"\"}`} data-title={title}>{label}</button>\r\n                {/* Dropdown Target */}\r\n                <ul className={`hidden px-dropdown-list reset-list bg-white radius-md radius-bottom bx-shadow-dp-2 border-1 border-alpha-10 border-solid ${dropList ? dropList : \"fs-14 w-min-200\"}`}>{children}</ul>\r\n                {/* // Dropdown Target */}\r\n            </div>\r\n            {/* // Dropdown Wrapper */}\r\n        </>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixInput extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Force Render when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value,  onChange, className, placeholder } = this.props;\r\n        const uniqueKey = `pds-input`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            if (this.props.value !== event.target.value) return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {\r\n            onBlur: setValue,\r\n            type: type || \"text\",\r\n            defaultValue: value || \"\",\r\n            placeholder: placeholder || label || \"\",\r\n        };\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n            {/*===> Control Element <===*/}\r\n            <input name={name} className={`form-control ${size ? size : \"small\"} radius-md ${className ? className : \"\"}`} {...attributes}/>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Media Uploader <===//\r\nexport default class PhenixNumber extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {label, value, min, max, steps, icon, onChange, name} = this.props;\r\n\r\n        //===> Set Value <===//\r\n        const setNumber = (changed) => {\r\n            //===> Get Elements <===//\r\n            const input  = changed.target,\r\n                  minNum  = parseFloat(min) || 0,\r\n                  maxNum  = parseFloat(max) || 0;\r\n\r\n            //===> Get Input Element <===//\r\n            const newVal = parseFloat(input.value),\r\n                  checkVal = (newVal >= minNum || newVal <= maxNum) ? newVal : 0;\r\n\r\n            //===> Set Data <===//\r\n            input.value = checkVal;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Increase Number <===//\r\n        IncreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                maxNum  = parseFloat(max) || 9999999,\r\n                step    = steps ? parseFloat(steps) : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input  = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) + step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxNum || newVal === maxNum ? newVal : maxNum;\r\n            return onChange(input);\r\n        },\r\n\r\n        //===> Decrease Number <===//\r\n        DecreaseNum = (clicked) => {\r\n            //===> Get Elements <===//\r\n            let button  = clicked.target,\r\n                wrapper = Phenix(button).ancestor(\".px-counter-input\"),\r\n                minNum  = parseFloat(min) || 0,\r\n                step    = steps ? steps : 1;\r\n\r\n            //===> Get Input Element <===//\r\n            let input = wrapper.querySelector('input[type=\"number\"]'),\r\n                newVal = parseFloat(input.value) - step;\r\n\r\n            //===> Set Data <===//\r\n            input.value = newVal > minNum || newVal === minNum ? newVal : minNum;\r\n            return onChange(input);\r\n        };\r\n\r\n        //===> Output <===//\r\n        return (<div className='flexbox flex-gap-fix align-between flow-column'>\r\n            {/*===> Label <===*/}\r\n            <label className='components-input-control__label tx-uppercase weight-bold'>{label}</label>\r\n            {/*===> Counter Control <===*/}\r\n            <div className={\"px-counter-input position-rv fluid \" + (icon ? icon : \"\")}>\r\n                {/*===> Button <===*/}\r\n                {!icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus position-ab pos-start-0 pos-top-0 divider-e icon-fix'></button> : \"\"}\r\n\r\n                {/*===> Number Input <===*/}\r\n                <input name={name} type=\"number\" min={min} max={max} value={parseFloat(value) ? parseFloat(value) : 0} className={\"form-control small radius-sm reset-appearance tx-align-center\"} onChange={setNumber} />\r\n\r\n                {/*===> Button <===*/}\r\n                <div className='position-ab pos-end-0 pos-bottom-0 flexbox'>\r\n                    {icon ? <button onClick={DecreaseNum} className='btn square small fs-13 increase-btn far fa-minus divider-s icon-fix'></button> : \"\"}\r\n                    <button onClick={IncreaseNum} className='btn square small fs-13 increase-btn far fa-plus divider-s icon-fix'></button>\r\n                </div>\r\n            </div>\r\n            {/*===> Counter Control <===*/}\r\n        </div>)\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from './select';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class SelectFromData extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        dataFetched: 0,\r\n        options: [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}],\r\n    };\r\n\r\n    //===> Component Rendered Hook <===//\r\n    reRender = () => {\r\n        //===> Fetch Data <===//\r\n        if(this.state.options.length < 2) {\r\n            //===> for PDS Menu Locations <===//\r\n            if (this.props.options === \"menu-locations\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                        locations = options.menu_locations,\r\n                        new_options_list = [{label: __(\"Default\", \"pds-blocks\"), value: \"\"}];\r\n        \r\n                    //===> add Locations to a List <===//\r\n                    for (const [key, item] of Object.entries(locations)) {\r\n                        new_options_list.push({label: item.title, value: item.name});\r\n                    }\r\n    \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for taxonomies <====//\r\n            else if (this.props.options === \"taxonomies\") {\r\n                //===> Fetch Taxonomies <===//\r\n                apiFetch({path: 'wp/v2/taxonomies'}).then(taxonomies => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n\r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(taxonomies)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        if (\"nav_menu\" !== key) {\r\n                            new_options_list.push({\"value\":key, \"label\":value.name});\r\n                        }\r\n                    }\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for taxonomies Terms <====//\r\n            else if (this.props.options === \"taxonomies-terms\") {\r\n                //===> Fetch Taxonomies <===//\r\n                apiFetch({path: `wp/v2/${this.props.termType}`}).then(taxonomies => {\r\n                    console.log(taxonomies);\r\n                    // //===> Define Types <===//\r\n                    // const new_state = this.state,\r\n                    //       new_options_list = [];\r\n\r\n                    // //===> Get Current Active Types <===//\r\n                    // for (const [key, value] of Object.entries(taxonomies)) {\r\n                    //     //===> Exclude the Core Types <===//\r\n                    //     if (\"nav_menu\" !== key) {\r\n                    //         new_options_list.push({\"value\":key, \"label\":value.name});\r\n                    //     }\r\n                    // }\r\n\r\n                    // //===> Set new Options List <===//\r\n                    // if (new_options_list !== this.state.options) {\r\n                    //     new_state.dataFetched += 1;\r\n                    //     new_state.options = new_options_list;\r\n                    //     //===> Set State <===//\r\n                    //     this.setState({...new_state});\r\n                    // }\r\n                });\r\n            }\r\n            //====> for Post-Types <====//\r\n            else if (this.props.options === \"post-types\") {\r\n                //===> Fetch Post Types <===//\r\n                apiFetch({path: 'wp/v2/types'}).then(post_types => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n            \r\n                    //===> Get Current Active Types <===//\r\n                    for (const [key, value] of Object.entries(post_types)) {\r\n                        //===> Exclude the Core Types <===//\r\n                        if (!['attachment', 'nav_menu_item', 'wp_block', 'wp_navigation', 'wp_template', 'wp_template_part'].includes(key)) {\r\n                            new_options_list.push({\"value\":key, \"label\":value.name});\r\n                        }\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n\r\n                });\r\n            }\r\n            //====> for Users-Roles <====//\r\n            else if (this.props.options === \"users-roles\") {\r\n                //===> Fetch Roles <===//\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Define Types <===//\r\n                    const new_state = this.state,\r\n                          new_options_list = [];\r\n            \r\n                    //===> Get Current Roles <===//\r\n                    for (const [key, value] of Object.entries(options.users_roles)) {\r\n                        new_options_list.push({\"value\": value.name, \"label\": value.name});\r\n                    }\r\n            \r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                        this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n            //====> for Template-Parts <====//\r\n            else if (this.props.options === \"template-parts\") {\r\n                apiFetch({path: 'pds-blocks/v2/options'}).then(options => {\r\n                    //===> Create New Array <===//\r\n                    const new_state = this.state,\r\n                          template_parts = options.theme_parts,\r\n                          new_options_list = [];\r\n\r\n                    //===> Loop Through Theme-Parts <===//\r\n                    if(template_parts) Object.entries(template_parts).forEach(([key, value]) => {\r\n                        //===> if its direct theme-part <===//\r\n                        if(typeof(value) === 'string') {\r\n                            new_options_list.push(<option key={`${key}-${value}`} value={value.replace(\".php\", \"\")}>{value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}</option>);\r\n                        }\r\n                        //===> if its nested theme-part in a directory <===//\r\n                        else {\r\n                            //===> Define Directory Files <===//\r\n                            let files_list = [];\r\n                            //===> Loop Through Files <===//\r\n                            Object.entries(value).forEach(([key2, value]) => {\r\n                                //===> add the file to the list <===//\r\n                                files_list.push(<option key={`${key2}-${value}`} value={`${key}/${value.replace(\".php\", \"\")}`}>{`${value.replace('-', ' ').replace('_', '').replace(\".php\", \"\")}`}</option>);\r\n                            });\r\n                            //===> Push the Options Group <===//\r\n                            new_options_list.push(<optgroup key={`${key}-group`} label={`${key}`}>{files_list}</optgroup>);\r\n                        }\r\n                    });\r\n\r\n                    //===> Set new Options List <===//\r\n                    if (new_options_list !== this.state.options) {\r\n                        new_state.dataFetched += 1;\r\n                        new_state.options = new_options_list;\r\n                        //===> Set State <===//\r\n                       this.setState({...new_state});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    //===> Fetch Data When Rendered <===//\r\n    componentDidMount() { this.reRender(); };\r\n    //===> Fetch Data When Updated <===//\r\n    componentDidUpdate() { this.reRender(); };\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {options, name, type, size, label, value, multiple, valueSetter, className, search, termType } = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screen}-option`;\r\n\r\n        //===> Render Component <===//\r\n        return <PhenixSelect key={this.state.dataFetched} type={type} options={this.state.options} multiple={multiple} name={name} placeholder={__(\"Default\", \"pds-blocks\")} label={label} value={value} onChange={valueSetter} className={className} search={search} size={size} />\r\n    }\r\n}","//====> .Dependencies. <====//\r\nimport React from 'react';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class PhenixSelect extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    //===> Component Rendered Hooks <===//\r\n    componentDidMount() { window.PhenixBlocks.componentsBuilder(); };\r\n    componentDidUpdate() { window.PhenixBlocks.componentsBuilder(); };\r\n\r\n    //===> Component Rendered when Props Change <===//\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.value !== this.props.value || nextProps.options !== this.props.options);\r\n    }\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, size, label, value, options, multiple, onChange, className, placeholder, search } = this.props;\r\n        const uniqueKey = `pds-select-controller`;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Element Attributes <===//\r\n        let attributes = {onChange: setValue};\r\n\r\n        //===> add Options <===//\r\n        if (search) attributes['data-search'] = 1;\r\n        if (multiple) attributes.multiple = multiple;\r\n        if (placeholder) attributes['data-placeholder'] = placeholder;\r\n\r\n        //===> Get Options List <===//\r\n        let options_list = [];\r\n\r\n        if (Array.isArray(options) && !options[0].type) {\r\n            //===> Normal Lost of Options <===//\r\n            options.forEach(item => {\r\n                options_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n            });\r\n        } else if (options[0] && options[0].type) {\r\n            options_list = options;\r\n        } else{\r\n            //===> Grouped Options <===//\r\n            Object.entries(options).forEach(([key, options]) => {\r\n                //===> Define the Options List <===//\r\n                let group_list = [];\r\n                //===> Add Options to the Group <===//\r\n                options.forEach(item => {\r\n                    group_list.push(<option key={item.value} value={item.value}>{`${item.label}`}</option>);\r\n                });\r\n                //===> Create the Group <===//\r\n                let options_group = <optgroup key={`${key}-group`} label={`${key}`}>{group_list}</optgroup>;\r\n                //===> Add the Group <===//\r\n                options_list.push(options_group);\r\n            });\r\n        }\r\n\r\n        //===> Render Component <===//\r\n        return <>\r\n            {/*===> Control Label <===*/}\r\n            {label?<label className='tx-capitalize fs-13' style={{marginBottom: 5}}>{`${label}`}</label>:null}\r\n\r\n            {/*===> Control Element <===*/}\r\n            <div key={`select-wrapper`} className={`px-select ${className ? className : \"\"}`} data-value={value}>\r\n                <select key={`select-element`} name={name} defaultValue={value} className={`px-select pds-tm-control form-control ${size ? size : \"small\"} radius-md`} {...attributes}>{options_list}</select>\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport OptionControl from '../switch';\r\nimport FlexAlignment from '../alignment';\r\nimport PhenixNumber from \"../number\";\r\nimport PhenixSelect from \"../select\";\r\n\r\n//===> Options List\r\n//=> align, flex-props, grid-props\r\n\r\n//===> Component <===//\r\nexport default class FlexboxSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-flexbox-${screenPoint}-option`;\r\n\r\n        const align_options = [\r\n            {label: \"Start\", value: `align-self${screen}-start`},\r\n            {label: \"Center\", value: `align-self${screen}-center`},\r\n            {label: \"End\", value: `align-self${screen}-end`}\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className={`row gpx-15 ${className ? className : \"\"}`} key={uniqueKey}>\r\n                {/*===> Column <===*/}\r\n                {!options || options.includes(\"align\") ? <>\r\n                    <div className='col-12 mb-15'>\r\n                        <FlexAlignment screen={screen} label={__(\"Flexbox Alignment\", \"pds-blocks\")} value={attributes.flexbox[`align${screenPoint}`] || \"\"} onChange={(target) => mainSetter(target, screen ? screen : \"\")}></FlexAlignment>\r\n                        {/*====> Self Alignment <====*/}\r\n                        {!options || options.includes('align-self') ? <>\r\n                            <PhenixSelect class=\"mt-15\" name={`align-self${screen}`} size=\"normal\" placeholder={__(\"None\", \"pds-blocks\")} className=\"stacked-options\" label={__(\"Self Align\", \"pds-blocks\")} value={attributes.flexbox[`align-self${screen}`]} onChange={mainSetter} options={align_options} />\r\n                        </>:null}\r\n                    </div>\r\n                </>: null}\r\n                {/*===> Group <===*/}\r\n                <div className='col-12 row gpx-10 pdt-5 mb-15'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-Y Space\", \"pds-blocks\")} key={`gpy${screenPoint}`} name={`gpy${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpy${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <PhenixNumber label={__(\"Gap-X Space\", \"pds-blocks\")} key={`gpx${screenPoint}`} name={`gpx${screenPoint}`} onChange={mainSetter} value={attributes.flexbox[`gpx${screenPoint}`] || 0} min={0} max={50} steps={5} />\r\n                    </div>\r\n                    {/*===> // Column <===*/}\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 flexbox gpy-5'>\r\n                    {/*===> Label <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <label className='col-12 mb-5 tx-UpperCase'>{__(\"Flow Options\", \"pds-blocks\")}</label> : null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") ? <OptionControl key={`flow${screenPoint}`} name={`flow${screenPoint}`} value={!attributes.flexbox[`stacked${screenPoint}`] || attributes.flexbox[`stacked${screenPoint}`] === \"\" ? `flow${screenPoint}-reverse` : `flow${screenPoint}-columns-reverse`} checked={attributes.flexbox[`flow${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Reverse \", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`stacked${screenPoint}`} name={`stacked${screenPoint}`} value={`flow${screenPoint}-columns`} checked={attributes.flexbox[`stacked${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Stacked\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"flex-props\") && !attributes.flexbox?.slider ? <OptionControl key={`nowrap${screenPoint}`} name={`nowrap${screenPoint}`} value={`flow${screenPoint}-nowrap`} checked={attributes.flexbox[`nowrap${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Nowrap\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider && !screen ? <OptionControl key={`equals${screenPoint}`} name={`equals${screenPoint}`} checked={attributes.flexbox.equals} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Equal Cols.\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") && !attributes.flexbox?.slider ? <OptionControl key={`masonry${screenPoint}`} name={`masonry${screenPoint}`} value={`px-masonry${screenPoint}`} checked={attributes.flexbox[`masonry${screenPoint}`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Masonry\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Switch Button <===*/}\r\n                    {!options || options.includes(\"grid-props\") ?\r\n                    <OptionControl key={`gpy-fix`} name={`gpy-fix`} value={`gpy-fix`} checked={attributes.flexbox[`gpy-fix`]?.length > 0} onChange={(target) => mainSetter(target, screen ? screen : \"\")} type='checkbox' className='tiny me-15'>\r\n                        <span className='fas fa-check radius-circle'>{__(\"Gap Y fix\", \"pds-blocks\")}</span>\r\n                    </OptionControl>: null}\r\n                    {/*===> Other Button <===*/}\r\n                    {this.props.children ? this.props.children : null}\r\n                </div>\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\n\r\n//===> Component <===//\r\nexport default class SizesSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const PhenixBlocks = window.PhenixBlocks.dataLists.sizes_range;\r\n        const {attributes, options, mainSetter, screen} = this.props;\r\n        const screenPoint = screen ? `-${screen}` : \"\";\r\n\r\n        //===> Generate Width Sizes <===//\r\n        const width_list = PhenixBlocks.width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-${size}`} }),\r\n              min_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-min-${size}`} }),\r\n              max_width_list = PhenixBlocks.max_width_range.map(size => { return { \"label\": size, \"value\": `w${screenPoint}-max-${size}`} });\r\n\r\n        //===> Generate Height Sizes <===//\r\n        const height_list = PhenixBlocks.height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-${size.replace(\"%\", \"\")}`} }),\r\n              min_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-min-${size.replace(\"%\", \"\")}`} }),\r\n              max_height_list = PhenixBlocks.max_height_range.map(size => { return { \"label\": size, \"value\": `h${screenPoint}-max-${size.replace(\"%\", \"\")}`} });\r\n\r\n        //===> Add Default Option <===//\r\n        const default_option = { \"label\": __(\"Default\", \"pds-blocks\"), \"value\": \"\" };\r\n        width_list.unshift(default_option);\r\n        min_width_list.unshift(default_option);\r\n        max_width_list.unshift(default_option);\r\n        height_list.unshift(default_option);\r\n        min_height_list.unshift(default_option);\r\n        max_height_list.unshift(default_option);\r\n        \r\n        //===> Output <===//\r\n        return <>\r\n            {/*===> Grouped Options <===*/}\r\n            {!options ? <div className='row gpx-20 gpy-15'>\r\n                {/*===> Width <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`width_size${screen}`} name={`width_size${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Width Sizes\", \"pds-blocks\")} value={attributes.style[`width_size${screen}`]} onChange={mainSetter} options={width_list} />\r\n                </div>\r\n                {/*===> Min Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_size${screen}`} name={`min_size${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Width\", \"pds-blocks\")} value={attributes.style[`min_size${screen}`]} onChange={mainSetter} options={min_width_list} />\r\n                </div>\r\n                {/*===> Max Width <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_size${screen}`} name={`max_size${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Width\", \"pds-blocks\")} value={attributes.style[`max_size${screen}`]} onChange={mainSetter} options={max_width_list} />\r\n                </div>\r\n\r\n                {/*===> Height <===*/}\r\n                <div className='col-12'>\r\n                    <PhenixSelect key={`height_size${screen}`} name={`height_size${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Height Sizes\", \"pds-blocks\")} value={attributes.style[`height_size${screen}`]} onChange={mainSetter} options={height_list} />\r\n                </div>\r\n                {/*===> Min Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`min_height_size${screen}`} name={`min_height_size${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Min Height\", \"pds-blocks\")} value={attributes.style[`min_height_size${screen}`]} onChange={mainSetter} options={min_height_list} />\r\n                </div>\r\n                {/*===> Max Height <===*/}\r\n                <div className='col col-6'>\r\n                    <PhenixSelect key={`max_height_size${screen}`} name={`max_height_size${screen}`} placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Max Height\", \"pds-blocks\")} value={attributes.style[`max_height_size${screen}`]} onChange={mainSetter} options={max_height_list} />\r\n                </div>\r\n                {/*===> Other Options <===*/}\r\n                {this.props.children ? this.props.children : null}\r\n                {/*===> // Column <===*/}\r\n            </div> : this.props.children ? this.props.children : null }\r\n        </>\r\n    }\r\n}","/*\r\n * ===> 01 - Import Assets\r\n * ===> 02 - Import Block Functions\r\n * ===> 03 - Register Block\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport {Component} from '@wordpress/element';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixInput from '../input';\r\nimport PhenixSelect from '../select';\r\nimport OptionControl from '../switch';\r\nimport PhenixNumber from \"../number\";\r\n\r\n//===> Component <===//\r\nexport default class SliderSet extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {className, attributes, options, mainSetter, flexSetter, isGrid} = this.props;\r\n        const uniqueKey = Date.now().toString(36) + Math.random().toString(36).substr(2, 5)+`-slider-option`;\r\n\r\n        //===> Define Controls Options <===//\r\n        const slider_types = [\r\n            { label: __('Loop', \"pds-blocks\"), value: 'loop' },\r\n            { label: __('Fading', \"pds-blocks\"),  value: 'fade' },\r\n            { label: __('Sliding', \"pds-blocks\"),  value: 'slide' },\r\n        ];\r\n\r\n        //===> Output <===//\r\n        return <>\r\n            <div className='row gpx-20 gpy-15 gpy-fix'>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixSelect key=\"type\" name=\"type\" placeholder={__(\"Default\", \"pds-blocks\")} label={__(\"Effect Type\", \"pds-blocks\")} value={attributes.slider.type} onChange={mainSetter} options={slider_types} />\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"steps\" name=\"steps\" label={__(\"Steps\", \"pds-blocks\")} value={attributes.slider.steps || 1} onChange={mainSetter} min={1} max={12}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"duration\" name=\"duration\" label={__(\"Duration\", \"pds-blocks\")} value={attributes.slider.duration || 6000} onChange={mainSetter} min={3000} max={20000} steps={100}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-6'>\r\n                    <PhenixNumber key=\"speed\" name=\"speed\" label={__(\"Speed\", \"pds-blocks\")} value={attributes.slider.speed || 700} onChange={mainSetter} min={300} max={3000} steps={100}></PhenixNumber>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                <div className='col-12 pdt-10 divider-t flexbox gpy-5 align-between'>\r\n                    <OptionControl key={`autoplay`} name={`autoplay`} value=\"boolean\" checked={attributes.slider.autoplay || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Autoplay\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`controls`} name={`controls`} value=\"boolean\" checked={attributes.slider.controls || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Arrows\", \"pds-blocks\")}</span></OptionControl>\r\n                    <OptionControl key={`pagination`} name={`pagination`} value=\"boolean\" checked={attributes.slider.pagination || false} onChange={mainSetter} type='checkbox' className='small'><span className='fas fa-check radius-circle'>{__(\"Pagination\", \"pds-blocks\")}</span></OptionControl>\r\n                </div>\r\n                {/*===> Column <===*/}\r\n                {attributes.slider.pagination ? <div className='col-12'>\r\n                    <PhenixInput key=\"page\" name=\"page\" label={__(\"Pagination Buttons Classes\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.page} onChange={mainSetter} />\r\n                    <PhenixInput key=\"pagination\" name=\"pagination\" label={__(\"Pagination Wrapper Classes\", \"pds-blocks\")} value={attributes.slider.pagination} onChange={mainSetter} />\r\n                </div> : null}\r\n                {/*===> Column <===*/}\r\n                {attributes.slider.controls || attributes.slider.controls === \"\" ? <div className='col-12'>\r\n                    <PhenixInput key=\"arrow\" name=\"arrow\" label={__(\"Arrows Buttons Classes\", \"pds-blocks\")} className=\"mb-15\" value={attributes.slider.arrow} onChange={mainSetter} />\r\n                    <PhenixInput key=\"controls\" name=\"controls\" label={__(\"Arrows Wrapper Classes\", \"pds-blocks\")} value={attributes.slider.controls} onChange={mainSetter} />\r\n                </div> : null}\r\n                {/*===> // Column <===*/}\r\n            </div>\r\n        </>}\r\n}","//====> .Dependencies. <====//\r\nimport {Component} from '@wordpress/element';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n//===> Phenix Form Control <===//\r\nexport default class OptionControl extends Component {\r\n    //===> States <===//\r\n    state = {};\r\n\r\n    render () {\r\n        //===> Properties <===//\r\n        const {name, type, value, checked, onChange, children, required, className} = this.props;\r\n\r\n        //===> Change Value <===//\r\n        const setValue = (event) => {\r\n            return onChange(event.target);\r\n        };\r\n\r\n        //===> Define Data <===//\r\n        let options = `fs-12 option-control flexbox align-center-y`,\r\n            attributes = {onChange: setValue};\r\n\r\n        //===> Custom Classes <===//\r\n        if (className) options += ` ${className}`;\r\n\r\n        //===> Check if is On <===//\r\n        attributes.defaultChecked = checked;\r\n\r\n        //===> add Options <===//\r\n        if (required) attributes.required = true;\r\n        if (value) attributes.value = value;\r\n\r\n        //===> Render Component <===//\r\n        return (<label className={options} data-type={type?.includes(\"switch\") ? \"switch\" : type.includes(\"button\") ? \"button\" : type}>\r\n            <input type={type?.replace(\"switch-\",\"\").replace(\"button-\", \"\")} name={name} {...attributes} />\r\n            {type?.includes(\"switch\") ? <span className=\"switch\"></span> : null}\r\n            {children}\r\n        </label>)\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useState } from 'react';\r\n\r\n//===> Phenix Background <===//\r\nexport default function ScreensTabs(props) {\r\n    //===> States <===//\r\n    const [screen, setScreen] = props.sm ? useState(\"sm\") : useState(\"md\");\r\n\r\n    //===> Tab Buttons <====//\r\n    const buttons = {\r\n        opts: [\"sm\", \"md\", \"lg\", \"xl\"],\r\n        classes: \"btn square tiny col far\",\r\n        sm: {key:\"mobile\", title: __(\"Mobile Screens\", \"pds-blocks\")},\r\n        md: {key:\"tablet\", title: __(\"Tablet Screens\", \"pds-blocks\")},\r\n        lg: {key:\"laptop\", title: __(\"Desktop Screens\", \"pds-blocks\")},\r\n        xl: {key:\"desktop\", title: __(\"xLarge Screens\", \"pds-blocks\")},\r\n    };\r\n\r\n    //===> Render <===//\r\n    return(\r\n        <div className='px-gb-tabs'>\r\n            {/*===> Tabs Buttons <===*/}\r\n            <div className='options-tabs px-group borderd-group divider-b border-alpha-15 mb-10' style={{\"--radius\": 0}}>\r\n                {buttons.opts.map((opt) => {\r\n                    if (props[opt]) {\r\n                        return <button key={buttons[opt].key} onClick={() => setScreen(opt)} className={`${buttons.classes} ${screen !== opt ? \"bg-alpha-05\" : \"primary\"} fa-${buttons[opt].key}`} title={buttons[opt].title} data-options={opt}></button>\r\n                    }\r\n                })}\r\n            </div>\r\n            {/*===> Screen <====*/}\r\n            <div className={`${screen}-options`}>{props[screen] && props[screen](screen)}</div>\r\n        </div>\r\n    );\r\n};","//====> WP Modules <====//\r\nimport {__} from '@wordpress/i18n';\r\nimport ServerSideRender from '@wordpress/server-side-render';\r\nimport {PanelBody, Toolbar} from '@wordpress/components';\r\nimport {BlockControls, InspectorControls, useBlockProps} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PreviewImage from './preview.jpg';\r\nimport SizesSet from '../px-controls/sets/sizes';\r\nimport PxDropDown from '../px-controls/dropdown';\r\nimport PhenixNumber from \"../px-controls/number\";\r\nimport PhenixSelect from '../px-controls/select';\r\nimport OptionControl from '../px-controls/switch';\r\nimport SelectFromData from '../px-controls/select-data';\r\n\r\n//====> Phenix Options Sets <=====//\r\nimport ScreensTabs from \"../px-controls/tabs\";\r\nimport SliderSet from '../px-controls/sets/slider';\r\nimport FlexboxSet from '../px-controls/sets/flexbox';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit(props) {\r\n    //====> Attributes Renderers <====//\r\n    const PhenixBlocks = window.PhenixBlocks;\r\n\r\n    //==> Set Attributes Methods <==//\r\n    const set_value = (target) => PhenixBlocks.set_value(target, attributes, setAttributes);\r\n    const set_flexbox = (target, screen) => PhenixBlocks.set_flexbox(target, screen, attributes, setAttributes);\r\n    const set_style = (target, screen) => PhenixBlocks.setObject(target, screen, \"style\", false, attributes, setAttributes);\r\n    const set_slider = (target, screen) => PhenixBlocks.setObject(target, screen, 'slider', false, attributes, setAttributes);\r\n    const set_query = (target, screen) => PhenixBlocks.setObject(target, screen, \"query\", false, attributes, setAttributes);\r\n\r\n    //===> Get Properties <===//\r\n    const {attributes, setAttributes} = props;\r\n    const blockProps = useBlockProps();\r\n    const uniqueKey = blockProps.id;\r\n\r\n    //===> List View Naming <===//\r\n    if (attributes.metadata?.name) {\r\n        let ListViewItem = document.querySelector(`.block-editor-list-view-tree a[href=\"#block-${blockProps['data-block']}\"] .components-truncate`);\r\n        if(ListViewItem) ListViewItem.textContent = attributes.metadata.name;\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/*====> Settings Toolbar <====*/}\r\n        <BlockControls>\r\n            <Toolbar key={`${uniqueKey}-toolbar`} label={__(\"Quick Settings\", \"pds-blocks\")}>\r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.flexbox?.equals || attributes.flexbox?.slider ? <PxDropDown title={__(\"Columns Number\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-container-storage divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-180\">\r\n                    <li key=\"pds-styles\" className='pdt-15 pdb-5 pdx-15 lineheight-150'>\r\n                        <PhenixNumber name={\"cols\"} icon=\"far fa-mobile\" min={0} max={13} value={attributes.flexbox?.cols || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                        <PhenixNumber name={`cols-md`} icon=\"far fa-tablet\" min={0} max={13} value={attributes.flexbox[`cols-md`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                        <PhenixNumber name={`cols-lg`} icon=\"far fa-laptop\" min={0} max={13} value={attributes.flexbox[`cols-lg`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                        <PhenixNumber name={`cols-xl`} icon=\"far fa-desktop\" min={0} max={13} value={attributes.flexbox[`cols-xl`] || 0} onChange={(target) => set_flexbox(target, '')} />\r\n                    </li>\r\n                </PxDropDown>: null} \r\n                {/*===> Dropdown Button <===*/}\r\n                {attributes.isFlexbox ? <PxDropDown title={__(\"Grid Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-columns divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-280\">\r\n                    <li key=\"layouts\" className='pdt-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <FlexboxSet attributes={attributes} mainSetter={set_flexbox}></FlexboxSet>}\r\n                            md={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                            lg={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                            xl={(screen) => <FlexboxSet screen={screen} attributes={attributes} mainSetter={set_flexbox} options={\"grid-props, align\"}></FlexboxSet>}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>:null}\r\n                {/*===> Dropdown Button <===*/}\r\n                <PxDropDown title={__(\"Sizes Options\", \"pds-blocks\")} button={`bg-transparent fs-16 square far fa-arrows-maximize divider-e border-alpha-25 h-100`} dropList=\"fs-14 w-min-320\" >\r\n                    <li key=\"sizes\" className='pdy-15 pdx-15 lineheight-150'>\r\n                        <ScreensTabs\r\n                            sm={(screen) => <SizesSet attributes={attributes} mainSetter={set_style} />}\r\n                            md={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            lg={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                            xl={(screen) => <SizesSet screen={screen} attributes={attributes} mainSetter={set_style} />}\r\n                        />\r\n                    </li>\r\n                </PxDropDown>\r\n            </Toolbar>\r\n        </BlockControls>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key={`${uniqueKey}-inspector`}>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title={__(\"General Setting\", \"pds-blocks\")} initialOpen={true}>\r\n                {/*===> Group <===*/}\r\n                <div className='row gpx-10'>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        <SelectFromData name=\"role\" options=\"users-roles\" label={__(\"User Roles\", \"pds-blocks\")} value={attributes.query?.role || null} valueSetter={(target) => set_query(target, false)} multiple />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-15'>\r\n                        <SelectFromData label={__(\"Card Template\", \"pds-blocks\")} name=\"template_part\" options=\"template-parts\" value={attributes.template_part} valueSetter={set_value} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"Order\", \"pds-blocks\")} name=\"order\" value={attributes.query?.order} onChange={set_query} options={[\r\n                            { label: __('Oldest', \"pds-blocks\"), value: 'ASC' },\r\n                            { label: __('Newest', \"pds-blocks\"),  value: 'DESC' },\r\n                        ]} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <PhenixSelect label={__(\"OrderBy\", \"pds-blocks\")} name=\"orderby\" value={attributes.query?.orderby} onChange={set_query} options={PhenixBlocks.dataLists.queries.usersOrderBy} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-12 mb-10'>\r\n                        <PhenixNumber name=\"number\" label={__(\"Max Items\", \"pds-blocks\")} value={ attributes.query?.number } onChange={set_query} />\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6 mb-10'>\r\n                        <OptionControl key={`has_published_posts-${uniqueKey}`} name={`has_published_posts`} value=\"boolean\" checked={attributes.query['has_published_posts'] || false} onChange={set_query} type='switch-checkbox' className='small'>{__(\"Has Posts\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl key={`isFlexbox-${uniqueKey}`} name={`isFlexbox`} value=\"boolean\" checked={attributes.isFlexbox} onChange={set_value} type='switch-checkbox' className='small'>{__(\"Grid Mode\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                    {/*===> Column <===*/}\r\n                    <div className='col-6'>\r\n                        <OptionControl key={`slider-${uniqueKey}`} name={`slider`} value=\"boolean\" checked={attributes.flexbox.slider} onChange={set_flexbox} type='switch-checkbox' className='small'>{__(\"Slider Mode\", \"pds-blocks\")}</OptionControl>\r\n                    </div>\r\n                </div>\r\n                {/*===> Group <===*/}\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            {attributes.flexbox.slider ? <PanelBody title={__(\"Slider Options\", \"pds-blocks\")} initialOpen={true}>\r\n                <SliderSet attributes={attributes} mainSetter={set_slider} flexSetter={set_flexbox} />\r\n            </PanelBody> : null}\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        {attributes.preview ?  <img src={PreviewImage} alt=\"\" className='fluid' /> :\r\n            <div {...blockProps} key={`${uniqueKey}`}>\r\n                <ServerSideRender block=\"phenix/users-query\" attributes={attributes} />\r\n            </div>\r\n        }\r\n    </>);\r\n}","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../../\";","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata.name, {\r\n    title      : metadata.title,\r\n    category   : metadata.category,\r\n    attributes : metadata.attributes,\r\n    icon  : <svg fill=\"none\" viewBox=\"0 0 28 30\"><path fill=\"#000\" fillRule=\"evenodd\" d=\"M14 29.334a5.17 5.17 0 01-2.6-.694l-7.92-4.573a5.235 5.235 0 01-2.6-4.507v-9.12c0-1.853 1-3.573 2.6-4.507L11.4 1.36a5.179 5.179 0 015.2 0l7.92 4.573c1.6.934 2.6 2.654 2.6 4.507v9.12c0 1.854-1 3.574-2.6 4.507L16.6 28.64a5.17 5.17 0 01-2.6.694zm0-26.667c-.546 0-1.106.146-1.6.426L4.48 7.667a3.208 3.208 0 00-1.6 2.773v9.12c0 1.134.614 2.2 1.6 2.774l7.92 4.573a3.192 3.192 0 003.2 0l7.92-4.573a3.209 3.209 0 001.6-2.774v-9.12c0-1.133-.613-2.2-1.6-2.773L15.6 3.093a3.268 3.268 0 00-1.6-.426zm0 12a4.108 4.108 0 01-4.107-4.107A4.108 4.108 0 0114 6.453a4.108 4.108 0 014.107 4.107A4.108 4.108 0 0114 14.667zm0-6.214c-1.16 0-2.107.947-2.107 2.107 0 1.16.947 2.107 2.107 2.107 1.16 0 2.107-.947 2.107-2.107 0-1.16-.947-2.107-2.107-2.107zm4.334 12.76c0 .547.453 1 1 1 .546 0 1-.453 1-1 0-2.946-2.84-5.346-6.334-5.346-3.493 0-6.333 2.4-6.333 5.346 0 .547.453 1 1 1 .547 0 1-.453 1-1 0-1.84 1.947-3.346 4.333-3.346 2.387 0 4.334 1.506 4.334 3.346z\" clipRule=\"evenodd\"/></svg>,\r\n    /**===> @see ./edit.js <===*/\r\n    edit  : Edit,\r\n    save  : () => null\r\n});"],"names":["FlexAlignment","Component","render","label","value","onChange","screen","blockKey","this","props","screenPoint","button_style","uniqueKey","set_alignment","target","options","trim","split","allAlignments","targetType","getAttribute","match","hasOption","some","option","includes","modifiedValue","extractType","map","push","join","find","xAlignments","yAlignments","createElement","className","key","type","title","onClick","clicked","OptionControl","name","checked","PxDropDown","state","opened","componentDidMount","window","PhenixBlocks","componentsBuilder","componentDidUpdate","button","support","dropList","children","dataPosition","attributes","Fragment","PhenixInput","shouldComponentUpdate","nextProps","nextState","size","placeholder","onBlur","event","defaultValue","style","marginBottom","PhenixNumber","min","max","steps","icon","DecreaseNum","wrapper","Phenix","ancestor","minNum","parseFloat","step","input","querySelector","newVal","changed","maxNum","checkVal","SelectFromData","dataFetched","__","reRender","length","apiFetch","path","then","new_state","locations","menu_locations","new_options_list","item","Object","entries","setState","taxonomies","termType","console","log","post_types","users_roles","template_parts","theme_parts","forEach","replace","files_list","key2","multiple","valueSetter","search","Date","now","toString","Math","random","substr","PhenixSelect","options_list","Array","isArray","group_list","options_group","FlexboxSet","mainSetter","align_options","flexbox","class","slider","equals","SizesSet","dataLists","sizes_range","width_list","width_range","min_width_list","max_width_range","max_width_list","height_list","height_range","min_height_list","max_height_range","max_height_list","default_option","unshift","SliderSet","flexSetter","isGrid","slider_types","duration","speed","autoplay","controls","pagination","page","arrow","required","defaultChecked","ScreensTabs","setScreen","sm","useState","buttons","opts","classes","md","lg","xl","opt","Edit","set_value","setAttributes","set_flexbox","set_style","setObject","set_query","blockProps","useBlockProps","id","metadata","ListViewItem","document","textContent","BlockControls","Toolbar","cols","isFlexbox","InspectorControls","PanelBody","initialOpen","query","role","template_part","order","orderby","queries","usersOrderBy","number","set_slider","preview","src","PreviewImage","alt","ServerSideRender","block","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","scripts","getElementsByTagName","i","Error","p","registerBlockType","category","fill","viewBox","fillRule","clipRule","edit","save"],"sourceRoot":""}