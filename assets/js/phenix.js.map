{"version":3,"file":"js/phenix.js","mappings":"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","sources":["webpack://Phenix/webpack/universalModuleDefinition","webpack://Phenix/./src/scripts/components/dropdown.ts","webpack://Phenix/./src/scripts/components/media.ts","webpack://Phenix/./src/scripts/components/menu.ts","webpack://Phenix/./src/scripts/components/popup.ts","webpack://Phenix/./src/scripts/components/progress.ts","webpack://Phenix/./src/scripts/components/rating.ts","webpack://Phenix/./src/scripts/components/select.ts","webpack://Phenix/./src/scripts/components/tabs.ts","webpack://Phenix/./src/scripts/components/timer.ts","webpack://Phenix/./src/scripts/components/uploader.ts","webpack://Phenix/./src/scripts/custom-scripts.ts","webpack://Phenix/./src/scripts/features/animations.ts","webpack://Phenix/./src/scripts/features/collapse.ts","webpack://Phenix/./src/scripts/features/counter.ts","webpack://Phenix/./src/scripts/features/effects-scroll.ts","webpack://Phenix/./src/scripts/features/effects.ts","webpack://Phenix/./src/scripts/features/get-info.ts","webpack://Phenix/./src/scripts/features/notifications.ts","webpack://Phenix/./src/scripts/features/validation.ts","webpack://Phenix/./src/scripts/features/viewport.ts","webpack://Phenix/./src/scripts/index.ts","webpack://Phenix/./src/scripts/integration/blocks.ts","webpack://Phenix/./src/scripts/integration/slider.ts","webpack://Phenix/./src/scripts/integration/utilities.ts","webpack://Phenix/./src/scripts/integration/woocommerce.ts","webpack://Phenix/./src/scripts/integration/wordpress.ts","webpack://Phenix/webpack/bootstrap","webpack://Phenix/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Phenix\"] = factory();\n\telse\n\t\troot[\"Phenix\"] = factory();\n})(this, () => {\nreturn ","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Dropdown\r\n * ===> 03 - Default Options\r\n * ===> 04 - Set Trigger Accessibility\r\n * ===> 05 - When Click on the Trigger\r\n * ===> 06 - De-Activate Other\r\n * ===> 07 - Activate Button and List\r\n * ===> 08 - De-Activate on Blank\r\n * ===> 09 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Dropdown <====*/\r\nPhenixElements.prototype.dropdown = function (options?:{\r\n    toggle?:string,   //====> Toggle Button Class Name : px-toggle\r\n    target?:string,   //====> Target to Toggle (add/remove) Active Class\r\n    active?:string,   //====> Active Class Name : px-active\r\n    hover?:boolean,   //====> Support on Hover Show/Hide\r\n    exclude?:string,  //====> Exclude from on Blank Click only [CSS :not()... Selector]\r\n    position?:string, //====> the position of the target [top or bottom, start or end]\r\n    //====> Hide/Show Toggle Effect [fade, slide] <====//\r\n    effect?:{\r\n        type?:string,\r\n        duration?:number,\r\n        delay?:number,\r\n        display?:string,\r\n    },\r\n}) {    \r\n    this.forEach(dropdown_wrapper => {\r\n        //====> if its already mounted <====//\r\n        if (dropdown_wrapper.classList.contains('px-mounted')) return;\r\n\r\n        //====> Default Options <====//\r\n        let siblings,\r\n            inline = attr => dropdown_wrapper.getAttribute(attr),\r\n            active  = inline('data-active') || options?.active || 'px-active',\r\n            toggle  = inline('data-toggle') || options?.toggle || '.px-toggle',\r\n            target  = inline('data-target') || options?.target || '.px-dropdown-list',\r\n            position  = inline('data-position') || options?.position || 'bottom, start',\r\n            exclude  = inline('data-exclude') || options?.exclude || '.px-toggle',\r\n            activated = `${target}.${active}`,\r\n            //====> Effect Options <====//\r\n            delay  = inline('data-delay') || options?.effect?.delay || 0,\r\n            effect = inline('data-effect') || options?.effect?.type || 'fade',\r\n            display = inline('data-display') || options?.effect?.display || 'block',\r\n            duration = inline('data-duration') || options?.effect?.duration || 300,\r\n            //====> Catch the Target <====//\r\n            dropdown_target = dropdown_wrapper.querySelector(target);\r\n\r\n        //===> Dynamic Position <===//\r\n        let change_position = () => {\r\n            if(position[0] === 'top' || position[0] === 'bottom') Phenix(dropdown_target).dynamicPosition();\r\n        };\r\n\r\n        //====> identify the effect <====//\r\n        dropdown_wrapper.setAttribute('data-effect', effect);\r\n\r\n        //====> Hide Activated Dropdowns <====//\r\n        const hide_others = (activated) => {\r\n            //==== Hide Others ====//\r\n            Phenix(activated).forEach((dropdown:HTMLElement) => {\r\n                if (dropdown_target !== dropdown) {\r\n                    //====> Get the Effect Type <====//\r\n                    let dropdown_wrapper = Phenix(dropdown).ancestor('[data-effect]'),\r\n                        current_effect   = dropdown_wrapper.getAttribute('data-effect');\r\n    \r\n                    //====> De-Activate Triggers <====//\r\n                    dropdown.classList.remove(active);\r\n                    dropdown_wrapper.querySelector('.px-toggle').classList.remove(active);\r\n    \r\n                    Phenix(dropdown).siblings(active)?.forEach((sibling:HTMLElement) => {\r\n                        sibling.classList.remove(active);\r\n                    });\r\n    \r\n                    //====> Hide Opened Dropdowns <====//\r\n                    if (current_effect == 'fade') Phenix(dropdown).fadeOut(duration, delay, display);\r\n                    else if (current_effect == 'slide') Phenix(dropdown).slideUp(duration, delay, display);\r\n                }\r\n            });\r\n        },\r\n\r\n        //====> Click to Dropdown <====//\r\n        dropdown_start = event => {\r\n            //====> De-Activate Other <====//\r\n            hide_others(activated);\r\n\r\n            //====> Prevent Default <====//\r\n            event.preventDefault();\r\n            \r\n            //====> Get the Target and its Sibling <====//\r\n            let event_trigger = event.target;\r\n            if (!event.target.matches(toggle)) event_trigger = Phenix(event_trigger).ancestor(toggle);\r\n\r\n            //===> Get the Targeted Sibling <===//\r\n            siblings = Phenix(event_trigger).siblings(target);\r\n\r\n            //===> Activate the Button <===//\r\n            Phenix(event_trigger).toggleClass(active);\r\n\r\n            //====> Active Button and the Target <====//\r\n            if (siblings) {\r\n                //====> Change Position <====//\r\n                change_position();\r\n\r\n                //====> Active Target <====//\r\n                Phenix(siblings).toggleClass(active);\r\n\r\n                //====> Effect : Fading <====//\r\n                if (effect == 'fade') { Phenix(siblings).fadeToggle(duration, delay, display); }\r\n                //====> Effect : Slide <====//\r\n                else if (effect == 'slide') { Phenix(siblings).slideToggle(duration, delay, display); }\r\n            }\r\n        };\r\n\r\n        //====> Click to Dropdown <====//\r\n        let toggle_element = dropdown_wrapper.querySelector(toggle);\r\n        toggle_element.addEventListener('click', clicked => {\r\n            dropdown_start(clicked);\r\n        });\r\n\r\n        //====> Set Accessibility Options <====//\r\n        toggle_element.setAttribute('role', 'button');\r\n        toggle_element.setAttribute('tabIndex', '0');\r\n\r\n        //====> De-Activate on Blank <====//\r\n        window.addEventListener('click', (blank) => {\r\n            //====> Clicked Target <====//\r\n            let exclude_final = `${target} *:not([href^=\"#\"]):not(${exclude})`,\r\n                clicked:any = blank.target;\r\n\r\n            //====> if the target is not the current element or any of its children <====//\r\n            if (!clicked.matches(target) && !clicked.matches(toggle) && !clicked.matches(`${toggle} *`) && !clicked.matches(exclude_final)) {\r\n                hide_others(activated);\r\n            }\r\n        });\r\n\r\n        //====> CSS Prepare <====//\r\n        Phenix(dropdown_wrapper).addClass(\"position-rv\");\r\n\r\n        //====> Divide Positions <====//\r\n        position = position.replace(' ','').split(',');\r\n\r\n        //====> Define Targets <====//\r\n        let the_target = Phenix(dropdown_target),\r\n            isScrolling = false\r\n\r\n        //====> Style Utilites <====//\r\n        the_target.addClass(\"position-ab\").addClass(\"z-index-dropdown\").addClass(\"hidden\");\r\n        the_target.addClass(`pos-${position[1] !== \"center\" ? `${position[1]}-0` : `${position[1]}-x`}`);\r\n        position[0] === \"top\" ? the_target.addClass('pos-before-y') : the_target.addClass('pos-after-y');\r\n\r\n        //====> Change Position on Scroll <====//\r\n        window.addEventListener('scroll', scrolling => isScrolling = true, {passive: true});\r\n\r\n        setInterval(() => {\r\n            if (isScrolling) {\r\n                isScrolling = false;\r\n                change_position();\r\n            }\r\n        }, 300);\r\n\r\n        //===> Finished Mounting <===//\r\n        dropdown_wrapper.classList.add('px-mounted');\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Media Setter\r\n * ===> 03 - Methods\r\n * ========> - Background Method\r\n * ===> 04 - Phenix Elements\r\n * ===> 05 - Get Options Data\r\n * ===> 06 - Set Media Size\r\n * ===> 07 - Clean Source [URL]\r\n * ===> 08 - Media Handler\r\n * ========> - Background Type\r\n * ===> 09 - Lazy-Loading Mode\r\n * ===> 10 - None-Valid Source\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n// ===> Add Type Declaration for Globals <===\r\ndeclare global {\r\n    interface Window {\r\n        // For three-utils.js script\r\n        threeUtils?: {\r\n            initializeViewer: (container: HTMLElement, options: object, assetsBasePath: string) => Promise<void>;\r\n        };\r\n        // For data localized from PHP using your existing key\r\n        PDS_WP_KEY?: {       // <-- Use your existing key name\r\n            assetsBasePath: string; // <-- Add the property we need\r\n            // Add other existing properties declared for PDS_WP_KEY if known\r\n            [key: string]: any; // Allows other existing properties\r\n        };\r\n    }\r\n}\r\n// ===> End Type Declaration <===\r\n\r\n/*====> Media Setter [un-tested] <====*/\r\nPhenixElements.prototype.multimedia = function (options?:{\r\n    type?:string,   //===> background, image, video, embed, iframe, gradient, mixed-bg, audio\r\n    src?:string,    //===> Media Source [URL]\r\n    size?:string,   //===> Aspect Ratio Size [1x1, 4x3, 16x9, 16x10, 21x9, *%]\r\n    player?:string, //===> Players [phenix, html or standard]\r\n    lazyloading?:boolean, //===> Lazyloading [true, false]\r\n    //===> Gradient Settings <===//\r\n    gradient?:{\r\n        value?:[],       //===> CSS Gradient Value [rotation, color1, color2, etc...]\r\n        mode?:string,    //===> Gradient Mode [linear, radial, conic]\r\n        repeat?:boolean, //===> Gradient Repeat [true, false]\r\n    },\r\n    //===> Players and Embed <===//\r\n    embed?:string,      //====> Embed Source [video, audio, youtube, vemio]\r\n    controls?:boolean,  //====> Embed Controls Enable\r\n    autoplay?:boolean,  //====> Embed Autoplay Enable\r\n    loop?:boolean,  //====> Embed infinite loop Enable\r\n    muted?:boolean,  //====> Embed Audio Mute Enable\r\n    //===> Extra <===//\r\n    alt?:string,   //===> Alternative Text for SEO\r\n    cover?:string, //===> Cover Image for [videos]\r\n}) {\r\n    //====> Background Method <====//\r\n    let background = (element, source) => {\r\n        //===> Clean Source [URL] <===//\r\n        source = encodeURI(source);\r\n        //===> Clean # for CSS Benefits <===//\r\n        source = source.replaceAll('#','%23');\r\n\r\n        //===> Set As CSS Background <===//\r\n        element.style.backgroundImage = `url(\"${source}\")`;\r\n        \r\n        //===> Remove Loading State <===//\r\n        element.classList.remove('px-is-loading');\r\n    };\r\n\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Media Checker <====//\r\n        let mediaDone = false;\r\n        if (mediaDone) return;\r\n        if (element.length != undefined) return;\r\n\r\n        //====> Get Options Data <====//\r\n        let type = element.getAttribute('data-type') || options?.type || 'background',\r\n            src  = element.getAttribute('data-src') || options?.src,\r\n            alt  = element.getAttribute('data-alt') || options?.alt || '',\r\n            ratio  = element.getAttribute('data-size') || options?.size,\r\n            splide = Phenix(element).ancestor('.splide.is-initialized'),\r\n            embed  = element.getAttribute('data-embed') || options?.embed || 'video',\r\n            cover  = element.getAttribute('data-cover') || options?.cover,\r\n            gradient = element.getAttribute('data-gradient') || options?.gradient?.value || false,\r\n            gradient_mode = element.getAttribute('data-mode') || options?.gradient?.mode || 'linear',\r\n            gradient_repeat = element.getAttribute('data-repeat') || options?.gradient?.repeat,\r\n            //====> Embed & Lazyloading <====//\r\n            lazy = Phenix(document).toBoolean(element.getAttribute('data-lazyloading') || options?.lazyloading),\r\n            controls = Phenix(document).toBoolean(element.getAttribute('data-controls') || options?.controls),\r\n            autoplay = Phenix(document).toBoolean(element.getAttribute('data-autoplay') || options?.autoplay) && (element.getAttribute('data-autoplay') || options?.autoplay) !== 'hover',\r\n            loop = Phenix(document).toBoolean(element.getAttribute('data-loop') || options?.loop),\r\n            muted = Phenix(document).toBoolean(element.getAttribute('data-muted') || options?.muted),\r\n            player_autoplay = element.getAttribute('data-autoplay') || options?.autoplay || 'hover';\r\n\r\n        //====> Set Media Size <====//\r\n        if (ratio && ratio != null || undefined) {\r\n            //====> Predefined Ratio's <====//\r\n            if (!element.classList.toString().includes('ratio')) element.classList.add(`ratio-${ratio}`);\r\n\r\n            //====> Otherwise <====//\r\n            else {\r\n                //====> Convert To Number <====//\r\n                let ratio_convert = parseInt(ratio);\r\n                //====> Set Height w/ Padding Bottom <====//\r\n                ratio_convert > 0 ? element.style.setProperty('--ratio-size', `${ratio_convert}%`) : null;\r\n            }\r\n        }\r\n\r\n        //====> if has Valid Source <====//\r\n        if (src || gradient)  {\r\n            //====> Media Handler <====//\r\n            let mediaHandle = () => {\r\n                //====> Gradient Validation <====//\r\n                let multiple = false;\r\n                if (gradient) {\r\n                    //=== Replace white Space ===//\r\n                    gradient = gradient.replace(' ','');\r\n                    //=== for Hex Colors ===//\r\n                    if (gradient.includes('#')) multiple = gradient.includes(',') ? true : false;\r\n                    //=== for RGB Colors ===//\r\n                    else if (gradient.includes('rgb')) multiple = gradient.includes('),') ? true : false;\r\n                    //=== for CSS Variables ===//\r\n                    else if (gradient.includes('var')) multiple = gradient.includes('),') ? true : false;\r\n                }\r\n\r\n                //====> De-Activate Loader <====//\r\n                if (lazy) {\r\n                    element.classList.remove('px-is-loading');\r\n                    if (element.style.backgroundImage) element.style.removeProperty('background-image');\r\n                }\r\n    \r\n                //====> Background Type <====//\r\n                if (type == 'background') {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n    \r\n                //====> Image Type <====//\r\n                else if (type == 'image') {\r\n                    //===> Set Background <===//\r\n                    // background(element, src);\r\n                    //===> Create Image <===//\r\n                    if(!element.querySelector(':scope > img')) Phenix(element).insert('prepend',`<img src=\"${src}\" alt=\"${alt}\" class=\"px-media-img\" loading=\"lazy\" />`);\r\n                    else element.querySelector(':scope > img').setAttribute('loading', 'lazy');\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n                \r\n                //====> Gradient Type <====//\r\n                else if (type == 'gradient') {\r\n                    //===> Check for Repeat <====//\r\n                    gradient_repeat ? gradient_repeat = 'repeating-' : gradient_repeat = '';\r\n                    //===> Set the Gradient <===//\r\n                    if(multiple) {\r\n                        element.style.backgroundImage = `${gradient_repeat}${gradient_mode}-gradient(${gradient})`;\r\n                    //===> Set As Color if it Single Value <===//\r\n                    } else element.style.backgroundColor = `${gradient}`;\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Mixed Type <====//\r\n                else if (type == 'mixed-bg') {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Get Current Background <===//\r\n                    let currentBg = element.style.backgroundImage,\r\n                        orderBG   = element.getAttribute('data-bg-order');\r\n\r\n                    //===> Check for Repeat <====//\r\n                    gradient_repeat ? gradient_repeat = 'repeating-' : gradient_repeat = '';\r\n                    //===> Set the Gradient <===//\r\n                    if(multiple) {\r\n                        if (orderBG === 'reverse') {\r\n                            element.style.backgroundImage = `${currentBg}, ${gradient_repeat}${gradient_mode}-gradient(${gradient})`;\r\n                        } else {\r\n                            element.style.backgroundImage = `${gradient_repeat}${gradient_mode}-gradient(${gradient}), ${currentBg}`;\r\n                        }\r\n                    //===> Set As Color if it Single Value <===//\r\n                    } else {\r\n                        if (orderBG === 'reverse') {\r\n                            element.style.backgroundImage = `${currentBg}, linear-gradient(${gradient},${gradient})`;\r\n                        } else {\r\n                            element.style.backgroundImage = `linear-gradient(${gradient},${gradient}), ${currentBg}`;\r\n                        }\r\n                    }\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> iFrame Type <====//\r\n                else if (type == 'iframe') {\r\n                    //===> Get the Current iFrame <===//\r\n                    let iframe = element.querySelector(':scope > iframe');\r\n                    //===> Create View <===//\r\n                    if (!iframe) {\r\n                        Phenix(element).insert('append', `<iframe src=\"${src}\" frameborder=\"0\" ${lazy ? 'loading=\"lazy\"' : ''} allowfullscreen sandbox=\"allow-scripts allow-same-origin\"></iframe>`);\r\n                    }\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Embed Type <====//\r\n                else if (type == 'embed') {\r\n                    //===> Embed Options <===//\r\n                    let media_attributes = `${lazy ? 'loading=\"lazy\"' : ''} ${autoplay ? 'autoplay=\"true\" playsinline=\"true\"' : ''} ${controls ? 'controls' : ''} ${loop ? 'loop' : ''} ${muted ? 'muted' : ''} ${cover ? `poster=\"${cover}\"` : ''}`;\r\n                    //===> Video Source <===//\r\n                    if (embed == 'video' && !element.querySelector(':scope > .px-video')) {\r\n                        //====> Create the Video <====//\r\n                        Phenix(element).insert('append', `<video class=\"px-video\" src=\"${src}\" ${media_attributes}></video>`);\r\n                        //====> Video Autoplay <====//\r\n                        if (player_autoplay === 'hover') {\r\n                            const video = element.querySelector('.px-video');\r\n                            Phenix(element).on('mouseenter', event => video.play());\r\n                            Phenix(element).on('mouseleave', event => video.pause());\r\n                        }\r\n                    }\r\n                    //===> Video Source <===//\r\n                    else if (embed != 'video' && !element.querySelector(':scope > .px-iframe')) {\r\n                        //====> Get the Source <====//\r\n                        let source = src;\r\n                        //====> Cleanup URL <====//\r\n                        if (source.includes('youtube.com')) source = src.replace('watch?v=', 'embed/');\r\n                        else if (source.includes('youtu.be')) source = src.replace('https://youtu.be/', 'https://www.youtube.com/embed/');\r\n                        else if (source.includes('vimeo.com')) source = src.replace('vimeo.com', 'player.vimeo.com/video');\r\n                        //====> Create the View <====//\r\n                        Phenix(element).insert('append', `<iframe class=\"px-iframe\" src=\"${source}\"  ${lazy ? 'loading=\"lazy\"' : ''} frameborder=\"0\" allowfullscreen></iframe>`);\r\n                    } \r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> 3D Object Type <====//\r\n                else if (type == '3d-viewer') {\r\n                    //====> Define the Canvas <====//\r\n                    let canvas = element.querySelector(':scope > canvas.px-3d') as HTMLElement;\r\n\r\n                    //====> Create the Canvas if it doesn't exist <====//\r\n                    if (!canvas) {\r\n                         //====> Default Model Type <====//\r\n                         let modelTypeForCanvas = 'gltf';\r\n                         //====> Get the Model Type from the the Extension <====//\r\n                         const extension = src.split('.').pop()?.toLowerCase();\r\n                         //====> If the Extension is Valid <====//\r\n                         if (extension && ['gltf', 'glb', 'obj', 'fbx'].includes(extension)) modelTypeForCanvas = extension;\r\n                         //====> If the Extension is Null/Undefined <====//\r\n                         else if (extension) modelTypeForCanvas = extension || 'gltf';\r\n                         //====> Create the Canvas <====//\r\n                         const canvasHTML = `<canvas class=\"px-3d fluid\" data-object=\"${src}\" data-model-type=\"${modelTypeForCanvas}\" data-background=\"${element.getAttribute('data-background') || 'null'}\" data-auto-rotate=\"${element.getAttribute('data-auto-rotate') || 'false'}\" data-controls=\"${element.getAttribute('data-controls') || 'orbit'}\"></canvas>`;\r\n                         //====> Append the Canvas <====//\r\n                         Phenix(element).insert('append', canvasHTML);\r\n                         //====> Redefine the Canvas <====//\r\n                         canvas = element.querySelector(':scope > canvas.px-3d') as HTMLElement;\r\n                    }\r\n\r\n                    //====> Check if already initialized ====//\r\n                    if (canvas && canvas.dataset.threeInitialized !== 'true') {\r\n                        //====> Get Asset Base Path from Localized Data (using PDS_WP_KEY) ====//\r\n                        const assetsBasePath = window.PDS_WP_KEY?.assetsBasePath;\r\n\r\n                        //====> Gather Options from Canvas ====//\r\n                        const viewerOptions = {\r\n                            modelPath: canvas.dataset.object,\r\n                            modelType: canvas.dataset.modelType || 'gltf',\r\n                            background: canvas.dataset.background === 'null' ? \"transparent\" : canvas.dataset.background,\r\n                            autoRotate: canvas.dataset.autoRotate === 'true',\r\n                            controls: canvas.dataset.controls || 'orbit'\r\n                        };\r\n\r\n                        //====> Load three-utils.js & Initialize ====//\r\n                        if (window.threeUtils?.initializeViewer) {\r\n                            //====> Initialize the Viewer ====//\r\n                            window.threeUtils.initializeViewer(canvas, viewerOptions, assetsBasePath).catch(err => console.error(\"Error during Three.js initialization:\", err, canvas));\r\n                            //====> Set the Initialized Attribute ====//\r\n                            canvas.dataset.threeInitialized = 'true';\r\n                        } else {\r\n                            //====> Import the Script ====//\r\n                            Phenix(document).import(\"three-utils\", \"script\", \"three/three-utils.js\", () => {\r\n                                //====> Initialize the Viewer ====//\r\n                                if (window.threeUtils?.initializeViewer) {\r\n                                    //====> Initialize the Viewer ====//    \r\n                                    window.threeUtils.initializeViewer(canvas, viewerOptions, assetsBasePath).catch(err => console.error(\"Error during Three.js initialization:\", err, canvas));\r\n                                    //====> Set the Initialized Attribute ====//\r\n                                    canvas.dataset.threeInitialized = 'true';\r\n                                }\r\n                                //====> Remove Loading Class from Canvas Wrapper ====//\r\n                                element.classList.remove('px-loading');\r\n                            }, { integrated: true, module: false });\r\n                        }\r\n                    }\r\n                    \r\n                    //===> Mark as Done for media handler loop ===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Something Else <====//\r\n                else {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n            };\r\n\r\n            //====> Lazy-Loading Mode <====//\r\n            if (lazy) {\r\n                //====> Activate Lazy-Loading <====//\r\n                if (!splide) {\r\n                    element.classList.add('px-is-loading');\r\n                    // Set temporary loading background\r\n                    element.style.backgroundImage = 'none';\r\n                }\r\n\r\n                //====> First View Handler <=====//\r\n                Phenix(element).inView({\r\n                    offset: 100,\r\n                    callback: (element) => mediaHandle()\r\n                });\r\n            }\r\n\r\n            //====> None-Lazy <====//\r\n            else mediaHandle();\r\n        }\r\n\r\n        //====> None-Valid Source <====//\r\n        else element.style.backgroundImage = 'https://placehold.co/1280x650?text=Source+URL+Not+Supported+or+404';\r\n    });\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Menu Builder\r\n * ===> 03 - Get Inline Options\r\n * ===> 04 - Default Options\r\n * ===> 05 - Dropdown Submenus\r\n * ===> 06 - Marking Submenus\r\n * ===> 07 - Marking Triggers\r\n * ===> 08 - Get Triggers\r\n * ===> 09 - Submenus Handler \r\n * ===> 10 - Active Submenus\r\n * ===> 11 - Responsive Toggle\r\n * ===> 12 - Phenix Selecting Method\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Menu Builder <====*/\r\nPhenixElements.prototype.menu = function (options?:{\r\n    menu_id?:string,     //===> Menu CSS ID\r\n    hover?:boolean,      //===> Dropdown on Hover [Desktop only]\r\n    sub_active?:string,  //===> Submenus CSS Active Class [px-submenu-active]\r\n    mobile?:string,      //===> Responsive Mode [dropdown, custom]\r\n    effect?:string,      //===> Dropdown Effect [slide, fade, custom]\r\n    arrow?:string,       //===> Dropdown Arrow icon class names\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(menu => {\r\n        /*====> Get Inline Options <====*/\r\n        let inline = attr => menu.getAttribute(attr);\r\n\r\n        /*====> Default Options <====*/\r\n        let menu_id = inline('data-id') || options?.menu_id || null,\r\n            hover = inline('data-hover') || options?.hover || false,\r\n            sub_active = inline('data-sub-active') || options?.sub_active || 'px-submenu-active',\r\n            effect = inline('data-effect') || options?.effect,\r\n            arrow  = inline('data-arrow') || options?.arrow?.split(\" \"),\r\n            responsive = inline('data-mobile') || options?.mobile || 'dropdown';\r\n\r\n        //====> Dropdown Submenus <====//\r\n        let submenus  = menu.querySelectorAll('li > ul, li > .megamenu'),\r\n            dropdowns = [];\r\n\r\n        //====> Dropdown Default Effect <====//\r\n        if (responsive === 'dropdown') {\r\n            !effect ? effect = 'slide' : null;\r\n        }\r\n\r\n        menu.setAttribute('data-effect', effect);\r\n\r\n        //====> Marking Submenus <====//\r\n        submenus.forEach((submenu_item:any) => {\r\n            submenu_item.classList.add('submenu');\r\n            if (Phenix(submenu_item).getCSS('display') !== 'none') submenu_item.style.display = 'none';\r\n            //===> Mark the Parent <====//\r\n            let submenu_toggle = submenu_item.parentNode;\r\n            submenu_toggle.classList.add('submenu-item');\r\n            //===> set arrow icons <===//\r\n            let arrow_icon = arrow?.split(' ');\r\n\r\n            if (arrow_icon) {\r\n                let toggle_btn = submenu_toggle;\r\n                if (toggle_btn.querySelector(':scope > a')) toggle_btn = toggle_btn.querySelector(':scope > a');\r\n                \r\n                //===> Add Classes <===//\r\n                toggle_btn.classList.add('arrow-icon');\r\n                for (let index = 0; index < arrow_icon.length; index++) {\r\n                    let iconName = arrow_icon[index];              \r\n                    toggle_btn.classList.add(iconName);\r\n                }\r\n            }\r\n            //===> Megamenu Fix <===//\r\n            if(submenu_item.classList.contains('megamenu')) {\r\n                submenu_item.parentNode.style.position = 'static';\r\n                submenu_item.querySelectorAll('ul').forEach(element => element.classList.add('megalist'));\r\n            }\r\n        });\r\n\r\n        //====> Marking Triggers <====//\r\n        Phenix(dropdowns).addClass('submenu-toggle');\r\n\r\n        //====> Get Triggers <====//\r\n        submenus.forEach(submenu => dropdowns.push(...Phenix(submenu).siblings('a')));\r\n\r\n        //====> Submenus Handler <====//\r\n        let submenus_handle = (elements:any) => Phenix(elements).on('click', click => {\r\n            //===> Disable Default Behavior <===//\r\n            click.preventDefault();\r\n\r\n            //===> Dropdown Data <===//\r\n            let trigger = click.target,\r\n                parent  = trigger.parentNode,\r\n                siblings = Phenix(parent).siblings(`.${sub_active}`),\r\n                target = parent.querySelector('.submenu');\r\n\r\n            //===> Toggle Dropdown <===//\r\n            if (effect === 'slide') Phenix(target).slideToggle();\r\n            else if (effect === 'fade') Phenix(target).fadeToggle();\r\n            parent.classList.toggle(sub_active);\r\n            parent.classList.toggle(sub_active.replace(\"active\", \"deactivate\"));\r\n\r\n            //===> Disable Others <===//\r\n            if (siblings) siblings.forEach(element => {\r\n                if (effect === 'slide') Phenix(element.querySelector('.submenu')).slideUp();\r\n                else if (effect === 'fade') Phenix(element.querySelector('.submenu')).fadeOut();\r\n                element.classList.remove(sub_active);\r\n                element.classList.add(sub_active.replace(\"active\", \"deactivate\"));\r\n            });\r\n        });\r\n\r\n        /*====> Active Submenus <====*/\r\n        if(!hover) submenus_handle(dropdowns);\r\n\r\n        /*====> Media Query Check <====*/\r\n        else if (hover && Phenix(document).viewport('width') < 1100) window.addEventListener('resize', resized => {\r\n            if (Phenix(document).viewport('width') < 1100) submenus_handle(dropdowns);\r\n        });\r\n\r\n        /*====> Responsive Toggle <====*/\r\n        if (menu_id && menu_id !== null) {\r\n            /*====> Set ID to the Menu <====*/\r\n            if (responsive === 'dropdown') !menu.getAttribute('id') ? menu.setAttribute('id', menu_id) : null;\r\n\r\n            /*====> Create External Menu <====*/\r\n            else if (responsive === 'custom') {\r\n                if (!document.querySelector(`#${menu_id}`)) {\r\n                    //====> Create the Menu into the Body <====//\r\n                    Phenix(document.body).insert('append', \r\n                        `<nav id=\"${menu_id}\" ${effect? 'data-effect=\"'+effect+'\"' : ''} class=\"px-custom-menu\">\r\n                            <div class=\"menu-wrapper\">${menu.innerHTML}</div>\r\n                            <a href=\"#${menu_id}\" class=\"menu-toggle\" data-id=\"${menu_id}\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\"></a>\r\n                        </nav>`\r\n                    );\r\n    \r\n                    //====> Clean Markup <====//\r\n                    Phenix(`#${menu_id} [id]`).forEach((element:HTMLElement) => element.removeAttribute('id'));\r\n                    Phenix(`#${menu_id} .menu-wrapper > *`).removeClass('flexbox');\r\n    \r\n                    /*====> Active Submenus <====*/\r\n                    effect = 'slide';\r\n                    submenus_handle(Phenix(`#${menu_id} .submenu-item > a`));\r\n                }\r\n            }\r\n        }\r\n    });\r\n    \r\n\r\n    /*====> Toggle Button <====*/\r\n    Phenix(`.menu-toggle`).on('click', click => {\r\n        //===> Disable Default Behavior <===//\r\n        click.preventDefault();\r\n        if (Phenix(click.target).ancestor('.block-editor-block-list__block')) return;\r\n\r\n        //===> Dropdown Data <===//\r\n        let trigger = click.target,\r\n            target  = trigger.getAttribute('data-id');\r\n\r\n        //===> Define Target <====//\r\n        if (target) target = `#${target}`;\r\n        else target = trigger.getAttribute('href');\r\n        target = document.querySelector(target);\r\n\r\n        //===> Toggle Menu <====//\r\n        target.classList.toggle('px-menu-active');\r\n        let effect = target.getAttribute('data-effect');\r\n        if (effect === 'slide') Phenix(target).slideToggle();\r\n        else if (effect === 'fade') Phenix(target).fadeToggle(500, 0, 'flex');\r\n    });\r\n\r\n    //====> Return Phenix Query <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Loop Through Phenix Query\r\n * ===> 03 - Popup Options\r\n * ===> 04 - Backdrop Trigger\r\n * ===> 05 - Popup CSS Classes\r\n * ===> 06 - Create Custom Event\r\n * ===> 07 - Show and Hide Modal\r\n * ===> 08 - Open by URL\r\n * ===> 09 - Open on Load\r\n * ===> 10 - Open When Scroll\r\n * ===> 11 - Lightbox Mode\r\n * ===> 12 - Active Triggers\r\n * ===> 13 - Close Triggers\r\n * ===> 14 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Popups Modals <====*/\r\nPhenixElements.prototype.popup = function (options?:{\r\n    type:string;        //===> the type of the popup as modal or lightbox\r\n    hash_url?:boolean;  //===> Show the Modal if called from url\r\n    backdrop?:boolean;  //===> Enable/Disable Close by Backdrop\r\n    onload?:boolean;    //===> Show on Page Load Required for 'timeout';\r\n    showon?:string;     //===> Show the Modal when the target is in View-Point\r\n    timeout?:number;    //===> Delay the Modal from showing work for [showon, onload]\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(popup => {\r\n        //=====> Popup Options <=====//\r\n        let type     = options?.type || popup.getAttribute('data-type') || 'modal',\r\n            timeout  = options?.timeout || parseInt(popup.getAttribute('data-timeout')),\r\n            showon   = options?.showon || popup.getAttribute('data-showon'),\r\n            onload   = options?.onload || popup.getAttribute('data-onload'),\r\n            hash_url = options?.hash_url || popup.getAttribute('data-hash'),\r\n            backdrop = options?.backdrop || popup.getAttribute('data-backdrop') || true,\r\n            modal_id = popup.getAttribute('id');\r\n\r\n        /*=====> Backdrop Trigger <=====*/\r\n        if (backdrop && !popup.querySelector('.backdrop-btn') && backdrop !== 'false') {\r\n            Phenix(popup).insert('append', `<button type=\"button\" class=\"reset-button backdrop-btn modal-close position-fx fluid h-100vh pos-start-0 pos-top-0 bg-alpha-75\" title=\"Close Window\"></button>`);\r\n            backdrop = popup.querySelector('.backdrop-btn');\r\n        }\r\n\r\n        //====> Return if has no ID <====//\r\n        if (!modal_id) return;\r\n\r\n        //====> Popup CSS Classes <====//\r\n        popup.classList.add(\r\n            'w-fluid',\r\n            'h-100vh',\r\n            'flexbox',\r\n            'px-popup',\r\n            'pos-top-0',\r\n            'position-fx',\r\n            'pos-start-0',\r\n            'px-scrollbar',\r\n            'z-index-modal',\r\n            'overflow-y-auto',\r\n        );\r\n\r\n        popup.querySelector('.modal-content')?.classList.add('position-rv', 'z-index-header');\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('modal-showed'),\r\n              hidden = new Event('modal-hidden');\r\n\r\n        //====> Show and Hide Modal <====//\r\n        let show_modal = () => {\r\n            //=====> Close Other Modals <=====//\r\n            let current_active = document.querySelector('.px-popup.active');\r\n            if (current_active && current_active != popup) {\r\n                hide_modal('.px-popup.active > *');\r\n            }\r\n\r\n            //==== Prevent Scroll ====//\r\n            document.body.classList.add('overflow-hidden');\r\n            //==== Open the Modal ====//\r\n            Phenix(`#${modal_id}`).fadeIn(500, 0, 'flex').addClass('active');\r\n            popup.classList.add('has-shown');\r\n            popup.classList.remove('hidden');\r\n            //====> Fire Event <====//\r\n            popup.dispatchEvent(showed);\r\n        },\r\n\r\n        hide_modal = (trigger) => {\r\n            //==== Close the Modal ====//\r\n            let parent = Phenix(trigger).ancestor('.px-popup');\r\n            Phenix(parent).fadeOut().removeClass('active');\r\n            //==== Restore Scroll ====//\r\n            document.body.classList.remove('overflow-hidden');\r\n            popup.classList.add('hidden');\r\n            //====> Fire Event <====//\r\n            popup.dispatchEvent(hidden);\r\n            //===> Cleanup Lightbox <===//\r\n            popup.querySelectorAll('.px-lightbox-media, .lightbox-slider').forEach(element => element.remove());\r\n        };\r\n\r\n        //=====> Lightbox Mode <=====//\r\n        if (type === 'lightbox') {\r\n            //===> Set ID <===//\r\n            modal_id = 'px-lightbox';\r\n\r\n            //===> Lightbox Triggers <===//\r\n            Phenix('.px-lightbox').on('click', isClicked => {\r\n                //===> Prevent Default <===//\r\n                isClicked.preventDefault();\r\n\r\n                //===> Get the Media URL <===//\r\n                let thumbnail = isClicked.target,\r\n                    media_url = thumbnail.getAttribute('href') || thumbnail.getAttribute('data-src');\r\n\r\n                //===> Fix URl <===//\r\n                if(!media_url) media_url = thumbnail.getAttribute('src');\r\n\r\n                //===> Check Group <===//\r\n                let lightbox_group = thumbnail.getAttribute('data-group'),\r\n                    lightbox_wrapper = popup.querySelector('.modal-content');\r\n\r\n                //===> Media Type Handler <===//\r\n                let media_type = (url, trigger) => {\r\n                    //===> Get Media Type <===//\r\n                    let media_type = trigger.getAttribute('data-media');\r\n\r\n                    //===> Video Type <===//\r\n                    if (media_type === 'video') {\r\n                        //===> Width Fix <===//\r\n                        lightbox_wrapper.classList.add('col-11', 'w-max-768');\r\n                        //===> Return Video <===//\r\n                        return `<div class=\"px-media ratio-16x9 px-lightbox-media\" data-type=\"html\">\r\n                            <video src=\"${url}\" autoplay controls></video>\r\n                        </div>`;\r\n                    }\r\n\r\n                    //===> Embed Type <===//\r\n                    else if (media_type === 'embed') {\r\n                        //===> Width Fix <===//\r\n                        lightbox_wrapper.classList.add('col-11');\r\n\r\n                        //===> Cleanup URL <===//\r\n                        if (url.includes('youtube.com')) url = url.replace('watch?v=', 'embed/');\r\n                        else if (url.includes('vimeo.com')) url = url.replace('vimeo.com', 'player.vimeo.com/video');\r\n\r\n                        //===> Create iframe <===//\r\n                        return `<div class=\"px-media ratio-16x9 px-lightbox-media\">\r\n                            <iframe src=\"${url}\" loading=\"lazy\" frameborder=\"0\" allowfullscreen></iframe>\r\n                        </div>`;\r\n                    }\r\n\r\n                    //===> Image Type <===//\r\n                    else {\r\n                        return `<img src=\"${url}\" alt=\"Full Size Image\" class=\"px-lightbox-media\" />`;\r\n                    }\r\n                }\r\n\r\n                //===> if Single Media <===//\r\n                if (!lightbox_group) {\r\n                    //===> Remove Current <===//\r\n                    lightbox_wrapper.querySelector('.px-lightbox-media')?.remove();\r\n                    //===> Create the Media Element if Not Exist <===//\r\n                    Phenix(lightbox_wrapper).insert('append', media_type(media_url, thumbnail));\r\n                }\r\n\r\n                //===> Group Mode <===//\r\n                else {\r\n                    //===> Create Slider Wrapper <===//\r\n                    let slider_wrapper = Phenix(lightbox_wrapper).insert('append', `<div class=\"lightbox-slider px-slider\" data-controls=\"1\"></div>`);\r\n\r\n                    //===> Insert Elements of the Group <===//\r\n                    Phenix(`[data-group=\"${lightbox_group}\"]`).forEach((item:any) => {\r\n                        //===> Get the URL of each item <===//\r\n                        media_url = item.getAttribute('href') || item.getAttribute('data-src');\r\n\r\n                        //===> Insert the Current Item as First <===//\r\n                        if (item === thumbnail) {\r\n                            Phenix(slider_wrapper).insert('prepend', `<div class=\"px-item\">${media_type(media_url, item)}</div>`);\r\n                        } else {\r\n                            Phenix(slider_wrapper).insert('append', `<div class=\"px-item\">${media_type(media_url, item)}</div>`);\r\n                        }\r\n                    });\r\n\r\n                    lightbox_wrapper.classList.add('w-max-1100');\r\n                    lightbox_wrapper.querySelectorAll('.px-item .px-lightbox-media').forEach(element => element.classList.add('w-fluid'));\r\n\r\n                    //===> Activate the Slider <===//\r\n                    popup.addEventListener('modal-showed', event => {\r\n                        Phenix('.lightbox-slider').slider({ autoplay: false });\r\n                    });\r\n                }\r\n\r\n                //===> Show Lightbox <===//\r\n                show_modal();\r\n            });\r\n        }\r\n\r\n        //=====> Open by URL <=====//\r\n        if (hash_url) {\r\n            if (hash_url !== '0' || 'false') window.addEventListener('load', () => {\r\n                setTimeout(() => {\r\n                    if (window.location.hash.substr(1) == modal_id) show_modal();\r\n                }, timeout)\r\n            });\r\n        }\r\n\r\n        //=====> Open on Load <=====//\r\n        if (onload) {\r\n            if (onload !== '0' || 'false') window.addEventListener('load', () => setTimeout(show_modal, timeout));\r\n        }\r\n        \r\n        //=====> Open When Scroll <=====//\r\n        if (showon) {\r\n            Phenix(showon).forEach(selector => {\r\n                Phenix(selector).inView({\r\n                    callback: () => {\r\n                        if (!popup.classList.contains('active') && !popup.classList.contains('has-shown')) {\r\n                            show_modal();\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //=====> Active Triggers <=====//\r\n        if (type === 'modal') {\r\n            let triggers_select = `[data-modal=\"${modal_id}\"], [href=\"#${modal_id}\"]:not([target=\"_blank\"])`;\r\n            Phenix(triggers_select).on('click', show_modal);\r\n\r\n            //====> Set Accessibility Options <====//\r\n            Phenix(triggers_select).setAttributes({'role': 'button', 'tabIndex': '0'});\r\n        }\r\n\r\n        //=====> Close Triggers <=====///\r\n        popup.querySelectorAll('.modal-close').forEach(trigger => {\r\n            trigger.addEventListener('click', () => {\r\n                hide_modal(trigger);\r\n            });\r\n            //====> Set Accessibility Options <====//\r\n            trigger.setAttribute('role', 'button');\r\n            trigger.setAttribute('tabIndex', '0');\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Progress Plugin\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Progress <====*/\r\nPhenixElements.prototype.progress = function (options?:{\r\n    type?:string,    //===> Timer Type [bar, circle, radial]\r\n    color?:any,      //===> the Progress Color\r\n    value?:number,   //===> the progress value\r\n    label?:string,   //===> the progress label\r\n    size?:number,    //===> the size of the progress with px\r\n    lazyloading?:boolean,  //====> Animate when its visible\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((progress:any) => {\r\n        //====> Get Progress Data <====//\r\n        let type = progress.getAttribute('data-type') || options?.type || 'bar',\r\n            color = progress.getAttribute('data-color') || options?.color || 'var(--primary-color)',\r\n            value = parseInt(progress.getAttribute('data-value')) || options?.value || 0,\r\n            label = progress.getAttribute('data-label') || options?.label || \"\",\r\n            lazy  = progress.getAttribute('data-lazy')  || options?.lazyloading,\r\n            circleSize = 700;\r\n\r\n        //====> Set Progress <====//\r\n        let setProgress = (bar) => {\r\n            //====> Progress Handler <====//\r\n            let progress_handler = () => {\r\n                //====> Get Current Value <====//\r\n                let value = parseFloat(progress.getAttribute('data-value')) || options?.value || 0,\r\n                    color = progress.getAttribute('data-color') || options?.color || 'var(--primary-color)';\r\n\r\n                //====> Set Bar Data <====//\r\n                if (type === 'bar') {\r\n                    bar.style.width = `${value}%`;\r\n                    bar.style.backgroundColor = color;\r\n                    bar.setAttribute('data-value', value);\r\n                    bar.setAttribute('data-label', label);\r\n                }\r\n                //====> Set Circle Data <====//\r\n                if (type === 'circle') {\r\n                    //====> Define Elements <====//\r\n                    let circle_path = bar.querySelector('.circle-progress');\r\n                    let circle_text = bar.querySelector('.circle-text');\r\n\r\n                    //====> Check if is Counting <====//\r\n                    if (circle_text.classList.contains('is-counting')) return;\r\n                    \r\n                    //====> Create Temp Value <====//\r\n                    let current_value = 0;\r\n                    circle_path.setAttribute('stroke-dashoffset', `${circleSize*((value/100)-1)}px`);\r\n\r\n                    //====> Animate the Counting <====//\r\n                    let CountUpTimer = setInterval(() => {\r\n                        //====> Set Progress <====//\r\n                        if (current_value < value) {\r\n                            current_value += 1;\r\n                            circle_text.classList.add('is-counting');\r\n                            circle_text.textContent = `${current_value}%`;\r\n                        }\r\n                        //===> if Already Done <===//\r\n                        if (current_value === value || circle_text.classList.contains('done-counting')) {\r\n                            //====> Clear When Done <====//\r\n                            circle_text.classList.add('done-counting');\r\n                            clearInterval(CountUpTimer);\r\n                        }\r\n                    }, 50);\r\n                }\r\n                //====> Set Circle Data <====//\r\n                if (type === 'radial') {\r\n                    //===> get Progress Data <===//\r\n                    let radial_meter = bar.querySelector('.progress'),\r\n                        meter_calc = radial_meter.getTotalLength() * ((100 - value) / 100),\r\n                        radial_path = bar.querySelector('.progress');\r\n                    //===> Set Progress <===//\r\n                    radial_path.setAttribute('stroke-dashoffset', Math.max(0, meter_calc));\r\n                    radial_path.setAttribute('stroke', color);\r\n                }\r\n            }\r\n\r\n            //====> Set Progress <====//\r\n            if (lazy && lazy !== 'false') {\r\n                //====> Add Loading State <====//\r\n                progress.classList.add('px-is-loading');\r\n                progress.style.setProperty('--progress-value', '0');\r\n\r\n                //====> First View Handler <====//\r\n                Phenix(progress).inView({\r\n                    offset: 100,\r\n                    callback: () => {\r\n                        //====> Remove Loading State <====//\r\n                        progress.classList.remove('px-is-loading');\r\n                        //====> Start Progress <====//\r\n                        progress_handler();\r\n                    }\r\n                });\r\n            } else {\r\n                progress_handler();\r\n            };\r\n        };\r\n\r\n        //====> Wrapper Properties <====//\r\n        progress.classList.add('position-rv', 'tx-align-center', 'lineheight-1');\r\n        progress.setAttribute('data-type', type);\r\n\r\n        //====> Bar Mode <====//\r\n        if (type === 'bar') {\r\n            //====> get the bar <====//\r\n            let progressBar = progress.querySelector('.px-progress-bar'),\r\n                size = progress.getAttribute('data-size')  || options?.size || 16;\r\n\r\n            //====> Create the bar if not existed <====// \r\n            if (!progressBar) {\r\n                //====> Add Progress Bar <====//\r\n                Phenix(progress).insert('append', `<span class=\"px-progress-bar display-block transition-fast overflow-hidden position-rv\" data-value=\"${value}\" ${label ? `data-label=\"${label}\"`: null} style=\"width:0;height:100%\"></span>`);\r\n                progressBar = progress.querySelector('.px-progress-bar'); \r\n            }\r\n\r\n            //====> Setup the Progress <====//\r\n            if (!progress.classList.contains('px-progress-bar-js')) {\r\n                //====> Base Background <====//\r\n                progress.classList.add('bg-alpha-10', 'overflow-hidden', 'px-progress-bar-js');\r\n                progress.style.height = `${Phenix(document).toREM(size)}`;\r\n                progress.style.lineHeight = `calc(${Phenix(document).toREM(size)})`;\r\n                progress.style.setProperty('--width', `${Phenix(document).toREM(progress.clientWidth)}`);\r\n                //====> Set Progress <====//\r\n                setProgress(progressBar);\r\n\r\n            } else {\r\n                setProgress(progressBar);\r\n            }\r\n        }\r\n\r\n        //====> Circle Mode <====//\r\n        if (type === 'circle') {\r\n            //====> Circle Shape <====//\r\n            let size = progress.getAttribute('data-size') || options?.size || 15,\r\n                svg  = progress.querySelector('.px-progress-circle');\r\n            \r\n            //====> Create SVG if not Existed <====//\r\n            if (!svg) {\r\n                let circle_shape = `<svg class=\"px-progress-circle\" viewBox=\"-15 -15 225 225\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" style=\"transform:rotate(-90deg);\">\r\n                    <circle r=\"100\" class=\"circle-base\" cx=\"100\" cy=\"100\" fill=\"transparent\" stroke-width=\"${size}\" stroke=\"var(--gray-light)\" stroke-dasharray=\"${circleSize}px\" stroke-dashoffset=\"0\"></circle>\r\n                    <circle r=\"100\" class=\"circle-progress\" cx=\"100\" cy=\"100\" style=\"transition: stroke-dashoffset ${value*50}ms linear 0.2s\" stroke-width=\"${size}\" stroke=\"${color}\" stroke-linecap=\"round\" stroke-dashoffset=\"${circleSize}px\" fill=\"transparent\" stroke-dasharray=\"${circleSize}px\"></circle>\r\n                    <text x=\"${Phenix(document).direction() === 'rtl' ? '72%' : '25%'}\" class=\"circle-text\" y=\"52%\" fill=\"${color}\" font-size=\"52px\" font-weight=\"bold\" style=\"transform:rotate(90deg) translate(0px, -196px)\">0%</text>\r\n                </svg>`;\r\n\r\n                Phenix(progress).insert('append', circle_shape);\r\n                svg = progress.querySelector('.px-progress-circle');\r\n                setProgress(svg);\r\n            }\r\n            //====> if Exist Update it <====//\r\n            else {\r\n                setProgress(svg);\r\n            }\r\n        }\r\n\r\n        //====> Circle Mode <====//\r\n        if (type === 'radial') {\r\n            //====> Circle Shape <====//\r\n            let size = progress.getAttribute('data-size') || options?.size || 10,\r\n            svg  = progress.querySelector('.px-progress-radial');\r\n            \r\n            //====> Create SVG if not Existed <====//\r\n            if (!svg) {\r\n                let circle_shape = `<svg width=\"100%\" viewBox=\"0 0 200 180\" class=\"px-progress-radial\">\r\n                    <path class=\"progress-bg\" stroke=\"rgba(0,0,0, 0.05)\" stroke-width=\"${size}\" d=\"M41 149.5a77 77 0 1 1 117.93 0\"  fill=\"none\" stroke-miterlimit=\"round\"/>\r\n                    <path class=\"progress\" stroke=\"${color}\" stroke-width=\"${size}\" d=\"M41 149.5a77 77 0 1 1 117.93 0\" fill=\"none\" stroke-miterlimit=\"round\" stroke-dasharray=\"350\" stroke-dashoffset=\"350\"/>\r\n                </svg>`;\r\n                \r\n                Phenix(progress).insert('append', circle_shape);\r\n                svg = progress.querySelector('.px-progress-radial');\r\n\r\n                setProgress(svg);\r\n            }\r\n            //====> if Exist Update it <====//\r\n            else {\r\n                setProgress(svg);\r\n            }\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - \r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Uploader [un-tested] <====*/\r\nPhenixElements.prototype.rating = function (options?:{\r\n    type?:string,   //===> standard, advanced\r\n    src?:string,    //===> Media Source [URL]\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> if its Done <====//\r\n        if(element.classList.contains('js-done')) return;\r\n\r\n        //====> Get Data <====//\r\n        let rating_name = \".rate-icon\",\r\n            input = element.querySelector('input'),\r\n            maxRate:any = parseInt(input.getAttribute('max')) || 5,\r\n            iconName = element.getAttribute('data-icon') || 'fas fa-star';\r\n\r\n        //====> Create Elements <====//\r\n        for (let i = 1; maxRate >= i; i++) {\r\n            Phenix(input).insert('after', `<a href=\"javascript:void(0)\" class=\"${iconName} rate-icon\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\"></a>`);\r\n        }\r\n\r\n        //====> get the New Elements <====//\r\n        const ratingElements = element.querySelectorAll(rating_name);\r\n\r\n        //====> Loop Through Rating Elements <====//\r\n        ratingElements.forEach((rateElement, index) => {\r\n            //===> Activate From Current Value <===//\r\n            if (parseInt(input.value) >= index) rateElement.classList.add('active');\r\n\r\n            //===> Activated Stars as Elements <===//\r\n            const activated = rateElement.parentNode.querySelectorAll(`${rating_name}.active`);\r\n\r\n            //===> Hover Effect <===//\r\n            rateElement.addEventListener('mouseenter', event => {\r\n                //===> Activate Elements <===//\r\n                event.target.classList.add('active');\r\n                Phenix(event.target).next(rating_name, true)?.forEach(item => item.classList.remove('active'));\r\n                Phenix(event.target).prev(rating_name, true)?.forEach(item => item.classList.add('active'));\r\n                //===> Return the Prev Status <===//\r\n                activated.forEach(item => item.classList.add('active'));\r\n            });\r\n\r\n            //===> When Mouse Leaves Element <===//\r\n            rateElement.addEventListener('mouseleave', event => {\r\n                //===> Deactivate Elements <===//\r\n                element.querySelectorAll(`${rating_name}.active`).forEach(item => item.classList.remove('active'));\r\n                //===> Return the Prev Status <===//\r\n                activated.forEach(item => item.classList.add('active'));\r\n            });\r\n\r\n            //===> Toggle Rate <===//\r\n            rateElement.addEventListener('click', event => {\r\n                //===> Set Value <===//\r\n                input.value = index+1;\r\n\r\n                //===> Activate Elements <===//\r\n                event.target.classList.add('active');\r\n                Phenix(rateElement).prev(\".rate-icon\", true)?.forEach(ele => ele.classList.add('active'));\r\n                Phenix(rateElement).next(\".rate-icon\", true)?.forEach(ele => ele.classList.remove('active'));\r\n\r\n                //===> Activate Rated Elements <===//\r\n                rateElement.addEventListener('mouseleave', event => event.target.classList.add('active'));\r\n\r\n                //===> Dispatch Change Event <===//\r\n                input.dispatchEvent(new Event('change'));\r\n            });            \r\n        });\r\n\r\n        //===> Done <===//\r\n        element.classList.add('js-done');\r\n    });\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Advanced Select\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Advanced Select <====*/\r\nPhenixElements.prototype.select = function (options?:{\r\n    max?:number,\r\n    search:boolean,\r\n    multiple:boolean,\r\n    placeholder?:string,\r\n    searchPlaceholder?:string,\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(select => {\r\n        //====> if Empty Select Return <====//\r\n        if (!select.querySelector('option')) return;\r\n\r\n        //====> Get Options <====//\r\n        let events_data:any = {},\r\n            classes  = select.classList,\r\n            multiple = select.hasAttribute('multiple') || options?.multiple,\r\n            maxItems = parseInt(select.getAttribute('data-max')) || options?.max,\r\n            search = select.getAttribute('data-search') || options?.search,\r\n            placeholder = select.getAttribute('data-placeholder') || options?.placeholder,\r\n            searchPlaceholder = select.getAttribute('data-search-placeholder') || options?.searchPlaceholder || 'Search...';\r\n        \r\n        //====> Create Custom Events <====//\r\n        const opened = new CustomEvent('opened', {detail: events_data,bubbles: true,cancelable: false}), \r\n              change = new CustomEvent('change', {detail: events_data,bubbles: true,cancelable: false}), \r\n              update = new CustomEvent('update', {detail: events_data,bubbles: true,cancelable: false}), \r\n              typing = new CustomEvent('typing', {detail: events_data,bubbles: true,cancelable: false}), \r\n              focus  = new CustomEvent('focus',  {detail: events_data,bubbles: true,cancelable: false}), \r\n              closed = new CustomEvent('closed', {detail: events_data,bubbles: true,cancelable: false});\r\n\r\n        //====> Select Component <====//\r\n        const select_create = () => {\r\n            //====> Create Custom Select <====//\r\n            let hasWrapper = Phenix(select).ancestor('.px-select'),\r\n                new_select = hasWrapper?.querySelector('.px-select-options') ? hasWrapper : null;\r\n\r\n            //====> Create Select wrapper if not existed <====//\r\n            if (hasWrapper && !new_select) {\r\n                new_select = Phenix(hasWrapper).css({\"line-height\": \"var(--height)\", \"cursor\": \"pointer\"}).addClass('flexbox').addClass('position-rv')[0];\r\n            } else {\r\n                new_select = Phenix(select).insert('before', `<div class=\"px-select flexbox position-rv\" style=\"line-height:var(--height);cursor: pointer;\"></div>`);\r\n            }\r\n            \r\n            //====> Copy Select Classes and Prepare CSS <====//\r\n            new_select.classList.add(...classes);\r\n            new_select = Phenix(new_select);\r\n\r\n            //====> Fix Padding for Single <====//\r\n            if (!multiple) {\r\n                new_select.css({\r\n                    \"padding-left\": \"0\",\r\n                    \"padding-right\": \"0\",\r\n                });\r\n            } else {\r\n                new_select.css({\r\n                    \"height\" : \"auto\",\r\n                    \"min-height\": \"var(--height)\",\r\n                    \"padding-left\": `calc(var(--padding)/2)`,\r\n                    \"padding-right\": `calc(var(--padding)/2)`,\r\n                });\r\n            }\r\n\r\n            //====> Create Options Wrapper <====//\r\n            let options_list = new_select.insert('append', `<ul class=\"reset-list fs-13 hidden border-1 border-solid border-alpha-10 fluid bg-inherit px-select-options bx-shadow-dp-2 position-ab fluid lineheight-160 pos-start-0 pos-after-y z-index-dropdown overflow-y-auto\" style=\"max-height:270px;\"></ul>`);\r\n                options_list = Phenix(options_list);\r\n\r\n            //====> Wrap the Original Select <====//\r\n            select.classList.add('hidden', 'px-mounted');\r\n            if(!hasWrapper) select = new_select.insert('append', select);\r\n\r\n            //===> Return new Data <===//\r\n            return [new_select, options_list]\r\n        };\r\n\r\n        //===> if its Wrong Element Skip-it <====//\r\n        if (select.tagName !== \"SELECT\") return;\r\n\r\n        //====> Rebuild from Scratch <====//\r\n        if (select.classList.contains('px-mounted')) {\r\n            select.addEventListener('update', isUpdated => {\r\n                Phenix(isUpdated.target).rebuildSelect();\r\n                //===> Get Options <====//\r\n                // const original_options = select.querySelectorAll('option'),\r\n                //       select_wrapper =  Phenix(select).ancestor('.px-select'),\r\n                //       new_select_options = select_wrapper.querySelectorAll('.px-select-options .px-select-option');\r\n                \r\n                // //===> if there is a new Items Rebuild <====/\r\n                // if (original_options.length !== new_select_options.length) {\r\n                //     //===> Remove Classes <===//\r\n                //     select.classList.remove('px-mounted');\r\n                //     select_wrapper.classList.remove('px-mounted');\r\n\r\n                //     //===> Remove Elements <===//\r\n                //     select_wrapper.querySelectorAll('.px-select-toggle, .px-select-options').forEach((element:HTMLElement) => element.remove());\r\n\r\n                //     //===> Rebuild the Component <====//\r\n                //     Phenix(select).select();\r\n                // }\r\n            });\r\n        }\r\n\r\n        //====> if Not Mounted Create <====//\r\n        else {\r\n            //====> Create New Component <====//\r\n            let select_component = select_create(),\r\n                new_select = select_component[0],\r\n                options_list = select_component[1];\r\n\r\n            //====> Create Options List <====//\r\n            select.querySelectorAll(':scope > *').forEach(option => {\r\n                //====> Get Option Data <====//\r\n                let option_text = option.textContent,\r\n                    option_value = option.getAttribute('value'),\r\n                    option_classes = `divider-b pdy-10 lineheight-150`,\r\n                    image_icon = ``,\r\n                    current_item:any;\r\n\r\n                //====> Set Images <====//\r\n                if (option.hasAttribute('data-image')) {\r\n                    let source = option.getAttribute('data-image');\r\n                    //===> Clean Source [URL] <===//\r\n                    source = encodeURI(source);\r\n                    //===> Set the image <===//\r\n                    image_icon = `<img style=\"width:1em\" alt=\"${option_text}\" src=\"${source}\" class=\"me-5\">`;\r\n                }\r\n\r\n                //====> Set Selected Class <====//\r\n                if (option.hasAttribute('selected') && option.getAttribute('selected') === 'true') option_classes += ` px-selected`;\r\n\r\n                //====> Options Headline <====//\r\n                if (option.matches('optgroup')) {\r\n                    //===> Create Option Group <===//\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-group mb-0 bg-alpha-05 pdx-10 weight-strong ${option_classes}\" data-value=\"${option_value}\">${image_icon}${option.getAttribute('label') ? option.getAttribute('label') : option_text}</li>`);\r\n                    \r\n                    //===> Create Sub Options <===//\r\n                    option.querySelectorAll('option').forEach(sub_option => {\r\n                        //===> Create Option <===//\r\n                        current_item = options_list.insert('append', `<li class=\"px-select-option mb-0 pdx-15 ${option_classes}\" data-value=\"${sub_option.getAttribute('value')}\" role=\"button\" tabIndex=\"0\">${image_icon}${sub_option.textContent}</li>`);\r\n                    });\r\n                }\r\n                \r\n                //====> Disabled Options  <====//\r\n                else if (option.hasAttribute('disabled')) {\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-disabled mb-0 pdx-15 color-gray tx-line-through ${option_classes}\" data-value=\"${option_value}\">${image_icon}${option_text}</li>`);\r\n                } \r\n                \r\n                //====> Options Items <====//\r\n                else {\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-option mb-0 pdx-15 ${option_classes}\" data-value=\"${option_value}\" role=\"button\" tabIndex=\"0\">${image_icon}${option_text}</li>`);\r\n                }\r\n\r\n                //====> Copy Classes <====//\r\n                let original_classes = option.classList;\r\n                if(original_classes.length > 0) original_classes.forEach((cl:any) => current_item.classList.add(cl));\r\n            });\r\n\r\n            //====> Create Placeholder <====//\r\n            let first_option = select.querySelector('option:first-of-type'),\r\n                first_label = placeholder ? placeholder : '---',\r\n                first_classes = (holder) => {\r\n                    //===> Get Placeholder Classes <===//\r\n                    if (placeholder && holder) return holder;\r\n                    else if (first_option.classList) return first_option.classList;\r\n                },\r\n                first_image = (image, alt) => {\r\n                    if(placeholder && image) {\r\n                        //===> Clean Source [URL] <===//\r\n                        image = encodeURI(image);\r\n                        //===> Set the image <===//\r\n                        return `<img style=\"width:1em\" alt=\"${alt}\" src=\"${image}\" class=\"me-5\">`;\r\n                    } else {return '';}\r\n                };\r\n\r\n            //====> Define [Multiple] Variables <====//\r\n            let new_select_value, new_value_group, tag_classes, tag_remover,\r\n                //====> Tag Remover Handler <====//\r\n                set_tag_remover = (value_element) => {\r\n                    if (value_element) value_element.addEventListener('click', clicked => {\r\n                        //===> Get Value <===//\r\n                        let tag_value = value_element.parentNode.getAttribute('data-value'),\r\n                            select_values = new_select[0].getAttribute('data-value').split(',');\r\n\r\n                        //===> Remove Tag <====//\r\n                        value_element.parentNode.remove();\r\n\r\n                        //===> Remove from Values <===//\r\n                        select_values.forEach((val, index) => {\r\n                            if(val === tag_value) {\r\n                                if (select_values.length === 1) {\r\n                                    select_values = \"\";\r\n                                } else {\r\n                                    select_values = select_values.splice(index-1, 1);\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        //====> Set Values <====//\r\n                        new_select[0].setAttribute('data-value', select_values);\r\n                        select.value = select_values;\r\n\r\n                        //====> Unselect Option <====//\r\n                        select.querySelector(`[value=\"${tag_value}\"]`)?.removeAttribute('selected');\r\n                        new_select[0].querySelector(`[data-value=\"${tag_value}\"]`)?.classList.remove('px-selected');\r\n                        \r\n                        //===> Fire Events <===//\r\n                        new_select[0].dispatchEvent(change);\r\n                        select.dispatchEvent(change);\r\n                    });\r\n                },\r\n                //====> Tag Remover Handler <====//\r\n                tag_padding_fixer = () => {\r\n                    //===> Remover Size Fixer <===//\r\n                    if(Phenix(document).direction() === 'ltr') return `padding-left: calc(1.5em + ${Phenix(document).toREM(8)})`;\r\n                    else return `padding-right: calc(1.5em + ${Phenix(document).toREM(8)})`;\r\n                },\r\n                //====> Default Value Setter <====//\r\n                get_default_value = () => {\r\n                    //====> Set Default Value <====//\r\n                    if (!multiple && select.querySelector('[selected]')) {\r\n                        //====> Set Value <====//\r\n                        let selected_option = select.querySelector('[selected]'),\r\n                            default_value = selected_option.getAttribute('value'),\r\n                            default_label = selected_option.textContent;\r\n\r\n                        new_select[0].setAttribute('data-value', default_value);\r\n                        new_select_value.textContent = default_label;\r\n\r\n                        //====> Change Classes <====//\r\n                        if(selected_option.classList) {\r\n                            //====> Get new Classes <====//\r\n                            let new_classes = selected_option.classList,\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => {\r\n                                if (cl === '') return;\r\n                                new_select_value.classList.remove(cl);\r\n                            });\r\n\r\n                            //====> Set New Classes <====//\r\n                            new_select_value.classList.add(...new_classes);\r\n                        }\r\n\r\n                        //====> Change Image <====//\r\n                        if (selected_option.getAttribute('data-image')) {\r\n                            //===> Get New Image <===//\r\n                            let new_image = encodeURI(selected_option.getAttribute('data-image')),\r\n                                current_image = new_select_value.querySelector('img'),\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //===> If Exist Change URL <====//\r\n                            if (current_image) {\r\n                                current_image.setAttribute('src', new_image);\r\n                                current_image.setAttribute('alt', selected_option.textContent);\r\n                            }\r\n\r\n                            //===> Create Image <===//\r\n                            else Phenix(new_select_value).insert('prepend', `<img style=\"width:1em\" alt=\"${selected_option.textContent}\" src=\"${new_image}\" class=\"me-5\">`);\r\n                        }\r\n                    } \r\n                    //====> For Multiple Selection <====//\r\n                    else if (multiple) {\r\n                        //====> Collect Default Value <====//\r\n                        let default_values = [],\r\n                            search_element = Phenix(new_value_group.querySelector('.px-select-search'));\r\n\r\n                        //====> Reset Value <====//\r\n                        new_value_group.querySelectorAll('.px-selected-value').forEach(value => value.remove());\r\n\r\n                        //====> Attach each Option as Tag <====// \r\n                        select.querySelectorAll('[selected]').forEach(item => {\r\n                            //====> Create the Option <====//\r\n                            let value_element = search_element.insert('before', `<span style=\"font-size: 0.8em;${tag_padding_fixer()}\" class=\"${tag_classes}\" data-value=\"${item.value}\">${tag_remover} ${item.textContent}</span>`);\r\n\r\n                            //====> Collect its Value <=====//\r\n                            default_values.push(item.value);\r\n\r\n                            //====> Set Remover <====//\r\n                            set_tag_remover(value_element.querySelector('.px-value-remover'));\r\n                        });\r\n                        //====> Set Default Values <====//\r\n                        new_select[0].setAttribute('data-value', default_values);\r\n                        select.value = default_values;\r\n                    }\r\n                };\r\n\r\n            //====> Multiple Mode <====//\r\n            if (multiple) {\r\n                //===> Tag Classes <===//\r\n                tag_classes = 'px-selected-value inline-block lineheight-160 bg-alpha-10 mb-5 radius-sm pdy-5 pde-10 me-5 position-rv';\r\n\r\n                //===> Tag Remover <===//\r\n                tag_remover = `<button type=\"button\" class=\"px-value-remover reset-button fs-inherit inline-block position-ab pos-center-y pos-start-0 h-100 bg-alpha-05\" style=\"width:1.5em\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" style=\"width:0.6em\">\r\n                        <path fill=\"var(--color)\" d=\"M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z\"/>\r\n                    </svg>\r\n                </button>`;\r\n\r\n                //===> Create Values Group <===//\r\n                new_value_group = new_select.insert('prepend', `<div class=\"px-selected-values pdt-5 px-select-toggle tx-nowrap col-12 flexbox align-center-y\">\r\n                    <input class=\"px-select-search col w-50 reset-input input-inherit mb-5\" placeholder=\"${first_label}\" />\r\n                </div>`);\r\n            }\r\n            //====> Single Mode <====//\r\n            else {\r\n                //===> Get First Label <===//\r\n                let first_label = placeholder ? placeholder : first_option.textContent,\r\n                    holder_classes = select.getAttribute('data-holder-classes'),\r\n                    holder_image   = select.getAttribute('data-image');\r\n\r\n                //===> Create Placeholder <===//\r\n                new_select_value = new_select.insert('prepend', `<button type=\"button\" class=\"reset-button h-min-100 px-select-toggle tx-nowrap col ${first_classes(holder_classes)}\">${first_image(holder_image,first_label)}${first_label}</button>`);\r\n\r\n                //===> Set First Option as Value <===//\r\n                new_select[0].setAttribute('data-value', `${first_option ? first_option.getAttribute('value') : ''}`);\r\n\r\n                //===> Style Placeholder <===//\r\n                Phenix(new_select_value).css({\r\n                    \"padding-left\": \"var(--padding)\",\r\n                    \"padding-right\": \"var(--padding)\",\r\n                });\r\n            }\r\n\r\n            //====> Set Default Value <====//\r\n            get_default_value();\r\n\r\n            //====> Disabled Mode <====//\r\n            if (select.hasAttribute('disabled')) new_select.addClass('disabled');\r\n            \r\n            //====> Enable Search <====//\r\n            if(search || multiple) {\r\n                //====> Create Search <====//\r\n                if (!multiple) options_list.insert('prepend', `<li class=\"pdy-5 pdx-15 divider-b flexbox flow-nowrap align-center-y\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"me-5\" style=\"width:.9em\">\r\n                        <path fill=\"var(--color)\" d=\"M508.5 468.9L387.1 347.5c-2.3-2.3-5.3-3.5-8.5-3.5h-13.2c31.5-36.5 50.6-84 50.6-136C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c52 0 99.5-19.1 136-50.6v13.2c0 3.2 1.3 6.2 3.5 8.5l121.4 121.4c4.7 4.7 12.3 4.7 17 0l22.6-22.6c4.7-4.7 4.7-12.3 0-17zM208 368c-88.4 0-160-71.6-160-160S119.6 48 208 48s160 71.6 160 160-71.6 160-160 160z\" />\r\n                    </svg>\r\n                    <input class=\"pdy-5 px-select-search col reset-input input-inherit w-50\" placeholder=\"${searchPlaceholder}\">\r\n                </li>`);\r\n\r\n                //====> Search <====//\r\n                new_select[0].querySelectorAll('.px-select-search').forEach(input => {\r\n                    input.addEventListener('input', typing => {\r\n                        //====> Get Search Value <====//\r\n                        let search_value = typing.target.value.toLowerCase();\r\n    \r\n                        //====> Hide All Group Titles <====//\r\n                        options_list[0].querySelectorAll('.px-select-group').forEach(headline => headline.classList.add('hidden'));\r\n                        \r\n                        //====> Loop Through Options <====//\r\n                        options_list[0].querySelectorAll('.px-select-option,.px-select-disabled').forEach(option => {\r\n                            //====> Hide Options <====//\r\n                            option.classList.add('hidden');\r\n    \r\n                            //====> Get Value <====//\r\n                            let option_value = option.getAttribute('data-value').toLowerCase(),\r\n                                option_label = option.textContent.toLowerCase();\r\n    \r\n                            //====> if matched show it <====//\r\n                            if (option_value.includes(search_value) || option_label.includes(search_value)) option.classList.remove('hidden');\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n\r\n            //====> Set Event Data <====//\r\n            events_data = {\r\n                select  : new_select[0],\r\n                original: select,\r\n                list    : options_list[0],\r\n                search  : new_select[0].querySelector('.px-select-search'),\r\n                value   : new_select[0].getAttribute('data-value'),\r\n            };\r\n\r\n            //====> Show Options <====//\r\n            new_select[0].querySelector('.px-select-toggle')?.addEventListener('click', clicked => {\r\n                //===> if Disabled <====//\r\n                if (select.hasAttribute('disabled') || clicked.target.matches('.px-selected-value')) return;\r\n                //===> Show Options <===//\r\n                Phenix(options_list).dynamicPosition().fadeToggle().toggleClass('is-opened');\r\n                //===> Fire Event <===//\r\n                events_data.value = new_select[0].getAttribute('data-value');\r\n                new_select[0].dispatchEvent(opened);\r\n                select.dispatchEvent(opened);\r\n            });\r\n\r\n            //====> Hide Options on Blank <====//\r\n            window.addEventListener('click', blank => {\r\n                //====> Clicked Target <====//\r\n                let clicked:any = blank.target,\r\n                    select_toggle = new_select[0].querySelector('.px-select-toggle'),\r\n                    select_search = new_select[0].querySelector('.px-select-search'),\r\n                    check_clicked = clicked !== new_select[0] && clicked !== select_toggle && !clicked.matches('.px-selected-value'),\r\n                    check_clicked_2 = clicked !== select_search && !clicked.matches('.px-select-disabled');\r\n\r\n                //====> if the target is not the current element or any of its children <====//\r\n                if (check_clicked && check_clicked_2) {\r\n                    Phenix(options_list).fadeOut().removeClass('is-opened');\r\n                    //===> Fire Event <===//\r\n                    events_data.value = new_select[0].getAttribute('data-value');\r\n                    new_select[0].dispatchEvent(closed);\r\n                    select.dispatchEvent(closed);\r\n                    //====> Search Reset <====//\r\n                    options_list[0].querySelectorAll('.hidden').forEach(hidden => hidden.classList.remove('hidden'));\r\n                }\r\n            });\r\n\r\n            //====> Set Option Value <====//\r\n            let set_value = (option) => {\r\n                option.addEventListener('click', clicked => {\r\n                    //===> Get the Options Value <===//\r\n                    let prevValue = new_select[0].getAttribute('data-value'),\r\n                        value = option.getAttribute('data-value'),\r\n                        label = option.textContent;\r\n\r\n                    //===> Set value and label <===//\r\n                    if (!multiple) {\r\n                        //====> Set Value <====//\r\n                        select.value = value;\r\n                        new_select_value.textContent = label;\r\n                        new_select[0].setAttribute('data-value', value);\r\n\r\n                        //====> Original Option <====//\r\n                        let original_option = select.querySelector(`[value=\"${value}\"]`);\r\n\r\n                        //====> Change Classes <====//\r\n                        if(original_option.classList?.length > 0) {\r\n                            //====> Get new Classes <====//\r\n                            let new_classes = select.querySelector(`[value=\"${value}\"]`).classList,\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''],\r\n                                prev_classes = select.querySelector(`[value=\"${prevValue}\"]`)?.classList;\r\n\r\n                            //====> Remove Old Classes <====//\r\n                            holder_classes.concat(...prev_classes).forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //====> Set New Classes <====//\r\n                            new_select_value.classList.add(...new_classes);\r\n                        }\r\n\r\n                        //====> Change Image <====//\r\n                        if (original_option && original_option.getAttribute('data-image')) {\r\n                            //===> Get New Image <===//\r\n                            let new_image = encodeURI(original_option.getAttribute('data-image')),\r\n                                current_image = new_select_value.querySelector('img'),\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //===> If Exist Change URL <====//\r\n                            if (current_image) {\r\n                                current_image.setAttribute('src', new_image);\r\n                                current_image.setAttribute('alt', option.textContent);\r\n                            }\r\n\r\n                            //===> Create Image <===//\r\n                            else Phenix(new_select_value).insert('prepend', `<img style=\"width:1em\" alt=\"${option.textContent}\" src=\"${new_image}\" class=\"me-5\">`);\r\n                        }\r\n                    } \r\n                    //===> Multiple Mode <===//\r\n                    else {\r\n                        //====> Get Current Value <====//\r\n                        let current_values = new_select[0].getAttribute('data-value').split(','),\r\n                        isSelected = false;\r\n                          \r\n                        //====> Check Selected Values <====//\r\n                        current_values.forEach(val => val === value ? isSelected = true : null);\r\n\r\n                        //===> if items has reaches the Maximum or is already Selected <===//\r\n                        if (current_values.length >= maxItems || isSelected) return;\r\n\r\n                        //====> Create the Option <====//\r\n                        let value_element = Phenix(new_value_group.querySelector('.px-select-search')).insert('before', `<span style=\"font-size: 0.8em;${tag_padding_fixer()}\" class=\"${tag_classes}\" data-value=\"${value}\">${tag_remover} ${label}</span>`);\r\n                        current_values.push(value);\r\n\r\n                        //====> Set Remover <====//\r\n                        set_tag_remover(value_element.querySelector('.px-value-remover'));\r\n\r\n                        //====> Set New Values <====//\r\n                        new_select[0].setAttribute('data-value', current_values);\r\n                        select.value = current_values;\r\n\r\n                        //====> Select Original Options <====//\r\n                        select.querySelector(`[value=\"${value}\"]`)?.setAttribute('selected', true);\r\n                        options_list[0].querySelector(`[data-value=\"${value}\"]`)?.classList.add('px-selected');\r\n                    }\r\n\r\n                    //===> Fire Event <===//\r\n                    events_data.value = new_select[0].getAttribute('data-value');\r\n                    new_select[0].dispatchEvent(change);\r\n                    select.dispatchEvent(change);\r\n                });\r\n            };\r\n\r\n            options_list[0].querySelectorAll(':scope > .px-select-option').forEach(option => set_value(option));\r\n\r\n            //====> Change Position on Scroll <====//\r\n            let isScrolling = false;\r\n            window.addEventListener('scroll', scrolling => isScrolling = true, {passive: true});\r\n\r\n            setInterval(() => {\r\n                if (isScrolling) {\r\n                    isScrolling = false;\r\n                    Phenix(options_list).dynamicPosition();\r\n                }\r\n            }, 300);\r\n\r\n            //===> Update Value <==//\r\n            select.addEventListener('update', isUpdated => get_default_value());\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n}\r\n\r\n//====> Rebuild Select Method <====//\r\nPhenixElements.prototype.rebuildSelect = function () {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(select => {\r\n        //====> Get the Select Wrapper <====//\r\n        let selectWrapper = Phenix(select).ancestor('.px-select');\r\n\r\n        //====> Remove Mounted Class <====//\r\n        select.classList.remove('px-mounted', 'hidden');\r\n\r\n        //====> Move the Select Element and Remove the Select Wrapper <====//\r\n        Phenix(selectWrapper).insert('before', select);\r\n        selectWrapper.remove();\r\n\r\n        //====> Rebuild the Select Element <====//\r\n        Phenix(select).select();\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Tabs Panels\r\n * ===> 03 - Default Options\r\n * ===> 03 - Activator\r\n * ===> 03 - Loop Through Phenix Query\r\n * ===> 03 - \r\n * ===> 09 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Tabs Panels <====*/\r\nPhenixElements.prototype.tabs = function (options?:{\r\n    active?:number,     //===> Show Tab # on Initial\r\n    navigation?:string, //===> Navigation Selector\r\n    hash_url?:boolean,  //===> Show Tab from URL #ID\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(tabs => {\r\n        //====> Options Data <====//\r\n        let active =  parseInt(tabs.getAttribute('data-active')) || options?.active || 0,\r\n            navigation = options?.navigation || '.tabs-navigation',\r\n            hash_url = options?.hash_url || tabs.getAttribute('data-hash'),\r\n            panels  = tabs.querySelectorAll('.tab-panel'),\r\n            buttons = tabs.querySelector(navigation).querySelectorAll('[data-tab], [href^=\"#\"]'),\r\n            isHashed = window.location.hash && hash_url && hash_url !== '0' || hash_url !== 'false';\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('tab-showed'),\r\n              hidden = new Event('tab-hidden');\r\n\r\n        //====> Hide All Tabs <====//\r\n        panels.forEach((panel, index) => {\r\n            //====> Default Activation <====//\r\n            if (index === active) {\r\n                panel.classList.add('active');\r\n                panel.classList.remove('hidden');\r\n                //====> Fire Event <====//\r\n                panel.dispatchEvent(showed);\r\n            } else {\r\n                panel.classList.add('hidden');\r\n            }\r\n        });\r\n\r\n        //====> Loop Through Buttons <====//\r\n        buttons.forEach((button:HTMLElement, index:number) => {\r\n            //====> Default Activation <====//\r\n            if (index === active) button.classList.add('active');\r\n\r\n            //====> Set Accessibility Options <====//\r\n            button.setAttribute('role', 'button');\r\n            button.setAttribute('tabIndex', '0');\r\n\r\n            //====> Tab Clicked <====//\r\n            Phenix(button).on('click', clicked => {\r\n                //====> Prevent Default Behaver <====//\r\n                clicked.preventDefault();\r\n\r\n                //====> Get the Panel ID <====//\r\n                let button = clicked.target,\r\n                    tab_id = button.getAttribute('data-tab');\r\n\r\n                if (!tab_id && button.hasAttribute('href')) {\r\n                    tab_id = button.getAttribute('href')?.replace('#','');\r\n                    if (button.parentNode.childNodes.length < 2) button = button.parentNode;\r\n                }\r\n\r\n                //====> Add to URL <====//\r\n                if (hash_url && hash_url !== '0' || hash_url !== 'false') {\r\n                    const url = window.location.href.replace(location.hash, \"\") + `#${tab_id}`;\r\n                    history.pushState({ additionalInformation: 'Updated the URL with JS' }, document.title, url);\r\n                }\r\n\r\n                //====> Active the Button <====//\r\n                Phenix(button).addClass('active').siblings()?.forEach(sibling => sibling.classList.remove('active'));\r\n\r\n                //====> Active the Panel and Get its Siblings <====//\r\n                let TabElement:any = Phenix(`#${tab_id}`),\r\n                    TabDisplay = TabElement[0].getAttribute('data-display') || \"block\";\r\n\r\n                TabElement.fadeIn(700, 0, TabDisplay).addClass('active').removeClass('hidden').siblings('.tab-panel')?.forEach(panel => {\r\n                    //====> Fire Event <====//\r\n                    document.querySelector(`#${tab_id}`).dispatchEvent(showed);\r\n\r\n                    //====> if the sibling is active <====//\r\n                    if (panel.classList.contains('active')) {\r\n                        //===> Deactivate the Panel <===//\r\n                        let the_panel:any = Phenix(panel).removeClass('active').addClass('hidden')[0];\r\n                        the_panel.style.display = null;\r\n                        //====> Fire Event <====//\r\n                        panel.dispatchEvent(hidden);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        //====> Active By URL <====//\r\n        if (isHashed) {\r\n            window.addEventListener('load', () => {\r\n                //====> Get the Panel ID <====//\r\n                let tab_id = window.location.hash.substr(1);\r\n\r\n                //====> Active the Panel and Get its Siblings <====//\r\n                if(tab_id) {\r\n                    //====> Active the Panel <====//\r\n                    Phenix(`#${tab_id}`).fadeIn().addClass('active').removeClass('hidden').siblings('.tab-panel').forEach(panel => {\r\n                        //====> Check if it is active <====//\r\n                        if (!panel.classList.contains('active')) return;\r\n                        //====> Deactivate the Panel <====//\r\n                        let the_panel:any = Phenix(panel).removeClass('active').addClass('hidden')[0];\r\n                        //===> Clear Display Style <===//\r\n                        the_panel.style.display = null;\r\n                    });\r\n\r\n                    //===> Active the Panel Button <===//\r\n                    Phenix(`[data-tab=\"${tab_id}\"], [href=\"#${tab_id}\"]`).forEach((button:any) => {\r\n                        //====> get this button <====//\r\n                        let target = button;\r\n\r\n                        //====> if the button is inside a list <====//\r\n                        if (button.hasAttribute('href') && button.parentNode.tagName === \"li\") target = button.parentNode;\r\n\r\n                        //====> Active the Button <====//\r\n                        Phenix(target).addClass('active').siblings()?.forEach(sibling => sibling.classList.remove('active'));\r\n                    });\r\n\r\n                    //====> Fire Event <====//\r\n                    document.querySelector(`#${tab_id}`).dispatchEvent(showed);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Timer Component\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Timer Handler\r\n * ===> 05 - Timer Loop\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Timer Component <====*/\r\nPhenixElements.prototype.timer = function (options?:{\r\n    type?:string,    //===> Timer Type [countdown, stopwatch]\r\n    time?:string,    //===> Time = Hour:Minutes\r\n    date?:string,    //===> Date = Year-Month-Day\r\n    message?:string, //===> Time End Message\r\n    lazyloading?:boolean,   //===> Lazyloading Timer\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let type = element.getAttribute('data-type') || options?.type || 'countdown',\r\n            time = element.getAttribute('data-time') || options?.time || '00:00',\r\n            date = element.getAttribute('data-date')?.replace(/:/g, \"/\") || options?.date?.replace(/:/g, \"/\") || '',\r\n            message = element.getAttribute('data-message') || options?.message || 'Time is up.',\r\n            lazyloading = element.getAttribute('data-lazy') || options?.lazyloading;\r\n\r\n        //====> Create Custom Event <====//\r\n        const start_event = new Event('timerStart'),\r\n              end_event = new Event('timerEnd');\r\n\r\n        //====> Timer Handler <====//\r\n        let timer_handler = () => {\r\n            //====> Timer Markup Elements <====//\r\n            let childs  = {\r\n                seconds : element.querySelector('.seconds') || Phenix(element).insert('append', `<span data-label=\"seconds\" class=\"seconds\">00</span>`),\r\n                minutes : element.querySelector('.minutes') || Phenix(element).insert('append', `<span data-label=\"minutes\" class=\"minutes\">00</span>`),\r\n                hours   : element.querySelector('.hours')   || Phenix(element).insert('append', `<span data-label=\"hours\" class=\"hours\">00</span>`),\r\n                days    : element.querySelector('.days')    || Phenix(element).insert('append', `<span data-label=\"days\" class=\"days\">00</span>`)\r\n            };\r\n\r\n            //====> Convert Date <====//\r\n            if(date.split(\"-\")[0].length < 4) date = date.split(/\\D/).reverse().join('-');\r\n\r\n            //====> Fire Starting Event <====//\r\n            setTimeout(() => element.dispatchEvent(start_event), 200);\r\n\r\n            //====> Time Loop <====//\r\n            let stringDate = new Date(`${date}T${time}`).getTime(),\r\n                update = setInterval(function () {\r\n                    //====> Get Elapsed Time <====//\r\n                    let current = new Date().getTime(),\r\n                        elapsed = stringDate - current,\r\n                        //====> Timer Calculation <====//\r\n                        days = Math.floor(elapsed / (1000 * 60 * 60 * 24)),\r\n                        hours = Math.floor((elapsed % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n                        minutes = Math.floor((elapsed % (1000 * 60 * 60)) / (1000 * 60)),\r\n                        seconds = Math.floor((elapsed % (1000 * 60)) / 1000);\r\n        \r\n                    //====> Update Timer <====//\r\n                    childs.seconds.innerHTML = seconds.toString().padStart(2, '0');\r\n                    childs.minutes.innerHTML = minutes.toString().padStart(2, '0');\r\n                    childs.hours.innerHTML = hours.toString().padStart(2, '0');\r\n                    childs.days.innerHTML = days.toString().padStart(2, '0');\r\n        \r\n                    //====> Clear Time Loop <====//\r\n                    if (elapsed < 0) {\r\n                        clearInterval(update);\r\n                        element.innerHTML = `<p class=\"timer-message reset-block\">${message}</p>`;\r\n                        element.classList.add('px-timer-ended');\r\n                        //====> Fire Ending Event <====//\r\n                        element.dispatchEvent(end_event);\r\n                    }\r\n                }, 1000);\r\n        }\r\n\r\n        //====> Set Timer <====//\r\n        if (lazyloading && lazyloading !== 'false') {\r\n            //====> Add Loading State <====//\r\n            element.classList.add('px-is-loading');\r\n\r\n            //====> First View Handler <====//\r\n            Phenix(element).inView({\r\n                offset: 100,\r\n                callback: () => {\r\n                    //====> Remove Loading State <====//\r\n                    element.classList.remove('px-is-loading');\r\n                    //====> Start Timer <====//\r\n                    timer_handler();\r\n                }\r\n            });\r\n        } else {\r\n            timer_handler();\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - \r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Uploader [un-tested] <====*/\r\nPhenixElements.prototype.uploader = function (options?:{\r\n    type?:string,   //===> standard, advanced\r\n    src?:string,    //===> Media Source [URL]\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(uploader => {\r\n        if(uploader.classList.contains('px-done')) return;\r\n        //====> Options <====//\r\n        let type = uploader.getAttribute('data-uploader') || options?.type || 'standard',\r\n            controler = uploader.querySelector('input[type=\"file\"]'),\r\n            multiple  = uploader.getAttribute('multiple' || 'data-multiple'),\r\n            placeholder = uploader.getAttribute('data-placeholder') || 'Drag and Drop your file to upload';\r\n\r\n        //====> Standard Uploader <===//\r\n        if (type == 'standard') {\r\n            //====> When Select a file <===//\r\n            controler.addEventListener('change', event => {\r\n                //===> Get Files Names <===//\r\n                var filePath = [];\r\n                for (var i = 0; i < controler.files.length; ++i) filePath.push(controler.files[i].name);\r\n                //===> Set Files Names <===//\r\n                uploader.setAttribute('data-placeholder', filePath);\r\n            });\r\n        } else {\r\n            //====> set Uploader Placeholder <====//\r\n            Phenix(controler).insert('after', `<span>${placeholder}</span><ul class=\"files\"></ul>`);\r\n\r\n            //====> Change File Function <===//\r\n            const changeFile = (files) => {\r\n                //===> Get File Data <===//\r\n                var filePath = [],\r\n                    filesList = uploader.querySelector('.files'),\r\n                    fileType,\r\n                    fileUrl;\r\n                //===> Set Files Data <===//\r\n                for (var i = 0; i < files.length; ++i) {\r\n                    filePath.push(files[i].name);\r\n                    fileType = files[i].type.split('/');\r\n                    fileUrl = URL.createObjectURL(files[i]);\r\n                }\r\n                //===> Reset File List <===//\r\n                filesList.innerHTML = '';\r\n                //===> Create Files List <===//\r\n                filePath.forEach(file => {\r\n                    //===> Create new File Item <===//\r\n                    Phenix(filesList).insert('append', `<li>${file}</li>`);\r\n\r\n                    //===> Handle Previews <===//\r\n                    if(multiple === null) {\r\n                        //===> Image Preview Mode <===//\r\n                        if(fileType[0] === 'image') {\r\n                            uploader.style.backgroundImage = `url(${fileUrl})`;\r\n                            uploader.classList.add('image-mode');\r\n                            //===> if Video , Reset <===//\r\n                            if (uploader.classList.contains('video-mode')) {\r\n                                uploader.classList.remove('video-mode');\r\n                                uploader.querySelector('video')?.remove();\r\n                            }\r\n                        }\r\n                        //===> Video Preview Mode <===//\r\n                        if (fileType[0] === 'video') {\r\n                            uploader.classList.add('video-mode');\r\n                            var videoCheck = Phenix(controler).next('video');\r\n                            //===> if video exist replace data else create new video <==//\r\n                            if(videoCheck) videoCheck.remove();\r\n                            Phenix(controler).insert('after', `<video controls><source src=\"${fileUrl}\" type=\"video/${fileType[1]}\"></video>`);\r\n                            //===> if Image , Reset <===//\r\n                            if (uploader.classList.contains('image-mode')) {\r\n                                uploader.classList.remove('image-mode');\r\n                                uploader.style.backgroundImage = null;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                //===> File Type <===//\r\n            };\r\n\r\n            //====> Change File <===//\r\n            controler.addEventListener('change', event => changeFile(event.target.files));\r\n\r\n            //====> Highlight Droparea <===//\r\n            controler.addEventListener('dragenter', event => uploader.classList.add('highlight'));\r\n            controler.addEventListener('dragleave', event => uploader.classList.remove('highlight'));\r\n\r\n            //====> Drop Files <===//\r\n            controler.addEventListener('drop', event => {\r\n                /*====> get Files <====*/\r\n                var data = event.dataTransfer,\r\n                    files = data.files;\r\n                controler.files = files;\r\n                uploader.classList.remove('highlight')\r\n            });\r\n        }\r\n        //===> Done <===//\r\n        uploader.classList.add('px-done');\r\n    });\r\n}","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix from '.';\r\ndeclare var PDS_WP_KEY: any;\r\n\r\n//======> D.O.M is Ready [for you] <=======//\r\nPhenix(document).ready(() => {});","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animations\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Animations Loader\r\n * ===> 05 - Directions Resolve\r\n * ===> 06 - Hide the Element\r\n * ===> 07 - Animate Method\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animations <====*/\r\nPhenixElements.prototype.animations = function (options?:{\r\n    animation?:string, //===> Animation Name\r\n    duration?:number,  //===> Animation Duration\r\n    delay?:number,     //===> Animation Delay\r\n    animateCSS?:boolean|string[]|string, //===> Animations Library\r\n    flow?:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    into?:number,    //====> Increase Target Position By [number]\r\n    offset?:number,  //====> Decrease Target Position By [number]\r\n    lazyloading?:boolean, //====> to Animate Element after Another\r\n    lazygroup?:any,      //====> Define the group fo each lazyloading group\r\n    stagger?:number,     //====> Define the stagger for the lazyloading group\r\n    scrollDriven?:boolean, //====> Enable Scroll Driven Animations\r\n    drivenEnd?:number|string, //====> Define the end of the driven progress\r\n    exit?:string,        //====> Exit Animation\r\n}) {\r\n    //====> Animations Loader <====//\r\n    const loadAnimationCSS = (thirdParty?: boolean|string[]|string) => {\r\n        //===> Default to 'all' if undefined <===//\r\n        const animationsToLoad = thirdParty === undefined ? 'all' : thirdParty;\r\n        \r\n        //====> Load Animation CSS Files <====//\r\n        if (animationsToLoad === 'all') {\r\n            Phenix(document).import('px-animations', 'css', `${Phenix(document).getURL().phenixCSS}animations/all.css`, () => {}, { integrated: false });\r\n        } else if (Array.isArray(animationsToLoad)) {\r\n            //===> Ensure utilities is included <===//\r\n            const animationsList = animationsToLoad.includes('utilities') ? animationsToLoad : [...animationsToLoad, 'utilities'];\r\n            \r\n            //===> Load each package <===//\r\n            animationsList.forEach(pkg => {\r\n                Phenix(document).import(`px-animations-${pkg}`, 'css', `${Phenix(document).getURL().phenixCSS}animations/${pkg}.css`, () => {}, { integrated: false });\r\n            });\r\n        } else if (typeof animationsToLoad === 'string' && animationsToLoad !== 'all') {\r\n            //===> Load the specified package and utilities <===//\r\n            Phenix(document).import(`px-animations-${animationsToLoad}`, 'css', `${Phenix(document).getURL().phenixCSS}animations/${animationsToLoad}.css`, () => {}, { integrated: false });\r\n            Phenix(document).import('px-animations-utilities', 'css', `${Phenix(document).getURL().phenixCSS}animations/utilities.css`, () => {}, { integrated: false });\r\n        }\r\n        \r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    };\r\n\r\n    //====> Load Animation CSS Files <====//\r\n    loadAnimationCSS(options?.animateCSS || 'all');\r\n\r\n    //====> Process Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> if its the Main Document Return Nothing <====//\r\n        if (element === window.document) return;\r\n\r\n        //====> Get Options Data <====//\r\n        const pageDir = Phenix(document).direction();\r\n        const animation = element.getAttribute('data-animation') || options?.animation || 'fadeIn';\r\n        const duration = parseInt(element.getAttribute('data-duration')) || options?.duration || 700;\r\n        const delay = parseInt(element.getAttribute('data-delay')) || options?.delay || 0;\r\n        const lazygroup = element.getAttribute('data-lazy-group') || options?.lazygroup || false;\r\n\r\n        //====> Directions Resolve <====//\r\n        let currentAnimation = animation;\r\n\r\n        //====> Fix Directions <====//\r\n        if (currentAnimation.includes('Start')) {\r\n            currentAnimation = currentAnimation.replace('Start', pageDir === 'ltr' ? 'Left' : 'Right');\r\n        } else if (currentAnimation.includes('End')) {\r\n            currentAnimation = currentAnimation.replace('End', pageDir === 'ltr' ? 'Right' : 'Left');\r\n        }\r\n\r\n        //====> Hide the Element <====//\r\n        element.classList.add('visibility-hidden', 'animated');\r\n        element.style.setProperty('--animation-delay', `${delay}ms`);\r\n        element.style.setProperty('--animation-name', currentAnimation);\r\n        element.style.setProperty('--animation-duration', `${duration}ms`);\r\n\r\n        //====> Setup Stagger for Sequence of Animations <====//\r\n        if (lazygroup) {\r\n            //====> Get Base Stagger <====//\r\n            const baseStagger = parseInt(element.getAttribute('data-stagger')) || options?.stagger || 100;\r\n            \r\n            //====> Track Animation Order <====//\r\n            let animationOrder = 0;\r\n\r\n            //====> Create Intersection Observer <====//\r\n            const observer = new IntersectionObserver((entries) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        const element = entry.target as HTMLElement;\r\n                        //====> Calculate Delay <====//\r\n                        const delay = animationOrder * baseStagger;\r\n                        //====> Set Delay <====//\r\n                        element.style.setProperty('--animation-delay', `${delay}ms`);\r\n                        //====> Increment Order <====//\r\n                        animationOrder++;\r\n                        //====> Stop Observing <====//\r\n                        observer.unobserve(element);\r\n                    }\r\n                });\r\n            }, {threshold: 0.1});\r\n\r\n            //====> Observe Elements <====//\r\n            element.querySelectorAll('[data-animation]').forEach(item => {\r\n                observer.observe(item);\r\n            });\r\n        }\r\n\r\n        //====> Handle Animation Setup <====//\r\n        if (element.getAttribute('data-scrollDriven') || options?.scrollDriven) {\r\n            //====> Get Animation Options <====//\r\n            const completeAt = element.getAttribute('data-drivenEnd') || options?.drivenEnd || 'center';\r\n            const exitAnimation = element.getAttribute('data-exit') || options?.exit;\r\n\r\n            //====> Show the Element <====//\r\n            Phenix(element).removeClass('visibility-hidden');\r\n            element.classList.add('view-active', currentAnimation);\r\n\r\n            //====> Create Scroll Progress Handler <====//\r\n            const handleScrollProgress = () => {\r\n                //====> Get Element Dimensions <====//\r\n                const rect = element.getBoundingClientRect();\r\n                const viewHeight = window.innerHeight;\r\n\r\n                //====> Define Progress and Points <====//\r\n                let progress, exitProgress;\r\n                const completionPoint = (() => {\r\n                    if (completeAt === 'center') return viewHeight / 2;\r\n                    if (completeAt === 'top') return 0;\r\n                    if (completeAt === 'bottom') return viewHeight;\r\n                    return (viewHeight * (parseInt(completeAt as string) || 50)) / 100;\r\n                })();\r\n\r\n                //====> Calculate Progress <====//\r\n                if (rect.top >= viewHeight || rect.bottom <= 0) {\r\n                    progress = 0;\r\n                    exitProgress = rect.top >= viewHeight ? 0 : 1;\r\n                } else {\r\n                    const startDistance = viewHeight - rect.top;\r\n                    const totalDistance = viewHeight + rect.height;\r\n                    progress = startDistance / totalDistance;\r\n                    progress = progress * (viewHeight / completionPoint);\r\n                    progress = Math.min(Math.max(progress, 0), 1);\r\n\r\n                    //====> Calculate Exit Progress <====//\r\n                    if (exitAnimation) {\r\n                        exitProgress = rect.bottom < viewHeight \r\n                            ? (viewHeight - rect.bottom) / rect.height\r\n                            : 0;\r\n                        exitProgress = Math.min(Math.max(exitProgress, 0), 1);\r\n                    }\r\n                }\r\n\r\n                //====> Update Progress Properties <====//\r\n                element.style.setProperty('--animation-progress', progress.toString());\r\n                if (exitAnimation) {\r\n                    element.style.setProperty('--exit-progress', exitProgress.toString());\r\n                    if (exitProgress > 0) element.classList.add(exitAnimation);\r\n                }\r\n            };\r\n\r\n            //====> Setup and Cleanup <====//\r\n            element.classList.add('scroll-progress');\r\n            window.addEventListener('scroll', handleScrollProgress, { passive: true });\r\n            handleScrollProgress();\r\n\r\n            //====> Cleanup Observer <====//\r\n            const observer = new MutationObserver((mutations, obs) => {\r\n                if (!document.contains(element)) {\r\n                    window.removeEventListener('scroll', handleScrollProgress);\r\n                    obs.disconnect();\r\n                }\r\n            });\r\n            observer.observe(document, { childList: true, subtree: true });\r\n        } \r\n        //====> Handle Regular Animations <====//\r\n        else {\r\n            //====> Get Exit Animation <====//\r\n            const exitAnimation = element.getAttribute('data-exit') || options?.exit;\r\n\r\n            //====> Get Position Customization Options <====//\r\n            const offset = parseInt(element.getAttribute('data-offset')) || options?.offset || 0;\r\n            const into = parseInt(element.getAttribute('data-into')) || options?.into || 0;\r\n\r\n            //====> Calculate Root Margin <====//\r\n            const topMargin = into - offset;\r\n            const rootMargin = `${topMargin}px 0px ${offset}px 0px`;\r\n\r\n            //====> Create Intersection Observer <====//\r\n            const observer = new IntersectionObserver((entries) => {\r\n                entries.forEach(entry => {\r\n                    const element = entry.target as HTMLElement;\r\n                    \r\n                    if (entry.isIntersecting) {\r\n                        //====> Entry Animation <====//\r\n                        if (!element.classList.contains('view-active')) {\r\n                            Phenix(element).removeClass('visibility-hidden');\r\n                            element.classList.add('view-active', currentAnimation);\r\n                            //====> Remove Exit Animation if Exists <====//\r\n                            if (exitAnimation) element.classList.remove(exitAnimation);\r\n                        }\r\n                    } else if (exitAnimation) {\r\n                        //====> Exit Animation <====//\r\n                        const isScrollingDown = entry.boundingClientRect.top < 0;\r\n                        if (isScrollingDown) {\r\n                            element.classList.remove(currentAnimation);\r\n                            element.classList.add(exitAnimation);\r\n                        }\r\n                    }\r\n                });\r\n            }, {\r\n                threshold: 0.1,\r\n                rootMargin\r\n            });\r\n\r\n            //====> Start Observing <====//\r\n            observer.observe(element);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Collapse\r\n * ===> 03 - Loop Through Phenix Query\r\n * ===> 04 - Get Options\r\n * ===> 05 - Create Custom Event\r\n * ===> 06 - Collapse Handler\r\n * ===> 07 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Collapse <====*/\r\nPhenixElements.prototype.collapse = function (options?:{\r\n    target?:string;   //===> Panel Target Selector\r\n    related?:boolean; //===> Panel Target is related to the button in the DOM Tree\r\n    parent?:string;   //===> Accordion Group Selector\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(button => {\r\n        //====> if is Done Return no thing <====//\r\n        if(button.classList.contains('pxjs-done')) return;\r\n\r\n        //====> Get Options <====//\r\n        let classes = button.classList,\r\n            parent = button.getAttribute('data-parent') || options?.parent,\r\n            related = button.getAttribute('data-related') || options?.related,\r\n            active_class = 'px-collapse-active',\r\n            target = button.getAttribute('data-target') || options?.target;\r\n\r\n        //===> Add Icon Class Name <====//\r\n        classes.forEach((className:string) => {\r\n            //===> Get the Icon Name <===//\r\n            if(className.includes('fa-')) button.setAttribute('data-trigger-icon-normal', `${className}`);\r\n        });\r\n\r\n        //===> Store the Icon Name <===//\r\n        const normal_icon = button.getAttribute('data-trigger-icon-normal');\r\n\r\n        //===> Get the Icon Class for Active <===//\r\n        if (normal_icon && normal_icon.includes('plus')) {\r\n            button.setAttribute('data-trigger-icon', `${normal_icon.replace('plus', 'minus')}`);\r\n        } else if (normal_icon && normal_icon.includes('down')) {\r\n            button.setAttribute('data-trigger-icon', `${normal_icon.replace('down', 'up')}`);\r\n        }\r\n\r\n        //===> Change Active Item Icon <===//\r\n        const active_icon = button.getAttribute('data-trigger-icon');\r\n        if (button.classList.contains(active_class)) {\r\n            button.classList.add(active_icon);\r\n            button.classList.remove(normal_icon);\r\n        }\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('collapse-showed'),\r\n              hidden = new Event('collapse-hidden');\r\n\r\n        //====> Get Target as Element <====//\r\n        if (typeof(target) === 'string') {\r\n            related ? target = Phenix(button).siblings(target)[0] : target = document.querySelector(target);\r\n        }\r\n\r\n        //====> Collapse Handler <====//\r\n        let collapse_handler = () => {\r\n            //====> Show if its Hidden <====//\r\n            if (Phenix(target).getCSS('display') === 'none') {\r\n                //====> Hide Other Panels <====//\r\n                if (parent) {\r\n                    //====> Get Other Activated Items <====//\r\n                    let others = Phenix(button).ancestor(parent).querySelectorAll(`.${active_class}`);\r\n\r\n                    //====> and for each item <====//\r\n                    others.forEach(element => {\r\n                        //====> Remove Active Class <====//\r\n                        element.classList.remove(active_class, active_icon);\r\n                        //====> Hide Targets <====//\r\n                        if (element.matches(button.getAttribute('data-target') || options?.target)) {\r\n                            Phenix(element).slideUp();\r\n                        } else {\r\n                            element.classList.add(normal_icon);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                //====> Active Button <====//\r\n                button.classList.remove(normal_icon);\r\n                button.classList.add(active_class, active_icon);\r\n\r\n                //====> Show Target <====//\r\n                Phenix(target).slideDown().addClass(active_class);\r\n\r\n                //====> Fire Event <====//\r\n                button.dispatchEvent(showed);\r\n                target.dispatchEvent(showed);\r\n            }\r\n            //====> Hide if its Shown <====//\r\n            else {\r\n                //====> Active Button <====//\r\n                button.classList.add(normal_icon);\r\n                button.classList.remove(active_class, active_icon);\r\n\r\n                //====> Show Target <====//\r\n                Phenix(target).slideUp().removeClass(active_class);\r\n\r\n                //====> Fire Event <====//\r\n                button.dispatchEvent(hidden);\r\n                target.dispatchEvent(hidden);\r\n            }\r\n        };\r\n\r\n        //====> ... <====//\r\n        button.addEventListener('click', collapse_handler);\r\n\r\n        //====> Set Accessibility Options <====//\r\n        button.setAttribute('role', 'button');\r\n        button.setAttribute('tabIndex', '0');\r\n\r\n        //====> Done <====//\r\n        button.classList.add('pxjs-done');\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animated Counter\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Counter Data\r\n * ===> 05 - Count Runer\r\n * ===> 06 - Start Counting\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animated Counter <====*/\r\nPhenixElements.prototype.counter = function (options?:{\r\n        value?:number,    //===> Number to Count\r\n        duration?:number, //===> Animation Duration\r\n        delay?:number,    //===> Animation Delay\r\n        decimal?:number,  //===> Decimal Numbers Support\r\n        symbol?:string,   //===> Symbol After the Number\r\n        steps?:number,    //===> Count per Step\r\n        reverse?:boolean, //===> Count Down instead of Up\r\n        lazyloading?:boolean, //===> Lazyload Animation\r\n    }) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let duration = parseInt(element.getAttribute('data-duration')) || options?.duration || 2000,\r\n            decimal  = parseInt(element.getAttribute('data-decimal')) || options?.decimal || 0,\r\n            value    = parseInt(element.getAttribute('data-value')) || options?.value || parseInt(element.textContent.replaceAll(',','')),\r\n            symbol   = element.getAttribute('data-symbol') || options?.symbol || '',\r\n            delay    = parseInt(element.getAttribute('data-delay')) || options?.delay  || 0,\r\n            steps    = parseInt(element.getAttribute('data-steps')) || options?.steps  || 10,\r\n            reverse  = element.getAttribute('data-reverse') || options?.reverse || false,\r\n            lazyloading = element.getAttribute('data-lazy') || options?.lazyloading,\r\n            counting = element.classList.contains('counting');\r\n\r\n        //====> Counter Data <===//\r\n        let input = (element.nodeName.toLowerCase() === 'input') ? true : false,\r\n            count = 0,\r\n            increment = Math.ceil(value / (duration / steps)),\r\n            interval = null,\r\n            decimal_regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n\r\n        //====> Switch Count for Counting Down <====//\r\n        if (reverse) count = value;\r\n\r\n        \r\n        //====> Count Runner <===//\r\n        const runCounter = () => {\r\n            //===> Round Up Values <===//\r\n            // count = Math.round(count);\r\n            // value = Math.round(value);\r\n\r\n            //===> Set is Counting <===//\r\n            if (!counting) element.classList.add('counting');\r\n\r\n            //===> if [Count Down] is Activated => Decrease the Count Otherwise Increase the Count <===//\r\n            count += (reverse ? -Math.min(increment, Math.abs(value - count)) : Math.min(increment, Math.abs(value - count)));\r\n            // if (reverse && count > 0) count -= increment;\r\n            // else if (count < value) count += increment;\r\n\r\n            //===> Current Value <===//\r\n            // let current = `${count.toFixed(decimal).toString().replace(decimal_regex, ',')}${symbol}`;\r\n\r\n            //===> Update the Element <===//\r\n            element[ input ? 'value' : 'innerHTML' ] = `${count.toFixed(decimal).toString().replace(decimal_regex, ',')}${symbol}`;\r\n            // if (input) element.value = current;\r\n            // //===> Otherwise <===//\r\n            // else element.innerHTML = current;\r\n\r\n            //===> Clear When Count Up Reaches The Target <===//\r\n            if (count === (reverse ? 0 : value)) clearInterval(interval);\r\n        };\r\n\r\n        //====> Counter Handler <====//\r\n        let counter_handler = () => {\r\n            setTimeout(function() {\r\n                interval = setInterval(runCounter.bind(this), steps);\r\n            }.bind(this), delay);\r\n        }\r\n\r\n        //====> Run Counter <====//\r\n        if (lazyloading) {\r\n            Phenix(element).inView({\r\n                callback: () => {\r\n                    if (!element.classList.contains('counting')) counter_handler();\r\n                }\r\n            });\r\n        } else {\r\n            counter_handler();\r\n        };\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Smoth-Scroll\r\n * ===> 03 - Sticky Elements\r\n * ===> 04 - Scroll-Spy\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Smooth-Scroll [Bugged] <====*/\r\nPhenixElements.prototype.smothScroll = function (options?:{\r\n    target?:string,   //===> Target to Scroll to\r\n    offset?:number,   //===> Decrease Target Position By [number]\r\n    into?:number,     //===> Increase Target Position By [number]\r\n    duration?:number, //===> Scroll Animation Duration\r\n    delay?:number,    //===> Delay Before Scroll\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.on('click', event => {\r\n        //====> Prevent Default Click Behavior <====//\r\n        event.preventDefault();\r\n\r\n        //====> Element Data <====//\r\n        let element:HTMLElement = event.target,\r\n            target:HTMLElement  = document.querySelector(element.getAttribute('href')?.length > 1 ? element.getAttribute('href') : element.getAttribute('data-target') ? element.getAttribute('data-target') : options.target ? options?.target : 'div:first-of-type'),\r\n            start:number  = null,\r\n            into:number   = parseInt(element.getAttribute('data-into')) || options?.into || 0,\r\n            offset:number = parseInt(element.getAttribute('data-offset')) || options?.offset || 0,\r\n            viewPos:number  = Math.round(window.pageYOffset || window.scrollY),\r\n            duration:number = parseInt(element.getAttribute('data-duration')) || options?.duration || 700,\r\n            delay:number = parseInt(element.getAttribute('data-delay')) || options?.delay || 0,\r\n            posTest = target?.getBoundingClientRect(),\r\n            position:number = posTest ? Math.round(posTest?.top) : 0,\r\n            numCheck = (n) => {return 1/(n*0)===1/0},\r\n            //====> Animations Timing Function <====//\r\n            timeFunc:any  = (time, current, target, duration) => {\r\n                //===> Time / Duration / 2 <===//\r\n                time /= duration / 2;\r\n                //===> if Time Ends <===//\r\n                if (time < 1) return target / 2 * time * time + current;\r\n                //===> Otherwise <===//\r\n                else {\r\n                    time--;\r\n                    return -target / 2 * (time * (time - 2) - 1) + current;\r\n                }\r\n            };\r\n\r\n        //====> Offset Calc <====//\r\n        if (into && into > 0) position = position + into;\r\n        if (offset && offset > 0) position = position - offset;\r\n        \r\n        //====> Scroll Animation <====//\r\n        function activator(currentTime) {\r\n            //====> Update Start Time <====//\r\n            if (start === null) start = currentTime;\r\n\r\n            //====> Update Time <====//\r\n            let timeElapsed = currentTime - start,\r\n                scrollAnimate = timeFunc(timeElapsed, viewPos, position, duration);\r\n\r\n            //====> Start Scrolling <====//\r\n            window.scrollTo(0, scrollAnimate);\r\n\r\n            //====> not the End ? get the next frame <====//\r\n            if (timeElapsed < duration) requestAnimationFrame(activator);\r\n\r\n            //====> the End ? Update View Position <====//\r\n            else {\r\n                viewPos = Math.round(window.pageYOffset);\r\n                //===> Hash URL Update <===//\r\n                let loc:any = window;\r\n                loc.location.href = element.getAttribute('href') || element.getAttribute('data-target') || options?.target;\r\n            }\r\n        }\r\n\r\n        //====> Activate Scrolling <====//\r\n        if(delay > 0) {\r\n            //====> Delay Scroll <====//\r\n            setTimeout(() => requestAnimationFrame(activator), delay);\r\n        } else requestAnimationFrame(activator);\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Sticky Elements <====*/\r\nPhenixElements.prototype.sticky = function (options?:{\r\n    type?:string,   //===> Fixed, Sticky\r\n    offset?:number, //===> Increase Target Position By [number]\r\n    into?:number,   //===> Decrease Target Position By [number]\r\n    flow?:string,   //===> Flow Direction [X, Y]\r\n    active?:string, //===> Active Class Name\r\n}) {\r\n    \r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Get Data <====//\r\n        let type   = element.getAttribute('data-sticky') || options?.type || 'sticky',\r\n            into   = parseInt(element.getAttribute('data-into')) || options?.into || 0,\r\n            active = options?.active || 'is-sticky',\r\n            offset = parseInt(element.getAttribute('data-offset')) || options?.offset || 0,\r\n            position = element.offsetTop,\r\n            direction = options?.flow?.toLowerCase() || 'y';\r\n\r\n        //====> Relative to its Parent [workout] <====//\r\n        // if (type && type === 'sticky') element.parentNode.style.transform = \"translateZ(0)\";\r\n\r\n        //====> Y Scroll Mode <====//\r\n        if(!direction || direction === 'y') {\r\n            //====> Offset Calc <====//\r\n            if (into && into > 0) position = position + into;\r\n            else if (offset && offset > 0) position = element.offsetTop - offset;\r\n\r\n            //====> First Position [workout] <====//\r\n            if (window.scrollY > offset) element.classList.add(active); \r\n\r\n            //====> While Window Scrolling <====//\r\n            window.addEventListener('scroll', event => {\r\n                //====> if position matches element Activate <====//\r\n                if (window.scrollY >= position) element.classList.add(active); \r\n\r\n                //====> Otherwise De-Activate <====//\r\n                if (window.scrollY <= position) element.classList.remove(active);\r\n            });\r\n        }\r\n\r\n        //====> X Scroll Mode <====//\r\n        else if (direction && direction === 'x') {\r\n            //====> Offset Calc <====//\r\n            position = element.offsetLeft;\r\n            if (into && into > 0) position = element.offsetLeft + into;\r\n            if (offset && offset > 0)  position = element.offsetLeft - offset;\r\n    \r\n            //====> First Position [workout] <====//\r\n            if (window.scrollX > position) element.classList.add(active); \r\n\r\n            //====> While Window Scrolling <====//\r\n            window.addEventListener('scroll', event => {\r\n                //====> if position matches element Activate <====//\r\n                if (window.scrollX >= position) element.classList.add(active); \r\n\r\n                //====> Otherwise De-Activate <====//\r\n                else if (window.scrollX <= position) element.classList.remove(active);\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Scroll-Spy <====*/\r\nPhenixElements.prototype.scrollSpy = function (options?:{\r\n    active:string,  //===> Active Class Name Default : px-active\r\n    flow:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    offset:number,  //====> Decrease Target Position By [number]\r\n    into:number     //====> Increase Target Position By [number]\r\n}) {\r\n    //====> Define Options <=====//\r\n    let className:string = options?.active || 'px-active',\r\n        spotInto:number = options?.into || 0,\r\n        spotOffset:number = options?.offset || 0;\r\n\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Get All Links & Triggers <====//\r\n        let triggers:any = element.querySelectorAll('[href], [data-target]');\r\n\r\n        //====> Apply Smooth Scroll & Loop Through Links & Triggers <====//\r\n        triggers.forEach(trigger => {\r\n            Phenix(trigger).smothScroll({\r\n                into : element.getAttribute('data-into') || spotInto,\r\n                offset : element.getAttribute('data-offset') || spotOffset\r\n            })\r\n        });\r\n\r\n        triggers.forEach(element => {\r\n            //====> Get Data <====//\r\n            let selector = element.getAttribute('href') || element.getAttribute('data-target'),\r\n\r\n            //====> Activator <====//\r\n            activator = () => {\r\n                //====> Define Siblings & Parent Elements <====//\r\n                let siblings, parent;\r\n            \r\n                //====> if Trigger not List-Item Get Ancestor List-Item <====//\r\n                if (!element.matches('li')) parent = Phenix(element).ancestor('li');\r\n\r\n                //====> Active & Get Siblings <====//\r\n                siblings = Phenix(parent || element).addClass(className).siblings();\r\n\r\n                //====> Loop Through Siblings <====//\r\n                if (siblings) siblings.forEach(sibling => {\r\n                    //====> De-Activate Siblings <====//\r\n                    sibling.classList.remove(className);\r\n\r\n                    //====> Get Activated child's & De-Activate them <====//\r\n                    sibling.querySelector(`.${className}`)?.classList.remove(className);\r\n                });\r\n            };\r\n\r\n            //====> if Target Exist and in View <====//\r\n            if (document.querySelector(`${selector}`)) {\r\n                Phenix(selector).inView({\r\n                    flow: options?.flow || 'both',\r\n                    into: element.getAttribute('data-into') || options?.into || 0,\r\n                    offset: element.getAttribute('data-offset') || options?.offset || 0,\r\n                    callback: activator\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Effects : SlideUp\r\n * ===> 03 - Effects : SlideDown\r\n * ===> 04 - Effects : SlideToggle\r\n * ===> 05 - Effects : FadeOut\r\n * ===> 06 - Effects : FadeIn\r\n * ===> 07 - Effects : FadeToggle\r\n * ===> 08 - Effects : (Smoth-Scroll, Sticky Elements, Scroll-Spy)\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Effects : SlideUp <====*/\r\nPhenixElements.prototype.slideUp = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element).display !== 'none') {\r\n            //====> Set Initial Animation Properties <====//\r\n            Phenix(element).css({ \"overflow\": 'hidden' });\r\n\r\n            //====> Animation Data <====//\r\n            const fullHeight = element.scrollHeight;\r\n            const initialStyles = Phenix(element).getCSS();\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n            const endHeight = 0;\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateSlideUp(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set the element's style based on the animation progress\r\n                Phenix(element).css({\r\n                    height: `${fullHeight * (1 - progress)}px`,\r\n                    paddingTop: `${parseFloat(initialStyles.paddingTop) * (1 - progress)}px`,\r\n                    paddingBottom: `${parseFloat(initialStyles.paddingBottom) * (1 - progress)}px`\r\n                });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateSlideUp); // Continue the animation\r\n                } else {\r\n                    // After Animation : Hide the Element\r\n                    Phenix(element).css({ \"display\": 'none', \"height\": \"\", \"paddingTop\": \"\", \"paddingBottom\": \"\", \"overflow\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateSlideUp), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : SlideDown <====*/\r\nPhenixElements.prototype.slideDown = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element and Set Initial Styles <====//\r\n            Phenix(element).css({\r\n                \"overflow\": 'hidden',\r\n                \"display\": display || 'block',\r\n                \"height\": \"0px\", // Start height for sliding effect\r\n                \"paddingTop\": \"0px\",\r\n                \"paddingBottom\": \"0px\"\r\n            });\r\n\r\n            //====> Animation Data <====//\r\n            const fullHeight = element.scrollHeight;\r\n            const initialStyles = Phenix(element).getCSS();\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateSlideDown(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set the element's style based on the animation progress\r\n                Phenix(element).css({\r\n                    height: `${progress * fullHeight}px`,\r\n                    paddingTop: `${parseFloat(initialStyles.paddingTop) * progress}px`,\r\n                    paddingBottom: `${parseFloat(initialStyles.paddingBottom) * progress}px`\r\n                });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateSlideDown); // Continue the animation\r\n                } else {\r\n                    // Clear overflow and reset properties after animation completes\r\n                    Phenix(element).css({ \"height\": \"\", \"paddingTop\": \"\", \"paddingBottom\": \"\", \"overflow\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateSlideDown), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : SlideToggle <====*/\r\nPhenixElements.prototype.slideToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).slideDown(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).slideUp(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeOut <====*/\r\nPhenixElements.prototype.fadeOut = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element)?.display !== 'none') {\r\n            //====> Set Initial Style for Animation <====//\r\n            Phenix(element).css({ \"opacity\": \"1\" });\r\n\r\n            //====> Animation Data <====//\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateFadeOut(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Apply the opacity based on the animation progress\r\n                Phenix(element).css({ opacity: `${1 - progress}` });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateFadeOut); // Continue the animation\r\n                } else {\r\n                    // After Animation : Hide the Element and Reset Inline Styles\r\n                    Phenix(element).css({ \"display\": 'none', \"opacity\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateFadeOut), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeIn <====*/\r\nPhenixElements.prototype.fadeIn = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element with Initial Opacity <====//\r\n            Phenix(element).css({\r\n                \"display\": display || 'block',\r\n                \"opacity\": \"0\"\r\n            });\r\n\r\n            //====> Animation Data <====//\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateFadeIn(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set opacity based on the animation progress\r\n                Phenix(element).css({ opacity: `${progress}` });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateFadeIn); // Continue animation\r\n                } else {\r\n                    // Clear inline opacity style after animation completes\r\n                    Phenix(element).css({ \"opacity\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateFadeIn), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeToggle <====*/\r\nPhenixElements.prototype.fadeToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).fadeIn(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).fadeOut(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : (Smoth-Scroll, Sticky, Scroll-Spy) <====*/\r\nimport './effects-scroll';\r\n","/**====> Reference By Comment <====\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Get Information Class\r\n * ===> 03 - Page Direction\r\n * ===> 04 - Get Element Height\r\n * ===> 05 - ViewPort Detector\r\n * ===> 06 - Get CSS Properties\r\n * ===> 07 - Get Viewport Dimensions\r\n * ===> 00 - ....\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Page Direction <====*/\r\nPhenixElements.prototype.direction = function (property?:string) {\r\n    //====> Default Direction <====//\r\n    let direction  = getComputedStyle(document.body).direction,\r\n        directionStart = 'left',\r\n        directionEnd   = 'right';\r\n\r\n    //====> Change Direction if RTL <====//\r\n    if (direction === 'rtl') {\r\n        directionStart = 'right';\r\n        directionEnd = 'left';\r\n    }\r\n\r\n    //====> Return Property Value <====//\r\n    if (property == \"start\") return directionStart;\r\n    else if (property == \"end\") return directionEnd;\r\n    else return direction;\r\n}\r\n\r\n/*====> Get Element Height <====*/\r\nPhenixElements.prototype.height = function () {\r\n    //====> Define Target Data <====//\r\n    let element:any = this[0],\r\n        display = getComputedStyle(element).display,\r\n        style = element.style,\r\n        inlineDisplay = style.display;\r\n\r\n    //====> for Getting Hidden Element Height <====//\r\n    if (display == 'none') {\r\n        style.display = 'block';\r\n        style.visibility = 'hidden';\r\n    }\r\n\r\n    //====> Define Height Data <====//\r\n    let height = element.scrollHeight,\r\n        padding = parseInt(getComputedStyle(element).padding, 10) || 0;\r\n\r\n    //====> Reset the Hidden Element <====//\r\n    if (display === 'none') {\r\n        //===> Reset Display <===//\r\n        inlineDisplay ? style.display = display : style.display = null;\r\n        //===> Reset Visibility <===//\r\n        style.visibility = null;\r\n    }\r\n\r\n    return (height + padding);\r\n}\r\n\r\n/*====> Get CSS Properties <====*/\r\nPhenixElements.prototype.getCSS = function(property?:string, pseudo?:string) {\r\n    //====> Define the Target <====//\r\n    let element:any = this[0];\r\n\r\n    //====> Get the Target Style <====//\r\n    let styles = getComputedStyle(element, pseudo);\r\n\r\n    //====> If Property is Targeted <====//\r\n    if (property) styles = styles[property];\r\n\r\n    //====> Return Information <====//\r\n    return styles;\r\n}\r\n\r\n//====> Copyrights <====//\r\nPhenixElements.prototype.copyrights = function (project_name) {\r\n    //===> Name Resolve <===//\r\n    let name = project_name;\r\n    if(!name) name = 'Phenix Themes';\r\n    while (name.length < 24) name += ` `;\r\n    //====> Print Copyrights <====//\r\nconsole.info(`🔥🔥🔥🔥🔥 %cPhenix Design System 🔥🔥🔥💥🐦\r\n🔥                                      🔥\r\n🔥  - Project : ${name}🔥\r\n🔥  - System  : Phenix Blocks           🔥\r\n🔥  - Author  : Abdullah Ramadan        🔥\r\n🔥  - Version : PDS v1.0.0              🔥\r\n🔥  - Website : phenixthemes.com        🔥\r\n🔥  - Docs    : design.phenixthemes.com 🔥\r\n🔥  - Contact : +2-01122974539          🔥\r\n🔥                                      🔥\r\n🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🚀`, \"color: #FB955D;font-weight: 600\");\r\n    //===> Return Phenix <===//\r\n    return this;\r\n};\r\n\r\n//====> Get Current Path <====//\r\nPhenixElements.prototype.getURL = function (location?) {\r\n    //====> Current Script File <====//\r\n    let url = document.querySelector('script[src*=\"phenix.js\"]')?.getAttribute('src'),\r\n        phenix_js = url.substring(0, url.lastIndexOf('/')+1);\r\n    //====> Return information's <====//\r\n    return {\r\n        script : url,\r\n        window : window.location.href,\r\n        page   : window.location.pathname,\r\n        phenixJS : phenix_js || 'https://cdn.jsdelivr.net/npm/phenix-ui@0.6.5/dist/js/',\r\n        phenixCSS : phenix_js.replace('js', 'css') || 'https://cdn.jsdelivr.net/npm/phenix-ui@0.6.5/dist/css/',\r\n    }\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Notifications\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n//=====> Notifications <=====//\r\nPhenixElements.prototype.notifications = function (options?:{\r\n    type?:string,     //=== Message Type [normal, error, success, warning]\r\n    message?:string,  //=== Message Content\r\n    duration?:number, //=== Message Timeout\r\n    position?:any,     //=== Message Position {y, x} [top,center,bottom] [start,center,end]\r\n}) {\r\n    //====> Element & Data <====//\r\n    let current,\r\n        type = options?.type || 'normal',\r\n        message = options?.message || 'No Message Defined.',\r\n        duration = options?.duration || 3000,\r\n        notifications = document.querySelector('.px-notifications'),\r\n        background = 'bg-primary color-white',\r\n        item_position = 'pos-bottom-0 pos-start-0',\r\n        css_classes = 'px-item pdy-10 pdx-15 fs-14 mb-10 radius-sm';\r\n    \r\n    //====> Figure Position <=====//\r\n    if(options?.position) {\r\n        //=== get position ===//\r\n        let position = options?.position;\r\n        if (typeof(options?.position) == \"string\") position = options?.position.split(',');\r\n        let y_pos = position[0].replace(/\\s/g, ''),\r\n            x_pos = position[1].replace(/\\s/g, '');\r\n\r\n        //=== set X position ===//\r\n        x_pos == 'start' ? x_pos = 'me-auto' :\r\n        x_pos == 'center' ? x_pos = 'mgx-auto' :\r\n        x_pos == 'end' ? x_pos = 'ms-auto' : '';\r\n\r\n        //=== set Y position ===//\r\n        y_pos == 'top' ? y_pos = 'start' :\r\n        y_pos == 'center' ? y_pos = 'center' :\r\n        y_pos == 'bottom' ? y_pos = 'end' : '';\r\n\r\n        //=== set position ===//\r\n        item_position = `align-self-${y_pos} ${x_pos}`;\r\n\r\n    //====> Set Default <===//\r\n    } else item_position = `align-self-end`;\r\n\r\n    //====> Create Notifications Area <====//\r\n    if(!document.querySelector('.px-notifications')) {\r\n        notifications = Phenix('body').insert('append', `<div class=\"px-notifications position-fx pos-bottom-0 pos-start-0 hidden z-index-modal pd-15 ${options?.position ? 'flexbox h-100vh col-12' : ''}\" style=\"pointer-events: none\"></div>`);\r\n    }\r\n\r\n    //====> Change Background <====//\r\n    if (type === 'error') background = 'bg-danger color-white';\r\n    else if (type === 'success') background = 'bg-success color-white';\r\n    else if (type === 'warning') background = 'bg-warning color-dark';\r\n\r\n    //=== Set Notifications ===//\r\n    current = Phenix(notifications).insert('append', `<div class=\"w-max-320 z-index-modal position-rv ${css_classes} ${background} ${item_position} hidden\" style=\"pointer-events: all\">${message}</div>`);\r\n\r\n    //====> Show Notifications <====//\r\n    Phenix(notifications).removeClass('hidden').fadeIn(500, 0, 'flex');\r\n    Phenix(current).removeClass('hidden').fadeIn();\r\n\r\n    //====> Hide Notifications <====//\r\n    setTimeout(()=> {\r\n        Phenix(current).fadeOut();\r\n        setTimeout(() => current ? current.remove() : '', 500);\r\n    }, duration);\r\n\r\n    Phenix(current).on('click', isClicked => {\r\n        Phenix(current).fadeOut();\r\n        setTimeout(() => current ? current.remove() : '', 500);\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n};","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Validation\r\n * ===> 03 - Default Browser Api\r\n * ===> 04 - Multiple Validation\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Validation <====*/\r\nPhenixElements.prototype.validation = function (options?:{\r\n    //===> Error Message Default Api\r\n    defaults?:{\r\n        valueMissing?:string,  //===> Error for Missing Values\r\n        typeMismatch?:string,  //===> Error for Type\r\n        tooLong?:string,       //===> Error for too Long Value\r\n        tooShort?:string,      //===> Error for too Short Value\r\n    },\r\n    //====> Different Pattern for Each input <====//\r\n    patterns?:[{\r\n        name?:string,     //===> Input Name Attribute\r\n        pattern?:string,  //===> RegEx Pattern\r\n        message?:string,  //===> Error Message\r\n        position?:string, //===> Message Position [top, bottom]\r\n    }], \r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let defaults  = options?.defaults,\r\n            patterns  = options?.patterns,\r\n            pageDir   = Phenix(document).direction();\r\n\r\n        //===> Error Handler <===//\r\n        const errorHandler = (input, message, position) => {\r\n            //===> Input Data <====//\r\n            let inputWrapper = input.parentNode,\r\n                hasWrapper = inputWrapper.classList.contains(\".control-icon\"),\r\n                optionControl = inputWrapper.classList.contains(\".option-control\");\r\n\r\n            //===> Set Error <===//\r\n            input.classList.add('error');\r\n            input.classList.remove('success');\r\n\r\n            //===> Check for Error Message <===//\r\n            let hasError = position === 'before' ? Phenix(hasWrapper ? inputWrapper : input).prev('.px-validation') : Phenix(hasWrapper ? inputWrapper : input).next('.px-validation');\r\n\r\n            //====> if already has errors <====//\r\n            if (hasError) {\r\n                //===> get the errors list <===//\r\n                let errors_list = hasError.querySelector('.errors-list');\r\n\r\n                //====> if it has error list <====//\r\n                if(errors_list) {\r\n                    //===> Create a new Message <===//\r\n                    if (errors_list.querySelector('li:last-child').textContent !== message) errors_list.append(`${message}`);\r\n                //====> Create an Error List <====//\r\n                } else if (hasError.textContent !== message) {\r\n                    //===> get previous message <===//\r\n                    let original = hasError.textContent;\r\n\r\n                    //===> Create the List <===//\r\n                    hasError.innerHTML = `<ul class=\"errors-list reset-list\">\r\n                        <li>${original}</li>\r\n                        ${original !== message ? `<li>${message}</li>`: ''}\r\n                    </ul>`;\r\n                }\r\n            }\r\n\r\n            //===> Create Error Message <===//\r\n            else Phenix(hasWrapper ? inputWrapper : input).insert('after', `<div class=\"px-validation color-danger\">${message}</div>`);\r\n        };\r\n\r\n        //====> Reset Method <====//\r\n        const reset_status = (input, position) => {\r\n             //===> Remove Error <===//\r\n             input.setCustomValidity('');\r\n             input.classList.remove('error', 'success');\r\n             //===> Delete Error Message <===//\r\n             if (position === 'after') {\r\n                 Phenix(input).next('.px-validation')?.remove();\r\n             } else {\r\n                 Phenix(input).prev('.px-validation')?.remove();\r\n             }\r\n        };\r\n\r\n        //===> Control Validation <===//\r\n        let valid_control = (input, submit?) => {\r\n            //===> Get Error Message Position <===//\r\n            let position = input.getAttribute('data-pos') || \"after\";\r\n\r\n            //====> Validation Handler <====//\r\n            let validate = () => {\r\n                let hasError = false;\r\n                let message = input.getAttribute('data-message');\r\n                //===> Set Error <===//\r\n                input.classList.add('error');\r\n                input.classList.remove('success');\r\n\r\n                //====> Checkboxes <====//\r\n                if (input.getAttribute('type') === \"checkbox\" && !input.checked) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"Must check to continue\" : \"يجب الموافقة للمتابعة.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Value Check. <====//\r\n                else if (input.validity.valueMissing) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"This field is required!\" : \"هذا الحقل مطلوب يرجي وضع قيمة\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Type/Bad/Pattern Check. <====//\r\n                else if (input.validity.typeMismatch || input.validity.badInput || input.validity.patternMismatch) {\r\n                    hasError = true;\r\n\r\n                    if (!message && input.getAttribute('type') === \"email\") {\r\n                        message = pageDir == 'ltr' ? \"Please enter a valid E-Mail!\" : \"من فضلك ادخل عنوان بريد صحيح.\";\r\n                    } else if (!message) {\r\n                        message = input.getAttribute('data-message') || defaults?.typeMismatch || pageDir == 'ltr' ? \"Please correct your value.\" : \"لقد ادخلت قيمة خاطئه يرجي التصحيح.\";\r\n                    }\r\n\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                } \r\n                \r\n                //====> Email Validation <====//\r\n                else if (input.getAttribute('type') === \"email\" && /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(input.value) === false) {\r\n                    hasError = true;\r\n                    if (!message && input.getAttribute('type') === \"email\") {\r\n                        message = pageDir == 'ltr' ? \"Please enter a valid e-mail!\" : \"من فضلك ادخل عنوان بريد صحيح.\";\r\n                    }\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Too-Long Check. <====//\r\n                else if (input.validity.tooLong || input.validity.rangeOverflow) {\r\n                    hasError = true;\r\n                    if (!message) message = defaults?.tooLong || pageDir == 'ltr' ? \"You have exceeded the maximum number.\" : \"لقد تخطيت الحد الاقصي يرجي تصحيح القيمة.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Too-Short Check. <====//\r\n                else if (input.validity.tooShort || input.validity.rangeUnderflow || input.validity.stepMismatch) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"Your value is less than the minimum.\" : \"لقد ادخلت قيمة اقل من الحد الادني يرجي التصحيح.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Success. <====//\r\n                else if (input.validity.valid) {\r\n                    //===> Remove Error <===//\r\n                    input.classList.remove('error');\r\n                    //===> Delete Error Message <===//\r\n                    if (position === 'after') {\r\n                        Phenix(input).next('.px-validation')?.remove();\r\n                    } else {\r\n                        Phenix(input).prev('.px-validation')?.remove();\r\n                    }\r\n                }\r\n\r\n                //===> Do not Submit <===//\r\n                if (submit && hasError) submit.preventDefault();\r\n                return hasError;\r\n            }\r\n\r\n            //====> Reset When New Value is Set <====//\r\n            if (input.tagName !== 'SELECT') input.addEventListener(\"input\", event => {\r\n                reset_status(input, position);\r\n                input.checkValidity();\r\n                validate();\r\n            });\r\n\r\n            else if (input.tagName === 'SELECT') input.addEventListener(\"change\", event => {\r\n                reset_status(input, position);\r\n                input.checkValidity();\r\n                validate();\r\n            });\r\n\r\n            //====> if has invalid value Re-Validate <====//\r\n            input.addEventListener(\"invalid\", invalid => validate());\r\n\r\n            //====> Init <====//\r\n            validate();\r\n        }\r\n\r\n        //===> Active on Form Submit <===//\r\n        if(element.tagName == 'FORM') {\r\n            element.addEventListener('submit', isSubmitting => {\r\n                element.querySelectorAll('input:not([type=\"checkbox\"]):not([type=\"radio\"]):not([type=\"button\"]), textarea, select, .required').forEach(item => {\r\n                    valid_control(item, isSubmitting);\r\n                });\r\n            });\r\n        }\r\n\r\n        //===> Active for Controls <===//\r\n        else {\r\n            valid_control(element);\r\n        }\r\n\r\n        //====> Multiple Validation <====//\r\n        if (patterns && patterns.length > 0) patterns.forEach(pattern => {\r\n            //====> Get the Pattern Data <====//\r\n            let inputs    = element.tagName == 'FORM' ? element.querySelectorAll(`[name=\"${pattern.name}\"]`) : [element],\r\n                regEx:any = pattern.pattern,\r\n                message   = pattern.message,\r\n                position  = pattern.position || 'after';\r\n\r\n            //====> For Each Input <====//\r\n            inputs.forEach(input => {\r\n                //====> Get input Value <====//\r\n                let validate = () => {\r\n                    //====> Check the Pattern <====//\r\n                    if (regEx.test(input.value)) {\r\n                        //===> Set Success <===//\r\n                        input.classList.add('success');\r\n                        input.classList.remove('error');\r\n                        //===> Delete Error Message <===//\r\n                        if (position === 'after') {\r\n                            Phenix(input).next('.px-validation')?.remove();\r\n                        } else {\r\n                            Phenix(input).prev('.px-validation')?.remove();\r\n                        }\r\n                    } else {\r\n                        errorHandler(input, message, position);\r\n                    }\r\n                };\r\n                //====> Check While input <====//\r\n                if (input.tagName !== 'SELECT') input.addEventListener('input', validate);\r\n                else if (input.tagName === 'SELECT') input.addEventListener('change', validate);\r\n            });\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**====> Reference By Comment <====\r\n * ===> 01 - ViewPort Detector\r\n * ===> 02 - Get Viewport Dimensions\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> ViewPort Detector <====*/\r\nPhenixElements.prototype.inView = function (options?:{\r\n    flow?:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    into?:number,    //====> Increase Target Position By [number]\r\n    offset?:number,  //====> Decrease Target Position By [number]\r\n    callback?:Function, //====> Callback when element is in view\r\n}, flowOn?:string) {\r\n    //===> Check if the Element Available ===//\r\n    if (!this[0]) return false;\r\n\r\n    //====> Define Data <====//\r\n    const element = this[0];\r\n    const flow = flowOn || options?.flow;\r\n\r\n    //====> Clean up any existing observer <====//\r\n    if (element._phenixObserver) {\r\n        element._phenixObserver.disconnect();\r\n        delete element._phenixObserver;\r\n    }\r\n\r\n    //====> Configure observer options <====//\r\n    const observerOptions = { \r\n        threshold: 0.1,\r\n        rootMargin: options?.offset ? `${options.offset}px 0px 0px 0px` : '0px'\r\n    };\r\n\r\n    //====> Create observer <====//\r\n    const observer = new IntersectionObserver(entries => {\r\n        //====> Get Entry <====//\r\n        const entry = entries[0];\r\n        \r\n        //====> Check if the Element is Visible <====//\r\n        let isVisible = entry.isIntersecting;\r\n\r\n        //====> Calculate Start Flow <====//\r\n        if (flow === 'start') {\r\n            isVisible = entry.boundingClientRect.top < window.innerHeight;\r\n        }\r\n        //====> Calculate End Flow <====//\r\n        else if (flow === 'end') {\r\n            isVisible = entry.boundingClientRect.bottom > 0;\r\n        }\r\n        //====> Calculate Inset Flow <====//\r\n        else if (options?.into && isVisible) {\r\n            isVisible = entry.boundingClientRect.bottom > options.into;\r\n        }\r\n        \r\n        //====> Execute callback if visible <====//\r\n        if (isVisible) {\r\n            //===> Execute Callback <====//\r\n            if (options?.callback) options.callback(element);\r\n            //===> Unobserve the Element <====//\r\n            observer.unobserve(element);\r\n            //===> Delete the Observer <====//\r\n            delete element._phenixObserver;\r\n        }\r\n    }, observerOptions);\r\n\r\n    //====> Store and start observer <====//\r\n    element._phenixObserver = observer;\r\n    observer.observe(element);\r\n\r\n    //====> Allow method chaining <====//\r\n    return this;\r\n}\r\n\r\n//=====> Get Viewport Dimensions <=====//\r\nPhenixElements.prototype.viewport = function (property:string) {\r\n    //====> Get Element Data <====//\r\n    let element = document.documentElement,\r\n        width   = Math.max(element.clientWidth || 0, window.innerWidth || 0),\r\n        height  = Math.max(element.clientHeight || 0, window.innerHeight || 0);\r\n\r\n    //====> Get Width <====//\r\n    if (property === 'width') return width;\r\n    //====> Get Height <====//\r\n    else if (property === 'height') return height;\r\n    //====> Get Both <====//\r\n    else return {width: width, height: height}\r\n}","/*\r\n * Phenix.js\r\n * Version  : 0.6 Beta\r\n * License  : MIT\r\n * Copyright: 2022 Abdullah.Ramadan\r\n*/\r\n\r\n/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - D.O.M Ready\r\n * ===> 03 - Add Class\r\n * ===> 04 - Remove Class\r\n * ===> 05 - Toggle Class\r\n * ===> 06 - Get Ancestor [Parent, Parents Until]\r\n * ===> 07 - Get Siblings\r\n * ===> 08 - Get Next Siblings\r\n * ===> 09 - Get Previous Siblings\r\n * ===> 10 - CSS Styling\r\n * ===> 11 - Set Multiple Attributes\r\n * ===> 12 - Insert Elements\r\n * ===> 13 - Event Handler\r\n * ===> 14 - Resources Lazy-Loader\r\n * ===> 15 - Media Query Method\r\n * ===> 16 - Service Worker\r\n * ===> 17 - Define information's\r\n * ===> 18 - Define UI Effects\r\n * ===> 19 - Define Other Features\r\n * ===> 20 - Include Features\r\n * ===> 21 - Integration\r\n * ===> 22 - Phenix Selecting Method\r\n * ===> 23 - Your Custom Script [JS]\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nexport class PhenixElements extends Array<HTMLElement | Record <string, any>> {\r\n    /*====> D.O.M Ready <====*/\r\n    ready(callback: () => void): this {\r\n         //====> Check if its Ready <====//\r\n        if (document.readyState === 'complete') queueMicrotask(callback);\r\n        //====> Wait for It to be Ready <====//\r\n        else document.addEventListener('DOMContentLoaded', () => queueMicrotask(callback),{ once: true });\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Add Class <====*/\r\n    addClass(className: any) {\r\n        //====> Split classNames string into an array of class names <====//\r\n        const classNamesArray = className.split(' ');\r\n        const classNamesLength = classNamesArray.length;\r\n\r\n        //====> Add Class for Each Element <====//\r\n        for (let i = 0; i < this.length; i++) {\r\n            const element = this[i] as HTMLElement;\r\n            const classList = element.classList;\r\n\r\n            for (let j = 0; j < classNamesLength; j++) {\r\n                classList.add(classNamesArray[j]);\r\n            }\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Remove Class <====*/\r\n    removeClass(className: string) {\r\n        //====> Split classNames string into an array of class names and convert it to a Set <====//\r\n        const classNamesSet = new Set(className.split(' '));\r\n\r\n        //====> Remove Class for Each Element <====//\r\n        this.forEach((element: HTMLElement) => {\r\n            element.classList.remove(...classNamesSet);\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Toggle Class <====*/\r\n    toggleClass(className: string) {\r\n        //====> Split classNames string into an array of class names <====//\r\n        const classNamesArray = className.split(' ');\r\n\r\n        //====> Loop through each element only once <====//\r\n        for (let i = 0; i < this.length; i++) {\r\n            const element = this[i] as HTMLElement;\r\n            const classList = element.classList;\r\n\r\n            //====> Check if element already has the class <====//\r\n            const hasClass = classNamesArray.some(className => classList.contains(className));\r\n\r\n            //====> Toggle the class based on its presence <====//\r\n            classNamesArray.forEach(className => {\r\n                if (hasClass) {\r\n                    classList.remove(className);\r\n                } else {\r\n                    classList.add(className);\r\n                }\r\n            });\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Get Ancestor <====*/\r\n    ancestor(target?) {\r\n        //====> Define Ancestor Arrays <====//\r\n        let ancestors = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Define The First Parent <====//\r\n            let parent:any = element.parentNode;\r\n\r\n            //====> if has a Target <===//\r\n            if (target && !element.matches('html')) {\r\n                //====> Loop Over The Ancestors <====//\r\n                while (parent && !parent.matches('html')) {\r\n                    //====> When the Target has been Found Return it <====//\r\n                    if (parent.matches(target)) { ancestors.push(parent); break; }\r\n                    //====> Otherwise get the Next Ancestor <====//\r\n                    else parent = parent.parentNode;\r\n                }\r\n            }\r\n\r\n            //====> Otherwise Return the Parent <====//\r\n            else ancestors.push(parent);\r\n        });\r\n\r\n        //====> Return Ancestors <====//\r\n        if (ancestors.length > 1) return ancestors;\r\n        else if (ancestors.length === 1) return ancestors[0];\r\n    }\r\n\r\n    /*====> Get Siblings <====*/\r\n    siblings(target?) {\r\n        //====> Siblings Define <====//\r\n        let siblings = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Get This Element Parent Childs <====//\r\n            let childs = element.parentNode.children;\r\n\r\n            //====> if has No target [Return All Sibling] <====//\r\n            if (!target) Array.from(childs).forEach((child:HTMLElement) => child !== element ? siblings.push(child) : null);\r\n\r\n            //====> Otherwise Return the matched targets <====//\r\n            else Array.from(childs).forEach((child:HTMLElement) => child !== element && child.matches(target) ? siblings.push(child) : null);\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        return siblings.length > 0 ? siblings : null;\r\n    }\r\n\r\n    /*====> Get Next Siblings <====*/\r\n    next(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Next Unit <====//\r\n            let nextUnit = element.nextElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Next Sibling] <====//\r\n            if (!target) siblings.push(nextUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            else {\r\n                //====> if All Next is the Target <====//\r\n                if (all_target) {\r\n                    //====> Loop Through All Next Siblings <====//\r\n                    while (nextUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && nextUnit.matches(all_target)) siblings.push(nextUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        if (!all_target) siblings.push(nextUnit);\r\n    \r\n                        //====> get the next one <====//\r\n                        nextUnit = nextUnit.nextElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Next Matched Target [Next Until] <====//\r\n                else {\r\n                    //====> While there is a Next Unit <====//\r\n                    while (nextUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (nextUnit.matches(target)) { siblings.push(nextUnit); break; } \r\n                        \r\n                        //====> Otherwise Get the Next Unit <====//\r\n                        else nextUnit = nextUnit.nextElementSibling;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        if (siblings.length === 1 && !all_target) return siblings[0];\r\n        else if (siblings.length > 0 || all_target) return siblings;\r\n    }\r\n\r\n    /*====> Get Previous Siblings <====*/\r\n    prev(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n        \r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Previous Unit <====//\r\n            let prevUnit = element.previousElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Previous Sibling] <====//\r\n            if (!target) siblings.push(prevUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            if (target) {\r\n                //====> if All Previous is the Target <====//\r\n                if (all_target) {\r\n                    //====> Loop Through All Previous Siblings <====//\r\n                    while (prevUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && prevUnit.matches(target)) siblings.push(prevUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        else if (!all_target) siblings.push(prevUnit);\r\n    \r\n                        //====> get the previous one <====//\r\n                        prevUnit = prevUnit.previousElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Previous Matched Target [Previous Until] <====//\r\n                else {\r\n                    //====> While there is a Previous Unit <====//\r\n                    while (prevUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (prevUnit.matches(target)) {\r\n                            siblings.push(prevUnit);\r\n                            break;\r\n                        } else {\r\n                            prevUnit = prevUnit.previousElementSibling;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        \r\n        //====> Return Siblings <====//\r\n        if (siblings.length === 1 && !all_target) return siblings[0];\r\n        else if (siblings.length > 0 || all_target) return siblings;\r\n    }\r\n\r\n    /*====> Get Children <====*/\r\n    child(target?:string) {\r\n        //====> Children Define <====//\r\n        let childs = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> All Children <====//\r\n            let all_childs = element.children;\r\n    \r\n            //====> if No target [Return All Direct Children] <====//\r\n            if (!target) childs = all_childs;\r\n    \r\n            //====> if Target is Matched Return it <====//\r\n            if (target) all_childs.forEach(element => element.matches(target) ? childs.push(element) : '');\r\n        });\r\n\r\n        //====> Return Children <====//\r\n        if (childs.length > 1) return childs;\r\n        else if (childs.length === 1) return childs[0];\r\n    }\r\n\r\n    /*====> CSS Styling <====*/\r\n    css(style:object, clearInline?) {\r\n        //====> Check for the Elements <====//\r\n        if (this.length === 0) return;\r\n\r\n        //====> if inline-style Clear is Activated <====//\r\n        if (clearInline) this.forEach((element:HTMLElement) => (element.removeAttribute('style')));\r\n\r\n        //====> for Each CSS Property <====//\r\n        for (const [key, value] of Object.entries(style)) {\r\n            //====> Style Elements <====//\r\n            this.forEach((element:HTMLElement) => {\r\n                element.style.setProperty(key, value);\r\n            });\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this\r\n    }\r\n\r\n    /*====> Set Multiple Attributes <====*/\r\n    setAttributes(attributes:{}) {\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Loop Through the Attributes <====//\r\n            Object.keys(attributes).forEach(attribute => {\r\n                //====> Set Attributes One By One <====//\r\n                element.setAttribute(attribute, attributes[attribute]);\r\n            });\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Insert Elements <====*/\r\n    insert(position?:string, elementsPackage?:any) {\r\n        //====> Define the Package <====//\r\n        let new_package = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //===> String Element Converter to [Node] <===//\r\n            if (typeof(elementsPackage) === 'string') elementsPackage = document.createRange().createContextualFragment(elementsPackage);\r\n\r\n            //====> Insert After The Element <====//\r\n            if (position === 'after') {\r\n                element.parentNode.insertBefore(elementsPackage, element.nextSibling);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.nextElementSibling);\r\n            }\r\n\r\n            //====> Insert Before The Element <====//\r\n            else if (position === 'before') {\r\n                element.parentNode.insertBefore(elementsPackage, element);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.previousElementSibling);\r\n            }\r\n\r\n            //====> Insert Inside The Element at First <====//\r\n            else if (position == 'prepend') {\r\n                element.prepend(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.firstChild);\r\n            }\r\n\r\n            //====> Insert Inside The Element at Last <====//\r\n            else if (position == 'append') {\r\n                element.appendChild(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.lastChild);\r\n            }\r\n        });\r\n\r\n        //====> Return the New Elements Package <====//\r\n        if (new_package.length > 1) return new_package;\r\n        else if (new_package.length === 1) return new_package[0];\r\n    }\r\n\r\n    /*====> Event Handler <====*/\r\n    on(event, callback, live?, timer?) {\r\n        //====> Attache a Normal Event <====//\r\n        if (!live) {\r\n            //====> Event for Each Element <====//\r\n            this.forEach((element:HTMLElement) => {\r\n                element.addEventListener(event, callback);\r\n            });\r\n\r\n            //====> Return Phenix Elements <====//\r\n            return this;\r\n\r\n        //====> Live Event <====//\r\n        } else if (live && this.length > 0) {\r\n            //====> Create Time Loop & Attach Event <====//\r\n            let timerLoop = setInterval(() => this.forEach((element:HTMLElement) => element.addEventListener(event, callback)), timer | 1000);\r\n\r\n            //====> Return the Elements & Time Loop <====//\r\n            return {\r\n                elements: this,\r\n                timeLoop: timerLoop\r\n            };\r\n        }\r\n    }\r\n\r\n    /*====> Resources Lazy-Loader <====*/\r\n    lazyLoading() {\r\n        //====> Loop Through Media Elements <====//\r\n        Phenix('img, video, audio, iframe').forEach((element:HTMLElement) => {\r\n            //====> Set Loading Mode <====//\r\n            if (!element.matches('.px-loaded')) {\r\n                //====> Get Data <====//\r\n                let playable = element.matches('video') || element.matches('audio') || element.matches('iframe'),\r\n                    preloaded = element.getAttribute('preload') || element.getAttribute('loading');\r\n\r\n                //===> Mark as Loading <===//\r\n                if (element.matches('img') || element.matches('iframe')) element.classList.add('px-loading');\r\n\r\n                //===> Native Loading Attribute <===//\r\n                if (playable && !preloaded) element.setAttribute('preload', 'none');\r\n                else if(element.matches('img')) element.setAttribute('loading', 'lazy');\r\n\r\n                //====> Watch Element <====//\r\n                Phenix(element).inView({\r\n                    offset: 100,\r\n                    callback: () => {\r\n                        if (element.matches('img') || element.matches('iframe')) {\r\n                            element.classList.remove('px-loading');\r\n                            element.classList.add('px-loaded');\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Media Query <====*/\r\n    mediaQuery(breakpoint:any, fn_callback?:any, mobile_first?:boolean) {\r\n        /*==== Breakpoints Points ====*/\r\n        let xsmall_end = 499, /*===> Max xSmall breakpoint Width */\r\n            small_start= 500, /*===> Min Small breakpoint Width */\r\n            small_end = 774,  /*===> Max Small breakpoint Width */\r\n            /*==== Medium Points ====*/\r\n            medium_start = 775,  /*===> Min Medium breakpoint Width */\r\n            medium_end = 1204,   /*===> Max Medium breakpoint Width */\r\n            /*==== Large Points ====*/\r\n            large_start = 1205, /*===> Min Large breakpoint Width */\r\n            large_end = 1404,   /*===> Max Large breakpoint Width */\r\n            /*==== xLarge Points ====*/\r\n            xlarge_start = 1405, /*===> Min xLarge breakpoint Width */\r\n            xlarge_end = 2565;   /*===> Max xLarge breakpoint Width */\r\n\r\n        /*==== Activator ====*/\r\n        const createQuery = () => {\r\n            //==== Get Current Screen Width ====//\r\n            let current_vw = Phenix(document).viewport('width');\r\n\r\n            /*==== Extra Small ====*/\r\n            if (mobile_first && breakpoint == 'xsmall') {\r\n                if (current_vw >= 0) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'xsmall') {\r\n                if (current_vw <= xsmall_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Small ====*/\r\n            if (mobile_first && breakpoint == 'small')  {\r\n                if (current_vw >= small_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'small')  {\r\n                if (current_vw <= small_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Medium ====*/\r\n            if (mobile_first && breakpoint == 'medium') {\r\n                if (current_vw >= medium_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'medium') {\r\n                if (current_vw <= medium_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Large ====*/\r\n            if (mobile_first && breakpoint == 'large')  {\r\n                if (current_vw >= large_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'large')  {\r\n                if (current_vw <= large_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Extra Large ====*/\r\n            if (mobile_first && breakpoint == 'xlarge') {\r\n                if (current_vw >= xlarge_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'xlarge')  {\r\n                if (current_vw <= xlarge_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Custom Media ====*/\r\n            if (mobile_first && typeof(breakpoint) == 'number')   {\r\n                if (current_vw >= breakpoint) {\r\n                    fn_callback();\r\n                }\r\n            } else if (typeof(breakpoint) == 'number')  {\r\n                if (current_vw <= breakpoint) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n        };\r\n\r\n        //===> Active <===//\r\n        createQuery();\r\n\r\n        //===> Live Check <===//\r\n        window.addEventListener('resize', resizing => {\r\n            createQuery();\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Dynamic Position <====*/\r\n    dynamicPosition = () => {\r\n        //====> Event for Each Element <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //=== Check for Visibility ===//\r\n            let target_element:any = Phenix(element),\r\n                panel_size = Math.round(target_element[0].clientHeight),\r\n                stickyElement = document.querySelector('[data-sticky=\"absolute\"]')?.getBoundingClientRect().height;\r\n            \r\n            if (panel_size == 0) return;\r\n    \r\n            //=== get viewport postion ===//\r\n            let top = Math.round(target_element[0].getBoundingClientRect().top),\r\n                stickySize = Math.round(stickyElement) || 0,\r\n                offsetTop = Math.round(top+stickySize-(stickySize/4)),\r\n                offsetBottom = Phenix(document).viewport().height - (panel_size + offsetTop);\r\n    \r\n            //====> to Top <====//\r\n            if (offsetBottom < 0) {\r\n                target_element.addClass('pos-before-y').removeClass('pos-after-y');\r\n            }\r\n    \r\n            //====> to Bottom <====//\r\n            else {\r\n                target_element.addClass('pos-after-y').removeClass('pos-before-y');\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*====> CSS/JS Importer <====*/\r\n    import = (id:string, tag:string, source:string, callback:any, options?:boolean|{\r\n        integrated?: boolean;   // Whether to prepend the library path to the source\r\n        module?: boolean;       // Whether to load as ES6 module\r\n        importMap?: Record<string, string>; // Import map for ES6 modules\r\n    }) => {\r\n        //===> Get Correct Tagname <===//\r\n        if (tag === \"css\") tag = \"link\";\r\n        else if (tag === \"js\") tag = \"script\";\r\n\r\n        //===> Handle Legacy Support for Options <===//\r\n        let isIntegrated = false;\r\n        let isModule = false;\r\n        let moduleMap: Record<string, string> | undefined;\r\n\r\n        if (typeof options === 'boolean') {\r\n            // Legacy format: options is isIntegrated boolean\r\n            isIntegrated = options;\r\n        } else if (options && typeof options === 'object') {\r\n            // New format: options is an object\r\n            isIntegrated = options.integrated ?? false;\r\n            isModule = options.module ?? false;\r\n            moduleMap = options.importMap;\r\n        }\r\n\r\n        //===> Define Element and URL Path <===//\r\n        let element = document.querySelector(`#${id}-phenix-${tag === \"link\" ? \"css\" : tag}`),\r\n            libPath = Phenix(document).getURL().phenixJS.replace('js/', 'lib/'),\r\n            trueUrl = `${isIntegrated ? libPath : \"\"}${source}`;\r\n\r\n        //===> Create a new Element if is not Loaded yet <===//\r\n        if (!element) {\r\n            //===> Create Element <===//\r\n            element = document.createElement(tag);\r\n    \r\n            //===> Set ID <===//\r\n            element.setAttribute('id', `${id}-phenix-${tag === \"link\" ? \"css\" : tag}`);\r\n    \r\n            //===> Load JS Script <===//\r\n            if (tag === \"script\" || tag === \"js\") {\r\n                element.setAttribute(\"src\", trueUrl);\r\n                \r\n                //===> If it's an ES6 Module <===//\r\n                if (isModule) {\r\n                    element.setAttribute(\"type\", \"module\");\r\n                } else {\r\n                    element.setAttribute(\"async\", \"\");\r\n                }\r\n                \r\n                //===> Append Element <===//\r\n                document.body.appendChild(element);\r\n            }\r\n\r\n            //===> Load CSS File <===//\r\n            else if (tag === \"link\" || tag === \"css\") {\r\n                element.setAttribute(\"href\", trueUrl);\r\n                element.setAttribute(\"rel\", \"stylesheet\");\r\n                //===> Append Element <===//\r\n                document.head.appendChild(element);\r\n            };\r\n        }\r\n\r\n        //====> When Loaded Run Callback <====//\r\n        element.addEventListener(\"load\", callback);\r\n\r\n        //====> When Error Re-Load <====//\r\n        element.addEventListener(\"error\", event => element.setAttribute(\"src\", trueUrl));\r\n    };\r\n\r\n    /*====> Convert Pixels to REM <====*/\r\n    toREM(size, base = 16) {\r\n        return `${(parseFloat(size) / base)}rem`;\r\n    };\r\n\r\n    /*====> Copy to Clipboard <====*/\r\n    async copyText (text) {\r\n        //===> Copy to Clipboard Method <===//\r\n        const type = \"text/plain\";\r\n        const blob = new Blob([text], { type });\r\n        const data = [new ClipboardItem({ [type]: blob })];\r\n        await navigator.clipboard.write(data);\r\n    };\r\n\r\n    /*====> Voice Trigger <=====*/\r\n    audioTrigger = (trigger) => {\r\n        //===> Check if the Trigger is HTML Element <===//\r\n        if (trigger instanceof HTMLElement) {\r\n            //===> Define Objects <===//\r\n            let audio_player:any = document.querySelector('#px-audio-player');\r\n    \r\n            //===> Create Audio Player <===//\r\n            if (!audio_player) {\r\n                //===> Create Player <===//\r\n                audio_player = document.createElement(\"audio\");\r\n                //=== Set Player ID ===//\r\n                audio_player.setAttribute('id', 'px-audio-player');\r\n                //=== Insert Player to the Document ===//\r\n                document.body.appendChild(audio_player);\r\n            }\r\n    \r\n            //====> Audio Buttons <====//\r\n            Phenix(trigger).on('click', event => {\r\n                event.preventDefault();\r\n                //=== Get Data ===//\r\n                let button = event.target,\r\n                    audio_file = button.getAttribute('href') || button.getAttribute('data-audio');\r\n    \r\n                //=== Check if the Audio is Already Playing ===//\r\n                if (audio_player.getAttribute('src') === audio_file && !audio_player.paused) {\r\n                    //=== Pause the Audio ===//\r\n                    audio_player.pause();\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    if(button.classList.contains('fa-pause')) {\r\n                        button.classList.remove('fa-pause');\r\n                        button.classList.add('fa-play');\r\n                    }\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    else if(button.classList.contains('fa-music-note')) {\r\n                        button.classList.remove('fa-music-note');\r\n                        button.classList.add('fa-music-note-slash');\r\n                    }\r\n                } else {\r\n                    //=== Set Audio and Play ===//\r\n                    audio_player.setAttribute('src', audio_file);\r\n                    audio_player.play();\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    if (button.classList.contains('fa-play')) {\r\n                        button.classList.add('fa-pause');\r\n                        button.classList.remove('fa-play');\r\n                    }\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    else if(button.classList.contains('fa-music-note-slash')) {\r\n                        button.classList.add('fa-music-note');\r\n                        button.classList.remove('fa-music-note-slash');\r\n                    }\r\n    \r\n                    //=== When Audio is Finished Switch the Status icon ===//\r\n                    audio_player.addEventListener('ended', (isEnded) => {\r\n                        //=== Switch Play Status icon ===//\r\n                        if (button.classList.contains('fa-play')) {\r\n                            button.classList.add('fa-pause');\r\n                            button.classList.remove('fa-play');\r\n                        }\r\n    \r\n                        //=== Switch Play Status icon ===//\r\n                        else if(button.classList.contains('fa-music-note-slash')) {\r\n                            button.classList.add('fa-music-note');\r\n                            button.classList.remove('fa-music-note-slash');\r\n                        }\r\n                    });\r\n                }\r\n            }, true);\r\n        };\r\n    };\r\n\r\n    /*====> Convert String to Boolean <====*/\r\n    toBoolean = (value: string | boolean | undefined): boolean => {\r\n        return value === true || value === 'true';\r\n    };\r\n\r\n    /*====> Define Information <====*/\r\n    height; getCSS; direction; getURL;\r\n    inView; viewport; copyrights;\r\n\r\n    /*====> Define UI Effects <====*/\r\n    slideUp; slideDown; slideToggle;\r\n    fadeOut; fadeIn; fadeToggle;\r\n\r\n    /*====> Define Other Features <====*/\r\n    counter; multimedia; timer;\r\n    sticky; smothScroll; scrollSpy;\r\n    design; themes; animations;\r\n\r\n    /*====> Define Components <====*/\r\n    dropdown; tabs; collapse; connect;\r\n    popup; lightbox; menu; datatable;\r\n    validation; uploader; progress; rebuildSelect\r\n    select; repeater; rating; seo; loader;\r\n    slider; utilities; notifications; init; debounce;\r\n    /*====> WooCommerce Methods <====*/\r\n    pds_add_to_cart; pds_remove_from_cart; pds_toggle_wishlist;\r\n    /*====> Three.js Methods <====*/\r\n    three;\r\n}\r\n\r\n/*====> Phenix Selecting Method <====*/\r\nconst Phenix = (selector?:any) => {\r\n    /*====> Get Elements from Selector <====*/\r\n    if (typeof(selector) === 'string' && selector.length > 0) {\r\n        //====> Select as Phenix Elements <====//\r\n        const selected = document.querySelectorAll(selector);\r\n        //====> Create Elements Query <====//\r\n        return new PhenixElements(...selected);\r\n    }\r\n\r\n    /*====> if its Elements Passed it <====*/\r\n    else if (selector !== null && typeof(selector) !== 'undefined' || 'number') {\r\n        //====> if Not Array Make it one <====//\r\n        const elements = Array.isArray(selector) ? selector : [selector];\r\n        //====> Filter Undefined/Nulled Items <====//\r\n        const filteredElements = elements.filter((element) => element !== null && element !== undefined);\r\n        //====> and Create Elements Query <====//\r\n        return new PhenixElements(...filteredElements);\r\n    }\r\n}\r\n\r\n//====> Export Phenix <====//\r\nexport default Phenix;\r\n\r\n/*====> Import Features <====*/\r\nimport './features/get-info';   //==> Get Informations about elements\r\nimport './features/viewport';   //==> Viewport Detection\r\nimport './features/effects';    //==> UI Effects\r\nimport './features/counter';    //==> Animated Counter\r\nimport './features/animations'; //==> View-port Animations\r\nimport './features/validation'; //==> Form Validation\r\nimport './features/collapse';   //==> Collapse Toggle\r\nimport './features/notifications'; //==> Notifications\r\n\r\n/*====> Import Components <====*/\r\nimport './components/menu';      //==> Menus\r\nimport './components/media';     //==> Media Setter\r\nimport './components/timer';     //==> Time Counter\r\nimport './components/dropdown';  //==> Dropdown\r\nimport './components/tabs';      //==> Tabs System\r\nimport './components/popup';     //==> Popups\r\nimport './components/progress';  //==> Progress\r\nimport './components/select';    //==> Advanced Select\r\nimport './components/uploader';  //==> File Uploader\r\nimport './components/rating'; //==> Rating\r\n// import './components/datatable'; //==> Data-Tables\r\n\r\n/*====> Integration <====*/\r\nimport './integration/slider';    //==> Splide.js Slider\r\nimport './integration/utilities'; //==> Phenix Utilities\r\nimport './integration/blocks';    //==> Phenix Blocks Scripts\r\nimport './integration/wordpress'; //==> Wordpress Integration\r\nimport './integration/woocommerce'; //==> WooCommerce Integration\r\n\r\n/*====> Custom Script <====*/\r\nimport './custom-scripts';\r\n\r\n//====> Export Global Phenix <====//\r\nmodule.exports = Phenix;\r\n","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\ndeclare var noUiSlider: any;\r\n\r\n/*====> Phenix Blocks Script <====*/\r\nPhenixElements.prototype.init = function (scripts?:[]) {\r\n    //===> Activate Lazyloading <===//\r\n    Phenix(document).lazyLoading();\r\n\r\n    //===> Smooth Scroll <====//\r\n    Phenix('a.smooth-scroll, .smooth-scroll a[href*=\"#\"]').forEach((link:HTMLElement) => {\r\n        // let hasFunction = Phenix(link).ancestor('.px-tabs') || Phenix(link).ancestor('.scrollspy-menu');\r\n        // if (!hasFunction) \r\n        Phenix(link).smothScroll();\r\n    });\r\n\r\n    Phenix(\".go-up-btn\").on(\"click\", isClicked => window.scrollTo({top: 0,left: 0,behavior: \"smooth\",}));\r\n\r\n    /*====> Add Data Options to un-reachable Elements <====*/\r\n    Phenix(`[data-add-options]`).forEach((element:HTMLElement) => {\r\n        //===> Get Data Options <====//\r\n        let dataOptions = JSON.parse(element.getAttribute('data-add-options'));\r\n        //===> Add Data Options the Elements <====//\r\n        Object.entries(dataOptions).forEach(([selector, options]) => {\r\n            //===> Get Selector <====//\r\n            element.querySelectorAll(`.${selector}`).forEach((item:HTMLElement) => {\r\n                //===> Add Data Options to Elements <====//\r\n                Object.entries(options).forEach(([attribute, value]) => item.setAttribute(`${attribute}`, value));\r\n            });\r\n        });\r\n    });\r\n\r\n    //===> Move Elements to Sibling Grid <===//\r\n    Phenix('.move-to-grid').forEach(element => {\r\n        let grid_element = Phenix(element).siblings('.row')[0];\r\n        Phenix(grid_element).insert(\"append\", element);\r\n    });\r\n\r\n    //===> Move Elements to Sibling Grid <===//\r\n    Phenix('.move-to-grid-before').forEach(element => {\r\n        let grid_element = Phenix(element).siblings('.row')[0];\r\n        Phenix(grid_element).insert(\"prepend\", element);\r\n    });\r\n\r\n    //===> Move Header <===//\r\n    const main_header = document.querySelector('.main-header'),\r\n          header_holder = document.querySelector('#header-holder');\r\n\r\n    //====> Header Holders <====//\r\n    if (main_header && header_holder) header_holder.prepend(main_header);\r\n\r\n    //===> Audio Player [Testimonials] <===//\r\n    if (document.querySelector('[data-audio]') || document.querySelector('.audio-trigger')) {\r\n        //====> Audio Buttons <====//\r\n        Phenix(document).audioTrigger('button[data-audio], .audio-trigger');\r\n    }\r\n\r\n    //===> Sticky Elements <====//\r\n    Phenix(\"[data-sticky], .main-header.position-st\").sticky({into: 0});\r\n\r\n    //====> Sliders <====//\r\n    Phenix('.px-slider:not([data-is-navigation])').slider();\r\n\r\n    //====> Tabs <====//\r\n    Phenix('.px-tabs').tabs();\r\n    \r\n    //====> Popups <====//\r\n    Phenix('.px-modal').popup();\r\n\r\n    //====> Activate Select <====//\r\n    Phenix('select.px-select').forEach((select:HTMLElement) => {\r\n        if (!select.querySelector('option')) Phenix(select).insert('prepend', `<option value=\"\" selected>${select.getAttribute('data-placeholder') || 'Default'}</option>`);\r\n        Phenix(select).select();\r\n    });\r\n\r\n    //===> Unlocated Menu fallback style. <===//\r\n    Phenix('.px-navigation > div.reset-list').forEach((element:HTMLElement) => {\r\n        //===> Define Elements <===//\r\n        let parent:any = Phenix(element).ancestor(\".px-navigation\"),\r\n            classNames = element.classList,\r\n            children  = element.childNodes;\r\n\r\n        //===> Move Children <===//\r\n        children.forEach((child:any) => {\r\n            parent.appendChild(child);\r\n            //===> Move Classnames <===//\r\n            classNames.forEach((className:string) => child.classList.add(className));\r\n        });\r\n\r\n        //===> Remove Element <===//\r\n        element.remove();\r\n    });\r\n\r\n    //===> Megamenu Hooks <===//\r\n    Phenix(\".pds-megamenu\").forEach((menu:HTMLElement) => {\r\n        //===> Get Elements <====//\r\n        const id = menu.getAttribute('id');\r\n        const menu_item = document.querySelector(`.mgh-${id}`);\r\n        //===> Get the Menu Item <===//\r\n        Phenix(menu_item).insert('append', menu);\r\n    });\r\n\r\n    //===> Phenix Menu <===//\r\n    Phenix('.px-navigation').menu();\r\n\r\n    //====> Multimedia <====//\r\n    Phenix('.px-media').multimedia({lazyloading: true});\r\n\r\n    //====> Phenix Uploader <====//\r\n    Phenix('.px-uploader').uploader();\r\n\r\n    //====> Dropdown Buttons <====//\r\n    Phenix('.px-dropdown').dropdown();\r\n\r\n    //====> Progress <====//\r\n    Phenix('.px-progress').progress({lazyloading: true});\r\n\r\n    //====> Global Accordion <====//\r\n    Phenix('.px-accordion:not(.custom-accordion) .accordion-btn').collapse({\r\n        related : true,\r\n        parent  : '.px-accordion',\r\n        target  : '.accordion-content',\r\n    });\r\n\r\n    //===> Animations <===//\r\n    Phenix('[data-animation], .px-animate, [data-lazy-group]').animations({animateCSS: [\"all\"]});\r\n\r\n    //====> Build Timer's <====//\r\n    Phenix('.px-timer').timer({type: \"countdown\"});\r\n\r\n    /*===> Table of contents Menu <===*/\r\n    let postContent = document.querySelector(\".entry-content\"), last_title,\r\n        content_menu = document.querySelector('#table-of-content-list');\r\n\r\n    /*===> Loop Through Titles <===*/\r\n    if (postContent && content_menu) {\r\n        //===> Get Headlines <===//\r\n        let headlines = postContent.querySelectorAll('h2, h3, h4');\r\n        //===> Reset List <===//\r\n        content_menu.innerHTML = \"\";\r\n        //===> for Each Headline <===//\r\n        headlines.forEach((element:HTMLElement, index) => {\r\n            //====> Get Data <====//\r\n            let title = element.textContent,\r\n                itemHtml = `<li class=\"tx-nowrap\"><a href=\"#section-${index}\" class=\"smoth-scroller\">${title}</a></li>`;\r\n    \r\n            //====> Set ID <====//\r\n            element.setAttribute('id', `section-${index}`);\r\n\r\n            //====> Sub-Titles <====//\r\n            if (element.matches('h3') || element.matches('h4')) {\r\n                //===> ... <===//\r\n                let last_item = content_menu.querySelector('li:last-child'),\r\n                    last_list = last_item?.querySelector('ul') || content_menu;\r\n                //====> Create new Menu <====//\r\n                if (!last_list && last_item) last_list = Phenix(last_item).insert('append', '<ul class=\"table-of-content-menu pdx-15\"></ul>');\r\n    \r\n                //====> Create as Menu Item <====//\r\n                Phenix(last_list).insert('append', itemHtml);\r\n            }\r\n            //====> Create as Main Title <====//\r\n            else Phenix(content_menu).insert('append', itemHtml);\r\n    \r\n            //====> Assign Last Title <====//\r\n            last_title = element;\r\n        });\r\n    }\r\n\r\n    //===> .Scrollspy. <===//\r\n    Phenix(\".scrollspy-menu\").scrollSpy();\r\n\r\n    //===> .Others. <===//\r\n    Phenix(document).utilities();\r\n\r\n    //===> Header Hacks <===//\r\n    if (main_header) {\r\n        \r\n    }\r\n\r\n    //===> Add Support for CSS Scroll Driving Animations <===//\r\n    // Phenix(document).import(\"scroll-timeline\", \"script\", \"https://flackr.github.io/scroll-timeline/dist/scroll-timeline.js\", ()=>{}, { integrated: false });\r\n\r\n    //===> Add Support Price Range Sliders <===//\r\n    const RangeSliders = Phenix('.pds-range-slider');\r\n\r\n    //===> Price Range Slider <===//\r\n    if (RangeSliders.length > 0) {\r\n        //===> Get Page Direction <===//\r\n        const page_direction = Phenix(document).direction();\r\n\r\n        //====> Import Slider Plugin <====//\r\n        Phenix(document).import(\"range-slider\", \"script\", \"range-slider/range-slider.js\", ()=>{\r\n            //====> Import CSS <====//\r\n            Phenix(document).import(`range-slider`, \"link\", `range-slider/range-slider${page_direction === \"rtl\" ? \"-rtl\" : \"\"}.css`, ()=>{}, { integrated: true });\r\n\r\n            //====> Activate Sliders <====//\r\n            RangeSliders.forEach((slider:any) => {\r\n                //===> Get Defaults <===//\r\n                const minRange = parseInt(slider.getAttribute(\"data-min\")),\r\n                      maxRange = parseInt(slider.getAttribute(\"data-max\"));\r\n\r\n                //===> Initial the Slider <===//\r\n                noUiSlider.create(slider, {\r\n                    step: 5,\r\n                    connect: true,\r\n                    tooltips:true,\r\n                    start: [minRange || 150, maxRange || 700],\r\n                    direction: page_direction,\r\n                    range: {\r\n                        'min': minRange || 10,\r\n                        'max': maxRange || 900\r\n                    },\r\n                });\r\n        \r\n                //===> Update Controls Values <===//\r\n                var min_range = slider.parentNode.querySelector(\".range-min\"),\r\n                    max_range = slider.parentNode.querySelector(\".range-max\");\r\n\r\n                if (min_range && max_range) {\r\n                    slider.noUiSlider.on('update', function (values, handle) {\r\n                        if (handle) {max_range.value = values[handle];} \r\n                        else {min_range.value = values[handle];}\r\n                    });\r\n            \r\n                    //===> Update From Controls <===//\r\n                    min_range.addEventListener('change', event => {\r\n                        var maxVal = max_range.value,\r\n                            minVal = min_range.value;\r\n                            slider.noUiSlider.set([parseInt(minVal),parseInt(maxVal)]);\r\n                    });\r\n            \r\n                    max_range.addEventListener('change', event => {\r\n                        var maxVal = max_range.value,\r\n                            minVal = min_range.value;\r\n                            slider.noUiSlider.set([parseInt(minVal),parseInt(maxVal)]);\r\n                    });\r\n                }\r\n            });\r\n        }, { integrated: true });\r\n    }\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix and Splide\r\n * ===> 02 - Phenix Slider\r\n * ===> 03 - Create Markup\r\n * ===> 02 - \r\n * ===> 02 - \r\n*/\r\n\r\n\r\n/*====> Phenix Query <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n/*====> Splide JS for The Slider Core <====*/\r\ndeclare var Splide: any;\r\n\r\n/*====> Phenix Slider <====*/\r\nPhenixElements.prototype.slider = function (options?:{\r\n    type?:string;\r\n    focus?:any;\r\n    items?:number;\r\n    steps?:number;\r\n    speed?:number;\r\n    start?:number;\r\n    duration?:number;\r\n    autoplay?:boolean;\r\n    controls?:any;\r\n    pagination?:any;\r\n    breakpoints?:any;\r\n    direction?:string;\r\n    splide_options?:any;\r\n    arrow?:string;\r\n    page?:string;\r\n    isNavigation?:boolean;\r\n    updateAfter?:boolean;\r\n    waitForTransition?:boolean;\r\n    sync?:string;\r\n    padding?:string;\r\n    pauseOnHover?:boolean;\r\n    intersection?:boolean;\r\n    rewind?:boolean;\r\n    wheel?:boolean;\r\n    wheelSleep?:number;\r\n    releaseWheel?:boolean;\r\n    drag?:boolean;\r\n    width?:string;\r\n    height?:string;\r\n    autoWidth?:string;\r\n    autoHeight?:string;\r\n    fixedWidth?:string;\r\n    fixedHeight?:string;\r\n    heightRatio?:string;\r\n    autoScroll?:string;\r\n    center?:any;\r\n}) {\r\n    //====> Sliders Activator <====//\r\n    let slider_handler = () => this.forEach((slider:HTMLElement) => {\r\n        //===> Vertical Height Calculator <===//\r\n        const verticalFix = (slides, direction, slider) => {\r\n            if (direction == 'ttb') {\r\n                let first_item = slider.children[0],\r\n                    first_height = Phenix(first_item).height();\r\n                return first_height*parseInt(slides);\r\n            }\r\n        };\r\n\r\n        //====> Integration <====//\r\n        const slider_integration = () => {\r\n            //====> Multimedia Integration <====//\r\n            const media_elements = slider.querySelectorAll('[data-src]');\r\n            Phenix(media_elements).multimedia();\r\n    \r\n            //====> Lazyloading Integration <====//\r\n            slider.querySelectorAll('.px-media.px-loading, .px-media.px-loader').forEach(media => {\r\n                Phenix(media).inView({\r\n                    offset: 100,\r\n                    callback: (element) => {\r\n                        //====> Multimedia Loader <====//\r\n                        if (element.getAttribute('data-src')) {\r\n                            Phenix(element).multimedia();\r\n                        } else {\r\n                            element.setAttribute('src', element.getAttribute('data-lazyload'));\r\n                        }\r\n                        //====> Disable Loading Spinner <====//\r\n                        element.classList.remove('px-loader');\r\n                        element.classList.remove('px-loading');\r\n                    }\r\n                });\r\n            });\r\n\r\n            //====> Popup Modals <====//\r\n            const modalTriggers = slider.querySelectorAll(\".px-lightbox, [data-modal]\");\r\n            if (modalTriggers.length > 0) Phenix('.px-modal').popup();\r\n            \r\n            //====> Audio Buttons <====//\r\n            const audioTriggers = slider.querySelectorAll(\"button[data-audio]\");\r\n            if (audioTriggers.length > 0) Phenix(document).audioTrigger(audioTriggers);\r\n\r\n            //===> WooCommerce Add to Cart <===//\r\n            const add_to_cart_btns = slider.querySelectorAll(\".pds-add-to-cart\");\r\n            if (add_to_cart_btns.length > 0) Phenix(\".pds-add-to-cart\").on(\"click\", isClicked => {\r\n                    //===> Prevent link navigation <===//\r\n                    isClicked.preventDefault();\r\n                    //===> Define Item Data <===//\r\n                    const button = isClicked.target;\r\n                    const productId = button.getAttribute('data-product');\r\n\r\n                    //===> Activate Loading Mode <===//\r\n                    button.classList.add('px-loading-inline');\r\n\r\n                    //===> Add the Item to the Cart <===//\r\n                    Phenix(document).pds_add_to_cart(button, productId);\r\n            }, true);\r\n\r\n            //===> Wishlist Toggle <===//\r\n            const wishlist_btns = slider.querySelectorAll(\".pds-wishlist-btn\");\r\n            if (wishlist_btns.length > 0) Phenix(\".pds-wishlist-btn\").on(\"click\", (isClicked) => {\r\n                //===> Prevent Default <===//\r\n                isClicked.preventDefault();\r\n                //===> Define Data <===//\r\n                let action_url = isClicked.target.getAttribute('href'),\r\n                    add_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-rm-url\")),\r\n                    remove_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-add-url\"));\r\n\r\n                //====> Add Loading Mode <====//\r\n                isClicked.target.classList.add(\"px-loading-inline\");\r\n\r\n                Phenix(document).pds_toggle_wishlist(isClicked, action_url, add_url, remove_url);\r\n            }, true);\r\n        };\r\n\r\n        //====> Slider Creator <=====//\r\n        const slider_creator = (slider:any) => {\r\n            /*====> Get Inline Options <====*/\r\n            let inline = attr => slider.getAttribute(attr),\r\n                currentClasses = slider.classList;\r\n\r\n            //====> Already Exist <====//\r\n            if (currentClasses.contains('splide') || currentClasses.contains('splide__list')) return;\r\n\r\n            //====> Create Markup <====//\r\n            const slider_track   = document.createElement(\"div\"),\r\n                  slider_list    = document.createElement(\"div\"),\r\n                  current_slides = slider.children;\r\n\r\n            //====> Move Slides <====//\r\n            Array.from(current_slides).forEach((slide:any) => {\r\n                slide.classList.add('splide__slide');\r\n                slider_list.appendChild(slide);\r\n            });\r\n\r\n            //====> Set Class Names <====//\r\n            currentClasses.add('splide');\r\n            slider_track.setAttribute(\"class\", \"splide__track\");\r\n            slider_list.setAttribute(\"class\", \"splide__list\");\r\n\r\n            //====> Fix Grid System Classes <====//\r\n            Array.from(currentClasses).forEach((cl:any) => {\r\n                if (cl.includes('gp') || cl.includes('row')) {\r\n                    slider_list.classList.add(cl);\r\n                    slider.classList.remove(cl);\r\n                }\r\n            });\r\n\r\n            //====> Append Elements <====//\r\n            slider.appendChild(slider_track);\r\n            slider_track.appendChild(slider_list);\r\n\r\n\r\n            //====> Run Phenix Utils <====//\r\n            slider_integration();\r\n\r\n            //====> Default Options <====//\r\n            let type = inline('data-type') || options?.type || \"loop\",\r\n                focus = inline('data-focus') || options?.focus,\r\n                items = parseInt(inline('data-items')) || options?.items || 1,\r\n                steps = parseInt(inline('data-steps')) || options?.steps || 1,\r\n                speed = parseInt(inline('data-speed')) || options?.speed || 700,\r\n                duration = parseInt(inline('data-duration')) || options?.duration || 6000,\r\n                autoplay:any = inline('data-autoplay') || options?.autoplay || currentClasses.contains(\"data-autoplay-off\") ? false : true,\r\n                start  = parseInt(inline('data-start')) || options?.start,\r\n                rewind = inline('data-rewind') || options?.rewind,\r\n                direction = inline('data-direction') || options?.direction || Phenix(document).direction(),\r\n                breakpoints = options?.breakpoints || {},\r\n\r\n                //===> User Actions <====//\r\n                pauseOnHover = inline('data-pause-hover') || options?.pauseOnHover,\r\n                intersection = inline('data-intersection') || options?.intersection,\r\n\r\n                //===> Controls <===//\r\n                wheel = inline('data-wheel') || options?.wheel || false,\r\n                controls = inline('data-controls') || options?.controls,\r\n                pagination = inline('data-pagination') || options?.pagination,\r\n                drag = inline('data-drag') || options?.drag || (!controls || !pagination ? false : true),\r\n\r\n                //===> Features & Modes <===//\r\n                sync = inline('data-sync') || options?.sync,\r\n                padding = inline('data-padding') || options?.padding,\r\n                isNavigation = parseInt(inline('data-is-navigation')) || options?.isNavigation,\r\n\r\n                //===> Animations <===//\r\n                updateAfter = inline('data-update-after') || options?.updateAfter,\r\n                waitForTransition = inline('data-waitForTransition') || options?.waitForTransition,\r\n                wheelSleep = parseInt(inline('data-wheelSleep')) || options?.wheelSleep,\r\n                releaseWheel = inline('data-releaseWheel') || options?.releaseWheel,\r\n\r\n                //===> Style <===//\r\n                width = inline('data-width') || options?.width,\r\n                height = inline('data-height') || options?.height,\r\n                autoWidth = inline('data-autoWidth') || options?.autoWidth,\r\n                autoHeight = inline('data-autoHeight') || options?.autoHeight,\r\n                fixedWidth = inline('data-fixedWidth') || options?.fixedWidth,\r\n                fixedHeight = inline('data-fixedHeight') || options?.fixedHeight,\r\n                heightRatio = inline('data-heightRatio') || options?.heightRatio;\r\n\r\n            //====> Rewind Sliding and Fading <=====//\r\n            if (!rewind && type === \"fade\" || type === \"slide\") rewind = true;\r\n            //====> Center Mode <====//\r\n            if (!focus) focus = inline('data-center') || options?.autoplay || currentClasses.contains(\"data-center-on\") ? \"center\" : 0;\r\n\r\n            //====> Inline Responsive <====//\r\n            inline('data-sm') ? breakpoints[570] = { \r\n                //===> Small Screens <===//\r\n                perPage: inline('data-sm') || items,\r\n                height: height || verticalFix(inline('data-sm') || items, direction, slider_list),\r\n            } : '';\r\n            //===> Medium Screens <===//\r\n            inline('data-md') ? breakpoints[1100] = {\r\n                perPage: inline('data-md') || items,\r\n                height: height || verticalFix(inline('data-md') || items, direction, slider_list),\r\n            } : ''; \r\n            //===> Large Screens <===//\r\n            inline('data-lg') ? breakpoints[1170] = {\r\n                // drag: drag && drag === 'true' || drag && drag === '1' ? true : false,\r\n                perPage: inline('data-lg') || items,\r\n                height: height || verticalFix(inline('data-lg') || items, direction, slider_list),\r\n            } : '';\r\n            //===> xLarge Screens <===//\r\n            inline('data-xl') ? breakpoints[1400] = {\r\n                perPage: inline('data-xl') || items,\r\n                height: height || verticalFix(inline('data-xl') || items, direction, slider_list),\r\n            } : '';\r\n\r\n            //====> Custom Classes <====//\r\n            let controls_class = 'flexbox position-ab pos-center-y align-between align-center-y pos-start-0 col-12',\r\n                pagination_class = 'position-ab pos-center-x pos-bottom-15',\r\n                arrow_class = inline('data-arrow') || options?.arrow || 'btn primary small square',\r\n                page_class  = inline('data-page') || options?.page || 'pd-5 bg-primary no-border tiny square radius-circle mx-5';\r\n\r\n            if (typeof(controls) === \"string\") {\r\n                controls !== \"1\" ? controls_class = controls : null;\r\n            }\r\n\r\n            if (typeof(pagination) === \"string\") {\r\n                pagination !== \"1\" ? pagination_class = pagination : null;\r\n            }\r\n\r\n            //====> Slider to Splide <====//\r\n            let slider_options:any = {\r\n                type : type,\r\n                focus: focus,\r\n                speed: speed,\r\n                interval: duration,\r\n                perPage: items,\r\n                perMove: steps,\r\n                autoplay: typeof autoplay === \"string\" ? parseInt(autoplay) : autoplay,\r\n                pauseOnHover: false,\r\n                mediaQuery: 'min',\r\n                direction: direction,\r\n                breakpoints: breakpoints,\r\n                rewind: rewind,\r\n                padding: padding,\r\n                paginationDirection: Phenix(document).direction(),\r\n\r\n                //====> Animation Fix <====//\r\n                updateOnMove: updateAfter && updateAfter === 'false' || updateAfter && updateAfter === '0' ? false : true,\r\n                waitForTransition: waitForTransition && waitForTransition === 'false' || waitForTransition && waitForTransition === '0' ? false : true,\r\n                \r\n                //====> Static Options <====//\r\n                snap: true,\r\n                rewindSpeed: 1000,\r\n                rewindByDrag: true,\r\n                \r\n                //====> .Sniping Sliding. <====//\r\n                wheel: wheel, //===> Enable Wheel Sliding\r\n                wheelSleep: wheelSleep, //===> Time to Disable the Scroll before next slide\r\n                releaseWheel: releaseWheel, //===> Allow Scrolling at the End or the Start.\r\n\r\n                //====> ... <====//\r\n                width: width,\r\n                autoWidth: autoWidth,\r\n                autoHeight: autoHeight,\r\n                fixedWidth: fixedWidth,\r\n                fixedHeight: fixedHeight,\r\n                heightRatio: heightRatio,\r\n\r\n                //====> Accessibility <====//\r\n                role: 'slider',\r\n                label: 'Slider',\r\n                labelledby: 'slider-label',\r\n\r\n                //====> Classes <====//\r\n                classes: {\r\n                    // Add classes for arrows.\r\n                    arrows: `splide__arrows px-slider-controls ${controls_class}`,\r\n                    arrow : `splide__arrow px-slider-button ${arrow_class}`,\r\n                    prev  : `splide__arrow--prev px-prev`,\r\n                    next  : `splide__arrow--next px-next`,\r\n                    // Add classes for pagination.\r\n                    pagination: `splide__pagination px-slider-pagination ${pagination_class}`, // container\r\n                    page      : `splide__pagination__page px-slider-page ${page_class}`, // each button\r\n                },\r\n            };\r\n            \r\n            //====> Add Options <====//\r\n            if (start) slider_options.start = start;\r\n            if (!controls) slider_options.arrows = false;\r\n            if (!pagination) slider_options.pagination = false;\r\n            if (sync) slider_options.sync = true;\r\n            if (direction == 'ttb') slider_options.height = verticalFix(items, direction, slider_list);\r\n            if (direction == 'ttb') slider_options.autoHeight = true;\r\n            if (pauseOnHover) slider_options.pauseOnHover = pauseOnHover;\r\n            if (intersection) intersection !== 'false' || '0' ? intersection = true : null;\r\n            if (rewind) rewind !== 'false' || '0' ? slider_options.rewind = true : slider_options.rewind = false;\r\n            if (isNavigation) slider_options.isNavigation = true;\r\n\r\n            //====> Return Options <====//\r\n            return {\r\n                track  : slider_track,\r\n                list   : slider_list,\r\n                slides : slider_list.children,\r\n                sync : sync,\r\n                intersection : intersection,\r\n                options: slider_options\r\n            }\r\n        }\r\n\r\n        //====> Splide Prepare <====//\r\n        let current_slider = slider_creator(slider);\r\n        if (!current_slider) return;\r\n        let the_slider = new Splide(slider, current_slider.options);\r\n\r\n        //====> Events Data <====//\r\n        let events_data = {\r\n            slider : slider,\r\n            track  : slider.querySelector('splide__track'),\r\n            list   : slider.querySelector('splide__list'),\r\n        };\r\n\r\n        //====> Create Custom Events [https://splidejs.com/guides/events/] <====//\r\n        const move = new CustomEvent('move', {detail: events_data}),       //===> Fired right before the carousel moves.\r\n            moved = new CustomEvent('moved', {detail: events_data}),       //===> Fired right after the carousel moves.\r\n            active = new CustomEvent('active', {detail: events_data}),     //===> Fired when the active slide is changed.\r\n            resize = new CustomEvent('resize', {detail: events_data}),     //===> Fired whenever the window is resized.\r\n            hidden = new CustomEvent('hidden', {detail: events_data}),     //===> Fired when any slide gets visible in the view port.\r\n            resized = new CustomEvent('resized', {detail: events_data}),   //===> Fired whenever Splide completes resizing the carousel.\r\n            refresh = new CustomEvent('refresh', {detail: events_data}),   //===> Fired when Splide refreshes the carousel.\r\n            destroy = new CustomEvent('destroy', {detail: events_data}),   //===> Fired when Splide destroys the carousel.\r\n            visible = new CustomEvent('visible', {detail: events_data}),   //===> Fired when any slide gets visible in the view port.\r\n            mounted = new CustomEvent('mounted', {detail: events_data}),   //===> Fired right after all components are mounted.\r\n            inactive = new CustomEvent('inactive', {detail: events_data}), //===> Fired when the active slide becomes inactive.\r\n            arrows_mounted = new CustomEvent('arrows:mounted', {detail: events_data}), //===> Fired right after arrows are mounted.\r\n            arrows_updated = new CustomEvent('arrows:updated', {detail: events_data}), //===> Fired whenever status of arrows are updated.\r\n            pagination_mounted = new CustomEvent('pagination:mounted', {detail: events_data}),  //===> Fired right after pagination is mounted.\r\n            pagination_updated = new CustomEvent('pagination:updated', {detail: events_data});  //===> Fired whenever status of pagination is updated.\r\n\r\n        //====> Integration Phenix <====//\r\n        the_slider.on(['mounted'], function(data) {\r\n            //====> Mounted Run Integration <====//\r\n            slider_integration();\r\n        });\r\n\r\n        //====> Stop Played Media <====//\r\n        the_slider.on(['inactive'], function(data) {\r\n            let video = data.slide.querySelector('video'),\r\n                iframe = data.slide.querySelector('iframe');\r\n\r\n            //====> Played Video <====//\r\n            if (video) video.playing ? video.pause() : null;\r\n\r\n            //====> Played iFrame <====//\r\n            if (iframe) {\r\n                let source = iframe.getAttribute('src');\r\n                iframe.setAttribute('src', source);\r\n            };\r\n        });\r\n\r\n        //====> Dispatch Events <====//\r\n        the_slider.on('move', () => slider.dispatchEvent(move));\r\n        the_slider.on('moved', () => slider.dispatchEvent(moved));\r\n        the_slider.on('resize', () => slider.dispatchEvent(resize));\r\n        the_slider.on('active', () => slider.dispatchEvent(active));\r\n        the_slider.on('refresh', () => slider.dispatchEvent(refresh));\r\n        the_slider.on('resized', () => slider.dispatchEvent(resized));\r\n        the_slider.on('destroy', () => slider.dispatchEvent(destroy));\r\n        the_slider.on('mounted', () => slider.dispatchEvent(mounted));\r\n        the_slider.on('inactive', () => slider.dispatchEvent(inactive));\r\n        the_slider.on('arrows:mounted', () => slider.dispatchEvent(arrows_mounted));\r\n        the_slider.on('arrows:updated', () => slider.dispatchEvent(arrows_updated));\r\n        the_slider.on('pagination:mounted', () => slider.dispatchEvent(pagination_mounted));\r\n        the_slider.on('pagination:updated', () => slider.dispatchEvent(pagination_updated));\r\n\r\n        //====> Run Sync Sliders <====//\r\n        let mount_slider = () => {\r\n            if (!current_slider.track?.classList.contains('mounted')) {\r\n                //===> If is Synced Slider <===//\r\n                if (current_slider.sync) {\r\n                    //====> Synced Create <====//\r\n                    let sync_selector = document.querySelector(`${current_slider.sync}`),\r\n                        synced_slider = slider_creator(sync_selector);\r\n                        sync_selector.classList.add('px-slider');\r\n\r\n                    //====> Synced Splide <====//\r\n                    let synced_splide = new Splide(sync_selector, synced_slider.options);\r\n\r\n                    //====> Run Both <====//\r\n                    the_slider.sync(synced_splide);\r\n                    the_slider.mount();\r\n                    synced_splide.mount();\r\n\r\n                    //====> Clickable Thumbnail <====//\r\n                    Array.from(synced_slider.slides).forEach((slide_item, index) => {\r\n                        slide_item.addEventListener( 'click', () => the_slider.go(index));\r\n                    });\r\n                } else {\r\n                    //====> Run the Slider <====//\r\n                    the_slider.mount();\r\n                }\r\n    \r\n                //===> Add Mounted Class <===//\r\n                current_slider.track?.classList.add('mounted');\r\n            }\r\n        };\r\n\r\n        //====> Intersection Sliders <====//\r\n        if (current_slider.intersection) {\r\n            Phenix(slider).inView({\r\n                callback: mount_slider\r\n            });\r\n        } else {\r\n            mount_slider();\r\n        }\r\n    });\r\n\r\n    //====> Load Splide JS <====//\r\n    if (!document.querySelector('#splidejs-phenix') && this.length > 0) {\r\n        //===> Create Script Element <===//\r\n        let splide_loader = document.createElement(\"script\"),\r\n            libPath = Phenix(document).getURL().phenixJS.replace('js/', 'lib/'),\r\n            splide_url = libPath+'splide.min.js';\r\n\r\n        //===> Set ID <===//\r\n        splide_loader.setAttribute('id', 'splidejs-phenix');\r\n        //===> Set Source <===//\r\n        splide_loader.setAttribute(\"src\", splide_url);\r\n        splide_loader.setAttribute(\"async\", \"\");\r\n\r\n        //===> Append Script <===//\r\n        document.body.appendChild(splide_loader);\r\n    \r\n        //====> When Loaded Run Sliders <====//\r\n        splide_loader.addEventListener(\"load\", () => {\r\n            //===> Run Slider <====//\r\n            slider_handler();\r\n        });\r\n    \r\n        //====> When Error Re-Load <====//\r\n        splide_loader.addEventListener(\"error\", (ev) => {\r\n            splide_loader.setAttribute(\"src\", splide_url);\r\n        });\r\n\r\n    //====> if Al-ready loaded run the sliders <====//\r\n    } else slider_handler();\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Phenix Utilities\r\n * ===> 03 - Form Utilities\r\n * ===> 04 - Placeholder Handler\r\n * ===> 05 - Global Utilities\r\n * ===> 06 - Item Remover\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\ndeclare var Masonry:any;\r\ndeclare var tinyTypewriter:any;\r\ndeclare var initMarqueeSlider:any;\r\n\r\n/*====> Phenix Utilities <====*/\r\nPhenixElements.prototype.utilities = function (options?:{\r\n    type?:string, //====> Utilities Types\r\n}) {\r\n    //====> Default Type <====//\r\n    let type = options?.type || 'all';\r\n\r\n    //===> Form Utils <====//\r\n    if (type.includes(\"form\") || type === \"all\") {\r\n        //===> Placeholder Effect <====//\r\n        Phenix('[placeholder]').forEach((control:HTMLElement) => {\r\n            //====> Current Placeholder <===//\r\n            let holder = control.getAttribute('placeholder');\r\n            //====> Empty Placeholder <===//\r\n            Phenix(control).on('focus', event => control.removeAttribute('placeholder'));\r\n            //====> Restore Placeholder <===//\r\n            Phenix(control).on('blur', event => control.setAttribute('placeholder', holder));\r\n        });\r\n\r\n        //===> Form Controls Group <===//\r\n        Phenix('.form-ui, .px-form').forEach((form:HTMLElement) => {\r\n            //===> Get the Controls Size <====//\r\n            let size = form.getAttribute('data-size') || '';\r\n    \r\n            //===> for Each Form <====//\r\n            form.querySelectorAll('input:not([type=\"submit\"]):not([type=\"button\"]):not([type=\"radio\"):not([type=\"checkbox\"]), select, textarea').forEach(controler => {\r\n                //====> if has no such class names or type <====//\r\n                if (!controler.matches('.btn') && !controler.matches('.form-control')) controler.classList.add('form-control', size);\r\n            });\r\n        });\r\n\r\n        //====> Form Repeater <====//\r\n        Phenix(\".px-form-repeater\").forEach((repeater_container:Element) => {\r\n            //====> Define Data <====//\r\n            const add_btn  = repeater_container.querySelector(\".px-repeater-add\"),\r\n                  fields_key = repeater_container.getAttribute(\"data-fields-key\"),\r\n                  items_list = repeater_container.querySelector(\".px-repeater-items\"),\r\n                  original_row = items_list.querySelector(\"[data-item-key]\");\r\n\r\n            //===> Set a Number for the Original Row <===//\r\n            if(!original_row.getAttribute('data-item-key')) original_row.setAttribute(\"data-item-key\", \"0\");\r\n\r\n            //===> Correct the name of the Fields <===//\r\n            original_row.querySelectorAll(\"[name]\").forEach((element:HTMLElement) => {\r\n                //====> Get the Name <====//\r\n                let name = element.getAttribute(\"name\");\r\n                //====> Move the Original Name to new Attribute <====//\r\n                element.setAttribute('data-original-name', name);\r\n                //====> Correct the Name <====//\r\n                element.setAttribute(\"name\", `${fields_key}[${original_row.getAttribute('data-item-key')}][${name}]`);\r\n            });\r\n\r\n            //===> Remove Button Creator <===//\r\n            const create_remove_btn = (repeater_row:any) => {\r\n                //===> Insert the Remove Button <===//\r\n                const currentRemoveBtn = repeater_row.appendChild(add_btn.cloneNode(false));\r\n\r\n                //===> Change the Button Style <===//\r\n                currentRemoveBtn.classList.remove(\"fa-plus\", \"tiny\", \"small\", \"large\", \"xlarge\");\r\n                currentRemoveBtn.classList.add('fa-minus', 'danger', 'px-repeater-remove');\r\n\r\n                //====> Correct Button Size <====//\r\n                if (repeater_row.querySelector(\".form-control\")) {\r\n                    let classNames = repeater_row.querySelector(\".form-control\").classList;\r\n                    let sizes = [\"tiny\", \"small\", \"large\", \"xlarge\"];\r\n                    sizes.some(size => classNames.contains(size) ? currentRemoveBtn.classList.add(size) : '');\r\n                }\r\n\r\n                //====> Remove the Item <====//\r\n                currentRemoveBtn.addEventListener(\"click\", (event:any) => Phenix(event.target).ancestor(\".px-form-repeater-fields\").remove());\r\n            };\r\n\r\n            //====> Add New Item (Remove Item Method Included) <====//\r\n            add_btn.addEventListener(\"click\", (event:any) => {\r\n                //===> Create new Row <===//\r\n                const newRow:any  = items_list.appendChild(original_row.cloneNode(true)),\r\n                      currentRows = items_list.querySelectorAll(\"[data-item-key]\").length-1;\r\n\r\n                //===> Increase the Row Number <===//\r\n                newRow.setAttribute(\"data-item-key\", currentRows);\r\n\r\n                //===> Change the Fields Name <===//\r\n                newRow.querySelectorAll(\"[name]\").forEach((element:any) => {\r\n                    //====> Get the Name <====//\r\n                    let name = element.getAttribute('data-original-name');\r\n\r\n                    //====> Set the Name <====//\r\n                    element.setAttribute(\"name\", `${fields_key}[${currentRows}][${name}]`);\r\n\r\n                    //====> Cleanup Any Values <====//\r\n                    if (element.value) element.value = \"\";\r\n                    if (element.tagName === \"TEXTAREA\") element.innerHTML = \"\";\r\n\r\n                    //====> Clean Up Select Options <====//\r\n                    if (element.tagName === \"SELECT\") {\r\n                        element.querySelectorAll('[selected]').forEach(option => option.removeAttribute('selected'));\r\n                        //====> Advanced Select Rebuild <====//\r\n                        if (element.classList.contains('px-select')) Phenix(element).rebuildSelect();\r\n                    }\r\n                });\r\n\r\n                //===> Create Remove Button <===//\r\n                create_remove_btn(newRow);\r\n            });\r\n\r\n            //====> Create Remove Button Whenever it is not found <====//\r\n            setInterval(() => {\r\n                //====> Get the Rows <====//\r\n                let rows = repeater_container.querySelectorAll('[data-item-key]:not([data-item-key=\"0\"])');\r\n\r\n                //====> Create Remove Button <====//\r\n                if (rows) rows.forEach(row => !row.querySelector('.px-repeater-remove') ? create_remove_btn(row) : '');\r\n            }, 1000);\r\n        });\r\n\r\n        //====> Rating Controllers <====//\r\n        Phenix(\".px-rating\").rating();\r\n    }\r\n\r\n    //====> Others <====//\r\n    if (type.includes(\"other\") || type === \"all\") {\r\n        //====> Item Remover <====//\r\n        Phenix('.remove-item').on('click', click => {\r\n            //====> Prevent Default Behavior <====//\r\n            click.preventDefault();\r\n            //====> Remover Data <====//\r\n            let trigger = click.target,\r\n                target  = trigger.getAttribute('data-target') || trigger.getAttribute('href') || false,\r\n                relation = trigger.getAttribute('data-relation');\r\n    \r\n            //=== Remove Target in Ancestors ===//\r\n            if (!relation || relation === 'ancestor') Phenix(trigger).ancestor(target).remove();\r\n            //=== Remove Target in Siblings ===//\r\n            else if (relation === 'sibling') {\r\n                Phenix(trigger).siblings(target).forEach(sibling => sibling .remove());\r\n            }\r\n            //=== Remove Target as Global ===//\r\n            else if (relation === 'global' || 'none') document.querySelector(target).remove();\r\n            //=== Remove the Closest Target ===//\r\n            else if (relation === 'closest' || 'related') trigger.closest(target).remove();\r\n        });\r\n\r\n        //====> Create Animated Count Up <====//\r\n        Phenix('.px-counter').forEach((element:HTMLElement) => {\r\n            //===> Separate Numbers from Symbols <====//\r\n            const numbers = element.textContent.match(/\\d+/g),\r\n                  characters = element.textContent.replace(`${numbers}`, '');\r\n\r\n            //===> Set Correct Values <====//\r\n            element.setAttribute('data-value', `${numbers}`);\r\n            if(characters && !element.getAttribute('data-symbol')) element.setAttribute('data-symbol', `${characters}`);\r\n\r\n            //====> Start Counter when in View <====//\r\n            Phenix(element).inView({\r\n                callback: () => {\r\n                    if (!element.classList.contains('counting')) Phenix(element).counter();\r\n                }\r\n            });\r\n        });\r\n\r\n        //====> To Top Hook <=====//\r\n        let toTopHook = document.querySelector('.entry-content *:first-child');\r\n        if (!toTopHook) toTopHook = document.querySelector('.main-header + *');\r\n        if (toTopHook && !toTopHook.id) toTopHook.id = 'to-top-hook';\r\n    }\r\n    \r\n    //====> Dynamic Word Coloring <====//\r\n    if (type.includes(\"text\") || type === \"all\") {\r\n        //===> Dynamic Colors Variants for Elements Shadow <===//\r\n        Phenix(\"[class*='bx-shadow-gls'], .pds-sc-props\").forEach((element:HTMLElement) => {\r\n            //====> Color Transformer <====//\r\n            const transformColor = (color: string, amount: number) => {\r\n                let rgb = color.match(/\\d+/g).map(Number);\r\n                if (rgb.length > 4) rgb.splice(-(rgb.length - 3));\r\n                return rgb.map(c => Math.max(0, Math.min(255, c + amount))).join(', ');\r\n            };\r\n\r\n            //====> Color Contrast Checker <====//\r\n            const isLightOrDark = (color:string) => {\r\n                //===> get Colors Range <====//\r\n                let all = color.split(','),\r\n                    r = parseInt(all[0]), g = parseInt(all[1]), b = parseInt(all[2]);\r\n                //===> Calculate the luminance of the color <===//\r\n                let luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n                //===> Return 'light' or 'dark' based on the luminance <===//\r\n                return luminance;\r\n            }\r\n\r\n            //====> get the Background Color <====//\r\n            let bgColor = window.getComputedStyle(element).backgroundColor,\r\n                bgImage = window.getComputedStyle(element).backgroundImage,\r\n                darkerRgb:any = \"0,0,0\",\r\n                lighterRgb:any = \"255,255,255\";\r\n\r\n            //====> Check if has Background Gradient <====//\r\n            if (bgImage && bgImage.includes('gradient') && bgImage.match(/gradient\\((.*?)\\)/)) {\r\n                //===> Check for gradient Match colors <===//\r\n                let colors = [];\r\n\r\n                //===> Get Colors <===//\r\n                bgImage.match(/rgb\\(\\d{1,3}, \\d{1,3}, \\d{1,3}\\)/g).forEach((color:string) => {\r\n                    colors.push(color.replace('rgb', '').replace('(', '').replace(')', ''));\r\n                });\r\n\r\n                //===> Get the colors from the gradient <===//\r\n                const colorOne = isLightOrDark(colors[colors.length - 1]),\r\n                    colorTwo = isLightOrDark(colors[0]);\r\n\r\n                //===> Set the Colors <===//\r\n                darkerRgb  = transformColor(colorOne < colorTwo ? colors[colors.length - 1] : colors[0], -95);\r\n                lighterRgb = transformColor(colorOne > colorTwo ? colors[colors.length - 1] : colors[0], 95);\r\n            }\r\n\r\n            //====> Check if has Background Color <====//\r\n            else if (bgColor) {\r\n                //====> Create a darker shade by subtracting 90 from each color component <====//\r\n                darkerRgb = transformColor(bgColor, -95);\r\n                //====> Create a lighter shade by adding 80 to each color component <====//\r\n                lighterRgb = transformColor(bgColor, 95);\r\n            }\r\n\r\n            //====> Add the Colors to the CSS Properties <====//\r\n            element.style.setProperty('--shadow-color-dark', darkerRgb);\r\n            element.style.setProperty('--shadow-color-light', lighterRgb);\r\n        });\r\n    }\r\n\r\n    //====> icons List <====//\r\n    if (type.includes(\"icons\") || type === \"all\") Phenix('.icons-list').forEach((list:HTMLElement) => {\r\n        if (list.getAttribute('data-icon')) {\r\n            let classes = list.getAttribute('data-icon').split(\" \") || [];\r\n            list.querySelectorAll('li').forEach(item => item.classList.add(...classes));\r\n        }\r\n    });\r\n\r\n    //====> Copyrights Protection <====//\r\n    if (type.includes(\"copyrights\")) {\r\n        Phenix(document).on(\"contextmenu\", rightClick => rightClick.preventDefault());\r\n        Phenix(document).on(\"selectstart\", textSelect => textSelect.preventDefault());\r\n    }\r\n\r\n    //====> SEO Fix <====//\r\n    if (type.includes(\"seo\") || type === \"all\") {\r\n        //====> Headline Fix <====//\r\n        let headline = document.querySelector('h1');\r\n        if(!headline) Phenix('body').insert('prepend', `<h1 class=\"hidden\">${document.title}</h1>`);\r\n\r\n        //====> Images SEO/Performance <====//\r\n        setTimeout(() => {\r\n            Phenix('img').forEach((img:any) => {\r\n                //===> Get Image Data <===//\r\n                let img_width = img.getAttribute('width') || img.style.width || img.clientWidth,\r\n                    img_height = img.getAttribute('height') || img.style.height || img.clientHeight,\r\n                    parent_width = img.parentNode.clientWidth,\r\n                    parent_height = Phenix(img.parentNode).height();\r\n    \r\n                //===> Set Width and Height <===//\r\n                if (!img_width && parent_width > 0)  img.setAttribute('width', `${parent_width}`);\r\n                if (!img_height && parent_height > 0) img.setAttribute('height', `${parent_height}`);\r\n    \r\n                //===> Alternative Text <===//\r\n                if (!img.getAttribute('alt') || img.getAttribute('alt') === \"\") {\r\n                    img.setAttribute('alt', img.src.substring(img.src.lastIndexOf('/')+1));\r\n                }\r\n            });\r\n        }, 500);\r\n    \r\n        //====> Links SEO <====//\r\n        Phenix('a:not([title]):empty, button:not([title]):empty, a:not([title]), button:not([title])').forEach((link:any) => {\r\n            //===> Text Checker <===//\r\n            let text = link.getAttribute('data-title') || \"\";\r\n\r\n            //===> Get Text <===//\r\n            if (!link.querySelector('*') && link.textContent) text = link.textContent.trim();\r\n            else text = link.querySelector('h2')?.textContent || link.querySelector('h3')?.textContent || link.querySelector('h4')?.textContent || '';\r\n\r\n            //===> Alternative Text <===//\r\n            if (!link.getAttribute('title') || link.getAttribute('title') === \"\") link.setAttribute('title', text);\r\n            if (!link.getAttribute('aria-label') || link.getAttribute('aria-label') === \"\") link.setAttribute('aria-label', text);\r\n        });\r\n    }\r\n\r\n    //====> Third-Party Libraries <====//\r\n    if (type.includes(\"libraries\") || type === \"all\") {\r\n        //===> Prevent on WP Editor <====//\r\n        const document_classes = document.body.getAttribute('class');\r\n        //===> Check the Document Type <===//\r\n        if (!document.body.classList.contains('wp-admin') && !document_classes?.includes('-editor')) {\r\n            //===> Example of ES6 Module Import with Import Map <===//\r\n            if(document.querySelector('.px-module-test')) {\r\n                Phenix(document).import(\"test-module\", \"script\", \"modules/test-module.js\", () => {\r\n                    console.log(\"ES6 Module loaded successfully\");\r\n                }, {\r\n                    integrated: true,\r\n                    module: true,\r\n                    importMap: {\r\n                        // Define module mappings\r\n                        \"lodash\": \"https://cdn.jsdelivr.net/npm/lodash-es@4.17.21/lodash.min.js\",\r\n                        \"utils\": \"./modules/utils.js\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            //===> Import Masonry Grid Plugin <===//\r\n            if(document.querySelector('.px-masonry')) Phenix(document).import(\"masonry\", \"script\", \"masonry.min.js\", ()=> {\r\n                Phenix(\".px-masonry\").forEach((grid:any) => {\r\n                    let first_child_class = grid.children[0].classList[0];\r\n                    var masonry = new Masonry(grid, {itemSelector: `.${first_child_class}`});\r\n                });\r\n            }, { integrated: true });\r\n    \r\n            //===> Typed List <===//\r\n            if(document.querySelector('.typed-list')) {\r\n                //====> Create the List Structure <====//\r\n                Phenix('.typed-list').forEach((text_list:HTMLElement) => {\r\n                    //===> Gather the Items <===//\r\n                    const text_list_items = [];\r\n                    text_list.querySelectorAll('li').forEach(item => text_list_items.push(item.textContent));\r\n            \r\n                    //===> Create the Typed Text Element <===//\r\n                    const text_element = document.createElement('p');\r\n                    text_element.classList.add('typed-text');\r\n            \r\n                    //===> Assign the Text List <===//\r\n                    text_element.textContent = text_list_items[0];\r\n                    text_list_items.forEach((item, index) => text_element.setAttribute(`data-text-${index}`, item));\r\n            \r\n                    //===> Copy List Classed to Text Element <===//\r\n                    text_list.classList.forEach(item => !item.includes('list') ? text_element.classList.add(item) : null);\r\n            \r\n                    //===> Insert the Typed Text <===//\r\n                    Phenix(text_list).insert('before', text_element);\r\n                });\r\n        \r\n                //===> Import Typed Effect for Texts Library <====//\r\n                Phenix(document).import('typed-js', 'script', 'typewriter.js', (isReady) => Phenix('.typed-text').forEach((typeWriter:HTMLElement) => {\r\n                    //===> Items <===//\r\n                    let items = [];\r\n            \r\n                    //===> Get Text Items <===//\r\n                    for (let i = 0; i < 20; i++) {\r\n                        if(typeWriter.getAttribute(`data-text-${i}`)) { items.push(typeWriter.getAttribute(`data-text-${i}`)); }\r\n                    }\r\n            \r\n                    //===> Run the Typewriter <===//\r\n                    typeWriter.style.height = Phenix(document).toREM(Phenix(typeWriter).height());\r\n                    tinyTypewriter(typeWriter, {items: items, cursor: false, startDelay: 700});\r\n                }), { integrated: true });\r\n            }\r\n    \r\n            //===> Marquee Slider <===//\r\n            if(document.querySelector('.px-marquee') || document.querySelector('.px-marquee-reverse')) {\r\n                //====> Import Marquee Library <====//\r\n                Phenix(document).import('marquee-js', 'script', 'marquee.js', (isReady) => {\r\n                    //===> Create Marquee <===//\r\n                    Phenix('.px-marquee, .px-marquee-reverse').forEach((marquee:HTMLElement, index) => {\r\n                        //===> Create Structure Wrappers Elements <===//\r\n                        const marquee_slider = document.createElement('div');\r\n                        const marquee_slides = document.createElement('div');\r\n            \r\n                        //===> Set Slider ID <===//\r\n                        const marquee_id = `px-marquee-${index}`;\r\n                        marquee.style.direction = 'ltr';\r\n                        marquee.setAttribute('id', marquee_id);\r\n        \r\n                        //===> Marquess Settings <===//\r\n                        if(!marquee.getAttribute('data-speed')) marquee.setAttribute('data-speed', \"15\");\r\n        \r\n                        //===> Set Wrappers Properties <===//\r\n                        marquee_slider.classList.add('marquee-slider-wrapper','display-flex', 'position-rv',);\r\n                        marquee_slides.classList.add('marquee-slider-slides-wrapper', 'display-flex', 'position-rv');\r\n                        marquee_slider.appendChild(marquee_slides);\r\n\r\n                        //===> Move Content Items to the Slides Wrapper <===//\r\n                        marquee.querySelectorAll(':scope > *').forEach((item:HTMLElement) => {\r\n                            //===> Set Item Properties <===//\r\n                            item.style.direction = Phenix(document).direction();\r\n                            item.classList.add('marquee-slider-slide');\r\n        \r\n                            //===> Append Item to the Slides Wrapper <===//\r\n                            marquee_slides.appendChild(item.cloneNode(true));\r\n        \r\n                            //===> Remove Item After it was Copied <===//\r\n                            item.remove();\r\n                        });\r\n            \r\n                        //===> Append the Slider Wrapper to the Marquee <===//\r\n                        marquee.appendChild(marquee_slider);\r\n            \r\n                        //===> Initialize Marquee <===//\r\n                        initMarqueeSlider(marquee_id, {\r\n                            allowPointEvent:true,\r\n                            dir: marquee.classList.contains('px-marquee-reverse') ? 'left' : 'right',\r\n                            stopOnHover: marquee.getAttribute('data-hover') && marquee.getAttribute('data-hover') === 'false' ? false : true,\r\n                        });\r\n                    });\r\n                }, { integrated: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    //====> Return Phenix Query <====//\r\n    return this;\r\n}","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Custom Variables <====*/\r\ndeclare var wc_add_to_cart_params: any;\r\n\r\n/*====> Add to Cart Method <====*/\r\nPhenixElements.prototype.pds_add_to_cart = function (button, product_ids) {\r\n    //===> Get Quantity <===//\r\n    let quantity = Phenix(button).ancestor('.single-product-content')?.querySelector('.quantity-input')?.value || parseInt(button.getAttribute('data-quantity')) || 1;\r\n    let variation_id = button.getAttribute('data-variation');\r\n\r\n    //===> Convert single ID to array <===//\r\n    if (!Array.isArray(product_ids)) product_ids = [product_ids];\r\n\r\n    //===> Remove Empty Items from Array <===//\r\n    product_ids = product_ids.filter(id => id);\r\n\r\n    //===> Collect Selected Attributes <===//\r\n    // const attributes = {};\r\n    // Phenix(button).ancestor('.single-product-content')?.querySelectorAll('.variation-control').forEach(control => {\r\n    //     const attributeValue = control.value;\r\n    //     const attributeName  = control.getAttribute('name');\r\n    //     if (attributeValue) attributes[attributeName] = attributeValue;\r\n    // });\r\n\r\n    const addProductsSequentially = (index = 0) => {\r\n        //===> Ensure valid index and stop when done <===//\r\n        if (index >= product_ids.length) {\r\n            //===> Disable loading mode <===//\r\n            button.classList.remove('px-loading-inline');\r\n            //===> Trigger WooCommerce's AJAX event to update the cart fragments <===//\r\n            document.body.dispatchEvent(new CustomEvent('pds_cart_updated', {detail: {}}));\r\n            //===> Close Func <===//\r\n            return;\r\n        }\r\n\r\n        //===> Create Form Data Request <===//\r\n        const formData = new URLSearchParams();\r\n        formData.append('quantity', quantity);\r\n        formData.append('action', 'woocommerce_add_to_cart');\r\n        formData.append('product_id', product_ids[index]);\r\n\r\n        //===> Add Variation ID if Existed <===//\r\n        if (variation_id) formData.append('product_id', variation_id);\r\n\r\n        //===> Append Collected Attributes <===//\r\n        // for (const [key, value] of Object.entries(attributes)) {\r\n        //     /*====> Custom Variables <====*/\r\n        //     formData.append(key, value as any);\r\n        // }\r\n\r\n        console.log(formData);\r\n\r\n        //===> Send the request to WooCommerce via Fetch API <===//\r\n        fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'add_to_cart'), {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n            body: formData.toString()\r\n        })\r\n        //===> Return the Response as JSON data <===//\r\n        .then(response => response.json()).then(data => {\r\n            //===> Check for Data and Error <===//\r\n            if (data && data.error) {\r\n                //====> Show Notifications <====//\r\n                Phenix(document).notifications({\r\n                    duration : 5000,\r\n                    type     : \"error\",\r\n                    position : [\"center\", \"center\"],\r\n                    message  : 'Error adding to cart: ' + data.error,\r\n                });\r\n            } else {\r\n                //====> Show Notifications <====//\r\n                Phenix(document).notifications({\r\n                    duration : 5000,\r\n                    type     : \"success\",\r\n                    position : [\"center\", \"center\"],\r\n                    message  : \"Product added to cart successfully.\",\r\n                });\r\n\r\n                //===> Add next product in the list <===//\r\n                addProductsSequentially(index + 1);\r\n            }\r\n        })\r\n        //===> Catch any errors <===//\r\n        .catch(error => console.error('Error:', error));\r\n    };\r\n\r\n    //===> Start Processing <===//\r\n    addProductsSequentially();\r\n};\r\n\r\n/*====> Remove Product Method <====*/\r\nPhenixElements.prototype.pds_remove_from_cart = function (formData, cartItemKey) {\r\n    //===> Send the AJAX request via Fetch API <===//\r\n    fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'remove_from_cart'), {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n        body: formData.toString()\r\n    })\r\n    //===> Return the Response as JSON data <===//\r\n    .then(response => response.json()).then(data => {\r\n        //===> Check for Data Fragments <===//\r\n        if (data.fragments) { //===> Fragments {cart_count, cart_total} <===//\r\n            //====> Remove the Item from the DOM <====//\r\n            document.querySelectorAll(`.cart-item[data-cart_item_key=\"${cartItemKey}\"]`).forEach(item => item.remove());\r\n\r\n            //===> Trigger WooCommerce's AJAX event to update the cart fragments <===//\r\n            document.body.dispatchEvent(new CustomEvent('pds_cart_updated', { detail: data }));\r\n\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"success\",\r\n                position : [\"center\", \"center\"],\r\n                message  : \"Product removed from cart successfully.\",\r\n            });\r\n        } \r\n        //===> Check for Error <===//\r\n        else if (data.error) {\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"error\",\r\n                position : [\"bottom\", \"end\"],\r\n                message  : 'Error removing from cart: ' + data.message,\r\n            });\r\n        }\r\n    })\r\n    //===> Catch any errors <===//\r\n    .catch(error => {\r\n        console.error('Error removing item from cart:', error);\r\n    });\r\n};\r\n\r\n/*====> Toggle Wishlist Method <====*/\r\nPhenixElements.prototype.pds_toggle_wishlist = function (isClicked, action_url, add_url, remove_url) {\r\n    //====> Send the Data to the Server <====//\r\n    fetch(action_url, {\r\n        method: \"GET\",\r\n        headers: {\"X-Requested-With\": \"XMLHttpRequest\"},\r\n    }).then(response => {\r\n        //====> Success Data <====//\r\n        if (response.ok) {\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"success\",\r\n                position : [\"bottom\", \"end\"],\r\n                message  : \"Wishlist Updated successfully.\",\r\n            });\r\n            //====> Replace Icon Style <====//\r\n            if (action_url.includes('add_to_wishlist')) {\r\n                isClicked.target.classList.add(\"fas\");\r\n                isClicked.target.classList.remove(\"far\");\r\n                isClicked.target.setAttribute(\"href\", remove_url);\r\n            } else {\r\n                isClicked.target.classList.add(\"far\");\r\n                isClicked.target.classList.remove(\"fas\");\r\n                isClicked.target.setAttribute(\"href\", add_url);\r\n            }\r\n            //====> Remove Loading Mode <====//\r\n            isClicked.target.classList.remove(\"px-loading-inline\");\r\n        }\r\n        //====> Error Status <====//\r\n        else {\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"error\",\r\n                position : [\"bottom\", \"end\"],\r\n                message  : \"Failed to update wishlist\",\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n//===> Mini Cart Updater <===//\r\ndocument.body.addEventListener('pds_cart_updated', function() {\r\n    //===> Fetch the updated cart fragments using Fetch API <===//\r\n    fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'get_refreshed_fragments'), {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n    })\r\n    //===> Return the Response as JSON data <===//\r\n    .then(response => response.json()).then(data => {\r\n        //===> Check for the Cart Fragments <===//\r\n        //===* data {div.widget_shopping_cart_content, .cart-table, cart_count, cart_total} <===//\r\n        if (data && data.fragments) {   \r\n            //===> Cart Content Fragment <===//\r\n            const newCartContent = data.fragments[\"div.widget_shopping_cart_content\"];\r\n\r\n            //===> Temporary Container for the Content <===//\r\n            const tempDiv = document.createElement('div');\r\n            tempDiv.innerHTML = newCartContent;\r\n            tempDiv.innerHTML += data.fragments['.cart-table'];\r\n\r\n            //===> Update The Mini Cart Items <===//\r\n            Phenix(\".pds-cart-fragment .woocommerce-mini-cart\").forEach(cart => cart.innerHTML = tempDiv.querySelector('.widget_shopping_cart_content').innerHTML);\r\n\r\n            //===> Update Cart Table <===//\r\n            Phenix(\".woocommerce-cart-form\").forEach(table => table.innerHTML = data.fragments['.cart-table']);\r\n\r\n            //====> Update Cart Count <====//\r\n            Phenix(\".cart-count\").forEach(item => item.textContent = data.fragments['cart_count']);\r\n\r\n            //===> Update Cart Item Remover <===//\r\n            Phenix(\".cart-item .cart-item-remover\").on(\"click\", (isClicked) => {\r\n                //===> Prevent link navigation <===//\r\n                isClicked.preventDefault();\r\n                const button = isClicked.target;\r\n\r\n                //===> Get the Item Key <===//\r\n                const cartItemKey = button.getAttribute('data-cart_item_key');\r\n\r\n                //===> Activate Loading Mode <===//\r\n                Phenix(button).ancestor('.cart-item').classList.add('px-loading-inline');\r\n\r\n                //===> Create Form Data Request <===//\r\n                const formData = new URLSearchParams();\r\n                formData.append('cart_item_key', cartItemKey);\r\n                formData.append('action', 'woocommerce_remove_cart_item');\r\n\r\n                //===> Remove the Item from the Cart <===//\r\n                Phenix(document).pds_remove_from_cart(formData, cartItemKey);\r\n            }, true);\r\n        }\r\n    })\r\n    //===> Catch any errors <===//\r\n    .catch(error => console.error('Error:', error));\r\n});\r\n\r\n/*====> D.O.M is Ready ? <====*/\r\nPhenix(document).on(\"DOMContentLoaded\", (loaded) => {\r\n    //===> WooCommerce Sorting <===//\r\n    Phenix('.woocommerce-ordering select').on('change', (select) => {\r\n        //====> Get the Current Value <====//\r\n        const sortValue = select.target.value;\r\n        //====> Create new URL Params <====//\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        //====> Set URL Params <====//\r\n        urlParams.set('orderby', sortValue);\r\n        //====> Reload page with selected sorting <====//\r\n        window.location.search = urlParams.toString();\r\n    });\r\n\r\n    //===> Custom Number Input <===//\r\n    Phenix(\".px-counter-input\").forEach(counter => {\r\n        //===> Get Elements <===//\r\n        const input = counter.querySelector('input[type=\"number\"]');\r\n        const decrease = counter.querySelector('.decrease-btn');\r\n        const increase = counter.querySelector('.increase-btn');\r\n        const minValue = parseInt(input.getAttribute('min')) || 0;\r\n        const maxValue = parseInt(input.getAttribute('max')) || 99999;\r\n        const inputSteps = parseInt(input.getAttribute('data-step')) || 1;\r\n\r\n        //===> Increase Number <===//\r\n        const IncreaseNum = (clicked) => {\r\n            //===> Get Input Element <===//\r\n            let newVal = parseInt(input.value) + inputSteps;\r\n            //===> Set Data <===//\r\n            input.value = newVal < maxValue || newVal === maxValue ? newVal : maxValue;\r\n        };\r\n    \r\n        //===> Decrease Number <===//\r\n        const DecreaseNum = (clicked) => {\r\n            //===> Get Input Element <===//\r\n            let newVal = parseFloat(input.value) - inputSteps;\r\n            //===> Set Data <===//\r\n            input.value = newVal > minValue || newVal === minValue ? newVal : minValue;\r\n        };\r\n\r\n        Phenix(decrease).on('click', DecreaseNum);\r\n        Phenix(increase).on('click', IncreaseNum);\r\n    });\r\n \r\n    //===> WooCommerce Add to Cart <===//\r\n    Phenix(\".pds-add-to-cart\").on(\"click\", isClicked => {\r\n         //===> Prevent link navigation <===//\r\n         isClicked.preventDefault();\r\n         //===> Define Item Data <===//\r\n         const button = isClicked.target;\r\n         const productId = button.getAttribute('data-product');\r\n \r\n         //===> Activate Loading Mode <===//\r\n         button.classList.add('px-loading-inline');\r\n \r\n         //===> Add the Item to the Cart <===//\r\n         Phenix(document).pds_add_to_cart(button, productId);\r\n    }, true);\r\n \r\n    //===> WooCommerce Cart Item Remover <===//\r\n    Phenix(\".cart-item .cart-item-remover\").on(\"click\", (isClicked) => {\r\n         //===> Prevent link navigation <===//\r\n         isClicked.preventDefault();\r\n         const button = isClicked.target;\r\n \r\n         //===> Get the Item Key <===//\r\n         const cartItemKey = button.getAttribute('data-cart_item_key');\r\n \r\n         //===> Activate Loading Mode <===//\r\n         Phenix(button).ancestor('.cart-item').classList.add('px-loading-inline');\r\n \r\n         //===> Create Form Data Request <===//\r\n         const formData = new URLSearchParams();\r\n         formData.append('cart_item_key', cartItemKey);\r\n         formData.append('action', 'woocommerce_remove_cart_item');\r\n         \r\n         //===> Remove the Item from the Cart <===//\r\n         Phenix(document).pds_remove_from_cart(formData, cartItemKey);\r\n    }, true);\r\n\r\n    //===> Wishlist Toggle <===//\r\n    Phenix(\".pds-wishlist-btn\").on(\"click\", (isClicked) => {\r\n        //===> Prevent Default <===//\r\n        isClicked.preventDefault();\r\n        //===> Define Data <===//\r\n        let action_url = isClicked.target.getAttribute('href'),\r\n            add_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-rm-url\")),\r\n            remove_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-add-url\"));\r\n\r\n        //====> Add Loading Mode <====//\r\n        isClicked.target.classList.add(\"px-loading-inline\");\r\n\r\n        Phenix(document).pds_toggle_wishlist(isClicked, action_url, add_url, remove_url);\r\n    }, true);\r\n\r\n    //===> Add Multiple Products from Cart Page <===//\r\n    Phenix(\".add-products .add-products-btn\").on(\"click\", (isClicked) => {\r\n        //===> Prevent link navigation <===//\r\n        isClicked.preventDefault();\r\n        //===> Define Item Data <===//\r\n        const button = isClicked.target;\r\n        const products = Phenix(button).ancestor('.add-products').querySelector(\".px-select\").getAttribute(\"data-value\").split(\",\");\r\n        //===> Activate Loading Mode <===//\r\n        button.classList.add('px-loading-inline');\r\n        //===> Add the Items to the Cart <===//\r\n        Phenix(document).pds_add_to_cart(button, products);\r\n    });\r\n\r\n    //===> Variation Price Change <===//\r\n    Phenix(\".variation-control\").on(\"change\", isChanged => {\r\n        //===> Make sure it is a valid controller <===//\r\n        if (!isChanged.target.value) return;\r\n\r\n        //===> Capture Select Element <===//\r\n        let element = isChanged.target;\r\n        let option = element.querySelector(`option[value=\"${element.value}\"]`);\r\n\r\n        //===> Get Data <===//\r\n        let variation = element.value;\r\n        let price = option?.getAttribute('data-price');\r\n\r\n        //===> Update the Prices <===//\r\n        Phenix(\".single-product-content .price .price-num\").forEach(element => element.textContent = price);\r\n\r\n        //===> Set Variation ID to Add to Cart Button <===//\r\n        if (variation) Phenix(\".single-product-content .pds-add-to-cart\").setAttributes({ \"data-variation\": element.value });\r\n    });\r\n});\r\n\r\n","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n*/\r\n\r\n/*====> Phenix JS <====*/\r\nimport Phenix from \"..\";\r\ndeclare var wp:any, PDS_WP_KEY:any, window:any;\r\n\r\n/*====> D.O.M is Ready ? <====*/\r\nPhenix(document).on(\"DOMContentLoaded\", (loaded) => {\r\n    //===> Contact Form 7 Fixes <===//\r\n    const fixCF7 = () => {\r\n        //====> Forms Validation <====//\r\n        Phenix('.wpcf7-form, .px-form-validation').validation();\r\n\r\n        //====> Fetching Form Data for CF7 <=====//\r\n        document.querySelectorAll('.wpcf7-form').forEach((form:any) => {\r\n            //====> on Submit Prevent the Native behavior and submit with Fetch <====//\r\n            form.addEventListener('submit', (event:any) => {\r\n                //====> Prevent the default form submission <====//\r\n                event.preventDefault();\r\n                const submitButton = form.querySelector('input[type=\"submit\"]') || form.querySelector('button[type=\"submit\"]') || form.querySelector('.btn:last-of-type');\r\n\r\n                console.log(submitButton);\r\n\r\n                if(!form.querySelector('.px-validation') && !form.querySelector('.error')) {\r\n                    //====> Disable Form <====//\r\n                    submitButton.classList.add('px-loading-inline');\r\n\r\n                    //====> Date/Time Reformated <====//\r\n                    const dateTimeFormatter = (dateString) => {\r\n                        //===> Get Current Date and Time Data <===//\r\n                        let date = new Date(dateString),\r\n                            year = date.getFullYear(),\r\n                            month = ('0' + (date.getMonth() + 1)).slice(-2),\r\n                            day = ('0' + date.getDate()).slice(-2),\r\n                            hours = ('0' + date.getHours()).slice(-2),\r\n                            minutes = ('0' + date.getMinutes()).slice(-2);\r\n\r\n                        //===> Construct a readable date and time format <===//\r\n                        return year + '-' + month + '-' + day + ' ' + hours + ':' + minutes;\r\n                    }\r\n\r\n                    // Create a new FormData object from the form\r\n                    const formData = new FormData(form);\r\n\r\n                    //====> Loop through each entry in the FormData object <===//\r\n                    for (const pair of formData.entries()) {\r\n                        //====> Check if the entry value is a date/time string <====//\r\n                        if (typeof pair[1] === 'string' && pair[1].match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/)) {\r\n                            //====> Reformat the date/time string <====//\r\n                            formData.set(pair[0], dateTimeFormatter(pair[1]));\r\n                        }\r\n                    }\r\n\r\n                    //====> Submit with Ajax [Fetch] <====//\r\n                    fetch(form.getAttribute('action'), {\r\n                        body: formData,\r\n                        method: form.getAttribute('method'),\r\n                    }).then(response => {\r\n                        //====> Check Network Connection <====//\r\n                        if (!response.ok) {\r\n                            //===> Show Failed Message <===//\r\n                            Phenix(document).notifications({\r\n                                type: \"error\",\r\n                                duration: \"7000\",\r\n                                position: [\"center\", \"center\"],\r\n                                message: \"Network response was not ok\",\r\n                            });\r\n    \r\n                            //===> Throw an Error <====//\r\n                            throw new Error('Network response was not ok');\r\n                        }\r\n                        //====> Return Response Text <====//\r\n                        return response.text();\r\n                    }).then(data => {\r\n                        //====> Enable Form <====//\r\n                        submitButton.classList.add('px-loading-inline');\r\n                        //===> Reset Forms on Loading <===//\r\n                        Phenix('.wpcf7 input:not([type=\"hidden\"]):not(.btn):not([type=\"submit\"]), .wpcf7 select, .wpcf7 textarea').forEach((input:any) => {input.value = '';});\r\n\r\n                        //===> Reset PX Select Component <===//\r\n                        form.querySelectorAll('div.px-select').forEach((element: any) => {\r\n                            let firstOption = element.querySelector('.px-select-option:first-child');\r\n                            const toggleButton = element.querySelector('.px-select-toggle');\r\n                            if (!firstOption) firstOption = element.querySelector('.px-select-option:nth-child(2)');\r\n                            \r\n                            toggleButton.textContent = firstOption.textContent;\r\n                        });\r\n\r\n                        //====> Disable Form <====//\r\n                        submitButton.classList.remove('px-loading-inline');\r\n                        //===> Redirect to Success <===//\r\n                        const sourceParameter = window.location.href.replace(PDS_WP_KEY.site, '');\r\n                        window.location.href = `${PDS_WP_KEY.site ? PDS_WP_KEY.site + `/success/?source=${sourceParameter}` : `/success/?source=${sourceParameter}`}`;\r\n                    }).catch(error => {\r\n                        //===> Show Error Message <===//\r\n                        Phenix(document).notifications({\r\n                            type: \"error\",\r\n                            duration: \"7000\",\r\n                            position: [\"center\", \"center\"],\r\n                            message: error,\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //===> CF7 Style Fixes <===//\r\n        if (document.querySelector(\".wpcf7-form\")) {\r\n            //===> Textarea <===//\r\n            Phenix('.wpcf7-textarea').forEach((element:any) => {\r\n                element.setAttribute('cols', null);\r\n                element.setAttribute('rows', null);\r\n            });\r\n\r\n            //===> Required <===//\r\n            Phenix('.wpcf7-validates-as-required').forEach((element:any) => element.setAttribute('required', true));\r\n\r\n            /*===== Whitespace =====*/\r\n            Phenix('.wpcf7-form br').forEach((space:HTMLElement) => space.remove());\r\n            Phenix('.wpcf7[dir], .wpcf7 [dir]').forEach((element:HTMLElement) => element.removeAttribute('dir'));\r\n        }\r\n    },\r\n\r\n    //====> S.E.O : Fixes <====//\r\n    fixSEO = () => {\r\n        //====> Schema Meta Data Set <====//\r\n        if(!document.body.getAttribute('itemscope')) document.body.setAttribute('itemscope', \"\");\r\n        if(!document.body.getAttribute('itemtype')) document.body.setAttribute('itemtype', \"https://schema.org/WebPage\");\r\n\r\n        //====> Create Placeholder Keywords <=====//\r\n        let pds_meta_description = document.querySelector('.entry-content p:first-of-type')?.textContent.substring(0, 160);\r\n\r\n        //====> Check for Headline Level 1 <====//\r\n        if(!document.querySelector('h1')) Phenix('.main-header').insert('append', `<h1 class=\"hidden\">${document.title}</h1>`);\r\n\r\n        //====> S.E.O : Missing Meta <====//\r\n        if (!document.head.querySelector('meta[name=\"description\"]')) Phenix(document.head).insert('append', `<meta name=\"description\" content=\"${pds_meta_description}\">`);\r\n\r\n        //====> Inputs do not have a discernible name <====//\r\n        Phenix('input:not([title]):not([type=\"submit\"]), select:not([title])').forEach((element:HTMLElement) => {\r\n            //===> Define Data <===//\r\n            let element_label = element.getAttribute('placeholder') || element.getAttribute('data-placeholder');\r\n\r\n            //===> If the placeholder is not valid <===//\r\n            if (!element_label) {\r\n                //===> Get the Label <===//\r\n                let label = Phenix(element).prev('label') || Phenix(element).next('label') || element.closest('label');\r\n                //=== Get the Controller Parent ====//\r\n                let element_parent = Phenix(element).ancestor('p') || Phenix(element).ancestor('[class*=\"col\"]') || Phenix(element).ancestor('div');\r\n                //===> if the label not exist get the parent text <====//\r\n                if (!label && element_parent) label = Phenix(element_parent).prev('label') || Phenix(element_parent).next('label');\r\n                //===> Correct Label if there are none <===//\r\n                if (label && label.textContent) element_label = label.textContent.trim();\r\n            }\r\n\r\n            //===> Set Attributes <===//\r\n            if(!element.getAttribute('aria-label')) element.setAttribute('aria-label', `${element_label}`);\r\n            if(!element.getAttribute('title') || element.getAttribute('title') === \"\") element.setAttribute('title', `${element_label}`);\r\n            if(!element.getAttribute('placeholder') || element.getAttribute('placeholder') === \"\") element.setAttribute('placeholder', `${element_label}`);\r\n        });\r\n\r\n        //===> Buttons Fixes <===//\r\n        Phenix('button.btn:not([type])').forEach((button:HTMLElement) => {\r\n            //===> Check if the Button in a Form <===//\r\n            let checkForForm = Phenix(button).ancestor('form'),\r\n                checkForInput = checkForForm?.querySelector('[type=\"submit\"]');\r\n\r\n            //===> Set Type Attribute <===//\r\n            if (!checkForForm || !checkForInput) button.setAttribute('type', \"button\");\r\n            else if (checkForForm && !checkForInput) button.setAttribute('type', 'submit');\r\n        });\r\n    };\r\n\r\n    const isEditor = document.querySelector(\"#site-editor\") || document.querySelector('body[class*=\"editor\"]');\r\n    const isAdmin  = document.body?.classList?.contains('wp-admin');\r\n\r\n    /*====> Unblock Fonts <====*/\r\n    Phenix('#fontawesome-css, #pds-icons-css, #pds-cfont-css, #theme-style-css, #phenix-css, #pds-primary-font-css, #pds-secondary-font-css, #pds-style-font-css').forEach((style:HTMLElement) => style.setAttribute('media', 'all'));\r\n\r\n    /*====> for Front-End <====*/\r\n    if (!isAdmin && !isEditor) {\r\n        /*====> Activated Menu Items <====*/\r\n        Phenix('.current-menu-parent, .current-menu-item').addClass('px-item-active');\r\n        Phenix(\".px-navigation.has-active-submenu .px-item-active\").addClass(\"px-submenu-active\");\r\n\r\n        //===> Run Scripts <===//\r\n        Phenix(document).init();\r\n        \r\n        //====> Start Fixes <====//\r\n        fixCF7(); fixSEO();\r\n\r\n        //====> Adminbar Fix <====//\r\n        if (document.querySelector('#wpadminbar')) Phenix('body').css({ \"padding\": \"0\", 'padding-top' : '32px', \"margin-top\": \"-24px\"});\r\n        \r\n        //===> Alignwide Fix <===//\r\n        Phenix(\".alignfull\").forEach((element:HTMLElement) => element.classList.remove('alignfull'));\r\n\r\n        //===> Set Logo Link <===//\r\n        Phenix(\".wp-block-phenix-logo\").setAttributes({\"href\": PDS_WP_KEY?.site || \"/\"});\r\n    }\r\n\r\n    /*====> for Admin Panel <====*/\r\n    else if (isAdmin && !isEditor) {\r\n        //===> Fix Tables Style <===//\r\n        Phenix('.wp-list-table .column-date, .wp-list-table .column-author').forEach((dateColumn:HTMLElement) => {\r\n            dateColumn.classList.add('tx-nowrap');\r\n            dateColumn.innerHTML = dateColumn.innerHTML.replace('<br>', ' ');\r\n        });\r\n\r\n        //===> Fix Tables Style <===//\r\n        Phenix('.wp-list-table .row-actions span').forEach((spanLink:HTMLElement) => spanLink.innerHTML = spanLink.innerHTML.replace('|', ''));\r\n        \r\n        //===> Run Scripts <===//\r\n        Phenix(document).init();\r\n    }\r\n\r\n    /*====> for Block Editor <====*/\r\n    if(isEditor) {\r\n        //====> Disable Links <====//\r\n        Phenix('.editor-styles-wrapper a[href]').on('click', clicked => clicked.preventDefault(), true);\r\n    }\r\n\r\n    /*====> for Block Editor and Admin <====*/\r\n    else if (isEditor || isAdmin) {}\r\n});\r\n\r\n//===> Create WP Uploader <===//\r\nwindow.PxWpUploader = isClicked => {\r\n    //===> Prevent Default <===//\r\n    isClicked.preventDefault();\r\n    let input = Phenix(isClicked.target).next(\".uploader-input\");\r\n\r\n    //===> Preview <===//\r\n    let input_preview = document.querySelector('.loading-image'),\r\n        value_preview = Phenix(input).ancestor('.px-custom-uploader')?.querySelector('.input-value');\r\n\r\n    //===> Track Media Frame for Each Instance <===//\r\n    if (!isClicked.target.mediaPopup) {\r\n        //===> Create Media Popup if it Doesn't Exist <===//\r\n        isClicked.target.mediaPopup = wp.media({\r\n            title: \"Upload Image\",\r\n            multiple: false\r\n        });\r\n\r\n        //===> Handle Media Selection <===//\r\n        isClicked.target.mediaPopup.on(\"select\", () => {\r\n            //===> Get the Image URL <===//\r\n            var uploaded_image = isClicked.target.mediaPopup.state().get(\"selection\").first();\r\n    \r\n            //===> Set the URL to the Input <===//\r\n            input.value = uploaded_image.toJSON().url;\r\n    \r\n            //===> Set Preview and Value <===//\r\n            if (input_preview) input_preview.setAttribute('src', uploaded_image.toJSON().url);\r\n            if (value_preview) value_preview.textContent = uploaded_image.toJSON().name;\r\n        });\r\n    }\r\n\r\n    //===> Open the Popup <===//\r\n    isClicked.target.mediaPopup.open();\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(929);\n"],"names":["root","factory","exports","module","define","amd","this","PhenixElements","prototype","dropdown","options","forEach","dropdown_wrapper","classList","contains","siblings","inline","attr","getAttribute","active","toggle","target","position","exclude","activated","delay","effect","type","display","duration","dropdown_target","querySelector","change_position","dynamicPosition","setAttribute","hide_others","ancestor","current_effect","remove","sibling","fadeOut","slideUp","toggle_element","addEventListener","clicked","event","preventDefault","event_trigger","matches","toggleClass","fadeToggle","slideToggle","dropdown_start","window","blank","exclude_final","addClass","replace","split","the_target","isScrolling","scrolling","passive","setInterval","add","multimedia","background","element","source","encodeURI","replaceAll","style","backgroundImage","mediaDone","undefined","length","src","alt","ratio","size","splide","embed","cover","gradient","value","gradient_mode","mode","gradient_repeat","repeat","lazy","document","toBoolean","lazyloading","controls","autoplay","loop","muted","player_autoplay","toString","includes","ratio_convert","parseInt","setProperty","mediaHandle","multiple","removeProperty","insert","backgroundColor","currentBg","orderBG","media_attributes","video","on","play","pause","canvas","modelTypeForCanvas","extension","pop","toLowerCase","canvasHTML","dataset","threeInitialized","assetsBasePath","PDS_WP_KEY","viewerOptions","modelPath","object","modelType","autoRotate","threeUtils","initializeViewer","catch","err","console","error","import","integrated","inView","offset","callback","menu","menu_id","hover","sub_active","arrow","responsive","mobile","submenus","querySelectorAll","dropdowns","submenu_item","getCSS","submenu_toggle","parentNode","arrow_icon","toggle_btn","index","iconName","submenu","push","submenus_handle","elements","click","parent","viewport","resized","body","innerHTML","removeAttribute","removeClass","trigger","popup","timeout","showon","onload","hash_url","backdrop","modal_id","showed","Event","hidden","show_modal","current_active","hide_modal","fadeIn","dispatchEvent","isClicked","thumbnail","media_url","lightbox_group","lightbox_wrapper","media_type","url","slider_wrapper","item","slider","setTimeout","location","hash","substr","selector","triggers_select","setAttributes","progress","color","label","setProgress","bar","progress_handler","parseFloat","width","circle_path","circle_text","current_value","CountUpTimer","textContent","clearInterval","meter_calc","getTotalLength","radial_path","Math","max","progressBar","height","toREM","lineHeight","clientWidth","svg","circle_shape","direction","rating","rating_name","input","maxRate","i","rateElement","next","prev","ele","select","events_data","classes","hasAttribute","maxItems","search","placeholder","searchPlaceholder","opened","CustomEvent","detail","bubbles","cancelable","change","closed","tagName","isUpdated","rebuildSelect","select_component","hasWrapper","new_select","css","options_list","select_create","option","current_item","option_text","option_value","option_classes","image_icon","sub_option","original_classes","cl","new_select_value","new_value_group","tag_classes","tag_remover","first_option","first_label","first_classes","holder","first_image","image","set_tag_remover","value_element","tag_value","select_values","val","splice","tag_padding_fixer","get_default_value","selected_option","default_value","default_label","new_classes","new_image","current_image","default_values","search_element","holder_classes","holder_image","typing","search_value","headline","option_label","original","list","select_toggle","select_search","check_clicked","check_clicked_2","set_value","prevValue","current_values","isSelected","original_option","prev_classes","concat","selectWrapper","tabs","navigation","panels","buttons","isHashed","panel","button","tab_id","childNodes","href","history","pushState","additionalInformation","title","TabElement","TabDisplay","timer","time","date","message","start_event","end_event","timer_handler","childs","seconds","minutes","hours","days","reverse","join","stringDate","Date","getTime","update","current","elapsed","floor","padStart","uploader","controler","filePath","files","name","changeFile","fileType","fileUrl","filesList","URL","createObjectURL","file","videoCheck","dataTransfer","ready","animations","thirdParty","animationsToLoad","getURL","phenixCSS","Array","isArray","pkg","loadAnimationCSS","animateCSS","pageDir","animation","lazygroup","currentAnimation","baseStagger","stagger","animationOrder","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","threshold","observe","scrollDriven","completeAt","drivenEnd","exitAnimation","exit","handleScrollProgress","rect","getBoundingClientRect","viewHeight","innerHeight","exitProgress","completionPoint","top","bottom","min","MutationObserver","mutations","obs","removeEventListener","disconnect","childList","subtree","into","boundingClientRect","rootMargin","collapse","related","active_class","className","normal_icon","active_icon","slideDown","counter","decimal","symbol","steps","counting","nodeName","count","increment","ceil","interval","decimal_regex","runCounter","abs","toFixed","counter_handler","bind","smothScroll","start","viewPos","round","pageYOffset","scrollY","posTest","activator","currentTime","timeElapsed","scrollAnimate","timeFunc","scrollTo","requestAnimationFrame","sticky","offsetTop","flow","offsetLeft","scrollX","scrollSpy","spotInto","spotOffset","triggers","getComputedStyle","fullHeight","scrollHeight","initialStyles","timespeed","startTime","performance","now","animateSlideUp","elapsedTime","paddingTop","paddingBottom","animateSlideDown","animateFadeOut","opacity","animateFadeIn","property","directionStart","directionEnd","inlineDisplay","visibility","padding","pseudo","styles","copyrights","project_name","info","phenix_js","substring","lastIndexOf","script","page","pathname","phenixJS","notifications","item_position","y_pos","x_pos","validation","defaults","patterns","errorHandler","inputWrapper","hasError","errors_list","append","reset_status","setCustomValidity","valid_control","submit","validate","checked","validity","valueMissing","typeMismatch","badInput","patternMismatch","test","tooLong","rangeOverflow","tooShort","rangeUnderflow","stepMismatch","valid","checkValidity","invalid","isSubmitting","pattern","inputs","regEx","flowOn","_phenixObserver","observerOptions","isVisible","documentElement","innerWidth","clientHeight","target_element","Phenix","panel_size","stickyElement","stickySize","id","tag","moduleMap","isIntegrated","isModule","importMap","libPath","trueUrl","createElement","appendChild","head","audioTrigger","HTMLElement","audio_player","audio_file","paused","isEnded","readyState","queueMicrotask","once","classNamesArray","classNamesLength","j","classNamesSet","Set","hasClass","some","ancestors","children","from","child","all_target","nextUnit","nextElementSibling","prevUnit","previousElementSibling","all_childs","clearInline","key","Object","attributes","keys","attribute","elementsPackage","new_package","createRange","createContextualFragment","insertBefore","nextSibling","prepend","firstChild","lastChild","live","timeLoop","lazyLoading","playable","preloaded","mediaQuery","breakpoint","fn_callback","mobile_first","createQuery","current_vw","resizing","base","copyText","text","blob","Blob","data","ClipboardItem","navigator","clipboard","write","selected","filteredElements","filter","init","scripts","link","left","behavior","dataOptions","JSON","parse","grid_element","main_header","header_holder","classNames","menu_item","last_title","postContent","content_menu","headlines","itemHtml","last_item","last_list","utilities","RangeSliders","page_direction","minRange","maxRange","noUiSlider","create","step","connect","tooltips","range","min_range","max_range","values","handle","maxVal","minVal","set","slider_handler","verticalFix","slides","first_item","slider_integration","media_elements","media","audioTriggers","productId","pds_add_to_cart","action_url","add_url","remove_url","pds_toggle_wishlist","slider_creator","currentClasses","slider_track","slider_list","current_slides","slide","focus","items","speed","rewind","breakpoints","pauseOnHover","intersection","wheel","pagination","sync","drag","isNavigation","updateAfter","waitForTransition","wheelSleep","releaseWheel","autoWidth","autoHeight","fixedWidth","fixedHeight","heightRatio","perPage","controls_class","pagination_class","arrow_class","page_class","slider_options","perMove","paginationDirection","updateOnMove","snap","rewindSpeed","rewindByDrag","role","labelledby","arrows","track","current_slider","the_slider","Splide","move","moved","resize","refresh","destroy","mounted","inactive","arrows_mounted","arrows_updated","pagination_mounted","pagination_updated","iframe","playing","mount_slider","sync_selector","synced_slider","synced_splide","mount","slide_item","go","splide_loader","splide_url","ev","control","form","repeater_container","add_btn","fields_key","items_list","original_row","create_remove_btn","repeater_row","currentRemoveBtn","cloneNode","newRow","currentRows","rows","row","relation","numbers","match","characters","toTopHook","transformColor","amount","rgb","map","Number","c","isLightOrDark","all","bgColor","bgImage","darkerRgb","lighterRgb","colors","colorOne","colorTwo","rightClick","textSelect","img","img_width","img_height","parent_width","parent_height","trim","document_classes","log","grid","first_child_class","Masonry","itemSelector","text_list","text_list_items","text_element","isReady","typeWriter","tinyTypewriter","cursor","startDelay","marquee","marquee_slider","marquee_slides","marquee_id","initMarqueeSlider","allowPointEvent","dir","stopOnHover","product_ids","quantity","variation_id","addProductsSequentially","formData","URLSearchParams","fetch","wc_add_to_cart_params","wc_ajax_url","method","headers","then","response","json","pds_remove_from_cart","cartItemKey","fragments","ok","newCartContent","tempDiv","cart","table","loaded","sortValue","urlParams","decrease","increase","minValue","maxValue","inputSteps","newVal","products","isChanged","variation","price","isEditor","isAdmin","dateColumn","spanLink","submitButton","dateTimeFormatter","dateString","getFullYear","getMonth","slice","getDate","getHours","getMinutes","FormData","pair","Error","firstOption","toggleButton","sourceParameter","site","space","pds_meta_description","element_label","closest","element_parent","checkForForm","checkForInput","fixSEO","PxWpUploader","input_preview","value_preview","mediaPopup","wp","uploaded_image","state","get","first","toJSON","open","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}