{"version":3,"file":"js/phenix.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAgB,OAAID,IAEpBD,EAAa,OAAIC,GAClB,CATD,CASGK,MAAM,I,uuBCCT,kBAGA,EAAAC,eAAeC,UAAUC,UAAY,SAAUC,GAoV3C,OAzUAJ,KAAKK,SAASC,I,cAEV,IAAIC,EACAC,EAAWC,SAASH,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAASI,QAAS,GAC7EG,EAAWL,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAASO,UAAU,EACrEC,EAAWN,EAAQI,aAAa,mBAAoBN,aAAO,EAAPA,EAASQ,YAAY,EAEzEC,GADWP,EAAQI,aAAa,gBAA+B,QAAb,EAAAN,aAAO,EAAPA,EAASU,YAAI,SAAEC,OACtDT,EAAQI,aAAa,iBAA+B,QAAb,EAAAN,aAAO,EAAPA,EAASU,YAAI,eAAED,UAAU,GAC3EG,EAAWV,EAAQI,aAAa,mBAAiC,QAAb,EAAAN,aAAO,EAAPA,EAASU,YAAI,eAAEE,YAAY,EAG/EV,EAAQW,WAAWC,QAAQ,uBAAsBX,EAAUD,EAAQW,YAGvE,MAAME,EAAkB,CAACC,EAASC,IACM,QAAhC,aAAOC,UAAUC,YAA6BH,EACtCC,EAIhB,IAAIG,EAAgBlB,EAAQmB,iBAAiB,YACzCC,EAAgBpB,EAAQmB,iBAAiB,YACzCE,EAAgBD,EAChBE,EAAgBD,EAAWE,OAG/B,GAAIhB,EAAQ,CAEsB,QAA9B,EAAAP,EAAQwB,cAAc,gBAAQ,SAAEC,UAEhC,aAAOzB,GAAS0B,OAAO,SAAU,4BACjC,IAAIC,EAAU3B,EAAQwB,cAAc,YAEpC,IAAK,IAAII,EAAI,EAAGrB,EAAOgB,OAAO,GAAKK,EAAGA,IAAK,CACvC,IAAIC,EAAQtB,EAAOqB,IACnB,aAAOD,GAASD,OAAO,SAAU,OAAOG,S,CAG5CX,EAAelB,EAAQmB,iBAAiB,W,CAIxCT,GAAUW,EAAWtB,SAAQ+B,IAC7BA,EAAIX,iBAAiB,MAAMpB,SAAQgC,GAAUA,EAAOC,aAAa,mBAAkB,IAAM,IAI7F,IAAIC,EAAY,GACZ/B,IAAO+B,EAAY,sFACoBpB,EAAgB,OAAQ,6HAE1CX,MAAUA,+BACnB,EAANA,EAAUoB,EAAa,kBAAwB,EAANpB,MAAkB,EAANA,aAAqB,wBACpE,EAANA,EAAUoB,EAAa,kBAAwB,EAANpB,MAAkB,EAANA,aAAqB,wBACpE,GAANA,EAAWoB,EAAa,kBAAwB,GAANpB,MAAmB,GAANA,aAAsB,wBACvE,GAANA,EAAWoB,EAAa,kBAAwB,GAANpB,MAAmB,GAANA,aAAsB,wBACvE,GAANA,EAAWoB,EAAa,kBAAwB,GAANpB,MAAmB,GAANA,aAAsB,wBACvE,GAANA,EAAWoB,EAAa,kBAAwB,GAANpB,MAAmB,GAANA,aAAsB,wBACvE,IAANA,EAAYoB,EAAa,kBAAwB,IAANpB,MAAoB,IAANA,aAAuB,uCAC9DoB,MAAeA,wFAEAT,EAAgB,WAAY,mCAIvE,IAAIqB,EAAa,GACb7B,IAAQ6B,EAAa,wKAE2DrB,EAAgB,kBAAmB,sDAKvH,IAAIsB,EAAW,iFACT9B,EACE,mHAEM6B,sEAEgB,mBAExBhC,EACE,uHAEM+B,4BACI,sBAKlB,aAAOhC,GAASyB,OAAO,SAAUS,GAGjC,IAAIC,EAAqB,8HAEhBvB,EACD,8EAA8EQ,EAAWE,wBAAwBH,EAAcG,SAC/H,wEAAwEF,EAAWE,0BAA0BH,EAAcG,wHAOnI,aAAOtB,GAASyB,OAAO,QAASU,GAGhC,IAAIC,GAAa,aAAOpC,GAASqC,KAAK,kBAClCC,GAAa,aAAOtC,GAASuC,KAAK,mBAGtC,MAAMC,EAAU,CAACC,EAAMC,EAAOC,K,MAEU,QAApC,EAAA5C,EAAQmB,iBAAiB,mBAAW,SAAEpB,SAAQ8C,GAAOA,EAAIpB,WAEzD,IAAIqB,EAAkB9C,EAAQwB,cAAc,SAE5C,KAAOmB,EAAQC,IACX,aAAOE,GAAapB,OAAO,SAAUgB,EAAKC,IAC1CA,IAGJJ,EAAWf,cAAc,gBAAgBuB,YAAcJ,EAAM,EAC7DJ,EAAWf,cAAc,cAAcuB,YAAcH,EAAI,CAAC,EAkDxDI,EAAmB,CAACN,EAAMC,EAAOC,K,MAEC,QAApC,EAAA5C,EAAQmB,iBAAiB,mBAAW,SAAEpB,SAAQ8C,GAAOA,EAAIpB,WAGzD,IAAIwB,EAAiBV,EAAWf,cAAc,eAC1C0B,EAAiBC,KAAKC,KAAKV,EAAKnB,OAAOrB,GAG3C+C,EAAeI,UAAY,KAG3B,IAAI,IAAIzB,EAAI,EAAGsB,EAAY,GAAKtB,EAAGA,KAAK,aAAOqB,GAAgBvB,OAAO,SAAU,cAAiB,GAAHE,EAAK,SAAS,OAAOA,EAAE,UAGjHsB,EAAc,KACd,aAAOD,EAAezB,cAAc,mBAAmBE,OAAO,SAAU,sCAAqC,aAAOV,UAAUC,UAAU,oBACxI,aAAOgC,GAAgBvB,OAAO,SAAU,sCAAqC,aAAOV,UAAUC,UAAU,kBAI5GwB,EAAQC,EAAMC,EAAOC,GAnEE,M,QAEvB,MAAMU,EAAaC,I,MAEXC,EAAarD,SAASoD,EAAKR,aAC3BU,EAAcpB,EAAWb,cAAc,UAAUkC,MAGb,QAAxC,EAAAH,EAAK5C,WAAWa,cAAc,kBAAU,SAAEmC,UAAUlC,OAAO,UAC3D8B,EAAKI,UAAUC,IAAI,UAOnBnB,EAAQrB,EAJqB,GAAZoC,EAAgB,EAAIA,EAASC,EAAYA,EACzCD,EAASC,EAAY,EAGM,EAIhDlB,EAAWpB,iBAAiB,kDAAkDpB,SAAQwD,IAElFA,EAAKM,iBAAiB,SAASC,IAC3BA,EAAMC,iBACNT,EAAWQ,EAAME,OAAO,GAC1B,IAI4C,QAAlD,EAAAzB,EAAWf,cAAc,iCAAyB,SAAEqC,iBAAiB,SAASC,IAC1EA,EAAMC,iBAEN,IAAIR,GAAO,aAAOhB,EAAWf,cAAc,cAAcgB,KAAK,sCAC3De,GAAMD,EAAWC,EAAK,IAIqB,QAAlD,EAAAhB,EAAWf,cAAc,iCAAyB,SAAEqC,iBAAiB,SAASC,IAC1EA,EAAMC,iBAEN,IAAIR,GAAO,aAAOhB,EAAWf,cAAc,cAAcc,KAAK,sCAC1DiB,GAAMD,EAAWC,EAAK,GAC5B,EA4BFU,EAAoB,EAIrB/D,IAEC8C,EAAiB5B,EAAe,EAAGlB,EAAM,GAGtBmC,EAAWb,cAAc,UAG/BqC,iBAAiB,UAAUC,IACpC5D,EAAQ4D,EAAME,OAAON,MAErBV,EAAiB5B,EAAe,EAAGlB,EAAM,EAAE,KAKhDG,IAC0C,QAAzC,EAAAgC,EAAWb,cAAc,wBAAgB,SAAEqC,iBAAiB,SAASC,IAEjE,IAAII,EAAeJ,EAAME,OAAON,MAAMS,WAAWC,cAC7CC,EAAeP,EAAMQ,SAAWR,EAAMS,SACtCC,EAAe,GAGA,GAAhBH,GAAqC,IAAhBH,EAEpBM,EAAenD,EAGfA,EAAWtB,SAAQ,CAACwD,EAAKkB,KAEJlB,EAAKR,YAAYoB,WAAWC,cAE9BM,SAASR,IAAeM,EAAaG,KAAKpB,EAAK,IAKlErD,GAASsE,EAAajD,OAAS,GAAGyB,EAAiBwB,EAAc,EAAGtE,EAAM,GACzEA,GAAOuC,EAAQ+B,EAAc,EAAGA,EAAajD,OAAO,EAAE,KAKhEjB,GACCY,EAAanB,SAAQ,CAAC8B,EAAO+C,KAEzB/C,EAAM8B,UAAUC,IAAI,gBACpB,aAAO/B,GAAOH,OAAO,SAAU,yDAG/BG,EAAMgC,iBAAiB,SAASC,I,QAC5BA,EAAMC,iBAEN,MAAMc,EAAkB,K,MAEa,QAAjC,gBAAOhD,GAAOiD,SAAS,kBAAU,SAAE/E,SAAQgF,IACvCA,EAAQpB,UAAUlC,OAAO,UACzBsD,EAAQpB,UAAUlC,OAAO,YACzBsD,EAAQpB,UAAUlC,OAAO,YAAY,GACvC,EAIN,GAAII,EAAM8B,UAAUqB,SAAS,YASrBC,EAAS,OAEbJ,IAEAhD,EAAM8B,UAAUC,IAAI,UACpB/B,EAAM8B,UAAUC,IAAI,aACpB/B,EAAM8B,UAAUlC,OAAO,gBAfe,CACtC,IAAIwD,EAAS,MAEbJ,IAEAhD,EAAM8B,UAAUC,IAAI,UACpB/B,EAAM8B,UAAUC,IAAI,YACpB/B,EAAM8B,UAAUlC,OAAO,Y,CAY3B,GAAGvB,EAAO,CACN,IAAIgF,EAAYlF,EAAQwB,cAAc,SACN,QAAhC,EAAA0D,EAAU/D,iBAAiB,aAAK,SAAEpB,SAAQ8C,GAAOA,EAAIpB,WAEjDyD,GAAW7D,EAAWtB,SAAQ+B,GAAOoD,EAAUC,YAAYrD,I,CAI/B,QAApC,EAAA9B,EAAQmB,iBAAiB,mBAAW,SAAEpB,SAAQ,CAAC+B,EAAK2C,KAChD,IAAIW,GAAc,aAAOtD,GAAKgD,SAAS,MACnCZ,EAAepC,EAAIuD,SAAST,GAAS7B,YAEzCqC,EAAYrF,SAAQgF,IAChB,IAAIO,EAAeP,EAAQM,SAAST,GAAS7B,YAGxCwC,MAAMrB,KACPA,EAAesB,WAAWtB,GAC1BoB,EAAeE,WAAWF,IAI1BC,MAAMrB,KACNA,EAAeA,EAAaC,WAC5BmB,EAAeA,EAAanB,YAInB,OAAVc,GAAmBf,GAAgBoB,IAAc,aAAOxD,GAAKJ,OAAO,QAASqD,GAEnE,QAAVE,GAAoBf,GAAgBoB,IAAc,aAAOxD,GAAKJ,OAAO,QAASqD,EAAQ,GAC3F,IAIN1D,EAAarB,EAAQmB,iBAAiB,YAElCjB,GAASmB,EAAWE,OAAS,GAAGyB,EAAiB3B,EAAY,EAAGnB,EAAM,GACrEA,GAAOuC,EAAQpB,EAAY,EAAGA,EAAWE,OAAO,EAAE,GACzD,G,IAMP7B,IACX,C,+sBCrVA,kBAGA,EAAAC,eAAeC,UAAU6F,SAAW,SAAU3F,GAyJ1C,OA1IAJ,KAAKK,SAAQ2F,I,YAET,GAAIA,EAAiB/B,UAAUqB,SAAS,cAAe,OAGvD,IAAIF,EACAa,EAASC,GAAQF,EAAiBtF,aAAawF,GAC/CC,EAAUF,EAAO,iBAAkB7F,aAAO,EAAPA,EAAS+F,SAAU,YACtDC,EAAUH,EAAO,iBAAkB7F,aAAO,EAAPA,EAASgG,SAAU,aACtD9B,EAAU2B,EAAO,iBAAkB7F,aAAO,EAAPA,EAASkE,SAAU,oBACtD+B,EAAYJ,EAAO,mBAAoB7F,aAAO,EAAPA,EAASiG,WAAY,gBAC5DC,EAAWL,EAAO,kBAAmB7F,aAAO,EAAPA,EAASkG,UAAW,aACzDC,EAAY,GAAGjC,KAAU6B,IAEzBK,EAASP,EAAO,gBAAgC,QAAf,EAAA7F,aAAO,EAAPA,EAASqG,cAAM,eAAED,QAAS,EAC3DC,EAASR,EAAO,iBAAiC,QAAf,EAAA7F,aAAO,EAAPA,EAASqG,cAAM,eAAEC,OAAQ,OAC3DC,EAAUV,EAAO,kBAAkC,QAAf,EAAA7F,aAAO,EAAPA,EAASqG,cAAM,eAAEE,UAAW,QAChEC,EAAWX,EAAO,mBAAmC,QAAf,EAAA7F,aAAO,EAAPA,EAASqG,cAAM,eAAEG,WAAY,IAEnEC,EAAkBb,EAAiBlE,cAAcwC,GAGjDwC,EAAkB,KACC,QAAhBT,EAAS,IAAgC,WAAhBA,EAAS,KAAiB,aAAOQ,GAAiBE,iBAAiB,EAInGf,EAAiB1D,aAAa,cAAemE,GAG7C,MAAMO,EAAeT,KAEjB,aAAOA,GAAWlG,SAAS0F,I,MACvB,GAAIc,IAAoBd,EAAU,CAE9B,IAAIC,GAAmB,aAAOD,GAAUkB,SAAS,iBAC7CC,EAAmBlB,EAAiBtF,aAAa,eAGrDqF,EAAS9B,UAAUlC,OAAOoE,GAC1BH,EAAiBlE,cAAc,cAAcmC,UAAUlC,OAAOoE,GAE7B,QAAjC,gBAAOJ,GAAUX,SAASe,UAAO,SAAE9F,SAASgF,IACxCA,EAAQpB,UAAUlC,OAAOoE,EAAO,IAId,QAAlBe,GAA0B,aAAOnB,GAAUoB,QAAQP,EAAUJ,EAAOG,GAC7C,SAAlBO,IAA2B,aAAOnB,GAAUqB,QAAQR,EAAUJ,EAAOG,E,IAEpF,EAqCN,IAAIU,EAAiBrB,EAAiBlE,cAAcsE,GACpDiB,EAAelD,iBAAiB,SAASmD,IAlCxBlD,KAEb4C,EAAYT,GAGZnC,EAAMC,iBAGN,IAAIkD,EAAgBnD,EAAME,OACrBF,EAAME,OAAOpD,QAAQkF,KAASmB,GAAgB,aAAOA,GAAeN,SAASb,IAGlFhB,GAAW,aAAOmC,GAAenC,SAASd,IAG1C,aAAOiD,GAAeC,YAAYrB,GAG9Bf,IAEA0B,KAGA,aAAO1B,GAAUoC,YAAYrB,GAGf,QAAVM,GAAoB,aAAOrB,GAAUqC,WAAWb,EAAUJ,EAAOG,GAElD,SAAVF,IAAqB,aAAOrB,GAAUsC,YAAYd,EAAUJ,EAAOG,G,EAOhFgB,CAAeL,EAAQ,IAI3BD,EAAe/E,aAAa,OAAQ,UACpC+E,EAAe/E,aAAa,WAAY,KAGxCsF,OAAOzD,iBAAiB,SAAU0D,IAE9B,IAAIC,EAAgB,GAAGxD,4BAAiCgC,KACpDgB,EAAcO,EAAMvD,OAGnBgD,EAAQpG,QAAQoD,IAAYgD,EAAQpG,QAAQkF,IAAYkB,EAAQpG,QAAQ,GAAGkF,QAAgBkB,EAAQpG,QAAQ4G,IAC5Gd,EAAYT,E,KAKpB,aAAOP,GAAkB+B,SAAS,eAGlC1B,EAAWA,EAAS2B,QAAQ,IAAI,IAAIC,MAAM,KAG1C,IAAIC,GAAa,aAAOrB,GACpBsB,GAAc,EAGlBD,EAAWH,SAAS,eAAeA,SAAS,oBAAoBA,SAAS,UACzEG,EAAWH,SAAS,QAAuB,WAAhB1B,EAAS,GAAkB,GAAGA,EAAS,OAAS,GAAGA,EAAS,SACvE,QAAhBA,EAAS,GAAe6B,EAAWH,SAAS,gBAAkBG,EAAWH,SAAS,eAGlFH,OAAOzD,iBAAiB,UAAUiE,GAAaD,GAAc,GAAM,CAACE,SAAS,IAE7EC,aAAY,KACJH,IACAA,GAAc,EACdrB,I,GAEL,KAGHd,EAAiB/B,UAAUC,IAAI,aAAa,IAIzClE,IACX,C,+sBC1JA,kBAGA,EAAAC,eAAeC,UAAUqI,WAAa,SAAUnI,GAuB5C,IAAIoI,EAAa,CAAClI,EAASS,KAIvBA,GAFAA,EAAS0H,UAAU1H,IAEH2H,WAAW,IAAI,QAG3BtI,aAAO,EAAPA,EAASuI,cAAarI,EAAQ2D,UAAUlC,OAAO,cAGnDzB,EAAQsI,MAAMC,gBAAkB,QAAQ9H,KAAU,EAItDf,KAAKK,SAAQC,I,UAET,IAAIwI,GAAY,EAChB,GAAIA,EAAW,OACf,GAAsBC,MAAlBzI,EAAQuB,OAAqB,OAGjC,IAAI6E,EAAOpG,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAASsG,OAAQ,aAC7DsC,EAAO1I,EAAQI,aAAa,cAAeN,aAAO,EAAPA,EAAS4I,KACpDC,EAAO3I,EAAQI,aAAa,cAAeN,aAAO,EAAPA,EAAS6I,MAAO,GAC3DC,EAAS5I,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAAS+I,MACvDC,GAAS,aAAO9I,GAAS2G,SAAS,0BAClCoC,EAAS/I,EAAQI,aAAa,gBAAiBN,aAAO,EAAPA,EAASiJ,QAAS,QACjEC,EAAShJ,EAAQI,aAAa,gBAAiBN,aAAO,EAAPA,EAASkJ,OACxDC,EAAWjJ,EAAQI,aAAa,mBAAqC,QAAjB,EAAAN,aAAO,EAAPA,EAASmJ,gBAAQ,eAAEvF,SAAS,EAChFwF,EAAgBlJ,EAAQI,aAAa,eAAiC,QAAjB,EAAAN,aAAO,EAAPA,EAASmJ,gBAAQ,eAAEE,OAAQ,SAChFC,EAAkBpJ,EAAQI,aAAa,iBAAmC,QAAjB,EAAAN,aAAO,EAAPA,EAASmJ,gBAAQ,eAAEI,QAE5EhB,EAAcrI,EAAQI,aAAa,sBAAuBN,aAAO,EAAPA,EAASuI,eAAe,EAClFiB,EAAkBtJ,EAAQI,aAAa,mBAAoBN,aAAO,EAAPA,EAASyJ,YAAY,EAChFC,EAAkBxJ,EAAQI,aAAa,mBAAoBN,aAAO,EAAPA,EAAS2J,YAAY,EAChFC,EAAc1J,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAAS6J,QAAQ,EACpEC,EAAe5J,EAAQI,aAAa,gBAAiBN,aAAO,EAAPA,EAAS+J,SAAS,EAEvEC,KAAOzB,GAA+B,UAAhBA,GACtBkB,KAAWD,GAAuC,UAApBA,GAC9BG,KAAWD,GAAuC,UAApBA,GAAmD,UAApBA,GAC7DG,KAAOD,GAA+B,UAAhBA,GACtBG,KAAQD,GAAiC,UAAjBA,GAE5B,GAAIhB,GAAkB,MAATA,EAET,GAAK5I,EAAQ2D,UAAUQ,WAAWO,SAAS,SAGtC,CAED,IAAIqF,EAAgB5J,SAASyI,GAE7BmB,EAAgB,GAAI/J,EAAQsI,MAAM0B,YAAY,eAAgB,GAAGD,K,MAPhB/J,EAAQ2D,UAAUC,IAAI,SAASgF,KAYxF,GAAIF,GAAOO,EAAW,CAElB,IAAIgB,EAAc,KAEd,IAAIC,GAAW,EAmBf,GAlBIjB,IAEAA,EAAWA,EAASvB,QAAQ,IAAI,IAE5BuB,EAASvE,SAAS,KAAMwF,IAAWjB,EAASvE,SAAS,MAEhDuE,EAASvE,SAAS,QAElBuE,EAASvE,SAAS,UAFQwF,IAAWjB,EAASvE,SAAS,QAMhEoF,IACA9J,EAAQ2D,UAAUlC,OAAO,iBACrBzB,EAAQsI,MAAMC,iBAAiBvI,EAAQsI,MAAM6B,eAAe,qBAIxD,cAAR/D,EAEA8B,EAAWlI,EAAS0I,GAEpBF,GAAY,OAIX,GAAY,SAARpC,EAIDpG,EAAQwB,cAAc,gBACrBxB,EAAQwB,cAAc,gBAAgBQ,aAAa,UAAW,SADxB,aAAOhC,GAAS0B,OAAO,UAAU,aAAagH,WAAaC,6CAGtGH,GAAY,OAIX,GAAY,YAARpC,EAEagD,EAAlBA,EAAoC,aAAiC,GAElEc,EACClK,EAAQsI,MAAMC,gBAAkB,GAAGa,IAAkBF,cAA0BD,KAE5EjJ,EAAQsI,MAAM8B,gBAAkB,GAAGnB,IAE1CT,GAAY,OAIX,GAAY,YAARpC,EAAoB,CAEzB8B,EAAWlI,EAAS0I,GAEpB,IAAI2B,EAAYrK,EAAQsI,MAAMC,gBAC1B+B,EAAYtK,EAAQI,aAAa,iBAGnBgJ,EAAlBA,EAAoC,aAAiC,GAI7DpJ,EAAQsI,MAAMC,gBAFnB2B,EACiB,YAAZI,EACgC,GAAGD,MAAcjB,IAAkBF,cAA0BD,KAE7D,GAAGG,IAAkBF,cAA0BD,OAAcoB,IAIjF,YAAZC,EACgC,GAAGD,sBAA8BpB,KAAYA,KAE7C,mBAAmBA,KAAYA,OAAcoB,IAIrF7B,GAAY,C,MAIX,GAAY,UAARpC,EAEQpG,EAAQwB,cAAc,qBAG/B,aAAOxB,GAAS0B,OAAO,SAAU,gBAAgBgH,sBAAwBoB,EAAO,iBAAmB,0EAGvGtB,GAAY,OAIX,GAAY,SAARpC,EAAiB,CAEtB,IAAImE,EAAmB,GAAGT,EAAO,iBAAmB,MAAML,EAAW,qCAAuC,MAAMF,EAAW,WAAa,MAAMI,EAAO,OAAS,MAAME,EAAQ,QAAU,MAAMb,EAAQ,WAAWA,KAAW,KAE5N,GAAa,SAATD,GAAqB/I,EAAQwB,cAAc,uBAS1C,GAAa,SAATuH,IAAqB/I,EAAQwB,cAAc,uBAAwB,CAExE,IAAIf,EAASiI,EAETjI,EAAOiE,SAAS,eAAgBjE,EAASiI,EAAIhB,QAAQ,WAAY,UAC5DjH,EAAOiE,SAAS,YAAajE,EAASiI,EAAIhB,QAAQ,oBAAqB,kCACvEjH,EAAOiE,SAAS,eAAcjE,EAASiI,EAAIhB,QAAQ,YAAa,4BAEzE,aAAO1H,GAAS0B,OAAO,SAAU,kCAAkCjB,OAAYqJ,EAAO,iBAAmB,+C,OAfzG,IADA,aAAO9J,GAAS0B,OAAO,SAAU,gCAAgCgH,MAAQ6B,cACjD,UAApBf,EAA6B,CAC7B,MAAMgB,EAAQxK,EAAQwB,cAAc,cACpC,aAAOxB,GAASyK,GAAG,cAAc3G,GAAS0G,EAAME,UAChD,aAAO1K,GAASyK,GAAG,cAAc3G,GAAS0G,EAAMG,S,CAexDnC,GAAY,C,MAMZN,EAAWlI,EAAS0I,GAEpBF,GAAY,C,EAKhBsB,GAEKhB,GAAQ9I,EAAQ2D,UAAUC,IAAI,mBAE/B,aAAO5D,GAAS4K,UAAY5K,EAAQ6K,WAAY,aAAO7J,UAAU8J,WAAWC,SAAQd,IAExF3C,OAAOzD,iBAAiB,UAAUC,IAAS,aAAO9D,GAAS4K,OAAO,CAACI,OAAQ,MAAQf,IAAgB,QAIlGA,G,MAIJjK,EAAQsI,MAAMC,gBAAkB,2EAA2E,GAExH,C,+sBCzOA,kBAGA,EAAA5I,eAAeC,UAAUqL,KAAO,SAAUnL,GAwJtC,OA/IAJ,KAAKK,SAAQkL,I,MAET,IAAItF,EAASC,GAAQqF,EAAK7K,aAAawF,GAGnCsF,EAAUvF,EAAO,aAAc7F,aAAO,EAAPA,EAASoL,UAAW,KACnDC,EAAQxF,EAAO,gBAAiB7F,aAAO,EAAPA,EAASqL,SAAS,EAClDC,EAAazF,EAAO,qBAAsB7F,aAAO,EAAPA,EAASsL,aAAc,oBACjEjF,EAASR,EAAO,iBAAkB7F,aAAO,EAAPA,EAASqG,QAC3CkF,EAAS1F,EAAO,gBAA+B,QAAd,EAAA7F,aAAO,EAAPA,EAASuL,aAAK,eAAE1D,MAAM,MACvD2D,EAAa3F,EAAO,iBAAkB7F,aAAO,EAAPA,EAASyL,SAAU,WAGzDC,EAAYP,EAAK9J,iBAAiB,2BAClCsK,EAAY,GAGG,aAAfH,IACCnF,IAASA,EAAS,SAGvB8E,EAAKjJ,aAAa,cAAemE,GAGjCqF,EAASzL,SAAS2L,IACdA,EAAa/H,UAAUC,IAAI,WACoB,UAA3C,aAAO8H,GAAcC,OAAO,aAAuBD,EAAapD,MAAMjC,QAAU,QAEpF,IAAIuF,EAAiBF,EAAa/K,WAClCiL,EAAejI,UAAUC,IAAI,gBAE7B,IAAIiI,EAAaR,aAAK,EAALA,EAAO1D,MAAM,KAE9B,GAAIkE,EAAY,CACZ,IAAIC,EAAaF,EACbE,EAAWtK,cAAc,gBAAesK,EAAaA,EAAWtK,cAAc,eAGlFsK,EAAWnI,UAAUC,IAAI,cACzB,IAAK,IAAIa,EAAQ,EAAGA,EAAQoH,EAAWtK,OAAQkD,IAAS,CACpD,IAAIsH,EAAWF,EAAWpH,GAC1BqH,EAAWnI,UAAUC,IAAImI,E,EAI9BL,EAAa/H,UAAUqB,SAAS,cAC/B0G,EAAa/K,WAAW2H,MAAMvC,SAAW,SACzC2F,EAAavK,iBAAiB,MAAMpB,SAAQC,GAAWA,EAAQ2D,UAAUC,IAAI,c,KAKrF,aAAO6H,GAAWhE,SAAS,kBAG3B+D,EAASzL,SAAQiM,GAAWP,EAAU9G,SAAQ,aAAOqH,GAASlH,SAAS,QAGvE,IAAImH,EAAmBC,IAAiB,aAAOA,GAAUzB,GAAG,SAAS0B,IAEjEA,EAAMpI,iBAGN,IACIqI,EADUD,EAAMnI,OACErD,WAClBmE,GAAW,aAAOsH,GAAQtH,SAAS,IAAIsG,KACvCpH,EAASoI,EAAO5K,cAAc,YAGnB,UAAX2E,GAAoB,aAAOnC,GAAQoD,cACnB,SAAXjB,IAAmB,aAAOnC,GAAQmD,aAC3CiF,EAAOzI,UAAUmC,OAAOsF,GACxBgB,EAAOzI,UAAUmC,OAAOsF,EAAW1D,QAAQ,SAAU,eAGjD5C,GAAUA,EAAS/E,SAAQC,IACZ,UAAXmG,GAAoB,aAAOnG,EAAQwB,cAAc,aAAasF,UAC9C,SAAXX,IAAmB,aAAOnG,EAAQwB,cAAc,aAAaqF,UACtE7G,EAAQ2D,UAAUlC,OAAO2J,GACzBpL,EAAQ2D,UAAUC,IAAIwH,EAAW1D,QAAQ,SAAU,cAAc,GACnE,IAIFyD,EAGKA,IAAS,aAAOnK,UAAU8J,SAAS,SAAW,MAAMxD,OAAOzD,iBAAiB,UAAUwI,KACvF,aAAOrL,UAAU8J,SAAS,SAAW,MAAMmB,EAAgBR,EAAU,IAJlEQ,EAAgBR,GAQvBP,GAAuB,OAAZA,IAEQ,aAAfI,GAA4BL,EAAK7K,aAAa,OAAQ6K,EAAKjJ,aAAa,KAAMkJ,GAG1D,WAAfI,IACAtK,SAASQ,cAAc,IAAI0J,QAE5B,aAAOlK,SAASsL,MAAM5K,OAAO,SACzB,YAAYwJ,MAAY/E,EAAQ,gBAAgBA,EAAO,IAAM,qFAC7B8E,EAAK5H,0DACrB6H,mCAAyCA,4FAK7D,aAAO,IAAIA,UAAgBnL,SAASC,GAAwBA,EAAQuM,gBAAgB,SACpF,aAAO,IAAIrB,uBAA6BsB,YAAY,WAGpDrG,EAAS,QACT8F,GAAgB,aAAO,IAAIf,0B,KAQ3C,aAAO,gBAAgBT,GAAG,SAAS0B,IAG/B,GADAA,EAAMpI,kBACF,aAAOoI,EAAMnI,QAAQ2C,SAAS,mCAAoC,OAGtE,IAAI8F,EAAUN,EAAMnI,OAChBA,EAAUyI,EAAQrM,aAAa,WAGvB4D,EAARA,EAAiB,IAAIA,IACXyI,EAAQrM,aAAa,QACnC4D,EAAShD,SAASQ,cAAcwC,GAGhCA,EAAOL,UAAUmC,OAAO,kBACxB,IAAIK,EAASnC,EAAO5D,aAAa,eAClB,UAAX+F,GAAoB,aAAOnC,GAAQoD,cACnB,SAAXjB,IAAmB,aAAOnC,GAAQmD,WAAW,IAAK,EAAG,OAAO,IAIlEzH,IACX,C,+sBC1JA,kBAGA,EAAAC,eAAeC,UAAU8M,MAAQ,SAAU5M,GAmOvC,OA1NAJ,KAAKK,SAAQ2M,I,MAET,IAAItG,GAAWtG,aAAO,EAAPA,EAASsG,OAAQsG,EAAMtM,aAAa,cAAgB,QAC/DuM,GAAW7M,aAAO,EAAPA,EAAS6M,UAAWxM,SAASuM,EAAMtM,aAAa,iBAC3DwM,GAAW9M,aAAO,EAAPA,EAAS8M,SAAUF,EAAMtM,aAAa,eACjDyM,GAAW/M,aAAO,EAAPA,EAAS+M,SAAUH,EAAMtM,aAAa,eACjD0M,GAAWhN,aAAO,EAAPA,EAASgN,WAAYJ,EAAMtM,aAAa,aACnD2M,GAAWjN,aAAO,EAAPA,EAASiN,WAAYL,EAAMtM,aAAa,mBAAoB,EACvE4M,EAAWN,EAAMtM,aAAa,MASlC,GANI2M,IAAaL,EAAMlL,cAAc,kBAAiC,UAAbuL,KACrD,aAAOL,GAAOhL,OAAO,SAAU,kKAC/BqL,EAAWL,EAAMlL,cAAc,mBAI9BwL,EAAU,OAGfN,EAAM/I,UAAUC,IACZ,SACA,UACA,UACA,UACA,WACA,YACA,cACA,cACA,eACA,gBACA,mBAGiC,QAArC,EAAA8I,EAAMlL,cAAc,yBAAiB,SAAEmC,UAAUC,IAAI,cAAe,kBAGpE,MAAMqJ,EAAS,IAAIC,MAAM,gBACnBC,EAAS,IAAID,MAAM,gBAGzB,IAAIE,EAAa,KAEb,IAAIC,EAAiBrM,SAASQ,cAAc,oBACxC6L,GAAkBA,GAAkBX,GACpCY,EAAW,wBAIftM,SAASsL,KAAK3I,UAAUC,IAAI,oBAE5B,aAAO,IAAIoJ,KAAYO,OAAO,IAAK,EAAG,QAAQ9F,SAAS,UACvDiF,EAAM/I,UAAUC,IAAI,aACpB8I,EAAM/I,UAAUlC,OAAO,UAEvBiL,EAAMc,cAAcP,EAAO,EAG/BK,EAAcb,IAEV,IAAIL,GAAS,aAAOK,GAAS9F,SAAS,cACtC,aAAOyF,GAAQvF,UAAU2F,YAAY,UAErCxL,SAASsL,KAAK3I,UAAUlC,OAAO,mBAC/BiL,EAAM/I,UAAUC,IAAI,UAEpB8I,EAAMc,cAAcL,GAEpBT,EAAMvL,iBAAiB,wCAAwCpB,SAAQC,GAAWA,EAAQyB,UAAS,EAkIvG,GA9Ha,aAAT2E,IAEA4G,EAAW,eAGX,aAAO,gBAAgBvC,GAAG,SAASgD,I,MAE/BA,EAAU1J,iBAGV,IAAI2J,EAAYD,EAAUzJ,OACtB2J,EAAYD,EAAUtN,aAAa,SAAWsN,EAAUtN,aAAa,YAGrEuN,IAAWA,EAAYD,EAAUtN,aAAa,QAGlD,IAAIwN,EAAiBF,EAAUtN,aAAa,cACxCyN,EAAmBnB,EAAMlL,cAAc,kBAGvCsM,EAAa,CAACC,EAAKtB,KAEnB,IAAIqB,EAAarB,EAAQrM,aAAa,cAGtC,MAAmB,UAAf0N,GAEAD,EAAiBlK,UAAUC,IAAI,SAAU,aAElC,iHACWmK,iEAKE,UAAfD,GAELD,EAAiBlK,UAAUC,IAAI,UAG3BmK,EAAIrJ,SAAS,eAAgBqJ,EAAMA,EAAIrG,QAAQ,WAAY,UACtDqG,EAAIrJ,SAAS,eAAcqJ,EAAMA,EAAIrG,QAAQ,YAAa,2BAG5D,iGACYqG,+FAMZ,aAAaA,uD,EAK5B,GAAKH,EAQA,CAED,IAAII,GAAiB,aAAOH,GAAkBnM,OAAO,SAAU,oEAG/D,aAAO,gBAAgBkM,OAAoB7N,SAASwD,IAEhDoK,EAAYpK,EAAKnD,aAAa,SAAWmD,EAAKnD,aAAa,YAGvDmD,IAASmK,GACT,aAAOM,GAAgBtM,OAAO,UAAW,wBAAwBoM,EAAWH,EAAWpK,aAEvF,aAAOyK,GAAgBtM,OAAO,SAAU,wBAAwBoM,EAAWH,EAAWpK,W,IAI9FsK,EAAiBlK,UAAUC,IAAI,cAC/BiK,EAAiB1M,iBAAiB,+BAA+BpB,SAAQC,GAAWA,EAAQ2D,UAAUC,IAAI,aAG1G8I,EAAM7I,iBAAiB,gBAAgBC,KACnC,aAAO,oBAAoBmK,OAAO,CAAExE,UAAU,GAAQ,G,MA5BN,QAApD,EAAAoE,EAAiBrM,cAAc,6BAAqB,SAAEC,UAEtD,aAAOoM,GAAkBnM,OAAO,SAAUoM,EAAWH,EAAWD,IA+BpEN,GAAY,KAKhBN,GACiCxF,OAAOzD,iBAAiB,QAAQ,KAC7DqK,YAAW,KACH5G,OAAO6G,SAASC,KAAKC,OAAO,IAAMrB,GAAUI,GAAY,GAC7DT,EAAQ,IAKfE,GAC+BvF,OAAOzD,iBAAiB,QAAQ,IAAMqK,WAAWd,EAAYT,KAI5FC,IACA,aAAOA,GAAQ7M,SAAQuO,KAEf,aAAOA,GAAU1D,UAAUwC,IAG/B9F,OAAOzD,iBAAiB,UAAUiE,KAC1B,aAAOwG,GAAU1D,WACZ8B,EAAM/I,UAAUqB,SAAS,WAAc0H,EAAM/I,UAAUqB,SAAS,cAAcoI,I,GAEzF,IAKG,UAAThH,EAAkB,CAClB,IAAImI,EAAkB,gBAAgBvB,gBAAuBA,8BAC7D,aAAOuB,GAAiB9D,GAAG,QAAS2C,IAGpC,aAAOmB,GAAiBC,cAAc,CAAC,KAAQ,SAAU,SAAY,K,CAIzE9B,EAAMvL,iBAAiB,gBAAgBpB,SAAQ0M,IAC3CA,EAAQ5I,iBAAiB,SAAS,KAC9ByJ,EAAWb,EAAQ,IAGvBA,EAAQzK,aAAa,OAAQ,UAC7ByK,EAAQzK,aAAa,WAAY,IAAI,GACvC,IAICtC,IACX,C,+sBCnPA,kBAGA,EAAAC,eAAeC,UAAU6O,SAAW,SAAU3O,GAyK1C,OAhKAJ,KAAKK,SAAS0O,IAEV,IAAIrI,EAAOqI,EAASrO,aAAa,eAAgBN,aAAO,EAAPA,EAASsG,OAAQ,MAC9DsI,EAAQD,EAASrO,aAAa,gBAAiBN,aAAO,EAAPA,EAAS4O,QAAS,uBACjEhL,EAAQvD,SAASsO,EAASrO,aAAa,iBAAkBN,aAAO,EAAPA,EAAS4D,QAAS,EAC3E7B,EAAQ4M,EAASrO,aAAa,gBAAiBN,aAAO,EAAPA,EAAS+B,QAAS,GACjEiI,EAAQ2E,EAASrO,aAAa,eAAiBN,aAAO,EAAPA,EAASuI,aAIxDsG,EAAeC,IAEf,IAAIC,EAAmB,KAEnB,IAAInL,EAAQ8B,WAAWiJ,EAASrO,aAAa,iBAAkBN,aAAO,EAAPA,EAAS4D,QAAS,EAC7EgL,EAAQD,EAASrO,aAAa,gBAAiBN,aAAO,EAAPA,EAAS4O,QAAS,uBAUrE,GAPa,QAATtI,IACAwI,EAAItG,MAAMwG,MAAQ,GAAGpL,KACrBkL,EAAItG,MAAM8B,gBAAkBsE,EAC5BE,EAAI5M,aAAa,aAAc0B,GAC/BkL,EAAI5M,aAAa,aAAcH,IAGtB,WAATuE,EAAmB,CAEnB,IAAI2I,EAAcH,EAAIpN,cAAc,oBAChCwN,EAAcJ,EAAIpN,cAAc,gBAGpC,GAAIwN,EAAYrL,UAAUqB,SAAS,eAAgB,OAGnD,IAAIiK,EAAgB,EACpBF,EAAY/M,aAAa,oBA5BpB,KA4ByD0B,EAAM,IAAK,GAA3B,MAG9C,IAAIwL,EAAelH,aAAY,KAEvBiH,EAAgBvL,IAChBuL,GAAiB,EACjBD,EAAYrL,UAAUC,IAAI,eAC1BoL,EAAYjM,YAAc,GAAGkM,OAG7BA,IAAkBvL,GAASsL,EAAYrL,UAAUqB,SAAS,oBAE1DgK,EAAYrL,UAAUC,IAAI,iBAC1BuL,cAAcD,G,GAEnB,G,CAGP,GAAa,WAAT9I,EAAmB,CAEnB,IACIgJ,EADeR,EAAIpN,cAAc,aACP6N,mBAAqB,IAAM3L,GAAS,KAC9D4L,EAAcV,EAAIpN,cAAc,aAEpC8N,EAAYtN,aAAa,oBAAqBmB,KAAKoM,IAAI,EAAGH,IAC1DE,EAAYtN,aAAa,SAAU0M,E,GAKvC5E,IAEI,aAAO2E,GAAU7D,UAAUiE,IAE/BvH,OAAOzD,iBAAiB,UAAUiE,KAC9B,aAAO2G,GAAU7D,UAAWiE,GAAyB,KAGzDA,GACH,EAQL,GAJAJ,EAAS9K,UAAUC,IAAI,cAAe,kBAAmB,gBACzD6K,EAASzM,aAAa,YAAaoE,GAGtB,QAATA,EAAgB,CAEhB,IAAIoJ,EAAcf,EAASjN,cAAc,oBACrCqH,EAAO4F,EAASrO,aAAa,eAAiBN,aAAO,EAAPA,EAAS+I,OAAQ,GAG9D2G,KAED,aAAOf,GAAU/M,OAAO,SAAU,uGAAuGgC,MAAU7B,EAAQ,eAAeA,KAAU,4CACpL2N,EAAcf,EAASjN,cAAc,qBAIpCiN,EAAS9K,UAAUqB,SAAS,wBAE7ByJ,EAAS9K,UAAUC,IAAI,cAAe,kBAAmB,sBACzD6K,EAASnG,MAAMyC,OAAS,IAAG,aAAO/J,UAAUyO,MAAM5G,KAClD4F,EAASnG,MAAMoH,WAAa,SAAQ,aAAO1O,UAAUyO,MAAM5G,MAC3D4F,EAASnG,MAAM0B,YAAY,UAAW,IAAG,aAAOhJ,UAAUyO,MAAMhB,EAASkB,iBAKzEhB,EAAYa,E,CAKpB,GAAa,WAATpJ,EAAmB,CAEnB,IAAIyC,EAAO4F,EAASrO,aAAa,eAAgBN,aAAO,EAAPA,EAAS+I,OAAQ,GAC9D+G,EAAOnB,EAASjN,cAAc,uBAGlC,GAAKoO,EAaDjB,EAAYiB,OAbN,CACN,IAAIC,EAAe,6PAC0EhH,8MACc,GAANnF,kCAAyCmF,cAAiB6F,2IAC/G,SAAjC,aAAO1N,UAAUC,YAAwB,MAAQ,4CAA4CyN,mIAG5G,aAAOD,GAAU/M,OAAO,SAAUmO,GAClCD,EAAMnB,EAASjN,cAAc,uBAC7BmN,EAAYiB,E,EASpB,GAAa,WAATxJ,EAAmB,CAEnB,IAAIyC,EAAO4F,EAASrO,aAAa,eAAgBN,aAAO,EAAPA,EAAS+I,OAAQ,GAClE+G,EAAOnB,EAASjN,cAAc,uBAG9B,GAAKoO,EAaDjB,EAAYiB,OAbN,CACN,IAAIC,EAAe,+JACsDhH,sIACpC6F,oBAAwB7F,wJAG7D,aAAO4F,GAAU/M,OAAO,SAAUmO,GAClCD,EAAMnB,EAASjN,cAAc,uBAE7BmN,EAAYiB,E,MAUjBlQ,IACX,C,+sBC7KA,kBAGA,EAAAC,eAAeC,UAAUkQ,OAAS,SAAUhQ,GAkgBxC,OA1fAJ,KAAKK,SAAQ+P,I,MAET,IAAKA,EAAOtO,cAAc,UAAW,OAGrC,IAAIuO,EAAkB,CAAC,EACnBC,EAAWF,EAAOnM,UAClBuG,EAAW4F,EAAOG,aAAa,cAAenQ,aAAO,EAAPA,EAASoK,UACvDgG,EAAW/P,SAAS2P,EAAO1P,aAAa,eAAgBN,aAAO,EAAPA,EAASyP,KACjElP,EAASyP,EAAO1P,aAAa,iBAAkBN,aAAO,EAAPA,EAASO,QACxD8P,EAAcL,EAAO1P,aAAa,sBAAuBN,aAAO,EAAPA,EAASqQ,aAClEC,EAAoBN,EAAO1P,aAAa,6BAA8BN,aAAO,EAAPA,EAASsQ,oBAAqB,YAGxG,MAAMC,EAAS,IAAIC,YAAY,SAAU,CAACC,OAAQR,EAAYS,SAAS,EAAKC,YAAY,IAClFC,EAAS,IAAIJ,YAAY,SAAU,CAACC,OAAQR,EAAYS,SAAS,EAAKC,YAAY,IAIlFE,GAHS,IAAIL,YAAY,SAAU,CAACC,OAAQR,EAAYS,SAAS,EAAKC,YAAY,IACzE,IAAIH,YAAY,SAAU,CAACC,OAAQR,EAAYS,SAAS,EAAKC,YAAY,IACzE,IAAIH,YAAY,QAAU,CAACC,OAAQR,EAAYS,SAAS,EAAKC,YAAY,IACzE,IAAIH,YAAY,SAAU,CAACC,OAAQR,EAAYS,SAAS,EAAKC,YAAY,KA+CxF,GAAuB,WAAnBX,EAAOc,QAGX,GAAId,EAAOnM,UAAUqB,SAAS,cAC1B8K,EAAOjM,iBAAiB,UAAUgN,KAC9B,aAAOA,EAAU7M,QAAQ8M,eAAe,QAsB3C,CAED,IAAIC,EAzEc,MAElB,IAAIC,GAAa,aAAOlB,GAAQnJ,SAAS,cACrCsK,GAAaD,aAAU,EAAVA,EAAYxP,cAAc,uBAAwBwP,EAAa,KAI5EC,EADAD,IAAeC,GACF,aAAOD,GAAYE,IAAI,CAAC,cAAe,gBAAiB,OAAU,YAAYzJ,SAAS,WAAWA,SAAS,eAAe,IAE1H,aAAOqI,GAAQpO,OAAO,SAAU,wGAIjDuP,EAAWtN,UAAUC,OAAOoM,GAC5BiB,GAAa,aAAOA,GAGf/G,EAMD+G,EAAWC,IAAI,CACX,OAAW,OACX,aAAc,gBACd,eAAgB,yBAChB,gBAAiB,2BATrBD,EAAWC,IAAI,CACX,eAAgB,IAChB,gBAAiB,MAYzB,IAAIC,EAAeF,EAAWvP,OAAO,SAAU,yPAQ/C,OAPIyP,GAAe,aAAOA,GAG1BrB,EAAOnM,UAAUC,IAAI,SAAU,cAC3BoN,IAAYlB,EAASmB,EAAWvP,OAAO,SAAUoO,IAG9C,CAACmB,EAAYE,EAAa,EAiCVC,GACnBH,EAAaF,EAAiB,GAC9BI,EAAeJ,EAAiB,GAGpCjB,EAAO3O,iBAAiB,cAAcpB,SAAQsR,IAE1C,IAIIC,EAJAC,EAAcF,EAAOtO,YACrByO,EAAeH,EAAOjR,aAAa,SACnCqR,EAAiB,kCACjBC,EAAa,GAIjB,GAAIL,EAAOpB,aAAa,cAAe,CACnC,IAAIxP,EAAS4Q,EAAOjR,aAAa,cAEjCK,EAAS0H,UAAU1H,GAEnBiR,EAAa,+BAA+BH,WAAqB9Q,kB,CAIjE4Q,EAAOpB,aAAa,aAAmD,SAApCoB,EAAOjR,aAAa,cAAwBqR,GAAkB,gBAGjGJ,EAAOzQ,QAAQ,aAEf0Q,EAAeH,EAAazP,OAAO,SAAU,oEAAoE+P,kBAA+BD,MAAiBE,IAAaL,EAAOjR,aAAa,SAAWiR,EAAOjR,aAAa,SAAWmR,UAG5OF,EAAOlQ,iBAAiB,UAAUpB,SAAQ4R,IAEtCL,EAAeH,EAAazP,OAAO,SAAU,2CAA2C+P,kBAA+BE,EAAWvR,aAAa,wCAAwCsR,IAAaC,EAAW5O,mBAAmB,KAMtOuO,EADKD,EAAOpB,aAAa,YACVkB,EAAazP,OAAO,SAAU,wEAAwE+P,kBAA+BD,MAAiBE,IAAaH,UAKnKJ,EAAazP,OAAO,SAAU,2CAA2C+P,kBAA+BD,iCAA4CE,IAAaH,UAIpL,IAAIK,EAAmBP,EAAO1N,UAC3BiO,EAAiBrQ,OAAS,GAAGqQ,EAAiB7R,SAAS8R,GAAWP,EAAa3N,UAAUC,IAAIiO,IAAI,IAIxG,IAiBIC,EAAkBC,EAAiBC,EAAaC,EAjBhDC,EAAepC,EAAOtO,cAAc,wBACpC2Q,EAAchC,GAA4B,MAC1CiC,EAAiBC,GAETlC,GAAekC,EAAeA,EACzBH,EAAavO,UAAkBuO,EAAavO,eAAhD,EAET2O,EAAc,CAACC,EAAO5J,IACfwH,GAAeoC,EAIP,+BAA+B5J,WAFtC4J,EAAQpK,UAAUoK,oBAGP,GAMnBC,EAAmBC,IACXA,GAAeA,EAAc5O,iBAAiB,SAASmD,I,QAEvD,IAAI0L,EAAYD,EAAc9R,WAAWP,aAAa,cAClDuS,EAAgB1B,EAAW,GAAG7Q,aAAa,cAAcuH,MAAM,KAGnE8K,EAAc9R,WAAWc,SAGzBkR,EAAc5S,SAAQ,CAAC6S,EAAKnO,KACrBmO,IAAQF,IAEHC,EADyB,IAAzBA,EAAcpR,OACE,GAEAoR,EAAcE,OAAOpO,EAAM,EAAG,G,IAM1DwM,EAAW,GAAGjP,aAAa,aAAc2Q,GACzC7C,EAAOpM,MAAQiP,EAG+B,QAA9C,EAAA7C,EAAOtO,cAAc,WAAWkR,cAAc,SAAEnG,gBAAgB,YACN,QAA1D,EAAA0E,EAAW,GAAGzP,cAAc,gBAAgBkR,cAAc,SAAE/O,UAAUlC,OAAO,eAG7EwP,EAAW,GAAGzD,cAAckD,GAC5BZ,EAAOtC,cAAckD,EAAO,GAC9B,EAGNoC,EAAoB,IAEoB,SAAjC,aAAO9R,UAAUC,YAA8B,+BAA8B,aAAOD,UAAUyO,MAAM,MAC3F,gCAA+B,aAAOzO,UAAUyO,MAAM,MAGtEsD,EAAoB,K,QAEhB,IAAK7I,GAAY4F,EAAOtO,cAAc,cAAe,CAEjD,IAAIwR,EAAkBlD,EAAOtO,cAAc,cACvCyR,EAAgBD,EAAgB5S,aAAa,SAC7C8S,EAAgBF,EAAgBjQ,YAMpC,GAJAkO,EAAW,GAAGjP,aAAa,aAAciR,GACzCnB,EAAiB/O,YAAcmQ,EAG5BF,EAAgBrP,UAAW,CAE1B,IAAIwP,EAAcH,EAAgBrP,YAC6B,QAA1C,EAAAmM,EAAO1P,aAAa,8BAAsB,eAAEuH,MAAM,OAAQ,CAAC,KAGjE5H,SAAQ8R,IACR,KAAPA,GACJC,EAAiBnO,UAAUlC,OAAOoQ,EAAG,IAIzCC,EAAiBnO,UAAUC,OAAOuP,E,CAItC,GAAIH,EAAgB5S,aAAa,cAAe,CAE5C,IAAIgT,EAAYjL,UAAU6K,EAAgB5S,aAAa,eACnDiT,EAAgBvB,EAAiBtQ,cAAc,SACY,QAA1C,EAAAsO,EAAO1P,aAAa,8BAAsB,eAAEuH,MAAM,OAAQ,CAAC,KAGjE5H,SAAQ8R,GAAMC,EAAiBnO,UAAUlC,OAAOoQ,KAG3DwB,GACAA,EAAcrR,aAAa,MAAOoR,GAClCC,EAAcrR,aAAa,MAAOgR,EAAgBjQ,eAIjD,aAAO+O,GAAkBpQ,OAAO,UAAW,+BAA+BsR,EAAgBjQ,qBAAqBqQ,mB,OAIvH,GAAIlJ,EAAU,CAEf,IAAIoJ,EAAiB,GACjBC,GAAiB,aAAOxB,EAAgBvQ,cAAc,sBAG1DuQ,EAAgB5Q,iBAAiB,sBAAsBpB,SAAQ2D,GAASA,EAAMjC,WAG9EqO,EAAO3O,iBAAiB,cAAcpB,SAAQwD,IAE1C,IAAIkP,EAAgBc,EAAe7R,OAAO,SAAU,iCAAiCoR,eAA+Bd,kBAA4BzO,EAAKG,UAAUuO,KAAe1O,EAAKR,sBAGnLuQ,EAAe3O,KAAKpB,EAAKG,OAGzB8O,EAAgBC,EAAcjR,cAAc,qBAAqB,IAGrEyP,EAAW,GAAGjP,aAAa,aAAcsR,GACzCxD,EAAOpM,MAAQ4P,C,GAK3B,GAAIpJ,EAEA8H,EAAc,yGAGdC,EAAc,+vBAOdF,EAAkBd,EAAWvP,OAAO,UAAW,6MAC4CyQ,qCAI1F,CAED,IAAIA,EAAchC,GAA4B+B,EAAanP,YACvDyQ,EAAiB1D,EAAO1P,aAAa,uBACrCqT,EAAiB3D,EAAO1P,aAAa,cAGzC0R,EAAmBb,EAAWvP,OAAO,UAAW,sFAAsF0Q,EAAcoB,OAAoBlB,EAAYmB,EAAatB,KAAeA,cAGhNlB,EAAW,GAAGjP,aAAa,aAAc,GAAGkQ,EAAeA,EAAa9R,aAAa,SAAW,OAGhG,aAAO0R,GAAkBZ,IAAI,CACzB,eAAgB,iBAChB,gBAAiB,kB,CAKzB6B,IAGIjD,EAAOG,aAAa,aAAagB,EAAWxJ,SAAS,aAGtDpH,GAAU6J,KAEJA,GAAUiH,EAAazP,OAAO,UAAW,itBAI8C0O,8BAI5Fa,EAAW,GAAG9P,iBAAiB,qBAAqBpB,SAAQ2T,IACxDA,EAAM7P,iBAAiB,SAAS8P,IAE5B,IAAIC,EAAeD,EAAO3P,OAAON,MAAMU,cAGvC+M,EAAa,GAAGhQ,iBAAiB,oBAAoBpB,SAAQ8T,GAAYA,EAASlQ,UAAUC,IAAI,YAGhGuN,EAAa,GAAGhQ,iBAAiB,yCAAyCpB,SAAQsR,IAE9EA,EAAO1N,UAAUC,IAAI,UAGrB,IAAI4N,EAAeH,EAAOjR,aAAa,cAAcgE,cACjD0P,EAAezC,EAAOtO,YAAYqB,eAGlCoN,EAAa9M,SAASkP,IAAiBE,EAAapP,SAASkP,KAAevC,EAAO1N,UAAUlC,OAAO,SAAS,GACnH,GACJ,KAKVsO,EAAc,CACVD,OAAUmB,EAAW,GACrB8C,SAAUjE,EACVkE,KAAU7C,EAAa,GACvB9Q,OAAU4Q,EAAW,GAAGzP,cAAc,qBACtCkC,MAAUuN,EAAW,GAAG7Q,aAAa,eAIO,QAAhD,EAAA6Q,EAAW,GAAGzP,cAAc,4BAAoB,SAAEqC,iBAAiB,SAASmD,IAEpE8I,EAAOG,aAAa,aAAejJ,EAAQhD,OAAOpD,QAAQ,yBAE9D,aAAOuQ,GAAc1K,kBAAkBU,aAAaD,YAAY,aAEhE6I,EAAYrM,MAAQuN,EAAW,GAAG7Q,aAAa,cAC/C6Q,EAAW,GAAGzD,cAAc6C,GAC5BP,EAAOtC,cAAc6C,GAAO,IAIhC/I,OAAOzD,iBAAiB,SAAS0D,IAE7B,IAAIP,EAAcO,EAAMvD,OACpBiQ,EAAgBhD,EAAW,GAAGzP,cAAc,qBAC5C0S,EAAgBjD,EAAW,GAAGzP,cAAc,qBAC5C2S,EAAgBnN,IAAYiK,EAAW,IAAMjK,IAAYiN,IAAkBjN,EAAQpG,QAAQ,sBAC3FwT,EAAkBpN,IAAYkN,IAAkBlN,EAAQpG,QAAQ,uBAGhEuT,GAAiBC,KACjB,aAAOjD,GAActK,UAAU2F,YAAY,aAE3CuD,EAAYrM,MAAQuN,EAAW,GAAG7Q,aAAa,cAC/C6Q,EAAW,GAAGzD,cAAcmD,GAC5Bb,EAAOtC,cAAcmD,GAErBQ,EAAa,GAAGhQ,iBAAiB,WAAWpB,SAAQoN,GAAUA,EAAOxJ,UAAUlC,OAAO,Y,IAK9F,IAAI4S,EAAahD,IACbA,EAAOxN,iBAAiB,SAASmD,I,gBAE7B,IAAIsN,EAAYrD,EAAW,GAAG7Q,aAAa,cACvCsD,EAAQ2N,EAAOjR,aAAa,cAC5ByB,EAAQwP,EAAOtO,YAGnB,GAAKmH,EA4CA,CAED,IAAIqK,EAAiBtD,EAAW,GAAG7Q,aAAa,cAAcuH,MAAM,KACpE6M,GAAa,EAMb,GAHAD,EAAexU,SAAQ6S,GAAOA,IAAQlP,EAAQ8Q,GAAa,EAAO,OAG9DD,EAAehT,QAAU2O,GAAYsE,EAAY,OAGrD,IAAI/B,GAAgB,aAAOV,EAAgBvQ,cAAc,sBAAsBE,OAAO,SAAU,iCAAiCoR,eAA+Bd,kBAA4BtO,MAAUuO,KAAepQ,YACrN0S,EAAe5P,KAAKjB,GAGpB8O,EAAgBC,EAAcjR,cAAc,sBAG5CyP,EAAW,GAAGjP,aAAa,aAAcuS,GACzCzE,EAAOpM,MAAQ6Q,EAG2B,QAA1C,EAAAzE,EAAOtO,cAAc,WAAWkC,cAAU,SAAE1B,aAAa,YAAY,GACb,QAAxD,EAAAmP,EAAa,GAAG3P,cAAc,gBAAgBkC,cAAU,SAAEC,UAAUC,IAAI,c,KApE7D,CAEXkM,EAAOpM,MAAQA,EACfoO,EAAiB/O,YAAclB,EAC/BoP,EAAW,GAAGjP,aAAa,aAAc0B,GAGzC,IAAI+Q,EAAkB3E,EAAOtO,cAAc,WAAWkC,OAGtD,IAA4B,QAAzB,EAAA+Q,EAAgB9Q,iBAAS,eAAEpC,QAAS,EAAG,CAEtC,IAAI4R,EAAcrD,EAAOtO,cAAc,WAAWkC,OAAWC,UACzD6P,GAA2D,QAA1C,EAAA1D,EAAO1P,aAAa,8BAAsB,eAAEuH,MAAM,OAAQ,CAAC,IAC5E+M,EAA6D,QAA9C,EAAA5E,EAAOtO,cAAc,WAAW8S,cAAc,eAAE3Q,UAGnE6P,EAAemB,UAAUD,GAAc3U,SAAQ8R,GAAMC,EAAiBnO,UAAUlC,OAAOoQ,KAGvFC,EAAiBnO,UAAUC,OAAOuP,E,CAItC,GAAIsB,GAAmBA,EAAgBrU,aAAa,cAAe,CAE/D,IAAIgT,EAAYjL,UAAUsM,EAAgBrU,aAAa,eACnDiT,EAAgBvB,EAAiBtQ,cAAc,SACY,QAA1C,EAAAsO,EAAO1P,aAAa,8BAAsB,eAAEuH,MAAM,OAAQ,CAAC,KAGjE5H,SAAQ8R,GAAMC,EAAiBnO,UAAUlC,OAAOoQ,KAG3DwB,GACAA,EAAcrR,aAAa,MAAOoR,GAClCC,EAAcrR,aAAa,MAAOqP,EAAOtO,eAIxC,aAAO+O,GAAkBpQ,OAAO,UAAW,+BAA+B2P,EAAOtO,qBAAqBqQ,mB,EAgCnHrD,EAAYrM,MAAQuN,EAAW,GAAG7Q,aAAa,cAC/C6Q,EAAW,GAAGzD,cAAckD,GAC5BZ,EAAOtC,cAAckD,EAAO,GAC9B,EAGNS,EAAa,GAAGhQ,iBAAiB,8BAA8BpB,SAAQsR,GAAUgD,EAAUhD,KAG3F,IAAIxJ,GAAc,EAClBP,OAAOzD,iBAAiB,UAAUiE,GAAaD,GAAc,GAAM,CAACE,SAAS,IAE7EC,aAAY,KACJH,IACAA,GAAc,GACd,aAAOsJ,GAAc1K,kB,GAE1B,KAGHqJ,EAAOjM,iBAAiB,UAAUgN,GAAakC,K,KAKhDrT,IACX,EAGA,EAAAC,eAAeC,UAAUkR,cAAgB,WAkBrC,OAhBApR,KAAKK,SAAQ+P,IAET,IAAI8E,GAAgB,aAAO9E,GAAQnJ,SAAS,cAG5CmJ,EAAOnM,UAAUlC,OAAO,aAAc,WAGtC,aAAOmT,GAAelT,OAAO,SAAUoO,GACvC8E,EAAcnT,UAGd,aAAOqO,GAAQA,QAAQ,IAIpBpQ,IACX,C,+sBCvhBA,kBAGA,EAAAC,eAAeC,UAAUiV,KAAO,SAAU/U,GA0HtC,OApHAJ,KAAKK,SAAQ8U,IAET,IAAIhP,EAAU1F,SAAS0U,EAAKzU,aAAa,kBAAmBN,aAAO,EAAPA,EAAS+F,SAAU,EAC3ExD,GAAavC,aAAO,EAAPA,EAASuC,aAAc,mBACpCyK,GAAWhN,aAAO,EAAPA,EAASgN,WAAY+H,EAAKzU,aAAa,aAClD0U,EAAUD,EAAK1T,iBAAiB,cAChC4T,EAAUF,EAAKrT,cAAca,GAAYlB,iBAAiB,2BAC1D6T,EAAW1N,OAAO6G,SAASC,MAAQtB,GAAyB,MAAbA,GAAiC,UAAbA,EAGvE,MAAMG,EAAS,IAAIC,MAAM,cACnBC,EAAS,IAAID,MAAM,cAGzB4H,EAAO/U,SAAQ,CAACkV,EAAOxQ,KAEfA,IAAUoB,GACVoP,EAAMtR,UAAUC,IAAI,UACpBqR,EAAMtR,UAAUlC,OAAO,UAEvBwT,EAAMzH,cAAcP,IAEpBgI,EAAMtR,UAAUC,IAAI,S,IAK5BmR,EAAQhV,SAAQ,CAACmV,EAAoBzQ,KAE7BA,IAAUoB,GAAQqP,EAAOvR,UAAUC,IAAI,UAG3CsR,EAAOlT,aAAa,OAAQ,UAC5BkT,EAAOlT,aAAa,WAAY,MAGhC,aAAOkT,GAAQzK,GAAG,SAASzD,I,UAEvBA,EAAQjD,iBAGR,IAAImR,EAASlO,EAAQhD,OACjBmR,EAASD,EAAO9U,aAAa,YAQjC,IANK+U,GAAUD,EAAOjF,aAAa,UAC/BkF,EAAoC,QAA3B,EAAAD,EAAO9U,aAAa,eAAO,eAAEsH,QAAQ,IAAI,IAC9CwN,EAAOvU,WAAWyU,WAAW7T,OAAS,IAAG2T,EAASA,EAAOvU,aAI7DmM,GAAyB,MAAbA,GAAiC,UAAbA,EAAsB,CACtD,MAAMiB,EAAMzG,OAAO6G,SAASkH,KAAK3N,QAAQyG,SAASC,KAAM,IAAM,IAAI+G,IAClEG,QAAQC,UAAU,CAAEC,sBAAuB,2BAA6BxU,SAASyU,MAAO1H,E,CAIhD,QAA5C,gBAAOmH,GAAQzN,SAAS,UAAU3C,kBAAU,SAAE/E,SAAQgF,GAAWA,EAAQpB,UAAUlC,OAAO,YAG1F,IAAIiU,GAAiB,aAAO,IAAIP,KAC5BQ,EAAaD,EAAW,GAAGtV,aAAa,iBAAmB,QAEsC,QAArG,EAAAsV,EAAWnI,OAAO,IAAK,EAAGoI,GAAYlO,SAAS,UAAU+E,YAAY,UAAU1H,SAAS,qBAAa,SAAE/E,SAAQkV,IAE3GjU,SAASQ,cAAc,IAAI2T,KAAU3H,cAAcP,GAG/CgI,EAAMtR,UAAUqB,SAAS,aAEL,aAAOiQ,GAAOzI,YAAY,UAAU/E,SAAS,UAAU,GACjEa,MAAMjC,QAAU,KAE1B4O,EAAMzH,cAAcL,G,GAE1B,GACJ,IAIF6H,GACA1N,OAAOzD,iBAAiB,QAAQ,KAE5B,IAAIsR,EAAS7N,OAAO6G,SAASC,KAAKC,OAAO,GAGtC8G,KAEC,aAAO,IAAIA,KAAU5H,SAAS9F,SAAS,UAAU+E,YAAY,UAAU1H,SAAS,cAAc/E,SAAQkV,IAE7FA,EAAMtR,UAAUqB,SAAS,aAEV,aAAOiQ,GAAOzI,YAAY,UAAU/E,SAAS,UAAU,GAEjEa,MAAMjC,QAAU,KAAI,KAIlC,aAAO,cAAc8O,gBAAqBA,OAAYpV,SAASmV,I,MAE3D,IAAIlR,EAASkR,EAGTA,EAAOjF,aAAa,SAAyC,OAA9BiF,EAAOvU,WAAWiQ,UAAkB5M,EAASkR,EAAOvU,YAG3C,QAA5C,gBAAOqD,GAAQyD,SAAS,UAAU3C,kBAAU,SAAE/E,SAAQgF,GAAWA,EAAQpB,UAAUlC,OAAO,WAAU,IAIxGT,SAASQ,cAAc,IAAI2T,KAAU3H,cAAcP,G,OAO5DvN,IACX,C,+sBCzHA,kBAGA,EAAAC,eAAeC,UAAUgW,MAAQ,SAAU9V,GAmJvC,OA3IAJ,KAAKK,SAASC,I,MAEV,IAAIoG,EAAOpG,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAASsG,OAAQ,YAC7DyP,EAAO7V,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAAS+V,OAAQ,QAC7DC,GAAwC,QAAjC,EAAA9V,EAAQI,aAAa,oBAAY,eAAEsH,QAAQ,KAAM,QAAQ5H,aAAO,EAAPA,EAASgW,KAAKpO,QAAQ,KAAM,OAAQ,GACpGqO,EAAU/V,EAAQI,aAAa,kBAAmBN,aAAO,EAAPA,EAASiW,UAAW,cACtE1N,EAAcrI,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAASuI,aAC5D2N,GAAa,aAAOhW,GAGxB,MAAMiW,EAAc,IAAI/I,MAAM,cACxBgJ,EAAY,IAAIhJ,MAAM,YAG5B,GAAY,aAAR9G,EAAqB,CAErB,IAAI+P,EAAgB,KAEhB,IAAIC,EAAU,CACVC,QAAUrW,EAAQwB,cAAc,aAAewU,EAAWtU,OAAO,SAAU,wDAC3E4U,QAAUtW,EAAQwB,cAAc,aAAewU,EAAWtU,OAAO,SAAU,wDAC3E6U,MAAUvW,EAAQwB,cAAc,WAAewU,EAAWtU,OAAO,SAAU,oDAC3E8U,KAAUxW,EAAQwB,cAAc,UAAewU,EAAWtU,OAAO,SAAU,mDAI5EoU,EAAKnO,MAAM,KAAK,GAAGpG,OAAS,IAAGuU,EAAOA,EAAKnO,MAAM,MAAM8O,UAAUC,KAAK,MAGzExI,YAAW,IAAMlO,EAAQwN,cAAcyI,IAAc,KAGrD,IAAIU,EAAa,IAAIC,KAAK,GAAGd,KAAQD,KAAQgB,UACzCC,EAAS9O,aAAY,WAEjB,IAAI+O,GAAU,IAAIH,MAAOC,UACrBG,EAAUL,EAAaI,EAEvBP,EAAOrT,KAAK8T,MAAMD,EAAU,OAC5BT,EAAQpT,KAAK8T,MAAOD,EAAU,MAAyB,MACvDV,EAAUnT,KAAK8T,MAAOD,EAAU,KAAoB,KACpDX,EAAUlT,KAAK8T,MAAOD,EAAU,IAAe,KAGnDZ,EAAOC,QAAQhT,UAAYgT,EAAQlS,WAAW+S,SAAS,EAAG,KAC1Dd,EAAOE,QAAQjT,UAAYiT,EAAQnS,WAAW+S,SAAS,EAAG,KAC1Dd,EAAOG,MAAMlT,UAAYkT,EAAMpS,WAAW+S,SAAS,EAAG,KACtDd,EAAOI,KAAKnT,UAAYmT,EAAKrS,WAAW+S,SAAS,EAAG,KAGhDF,EAAU,IACV7H,cAAc2H,GACd9W,EAAQqD,UAAY,wCAAwC0S,QAC5D/V,EAAQ2D,UAAUC,IAAI,kBAEtB5D,EAAQwN,cAAc0I,GAE9B,GAAG,IAAK,EAIZ7N,IAEI,aAAOrI,GAAS4K,UAAUuL,IAE9B7O,OAAOzD,iBAAiB,UAAUiE,KAC9B,aAAO9H,GAAS4K,UAAWuL,GAAsB,KAGrDA,G,MAKH,GAAY,aAAR/P,EAAqB,CAE1B,IAAI+P,EAAgB,KAEhB,IAAIgB,EAActB,EAAKlO,MAAM,KACzByP,EAAgB,EAChBhB,EAAU,CACNG,MAAUY,EAAY5V,QAAU,EAAIvB,EAAQwB,cAAc,WAAewU,EAAWtU,OAAO,SAAU,oDAAsD,GAC3J4U,QAAUa,EAAY5V,QAAU,EAAIvB,EAAQwB,cAAc,aAAewU,EAAWtU,OAAO,SAAU,wDAA0D,GAC/J2U,QAAUrW,EAAQwB,cAAc,aAAewU,EAAWtU,OAAO,SAAU,yDAGnFwM,YAAW,IAAMlO,EAAQwN,cAAcyI,IAAc,KAErD,IAAIa,EAAS9O,aAAY,aAEnBoP,EAEF,IAAIb,EAAYpT,KAAK8T,MAAMG,EAAgB,MACvCd,EAAcnT,KAAK8T,OAAOG,EAAwB,KAARb,GAAgB,IAC1DF,EAAce,GAAyB,KAARb,EAAyB,GAAVD,GAGlDC,EAAQA,EAAMpS,WAAW+S,SAAS,EAAG,KACrCZ,EAAUA,EAAQnS,WAAW+S,SAAS,EAAG,KACzCb,EAAUA,EAAQlS,WAAW+S,SAAS,EAAG,KAGzCC,EAAY5V,QAAU,IAAI6U,EAAOG,MAAMlT,UAAYkT,GACnDY,EAAY5V,QAAU,IAAI6U,EAAOE,QAAQjT,UAAYiT,GACrDF,EAAOC,QAAQhT,UAAYgT,EAUvBR,IANIsB,EAAY5V,QAAU,EAAU,GAAGgV,KAASD,KAAWD,IAClDc,EAAY5V,QAAU,EAAU,GAAG+U,KAAWD,IAC3C,GAAGA,OAKflH,cAAc2H,GACd9W,EAAQqD,UAAY,wCAAwC0S,QAC5D/V,EAAQ2D,UAAUC,IAAI,kBAEtB5D,EAAQwN,cAAc0I,GAE9B,GAAG,IAAK,EAIR7N,GAEI2N,EAAWpL,UAAUuL,IAEzB7O,OAAOzD,iBAAiB,UAAUiE,IAC9BkO,EAAWpL,UAAWuL,GAAsB,KAGhDA,G,KAMLzW,IACX,C,+sBCjKA,kBAGA,EAAAC,eAAeC,UAAUyX,SAAW,SAAUvX,GAK1CJ,KAAKK,SAAQsX,IACT,GAAGA,EAAS1T,UAAUqB,SAAS,WAAY,OAE3C,IAAIoB,EAAOiR,EAASjX,aAAa,mBAAoBN,aAAO,EAAPA,EAASsG,OAAQ,WAClEkR,EAAYD,EAAS7V,cAAc,sBACnC0I,EAAYmN,EAASjX,aAAa,YAClC+P,EAAckH,EAASjX,aAAa,qBAAuB,oCAG/D,GAAY,YAARgG,EAEAkR,EAAUzT,iBAAiB,UAAUC,IAGjC,IADA,IAAIyT,EAAW,GACN3V,EAAI,EAAGA,EAAI0V,EAAUE,MAAMjW,SAAUK,EAAG2V,EAAS5S,KAAK2S,EAAUE,MAAM5V,GAAG6V,MAElFJ,EAASrV,aAAa,mBAAoBuV,EAAS,QAEpD,EAEH,aAAOD,GAAW5V,OAAO,QAAS,SAASyO,mCAG3C,MAAMuH,EAAcF,IAOhB,IALA,IAEIG,EACAC,EAHAL,EAAW,GACXM,EAAYR,EAAS7V,cAAc,UAI9BI,EAAI,EAAGA,EAAI4V,EAAMjW,SAAUK,EAChC2V,EAAS5S,KAAK6S,EAAM5V,GAAG6V,MACvBE,EAAWH,EAAM5V,GAAGwE,KAAKuB,MAAM,KAC/BiQ,EAAUE,IAAIC,gBAAgBP,EAAM5V,IAGxCiW,EAAUxU,UAAY,GAEtBkU,EAASxX,SAAQiY,I,MAKb,IAHA,aAAOH,GAAWnW,OAAO,SAAU,OAAOsW,UAG1B,OAAb9N,IAEoB,UAAhByN,EAAS,KACRN,EAAS/O,MAAMC,gBAAkB,OAAOqP,KACxCP,EAAS1T,UAAUC,IAAI,cAEnByT,EAAS1T,UAAUqB,SAAS,gBAC5BqS,EAAS1T,UAAUlC,OAAO,cACK,QAA/B,EAAA4V,EAAS7V,cAAc,gBAAQ,SAAEC,WAIrB,UAAhBkW,EAAS,IAAgB,CACzBN,EAAS1T,UAAUC,IAAI,cACvB,IAAIqU,GAAa,aAAOX,GAAW9U,KAAK,SAErCyV,GAAYA,EAAWxW,UAC1B,aAAO6V,GAAW5V,OAAO,QAAS,gCAAgCkW,kBAAwBD,EAAS,gBAE/FN,EAAS1T,UAAUqB,SAAS,gBAC5BqS,EAAS1T,UAAUlC,OAAO,cAC1B4V,EAAS/O,MAAMC,gBAAkB,K,IAI/C,EAKN+O,EAAUzT,iBAAiB,UAAUC,GAAS4T,EAAW5T,EAAME,OAAOwT,SAGtEF,EAAUzT,iBAAiB,aAAaC,GAASuT,EAAS1T,UAAUC,IAAI,eACxE0T,EAAUzT,iBAAiB,aAAaC,GAASuT,EAAS1T,UAAUlC,OAAO,eAG3E6V,EAAUzT,iBAAiB,QAAQC,IAE/B,IACI0T,EADO1T,EAAMoU,aACAV,MACjBF,EAAUE,MAAQA,EAClBH,EAAS1T,UAAUlC,OAAO,YAAY,G,CAI9C4V,EAAS1T,UAAUC,IAAI,UAAU,GAEzC,C,4JC1FA,EAJA,UAIA,SAAO5C,UAAUmX,OAAOrU,IAAD,G,+sBCJvB,kBAGA,EAAAnE,eAAeC,UAAUwY,WAAa,SAAUtY,GAarBJ,KAAKK,SAAQ,CAACC,EAAayE,KAE9C,GAAIzE,IAAYsH,OAAOtG,SAAU,OAGjC,IAAIqX,EAAYrY,EAAQI,aAAa,oBAAqBN,aAAO,EAAPA,EAASuY,YAAa,SAC5E/R,EAAYnG,SAASH,EAAQI,aAAa,oBAAqBN,aAAO,EAAPA,EAASwG,WAAY,IACpF0E,EAAS7K,SAASH,EAAQI,aAAa,kBAAmBN,aAAO,EAAPA,EAASkL,UAAU,EAC7EsN,EAAOnY,SAASH,EAAQI,aAAa,gBAAiBN,aAAO,EAAPA,EAASwY,QAAQ,EACvEC,EAAOpY,SAASH,EAAQI,aAAa,gBAAiBN,aAAO,EAAPA,EAASyY,QAAQ,EACvErS,EAAQ/F,SAASH,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAASoG,QAAS,EAC1EsS,EAAYxY,EAAQI,aAAa,qBAAsBN,aAAO,EAAPA,EAAS0Y,aAAa,EAC9D1Y,SAAAA,EAAS2Y,aAGV,CAEd,IAAIC,GAAU,aAAO1X,UAAUC,YAG3BoX,EAAU3T,SAAS,SACnB2T,EAAYA,EAAU3Q,QAAQ,QAAqB,QAAZgR,EAAoB,OAAS,SAC7DL,EAAU3T,SAAS,SAC1B2T,EAAYA,EAAU3Q,QAAQ,MAAoB,QAAZgR,EAAoB,QAAU,Q,CAK5E1Y,EAAQ2D,UAAUC,IAAI,oBAAqB,YAK3C5D,EAAQsI,MAAM0B,YAAY,oBAAqB9D,GAC/ClG,EAAQsI,MAAM0B,YAAY,mBAAoBqO,GAC9CrY,EAAQsI,MAAM0B,YAAY,uBAAwB1D,GAGlD,IAAIqS,EAAW,KAEPzS,IAAOlG,EAAQsI,MAAMsQ,eAAiB,GAAG1S,OACzCI,IAAUtG,EAAQsI,MAAMuQ,kBAAoB,GAAGvS,QAa/C,aAAOtG,GAAS4K,OAAO,CAACI,OAAOA,EAAQuN,KAAMA,EAAMD,KAAMA,OARzD,aAAOtY,GAASwM,YAAY,sBAExB,aAAOxM,GAAS2G,SAAS,eAE7B3G,EAAQ2D,UAAUC,IAAI,cAAeyU,GAIqC,EAOlF,GAAIG,EAAW,CAEX,IAAIM,EAAgB,EAGpB9Y,EAAQmB,iBAAiB,oBAAoBpB,SAAQ,CAACwD,EAAMkB,KACxDqU,GAAiBxS,EAAS,EAC1B/C,EAAKvB,aAAa,aAAc8W,EAAc,GAC9C9Y,EAAQsI,MAAM0B,YAAY,oBAAqB8O,EAAc,EAAE,G,CAKvE,MAAMC,EAAkB,KAEpBJ,KAEA,aAAOrR,QAAQmD,GAAG,SAAUkO,EAAS,EAIzC,IAAIK,EAAoBhY,SAASQ,cAAc,mBAG/C,GAAIwX,EAAe,CAEf,IAAIC,EAAuBjR,aAAY,KAEa,UAA5C,aAAOgR,GAAerN,OAAO,aAE7BoN,IAEA5J,cAAc8J,G,GAEnB,I,MACAF,GAAiB,IAhG5B,IAoGIG,GAAiBpZ,aAAO,EAAPA,EAASqZ,aAAc,MAGxCC,EAAmB,CAACC,EAAcC,KAClC,GAAItY,SAASQ,cAAc,iBAAiB8X,KAAO,OAGnD,IAAIC,EAAoBvY,SAASwY,cAAc,QAC3CC,EAAe,IAAG,aAAOzY,UAAU0Y,SAASC,uBAAuBN,QAGvEE,EAAkBvX,aAAa,KAAM,gBAAgBsX,KACrDC,EAAkBvX,aAAa,MAAO,cACtCuX,EAAkBvX,aAAa,QAAS,eACxCuX,EAAkBvX,aAAa,QAAS,kCAGxCuX,EAAkBvX,aAAa,OAAQyX,GAGvCzY,SAAS4Y,KAAKzU,YAAYoU,GAG1BA,EAAkB1V,iBAAiB,QAAQ,KAEvC0V,EAAkBvX,aAAa,QAAS,MAAM,IAIlDuX,EAAkB1V,iBAAiB,SAAS,IAAM0V,EAAkBvX,aAAa,OAAQyX,IAAa,EAe1G,OAXIP,EAAWxU,SAAS,OACpB0U,EAAiB,MAAO,KAKpBF,IAAeW,OAAOX,EAAWvU,KAAK,aAC1CuU,EAAWnZ,SAAQ+Z,GAAmBV,EAAiBU,EAAiB,IAAIA,QAIzEpa,IACX,C,+sBCjKA,kBAGA,EAAAC,eAAeC,UAAUma,SAAW,SAAUja,GA6G1C,OAvGAJ,KAAKK,SAAQmV,IAET,GAAGA,EAAOvR,UAAUqB,SAAS,aAAc,OAG3C,IAAIgL,EAAUkF,EAAOvR,UACjByI,EAAS8I,EAAO9U,aAAa,iBAAkBN,aAAO,EAAPA,EAASsM,QACxD4N,EAAU9E,EAAO9U,aAAa,kBAAmBN,aAAO,EAAPA,EAASka,SAC1DC,EAAe,qBACfjW,EAASkR,EAAO9U,aAAa,iBAAkBN,aAAO,EAAPA,EAASkE,QAG5DgM,EAAQjQ,SAASma,IAEVA,EAAUxV,SAAS,QAAQwQ,EAAOlT,aAAa,2BAA4B,GAAGkY,IAAY,IAIjG,MAAMC,EAAcjF,EAAO9U,aAAa,4BAGpC+Z,GAAeA,EAAYzV,SAAS,QACpCwQ,EAAOlT,aAAa,oBAAqB,GAAGmY,EAAYzS,QAAQ,OAAQ,YACjEyS,GAAeA,EAAYzV,SAAS,SAC3CwQ,EAAOlT,aAAa,oBAAqB,GAAGmY,EAAYzS,QAAQ,OAAQ,SAI5E,MAAM0S,EAAclF,EAAO9U,aAAa,qBACpC8U,EAAOvR,UAAUqB,SAASiV,KAC1B/E,EAAOvR,UAAUC,IAAIwW,GACrBlF,EAAOvR,UAAUlC,OAAO0Y,IAI5B,MAAMlN,EAAS,IAAIC,MAAM,mBACnBC,EAAS,IAAID,MAAM,mBAGF,iBAAb,IACIlJ,EAAVgW,GAAmB,aAAO9E,GAAQpQ,SAASd,GAAQ,GAAchD,SAASQ,cAAcwC,IAoD5FkR,EAAOrR,iBAAiB,SAhDD,KAEsB,UAArC,aAAOG,GAAQ2H,OAAO,YAElBS,IAEa,aAAO8I,GAAQvO,SAASyF,GAAQjL,iBAAiB,IAAI8Y,KAG3Dla,SAAQC,IAEXA,EAAQ2D,UAAUlC,OAAOwY,EAAcG,GAEnCpa,EAAQY,QAAQsU,EAAO9U,aAAa,iBAAkBN,aAAO,EAAPA,EAASkE,UAC/D,aAAOhE,GAAS8G,UAEhB9G,EAAQ2D,UAAUC,IAAIuW,E,IAMlCjF,EAAOvR,UAAUlC,OAAO0Y,GACxBjF,EAAOvR,UAAUC,IAAIqW,EAAcG,IAGnC,aAAOpW,GAAQqW,YAAY5S,SAASwS,GAGpC/E,EAAO1H,cAAcP,GACrBjJ,EAAOwJ,cAAcP,KAKrBiI,EAAOvR,UAAUC,IAAIuW,GACrBjF,EAAOvR,UAAUlC,OAAOwY,EAAcG,IAGtC,aAAOpW,GAAQ8C,UAAU0F,YAAYyN,GAGrC/E,EAAO1H,cAAcL,GACrBnJ,EAAOwJ,cAAcL,G,IAQ7B+H,EAAOlT,aAAa,OAAQ,UAC5BkT,EAAOlT,aAAa,WAAY,KAGhCkT,EAAOvR,UAAUC,IAAI,YAAY,IAI9BlE,IACX,C,+sBClHA,kBAGA,EAAAC,eAAeC,UAAU0a,QAAU,SAAUxa,GAqFzC,OA1EAJ,KAAKK,SAASC,IAEV,IAAIsG,EAAWnG,SAASH,EAAQI,aAAa,oBAAqBN,aAAO,EAAPA,EAASwG,WAAY,IACnFiU,EAAWpa,SAASH,EAAQI,aAAa,mBAAoBN,aAAO,EAAPA,EAASya,UAAW,EACjF7W,EAAWvD,SAASH,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAAS4D,QAASvD,SAASH,EAAQ+C,YAAYqF,WAAW,IAAI,KACzHoS,EAAWxa,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAAS0a,SAAU,GACrEtU,EAAW/F,SAASH,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAASoG,QAAU,EAC9EuU,EAAWta,SAASH,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAAS2a,QAAU,GAC9EhE,EAAWzW,EAAQI,aAAa,kBAAmBN,aAAO,EAAPA,EAAS2W,WAAW,EACvEpO,EAAcrI,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAASuI,aAC5DqS,EAAW1a,EAAQ2D,UAAUqB,SAAS,YAGtC0O,EAA4C,UAAnC1T,EAAQ2a,SAASvW,cAC1BwW,EAAQ,EACRC,EAAY1X,KAAKC,KAAKM,GAAS4C,EAAWmU,IAC1CK,EAAW,KACXC,EAAgB,wBAGhBtE,IAASmE,EAAQlX,GAIrB,MAAMsX,EAAa,KAMVN,GAAU1a,EAAQ2D,UAAUC,IAAI,YAGrCgX,GAAUnE,GAAWtT,KAAK8X,IAAIJ,EAAW1X,KAAK+X,IAAIxX,EAAQkX,IAAUzX,KAAK8X,IAAIJ,EAAW1X,KAAK+X,IAAIxX,EAAQkX,IAQzG5a,EAAS0T,EAAQ,QAAU,aAAgB,GAAGkH,EAAMO,QAAQZ,GAASpW,WAAWuD,QAAQqT,EAAe,OAAOP,IAM1GI,KAAWnE,EAAU,EAAI/S,IAAQyL,cAAc2L,EAAS,EAIhE,IAAIM,EAAkB,KAClBlN,WAAW,WACP4M,EAAW9S,YAAYgT,EAAWK,KAAK3b,MAAO+a,EAClD,EAAEY,KAAK3b,MAAOwG,EAAM,EAIpBmC,IAEI,aAAOrI,GAAS4K,UAChBwQ,IAGAV,GAAUpT,OAAOzD,iBAAiB,UAAUiE,IAC5C4S,EAAW1a,EAAQ2D,UAAUqB,SAAS,aAClC0V,IAAY,aAAO1a,GAAS4K,UAAUwQ,GAAiB,KAG/DA,GACH,IAIE1b,IACX,C,+sBC3FA,kBAGA,EAAAC,eAAeC,UAAU0b,YAAc,SAAUxb,GAyE7C,OAjEAJ,KAAK+K,GAAG,SAAS3G,I,MAEbA,EAAMC,iBAGN,IAAI/D,EAAsB8D,EAAME,OAC5BA,EAAsBhD,SAASQ,eAA0C,QAA5B,EAAAxB,EAAQI,aAAa,eAAO,eAAEmB,QAAS,EAAIvB,EAAQI,aAAa,QAAUJ,EAAQI,aAAa,eAAiBJ,EAAQI,aAAa,eAAiBN,EAAQkE,OAASlE,aAAO,EAAPA,EAASkE,OAAS,qBACtOrB,EAAgB,KAChB4V,EAAgBpY,SAASH,EAAQI,aAAa,gBAAiBN,aAAO,EAAPA,EAASyY,OAAQ,EAChFvN,EAAgB7K,SAASH,EAAQI,aAAa,kBAAmBN,aAAO,EAAPA,EAASkL,SAAU,EACpFuQ,EAAkBpY,KAAKqY,MAAMlU,OAAOmU,aAAenU,OAAOoU,SAC1DpV,EAAkBnG,SAASH,EAAQI,aAAa,oBAAqBN,aAAO,EAAPA,EAASwG,WAAY,IAC1FJ,EAAe/F,SAASH,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAASoG,QAAS,EACjFyV,EAAU3X,aAAM,EAANA,EAAQ4X,wBAClB7V,EAAkB4V,EAAUxY,KAAKqY,MAAMG,aAAO,EAAPA,EAASE,KAAO,EAoB3D,SAASC,EAAUC,GAED,OAAVpZ,IAAgBA,EAAQoZ,GAG5B,IAAIC,EAAcD,EAAcpZ,EAC5BsZ,EAvBY,EAACpG,EAAMkB,EAAS/S,EAAQsC,KAEpCuP,GAAQvP,EAAW,GAER,EAAUtC,EAAS,EAAI6R,EAAOA,EAAOkB,GAIpC/S,EAAS,KADjB6R,GAC8BA,EAAO,GAAK,GAAKkB,EAenCmF,CAASF,EAAaT,EAASxV,EAAUO,GAG7DgB,OAAO6U,SAAS,EAAGF,GAGfD,EAAc1V,EAAU8V,sBAAsBN,IAI9CP,EAAUpY,KAAKqY,MAAMlU,OAAOmU,aAEdnU,OACV6G,SAASkH,KAAOrV,EAAQI,aAAa,SAAWJ,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAASkE,QAE5G,CAzBIuU,GAAQA,EAAO,IAAGxS,GAAsBwS,GACxCvN,GAAUA,EAAS,IAAGjF,GAAsBiF,GA2B7C9E,EAAQ,EAEPgI,YAAW,IAAMkO,sBAAsBN,IAAY5V,GAChDkW,sBAAsBN,EAAU,IAIpCpc,IACX,EAGA,EAAAC,eAAeC,UAAUyc,OAAS,SAAUvc,G,MAQxC,IAAImB,GAAyB,QAAb,EAAAnB,aAAO,EAAPA,EAASwY,YAAI,eAAElU,gBAAiB,IAqDhD,OAlDA1E,KAAKK,SAAQC,IAEIA,EAAQI,aAAa,gBAAkBN,SAAAA,EAASsG,KAA7D,IACImS,EAASpY,SAASH,EAAQI,aAAa,gBAAiBN,aAAO,EAAPA,EAASyY,OAAQ,EACzE1S,GAAS/F,aAAO,EAAPA,EAAS+F,SAAU,YAC5BmF,EAAS7K,SAASH,EAAQI,aAAa,kBAAmBN,aAAO,EAAPA,EAASkL,SAAU,EAM7E/J,GAA2B,MAAdA,EAmBRA,GAA2B,MAAdA,IAEdsX,GAAQA,EAAO,GAAGvY,EAAQsc,WAC1BtR,GAAUA,EAAS,GAAKhL,EAAQsc,WAGhChV,OAAOiV,QAAUvR,GAAQhL,EAAQ2D,UAAUC,IAAIiC,GAGnDyB,OAAOzD,iBAAiB,UAAUC,IAE1BwD,OAAOiV,SAAWvR,EAAQhL,EAAQ2D,UAAUC,IAAIiC,GAG3CyB,OAAOiV,SAAWvR,GAAQhL,EAAQ2D,UAAUlC,OAAOoE,EAAO,MA/BnE0S,GAAQA,EAAO,EAAGvN,EAAShL,EAAQ6K,UAAY0N,EAC1CvN,GAAUA,EAAS,IAAGA,EAAWhL,EAAQ6K,UAAYG,GAG1D1D,OAAOoU,QAAU1Q,GAAQhL,EAAQ2D,UAAUC,IAAIiC,GAGnDyB,OAAOzD,iBAAiB,UAAUC,IAE1BwD,OAAOoU,SAAW1Q,GAAQhL,EAAQ2D,UAAUC,IAAIiC,GAGhDyB,OAAOoU,SAAW1Q,GAAQhL,EAAQ2D,UAAUlC,OAAOoE,EAAO,I,IAyBnEnG,IACX,EAGA,EAAAC,eAAeC,UAAU4c,UAAY,SAAU1c,GAO3C,IAAIoa,GAAmBpa,aAAO,EAAPA,EAAS+F,SAAU,YAEtC4W,GADkB3c,SAAAA,EAASwY,MACTxY,aAAO,EAAPA,EAASyY,OAAQ,GACnCmE,GAAoB5c,aAAO,EAAPA,EAASkL,SAAU,EAqD3C,OAlDAtL,KAAKK,SAAQC,IAET,IAAI2c,EAAe3c,EAAQmB,iBAAiB,yBAG5Cwb,EAAS5c,SAAQ0M,KACb,aAAOA,GAAS6O,YAAY,CACxB/C,KAAOvY,EAAQI,aAAa,cAAgBqc,EAC5CzR,OAAShL,EAAQI,aAAa,gBAAkBsc,GAClD,IAGNC,EAAS5c,SAAQC,IAEb,IAAIsO,EAAWtO,EAAQI,aAAa,SAAWJ,EAAQI,aAAa,eAGpE0b,EAAY,KAER,IAAIhX,EAAUsH,EAGTpM,EAAQY,QAAQ,QAAOwL,GAAS,aAAOpM,GAAS2G,SAAS,OAG9D7B,GAAW,aAAOsH,GAAUpM,GAASyH,SAASyS,GAAWpV,WAGrDA,GAAUA,EAAS/E,SAAQgF,I,MAE3BA,EAAQpB,UAAUlC,OAAOyY,GAGa,QAAtC,EAAAnV,EAAQvD,cAAc,IAAI0Y,YAAY,SAAEvW,UAAUlC,OAAOyY,EAAU,GACrE,EAIFlZ,SAASQ,cAAc,GAAG8M,OAAe,aAAOA,GAAU1D,OAAO,CACjE0N,MAAOxY,aAAO,EAAPA,EAASwY,OAAQ,OACxBC,KAAOvY,EAAQI,aAAa,eAAgBN,aAAO,EAAPA,EAASyY,OAAQ,EAC7DvN,OAAShL,EAAQI,aAAa,iBAAkBN,aAAO,EAAPA,EAASkL,SAAU,KACnE8Q,IAGJxU,OAAOzD,iBAAiB,UAAUC,IAAS,aAAOwK,GAAU1D,SAAWkR,IAAc,MAAK,GAC5F,IAICpc,IACX,C,+sBC5MA,kBAGA,EAAAC,eAAeC,UAAUkH,QAAU,SAAUR,EAAWJ,GAyCpD,OAvCAxG,KAAKK,SAASC,IAEV,GAA0C,SAAtC4c,iBAAiB5c,GAASqG,QAAoB,EAE9C,aAAOrG,GAASkR,IAAI,CAAE,SAAY,WAGlC,MAAM2L,EAAa7c,EAAQ8c,aACrBC,GAAgB,aAAO/c,GAAS2L,SAChCqR,EAAY1W,GAAY,IACxB2W,EAAYC,YAAYC,MAI9B,SAASC,EAAerB,GACpB,MAAMsB,EAActB,EAAckB,EAC5BxO,EAAWtL,KAAK8X,IAAIoC,EAAcL,EAAW,IAGnD,aAAOhd,GAASkR,IAAI,CAChBnG,OAAW8R,GAAc,EAAIpO,GAArB,KACR6O,WAAe9X,WAAWuX,EAAcO,aAAe,EAAI7O,GAA/C,KACZ8O,cAAkB/X,WAAWuX,EAAcQ,gBAAkB,EAAI9O,GAAlD,OAGfA,EAAW,EACX2N,sBAAsBgB,IAGtB,aAAOpd,GAASkR,IAAI,CAAE,QAAW,OAAQ,OAAU,GAAI,WAAc,GAAI,cAAiB,GAAI,SAAY,IAElH,CAGAhD,YAAW,IAAMkO,sBAAsBgB,IAAiBlX,GAAS,E,KAKlExG,IACX,EAGA,EAAAC,eAAeC,UAAUya,UAAY,SAAU/T,EAAWJ,EAAQG,GA8C9D,OA5CA3G,KAAKK,SAASC,IAEV,GAA0C,SAAtC4c,iBAAiB5c,GAASqG,QAAoB,EAE9C,aAAOrG,GAASkR,IAAI,CAChB,SAAY,SACZ,QAAW7K,GAAW,QACtB,OAAU,MACV,WAAc,MACd,cAAiB,QAIrB,MAAMwW,EAAa7c,EAAQ8c,aACrBC,GAAgB,aAAO/c,GAAS2L,SAChCqR,EAAY1W,GAAY,IACxB2W,EAAYC,YAAYC,MAG9B,SAASK,EAAiBzB,GACtB,MAAMsB,EAActB,EAAckB,EAC5BxO,EAAWtL,KAAK8X,IAAIoC,EAAcL,EAAW,IAGnD,aAAOhd,GAASkR,IAAI,CAChBnG,OAAW0D,EAAWoO,EAAd,KACRS,WAAe9X,WAAWuX,EAAcO,YAAc7O,EAA1C,KACZ8O,cAAkB/X,WAAWuX,EAAcQ,eAAiB9O,EAA7C,OAGfA,EAAW,EACX2N,sBAAsBoB,IAGtB,aAAOxd,GAASkR,IAAI,CAAE,OAAU,GAAI,WAAc,GAAI,cAAiB,GAAI,SAAY,IAE/F,CAGAhD,YAAW,IAAMkO,sBAAsBoB,IAAmBtX,GAAS,E,KAKpExG,IACX,EAGA,EAAAC,eAAeC,UAAUwH,YAAc,SAAUd,EAAWJ,EAAQG,GAchE,OAZA3G,KAAKK,SAASC,IAEgC,SAAtC4c,iBAAiB5c,GAASqG,SAC1B,aAAOrG,GAASqa,UAAU/T,EAAUJ,EAAOG,IAI3C,aAAOrG,GAAS8G,QAAQR,EAAUJ,E,IAKnCxG,IACX,EAGA,EAAAC,eAAeC,UAAUiH,QAAU,SAAUP,EAAWJ,GAkCpD,OAhCAxG,KAAKK,SAASC,I,MAEV,GAA2C,UAAd,QAAzB,EAAA4c,iBAAiB5c,UAAQ,eAAEqG,SAAoB,EAE/C,aAAOrG,GAASkR,IAAI,CAAE,QAAW,MAGjC,MAAM8L,EAAY1W,GAAY,IACxB2W,EAAYC,YAAYC,MAG9B,SAASM,EAAe1B,GACpB,MAAMsB,EAActB,EAAckB,EAC5BxO,EAAWtL,KAAK8X,IAAIoC,EAAcL,EAAW,IAGnD,aAAOhd,GAASkR,IAAI,CAAEwM,QAAS,IAAG,EAAIjP,KAElCA,EAAW,EACX2N,sBAAsBqB,IAGtB,aAAOzd,GAASkR,IAAI,CAAE,QAAW,OAAQ,QAAW,IAE5D,CAGAhD,YAAW,IAAMkO,sBAAsBqB,IAAiBvX,GAAS,E,KAKlExG,IACX,EAGA,EAAAC,eAAeC,UAAU2N,OAAS,SAAUjH,EAAWJ,EAAQG,GAqC3D,OAnCA3G,KAAKK,SAASC,IAEV,GAA0C,SAAtC4c,iBAAiB5c,GAASqG,QAAoB,EAE9C,aAAOrG,GAASkR,IAAI,CAChB,QAAW7K,GAAW,QACtB,QAAW,MAIf,MAAM2W,EAAY1W,GAAY,IACxB2W,EAAYC,YAAYC,MAG9B,SAASQ,EAAc5B,GACnB,MAAMsB,EAActB,EAAckB,EAC5BxO,EAAWtL,KAAK8X,IAAIoC,EAAcL,EAAW,IAGnD,aAAOhd,GAASkR,IAAI,CAAEwM,QAAS,GAAGjP,MAE9BA,EAAW,EACX2N,sBAAsBuB,IAGtB,aAAO3d,GAASkR,IAAI,CAAE,QAAW,IAEzC,CAGAhD,YAAW,IAAMkO,sBAAsBuB,IAAgBzX,GAAS,E,KAKjExG,IACX,EAGA,EAAAC,eAAeC,UAAUuH,WAAa,SAAUb,EAAWJ,EAAQG,GAc/D,OAZA3G,KAAKK,SAASC,IAEgC,SAAtC4c,iBAAiB5c,GAASqG,SAC1B,aAAOrG,GAASuN,OAAOjH,EAAUJ,EAAOG,IAIxC,aAAOrG,GAAS6G,QAAQP,EAAUJ,E,IAKnCxG,IACX,EAGA,M,iECrNA,eAGA,EAAAC,eAAeC,UAAUqB,UAAY,SAAU2c,GAE3C,IAAI3c,EAAa2b,iBAAiB5b,SAASsL,MAAMrL,UAC7C4c,EAAiB,OACjBC,EAAiB,QASrB,MANkB,QAAd7c,IACA4c,EAAiB,QACjBC,EAAe,QAIH,SAAZF,EAA4BC,EACX,OAAZD,EAA0BE,EACvB7c,CAChB,EAGA,EAAAtB,eAAeC,UAAUmL,OAAS,WAE9B,IAAI/K,EAAcN,KAAK,GACnB2G,EAAUuW,iBAAiB5c,GAASqG,QACpCiC,EAAQtI,EAAQsI,MAChByV,EAAgBzV,EAAMjC,QAGX,QAAXA,IACAiC,EAAMjC,QAAU,QAChBiC,EAAM0V,WAAa,UAIvB,IAAIjT,EAAS/K,EAAQ8c,aACjBmB,EAAU9d,SAASyc,iBAAiB5c,GAASie,QAAS,KAAO,EAUjE,MAPgB,SAAZ5X,IAEgBiC,EAAMjC,QAAtB0X,EAAgC1X,EAA0B,KAE1DiC,EAAM0V,WAAa,MAGfjT,EAASkT,CACrB,EAGA,EAAAte,eAAeC,UAAU+L,OAAS,SAASiS,EAAkBM,GAEzD,IAAIle,EAAcN,KAAK,GAGnBye,EAASvB,iBAAiB5c,EAASke,GAMvC,OAHIN,IAAUO,EAASA,EAAOP,IAGvBO,CACX,EAGA,EAAAxe,eAAeC,UAAUgL,OAAS,SAAU9K,EAIzCse,GAEC,IAAIpe,EAAcN,KAAK,GACnB4Y,EAAc8F,IAAUte,aAAO,EAAPA,EAASwY,MACjC+F,EAAiB/W,OAAOoU,SAAWpU,OAAOmU,YAC1C6C,EAAiBte,EAAQ4b,wBAAwBC,IAAMwC,EAGvDvT,EACSuT,EADTvT,EAEYuT,EAAiB/W,OAAOiX,aAIhCze,aAAO,EAAPA,EAASyY,QAAQzY,aAAO,EAAPA,EAASyY,MAAO,EAAG+F,GAAkCxe,aAAO,EAAPA,EAASyY,MAG1EzY,aAAO,EAAPA,EAASkL,UAAUlL,aAAO,EAAPA,EAASkL,QAAS,IAAGsT,GAAkCxe,aAAO,EAAPA,EAASkL,QAG5F,IAAIhH,EACKsa,EADLta,EAEQsa,EAAiBte,EAAQwe,aAKrCC,EAAW3T,GAAgB9G,GAAiBA,GAAiB8G,EAIjE,MAAY,UAATwN,EAAyBxN,GAAmB9G,EAG7B,QAATsU,EAAuBmG,KARpB3T,GAAmB9G,GAAcA,GAAc8G,GAElC2T,EAU7B,EAGA,EAAA9e,eAAeC,UAAUkL,SAAW,SAAU8S,GAE1C,IAAI5d,EAAUgB,SAAS0d,gBACnB5P,EAAU3L,KAAKoM,IAAIvP,EAAQ2P,aAAe,EAAGrI,OAAOqX,YAAc,GAClE5T,EAAU5H,KAAKoM,IAAIvP,EAAQwe,cAAgB,EAAGlX,OAAOiX,aAAe,GAGxE,MAAiB,UAAbX,EAA6B9O,EAEX,WAAb8O,EAA8B7S,EAE3B,CAAC+D,MAAOA,EAAO/D,OAAQA,EACvC,EAGA,EAAApL,eAAeC,UAAUgf,WAAa,SAAUC,GAE5C,IAAIpH,EAAOoH,EAEX,IADIpH,IAAMA,EAAO,iBACVA,EAAKlW,OAAS,IAAIkW,GAAQ,IAcjC,OAZJqH,QAAQC,KAAK,6GAEKtH,wWAQ6B,mCAEpC/X,IACX,EAGA,EAAAC,eAAeC,UAAU8Z,OAAS,SAAUvL,G,MAExC,IAAIJ,EAAwD,QAAlD,EAAA/M,SAASQ,cAAc,mCAA2B,eAAEpB,aAAa,OACvE4e,EAAYjR,EAAIkR,UAAU,EAAGlR,EAAImR,YAAY,KAAK,GAEtD,MAAO,CACHC,OAASpR,EACTzG,OAASA,OAAO6G,SAASkH,KACzB+J,KAAS9X,OAAO6G,SAASkR,SACzBC,SAAWN,GAAa,wDACxBrF,UAAYqF,EAAUtX,QAAQ,KAAM,QAAU,yDAEtD,C,+sBCvKA,kBAGA,EAAA/H,eAAeC,UAAU2f,cAAgB,SAAUzf,GAO/C,IAAIiX,EACA3Q,GAAOtG,aAAO,EAAPA,EAASsG,OAAQ,SACxB2P,GAAUjW,aAAO,EAAPA,EAASiW,UAAW,sBAC9BzP,GAAWxG,aAAO,EAAPA,EAASwG,WAAY,IAChCiZ,EAAgBve,SAASQ,cAAc,qBACvC0G,EAAa,yBACbsX,EAAgB,2BAIpB,GAAG1f,aAAO,EAAPA,EAASiG,SAAU,CAElB,IAAIA,EAAWjG,aAAO,EAAPA,EAASiG,SACS,iBAAtBjG,aAAO,EAAPA,EAASiG,YAAuBA,EAAWjG,aAAO,EAAPA,EAASiG,SAAS4B,MAAM,MAC9E,IAAI8X,EAAQ1Z,EAAS,GAAG2B,QAAQ,MAAO,IACnCgY,EAAQ3Z,EAAS,GAAG2B,QAAQ,MAAO,IAG9B,SAATgY,EAAmBA,EAAQ,UAClB,UAATA,EAAoBA,EAAQ,WACnB,OAATA,IAAiBA,EAAQ,WAGhB,OAATD,EAAiBA,EAAQ,QAChB,UAATA,EAAoBA,EAAQ,SACnB,UAATA,IAAoBA,EAAQ,OAG5BD,EAAgB,cAAcC,KAASC,G,MAGpCF,EAAgB,iBA+BvB,OA5BIxe,SAASQ,cAAc,uBACvB+d,GAAgB,aAAO,QAAQ7d,OAAO,SAAU,iGAAgG5B,aAAO,EAAPA,EAASiG,UAAW,yBAA2B,4CAItL,UAATK,EAAkB8B,EAAa,wBACjB,YAAT9B,EAAoB8B,EAAa,yBACxB,YAAT9B,IAAoB8B,EAAa,yBAG1C6O,GAAU,aAAOwI,GAAe7d,OAAO,SAAU,+FAAkEwG,KAAcsX,yCAAqDzJ,YAGtL,aAAOwJ,GAAe/S,YAAY,UAAUe,OAAO,IAAK,EAAG,SAC3D,aAAOwJ,GAASvK,YAAY,UAAUe,SAGtCW,YAAW,MACP,aAAO6I,GAASlQ,UAChBqH,YAAW,IAAM6I,EAAUA,EAAQtV,SAAW,IAAI,IAAI,GACvD6E,IAEH,aAAOyQ,GAAStM,GAAG,SAASgD,KACxB,aAAOsJ,GAASlQ,UAChBqH,YAAW,IAAM6I,EAAUA,EAAQtV,SAAW,IAAI,IAAI,IAInD/B,IACX,C,+sBCvEA,kBAGA,EAAAC,eAAeC,UAAU+f,WAAa,SAAU7f,GA+N5C,OA9MAJ,KAAKK,SAASC,IAEV,IAAI4f,EAAY9f,aAAO,EAAPA,EAAS8f,SACrBC,EAAY/f,aAAO,EAAPA,EAAS+f,SACrBnH,GAAY,aAAO1X,UAAUC,YAGjC,MAAM6e,EAAe,CAACpM,EAAOqC,EAAShQ,KAElC,IAAIga,EAAerM,EAAM/S,WACrBqQ,EAAa+O,EAAapc,UAAUqB,SAAS,mBAAqB+a,EAAapc,UAAUqB,SAAS,iBAGtG0O,EAAM/P,UAAUC,IAAI,SACpB8P,EAAM/P,UAAUlC,OAAO,WAGvB,IAAIue,EAAwB,WAAbja,GAAwB,aAAOiL,EAAa+O,EAAerM,GAAOpR,KAAK,mBAAoB,aAAO0O,EAAa+O,EAAerM,GAAOlR,KAAK,kBAGzJ,GAAIwd,EAAU,CAEV,IAAIC,EAAcD,EAASxe,cAAc,gBAGzC,GAAGye,EAEKA,EAAYze,cAAc,iBAAiBuB,cAAgBgT,GAASkK,EAAYC,OAAO,GAAGnK,UAE3F,GAAIiK,EAASjd,cAAgBgT,EAAS,CAEzC,IAAIhC,EAAWiM,EAASjd,YAGxBid,EAAS3c,UAAY,oEACX0Q,mCACJA,IAAagC,EAAU,OAAOA,SAAgB,+B,OAOxD,aAAO/E,EAAa+O,EAAerM,GAAOhS,OAAO,QAAS,2CAA2CqU,U,EAKvGoK,EAAe,CAACzM,EAAO3N,K,QAExB2N,EAAM0M,kBAAkB,IACxB1M,EAAM/P,UAAUlC,OAAO,QAAS,WAEf,UAAbsE,EACoC,QAApC,gBAAO2N,GAAOlR,KAAK,yBAAiB,SAAEf,SAEF,QAApC,gBAAOiS,GAAOpR,KAAK,yBAAiB,SAAEb,Q,EAK/C,IAAI4e,EAAgB,CAAC3M,EAAO4M,KAExB,IAAIva,EAAW2N,EAAMtT,aAAa,aAAe,QAG7CmgB,EAAW,K,QACX,IAAIP,GAAW,EACXjK,EAAUrC,EAAMtT,aAAa,gBAkEjC,OAhEAsT,EAAM/P,UAAUC,IAAI,SACpB8P,EAAM/P,UAAUlC,OAAO,WAGnBiS,EAAM8M,SAASC,cACfT,GAAW,EACNjK,IAASA,EAAqB,OAAX2C,EAAmB,0BAA4B,+BACvEhF,EAAM0M,kBAAkBrK,GACxB+J,EAAapM,EAAOqC,EAAShQ,IAIxB2N,EAAM8M,SAASE,cAAgBhN,EAAM8M,SAASG,UAAYjN,EAAM8M,SAASI,iBAC9EZ,GAAW,EACNjK,GAA0C,UAA/BrC,EAAMtT,aAAa,QAGzB2V,IACNA,EAAUrC,EAAMtT,aAAa,kBAAmBwf,aAAQ,EAARA,EAAUc,eAA2B,OAAXhI,EAAmB,6BAA+B,sCAH5H3C,EAAqB,OAAX2C,EAAmB,+BAAiC,gCAKlEhF,EAAM0M,kBAAkBrK,GACxB+J,EAAapM,EAAOqC,EAAShQ,IAIO,UAA/B2N,EAAMtT,aAAa,UAAgG,IAAzE,mDAAmDygB,KAAKnN,EAAMhQ,QAC7Gsc,GAAW,EACNjK,GAA0C,UAA/BrC,EAAMtT,aAAa,UAC/B2V,EAAqB,OAAX2C,EAAmB,+BAAiC,iCAElEhF,EAAM0M,kBAAkBrK,GACxB+J,EAAapM,EAAOqC,EAAShQ,IAIxB2N,EAAM8M,SAASM,SAAWpN,EAAM8M,SAASO,eAC9Cf,GAAW,EACNjK,IAASA,GAAU6J,aAAQ,EAARA,EAAUkB,UAAsB,OAAXpI,EAAmB,wCAA0C,4CAC1GhF,EAAM0M,kBAAkBrK,GACxB+J,EAAapM,EAAOqC,EAAShQ,IAIxB2N,EAAM8M,SAASQ,UAAYtN,EAAM8M,SAASS,gBAAkBvN,EAAM8M,SAASU,cAChFlB,GAAW,EACNjK,IAASA,EAAqB,OAAX2C,EAAmB,uCAAyC,mDACpFhF,EAAM0M,kBAAkBrK,GACxB+J,EAAapM,EAAOqC,EAAShQ,IAIxB2N,EAAM8M,SAASW,QAEpBzN,EAAM/P,UAAUlC,OAAO,SAEN,UAAbsE,EACoC,QAApC,gBAAO2N,GAAOlR,KAAK,yBAAiB,SAAEf,SAEF,QAApC,gBAAOiS,GAAOpR,KAAK,yBAAiB,SAAEb,UAK1C6e,GAAUN,GAAUM,EAAOvc,iBACxBic,CAAQ,EAIG,WAAlBtM,EAAM9C,QAAsB8C,EAAM7P,iBAAiB,SAASC,IAC5Dqc,EAAazM,EAAO3N,GACpB2N,EAAM0N,gBACNb,GAAU,IAGa,WAAlB7M,EAAM9C,SAAsB8C,EAAM7P,iBAAiB,UAAUC,IAClEqc,EAAazM,EAAO3N,GACpB2N,EAAM0N,gBACNb,GAAU,IAId7M,EAAM7P,iBAAiB,WAAWwd,GAAWd,MAG7CA,GAAU,EAIQ,QAAnBvgB,EAAQ4Q,QACP5Q,EAAQ6D,iBAAiB,UAAUyd,IAC/BthB,EAAQmB,iBAAiB,2BAA2BpB,SAAQwD,IACxD8c,EAAc9c,EAAM+d,EAAa,GACnC,IAMNjB,EAAcrgB,GAId6f,GAAYA,EAASte,OAAS,GAAGse,EAAS9f,SAAQwhB,IAElD,IAAIC,EAA+B,QAAnBxhB,EAAQ4Q,QAAoB5Q,EAAQmB,iBAAiB,UAAUogB,EAAQ9J,UAAY,CAACzX,GAChGyhB,EAAYF,EAAQA,QACpBxL,EAAYwL,EAAQxL,QACpBhQ,EAAYwb,EAAQxb,UAAY,QAGpCyb,EAAOzhB,SAAQ2T,IAEX,IAAI6M,EAAW,K,QAEPkB,EAAMZ,KAAKnN,EAAMhQ,QAEjBgQ,EAAM/P,UAAUC,IAAI,WACpB8P,EAAM/P,UAAUlC,OAAO,SAEN,UAAbsE,EACoC,QAApC,gBAAO2N,GAAOlR,KAAK,yBAAiB,SAAEf,SAEF,QAApC,gBAAOiS,GAAOpR,KAAK,yBAAiB,SAAEb,UAG1Cqe,EAAapM,EAAOqC,EAAShQ,E,EAIf,WAAlB2N,EAAM9C,QAAsB8C,EAAM7P,iBAAiB,QAAS0c,GACrC,WAAlB7M,EAAM9C,SAAsB8C,EAAM7P,iBAAiB,SAAU0c,EAAS,GACjF,GACJ,IAIC7gB,IACX,C,+ZCzMA,MAAaC,UAAuBka,MAApC,c,oBAieI,KAAApT,gBAAkB,KAEd/G,KAAKK,SAASC,I,MAEV,IAAI0hB,EAAqBC,EAAO3hB,GAC5B4hB,EAAaze,KAAKqY,MAAMkG,EAAe,GAAGlD,cAC1CqD,EAAkE,QAAlD,EAAA7gB,SAASQ,cAAc,mCAA2B,eAAEoa,wBAAwB7Q,OAEhG,GAAkB,GAAd6W,EAAiB,OAGrB,IAAI/F,EAAM1Y,KAAKqY,MAAMkG,EAAe,GAAG9F,wBAAwBC,KAC3DiG,EAAa3e,KAAKqY,MAAMqG,IAAkB,EAC1ChX,EAAY1H,KAAKqY,MAAMK,EAAIiG,EAAYA,EAAW,GACnCH,EAAO3gB,UAAU8J,WAAWC,QAAU6W,EAAa/W,GAGnD,EACf6W,EAAeja,SAAS,gBAAgB+E,YAAY,eAKpDkV,EAAeja,SAAS,eAAe+E,YAAY,e,IAIpD9M,MAIX,KAAAqiB,OAAS,CAACzI,EAAW0I,EAAYvhB,EAAewhB,EAAcC,KAE9C,QAARF,EAAeA,EAAM,OACR,OAARA,IAAcA,EAAM,UAG7B,IAAIhiB,EAAUgB,SAASQ,cAAc,IAAI8X,YAAqB,SAAR0I,EAAiB,MAAQA,KAC3EG,EAAUR,EAAO3gB,UAAU0Y,SAAS4F,SAAS5X,QAAQ,MAAO,QAC5D0a,EAAU,GAAGF,EAAeC,EAAU,KAAK1hB,IAG1CT,IAEDA,EAAUgB,SAASwY,cAAcwI,GAGjChiB,EAAQgC,aAAa,KAAM,GAAGsX,YAAqB,SAAR0I,EAAiB,MAAQA,KAGxD,WAARA,GAA4B,OAARA,GACpBhiB,EAAQgC,aAAa,MAAOogB,GAC5BpiB,EAAQgC,aAAa,QAAS,IAE9BhB,SAASsL,KAAKnH,YAAYnF,IAIb,SAARgiB,GAA0B,QAARA,IACvBhiB,EAAQgC,aAAa,OAAQogB,GAC7BpiB,EAAQgC,aAAa,MAAO,cAE5BhB,SAAS4Y,KAAKzU,YAAYnF,KAKlCA,EAAQ6D,iBAAiB,OAAQoe,GAGjCjiB,EAAQ6D,iBAAiB,SAASC,GAAS9D,EAAQgC,aAAa,MAAOogB,IAAS,EAkBpF,KAAAC,aAAgB5V,IAEZ,IAAI6V,EAAmBthB,SAASQ,cAAc,oBAGzC8gB,IAEDA,EAAethB,SAASwY,cAAc,SAEtC8I,EAAatgB,aAAa,KAAM,mBAEhChB,SAASsL,KAAKnH,YAAYmd,IAI9BX,EAAOlV,GAAShC,GAAG,SAAS3G,IACxBA,EAAMC,iBAEN,IAAImR,EAASpR,EAAME,OACfue,EAAarN,EAAO9U,aAAa,SAAW8U,EAAO9U,aAAa,cAGhEkiB,EAAaliB,aAAa,SAAWmiB,GAAeD,EAAaE,QAiBjEF,EAAatgB,aAAa,MAAOugB,GACjCD,EAAa5X,OAGTwK,EAAOvR,UAAUqB,SAAS,YAC1BkQ,EAAOvR,UAAUC,IAAI,YACrBsR,EAAOvR,UAAUlC,OAAO,YAIpByT,EAAOvR,UAAUqB,SAAS,yBAC9BkQ,EAAOvR,UAAUC,IAAI,iBACrBsR,EAAOvR,UAAUlC,OAAO,wBAI5B6gB,EAAaze,iBAAiB,SAAU4e,IAEhCvN,EAAOvR,UAAUqB,SAAS,YAC1BkQ,EAAOvR,UAAUC,IAAI,YACrBsR,EAAOvR,UAAUlC,OAAO,YAIpByT,EAAOvR,UAAUqB,SAAS,yBAC9BkQ,EAAOvR,UAAUC,IAAI,iBACrBsR,EAAOvR,UAAUlC,OAAO,uB,MAzChC6gB,EAAa3X,QAGVuK,EAAOvR,UAAUqB,SAAS,aACzBkQ,EAAOvR,UAAUlC,OAAO,YACxByT,EAAOvR,UAAUC,IAAI,YAIjBsR,EAAOvR,UAAUqB,SAAS,mBAC9BkQ,EAAOvR,UAAUlC,OAAO,iBACxByT,EAAOvR,UAAUC,IAAI,wB,IAkC9B,EAAK,CAsBhB,CAlpBI,KAAAuU,CAAM8J,GAMF,MAJ4B,aAAxBjhB,SAAS0hB,WAA2BC,eAAeV,GAElDjhB,SAAS6C,iBAAiB,oBAAoB,IAAM8e,eAAeV,IAAU,CAAEW,MAAM,IAEnFljB,IACX,CAGA,QAAA+H,CAASyS,GAEL,MAAM2I,EAAkB3I,EAAUvS,MAAM,KAClCmb,EAAmBD,EAAgBthB,OAGzC,IAAK,IAAIK,EAAI,EAAGA,EAAIlC,KAAK6B,OAAQK,IAAK,CAClC,MACM+B,EADUjE,KAAKkC,GACK+B,UAE1B,IAAK,IAAIof,EAAI,EAAGA,EAAID,EAAkBC,IAClCpf,EAAUC,IAAIif,EAAgBE,G,CAKtC,OAAOrjB,IACX,CAGA,WAAA8M,CAAY0N,GAER,MAAM8I,EAAgB,IAAIC,IAAI/I,EAAUvS,MAAM,MAQ9C,OALAjI,KAAKK,SAASC,IACVA,EAAQ2D,UAAUlC,UAAUuhB,EAAc,IAIvCtjB,IACX,CAGA,WAAAwH,CAAYgT,GAER,MAAM2I,EAAkB3I,EAAUvS,MAAM,KAGxC,IAAK,IAAI/F,EAAI,EAAGA,EAAIlC,KAAK6B,OAAQK,IAAK,CAClC,MACM+B,EADUjE,KAAKkC,GACK+B,UAGpBuf,EAAWL,EAAgBM,MAAKjJ,GAAavW,EAAUqB,SAASkV,KAGtE2I,EAAgB9iB,SAAQma,IAChBgJ,EACAvf,EAAUlC,OAAOyY,GAEjBvW,EAAUC,IAAIsW,E,IAM1B,OAAOxa,IACX,CAGA,QAAAiH,CAAS3C,GAEL,IAAIof,EAAY,GAuBhB,OApBA1jB,KAAKK,SAASC,IAEV,IAAIoM,EAAapM,EAAQW,WAGzB,GAAIqD,IAAWhE,EAAQY,QAAQ,QAE3B,KAAOwL,IAAWA,EAAOxL,QAAQ,SAAS,CAEtC,GAAIwL,EAAOxL,QAAQoD,GAAS,CAAEof,EAAUze,KAAKyH,GAAS,K,CAEjDA,EAASA,EAAOzL,U,MAKxByiB,EAAUze,KAAKyH,EAAO,IAI3BgX,EAAU7hB,OAAS,EAAU6hB,EACH,IAArBA,EAAU7hB,OAAqB6hB,EAAU,QAA7C,CACT,CAGA,QAAAte,CAASd,GAEL,IAAIc,EAAW,GAef,OAZApF,KAAKK,SAASC,IAEV,IAAIoW,EAASpW,EAAQW,WAAW0E,SAG3BrB,EAGA6V,MAAMwJ,KAAKjN,GAAQrW,SAASujB,GAAsBA,IAAUtjB,GAAWsjB,EAAM1iB,QAAQoD,GAAUc,EAASH,KAAK2e,GAAS,OAH9GzJ,MAAMwJ,KAAKjN,GAAQrW,SAASujB,GAAsBA,IAAUtjB,EAAU8E,EAASH,KAAK2e,GAAS,MAGsB,IAI7Hxe,EAASvD,OAAS,EAAIuD,EAAW,IAC5C,CAGA,IAAAtC,CAAKwB,EAASuf,GAEV,IAAIze,EAAW,GA0Cf,OAvCApF,KAAKK,SAASC,IAEV,IAAIwjB,EAAWxjB,EAAQyjB,mBAMvB,GAHKzf,GAAQc,EAASH,KAAK6e,GAGvBxf,EAEA,GAAIA,EAAOU,SAAS,MAAO,GAEvB,KAAO8e,GAECD,GAAcC,EAAS5iB,QAAQ2iB,IAAaze,EAASH,KAAK6e,GAGzDD,GAAYze,EAASH,KAAK6e,GAG/BA,EAAWA,EAASC,wBAOxB,KAAOD,GAAU,CAEb,GAAIA,EAAS5iB,QAAQoD,GAAS,CAAEc,EAASH,KAAK6e,GAAW,K,CAGpDA,EAAWA,EAASC,kB,KAOrC3e,EAASvD,OAAS,EAAUuD,EACH,IAApBA,EAASvD,OAAqBuD,EAAS,QAA3C,CACT,CAGA,IAAAxC,CAAK0B,EAASuf,GAEV,IAAIze,EAAW,GA4Cf,OAzCApF,KAAKK,SAASC,IAEV,IAAI0jB,EAAW1jB,EAAQ2jB,uBAMvB,GAHK3f,GAAQc,EAASH,KAAK+e,GAGvB1f,EAEA,GAAIA,EAAOU,SAAS,MAAO,GAEvB,KAAOgf,GAECH,GAAcG,EAAS9iB,QAAQ2iB,IAAaze,EAASH,KAAK+e,GAGzDH,GAAYze,EAASH,KAAK+e,GAG/BA,EAAWA,EAASC,4BAOxB,KAAOD,GAAU,CAEb,GAAIA,EAAS9iB,QAAQoD,GAAS,CAC1Bc,EAASH,KAAK+e,GACd,K,CAEAA,EAAWA,EAASC,sB,KAQpC7e,EAASvD,OAAS,EAAUuD,EACH,IAApBA,EAASvD,OAAqBuD,EAAS,QAA3C,CACT,CAGA,KAAAwe,CAAMtf,GAEF,IAAIoS,EAAS,GAeb,OAZA1W,KAAKK,SAASC,IAEV,IAAI4jB,EAAa5jB,EAAQqF,SAGpBrB,IAAQoS,EAASwN,GAGlB5f,GAAQ4f,EAAW7jB,SAAQC,GAAWA,EAAQY,QAAQoD,GAAUoS,EAAOzR,KAAK3E,GAAW,IAAG,IAI9FoW,EAAO7U,OAAS,EAAU6U,EACH,IAAlBA,EAAO7U,OAAqB6U,EAAO,QAAvC,CACT,CAGA,GAAAlF,CAAI5I,EAAcub,GAEd,GAAoB,IAAhBnkB,KAAK6B,OAAT,CAGIsiB,GAAankB,KAAKK,SAASC,GAAyBA,EAAQuM,gBAAgB,WAGhF,IAAK,MAAOuX,EAAKpgB,KAAUqgB,OAAOC,QAAQ1b,GAEtC5I,KAAKK,SAASC,IACVA,EAAQsI,MAAM0B,YAAY8Z,EAAKpgB,EAAM,IAK7C,OAAOhE,IAdsB,CAejC,CAGA,aAAA8O,CAAcyV,GAWV,OATAvkB,KAAKK,SAASC,IAEV+jB,OAAOG,KAAKD,GAAYlkB,SAAQokB,IAE5BnkB,EAAQgC,aAAamiB,EAAWF,EAAWE,GAAW,GACxD,IAICzkB,IACX,CAGA,MAAAgC,CAAOqE,EAAkBqe,GAErB,IAAIC,EAAc,GAqClB,OAlCA3kB,KAAKK,SAASC,IAEsB,iBAAtB,IAAgCokB,EAAkBpjB,SAASsjB,cAAcC,yBAAyBH,IAG3F,UAAbre,GACA/F,EAAQW,WAAW6jB,aAAaJ,EAAiBpkB,EAAQykB,aAEzDJ,EAAY1f,KAAK3E,EAAQyjB,qBAIP,WAAb1d,GACL/F,EAAQW,WAAW6jB,aAAaJ,EAAiBpkB,GAEjDqkB,EAAY1f,KAAK3E,EAAQ2jB,yBAIR,WAAZ5d,GACL/F,EAAQ0kB,QAAQN,GAEhBC,EAAY1f,KAAK3E,EAAQ2kB,aAIR,UAAZ5e,IACL/F,EAAQmF,YAAYif,GAEpBC,EAAY1f,KAAK3E,EAAQ4kB,W,IAK7BP,EAAY9iB,OAAS,EAAU8iB,EACH,IAAvBA,EAAY9iB,OAAqB8iB,EAAY,QAAjD,CACT,CAGA,EAAA5Z,CAAG3G,EAAOme,EAAU4C,EAAOjP,GAEvB,OAAKiP,EAUMA,GAAQnlB,KAAK6B,OAAS,EAKtB,CACH2K,SAAUxM,KACVolB,SALY9c,aAAY,IAAMtI,KAAKK,SAASC,GAAwBA,EAAQ6D,iBAAiBC,EAAOme,MAAoB,IAARrM,SAFjH,GARHlW,KAAKK,SAASC,IACVA,EAAQ6D,iBAAiBC,EAAOme,EAAS,IAItCviB,KAaf,CAGA,WAAAqlB,GA2BI,OAzBApD,EAAO,6BAA6B5hB,SAASC,IAEzC,IAAK2hB,EAAO3hB,GAAS4K,SAAU,CAE3B,IAAIoa,EAAWhlB,EAAQY,QAAQ,SAC3BqkB,EAAYjlB,EAAQI,aAAa,WAGjCJ,EAAQY,QAAQ,QAAkBZ,EAAQ2D,UAAUC,IAAI,cAGxDohB,IAAaC,EAAWjlB,EAAQgC,aAAa,UAAW,QACpDhC,EAAQY,QAAQ,QAAQZ,EAAQgC,aAAa,UAAW,QAGhEhB,SAAS6C,iBAAiB,UAAUC,IAC5B9D,EAAQY,QAAQ,QAAoB+gB,EAAO3hB,GAAS4K,OAAO,CAACI,OAAQ,QAAUhL,EAAQY,QAAQ,gBAC9FZ,EAAQ2D,UAAUlC,OAAO,cACzBzB,EAAQ2D,UAAUC,IAAI,aACzB,G,KAMNlE,IACX,CAGA,UAAAwlB,CAAWC,EAAgBC,EAAkBC,GAgBzC,MAAMC,EAAc,KAEhB,IAAIC,EAAa5D,EAAO3gB,UAAU8J,SAAS,SAGvCua,GAA8B,UAAdF,EACZI,GAAc,GACdH,IAEiB,UAAdD,GACHI,GAxBK,KAyBLH,IAKJC,GAA8B,SAAdF,EACZI,GA9BK,KA+BLH,IAEiB,SAAdD,GACHI,GAjCI,KAkCJH,IAKJC,GAA8B,UAAdF,EACZI,GAtCO,KAuCPH,IAEiB,UAAdD,GACHI,GAzCK,MA0CLH,IAKJC,GAA8B,SAAdF,EACZI,GA9CM,MA+CNH,IAEiB,SAAdD,GACHI,GAjDI,MAkDJH,IAKJC,GAA8B,UAAdF,EACZI,GAtDO,MAuDPH,IAEiB,UAAdD,GACHI,GAzDK,MA0DLH,IAKJC,GAAsC,iBAAhB,EAClBE,GAAcJ,GACdC,IAEyB,iBAAhB,GACTG,GAAcJ,GACdC,G,EAcZ,OARAE,IAGAhe,OAAOzD,iBAAiB,UAAU2hB,IAC9BF,GAAa,IAIV5lB,IACX,CA6EA,KAAA+P,CAAM5G,EAAM4c,EAAO,IACf,OAAWjgB,WAAWqD,GAAQ4c,EAAvB,KACX,CAGM,QAAAC,CAAUC,G,yCAEZ,MAAMvf,EAAO,aACPwf,EAAO,IAAIC,KAAK,CAACF,GAAO,CAAEvf,SAC1B5F,EAAO,CAAC,IAAIslB,cAAc,CAAE,CAAC1f,GAAOwf,WACpCG,UAAUC,UAAUC,MAAMzlB,EACpC,G,EAtjBJ,mBAupBA,MAAMmhB,EAAUrT,IAEZ,GAAyB,iBAAf,GAA2BA,EAAS/M,OAAS,EAAG,CAEtD,MAAM2kB,EAAWllB,SAASG,iBAAiBmN,GAE3C,OAAO,IAAI3O,KAAkBumB,E,CAI2C,CAExE,MAEMC,GAFWtM,MAAMuM,QAAQ9X,GAAYA,EAAW,CAACA,IAErB+X,QAAQrmB,GAAYA,UAEtD,OAAO,IAAIL,KAAkBwmB,E,GAKrC,UAAexE,EAGf,OACA,OACA,OACA,OACA,OACA,OACA,OAGA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAGA,OACA,OACA,OACA,OACA,OAGA,OAGApiB,EAAOD,QAAUqiB,C,+sBCruBjB,kBAIA,EAAAhiB,eAAeC,UAAU0mB,KAAO,SAAUC,IAEtC,aAAOvlB,UAAU+jB,eAGjB,aAAO,gDAAgDhlB,SAASymB,KAG5D,aAAOA,GAAMlL,aAAa,KAG9B,aAAO,cAAc7Q,GAAG,SAASgD,GAAanG,OAAO6U,SAAS,CAACN,IAAK,EAAE4K,KAAM,EAAEC,SAAU,cAGxF,aAAO,sBAAsB3mB,SAASC,IAElC,IAAI2mB,EAAcC,KAAKC,MAAM7mB,EAAQI,aAAa,qBAElD2jB,OAAOC,QAAQ2C,GAAa5mB,SAAQ,EAAEuO,EAAUxO,MAE5CE,EAAQmB,iBAAiB,IAAImN,KAAYvO,SAASwD,IAE9CwgB,OAAOC,QAAQlkB,GAASC,SAAQ,EAAEokB,EAAWzgB,KAAWH,EAAKvB,aAAa,GAAGmiB,IAAazgB,IAAO,GACnG,GACJ,KAIN,aAAO,iBAAiB3D,SAAQC,IAC5B,IAAI8mB,GAAe,aAAO9mB,GAAS8E,SAAS,QAAQ,IACpD,aAAOgiB,GAAcplB,OAAO,SAAU1B,EAAQ,KAIlD,aAAO,wBAAwBD,SAAQC,IACnC,IAAI8mB,GAAe,aAAO9mB,GAAS8E,SAAS,QAAQ,IACpD,aAAOgiB,GAAcplB,OAAO,UAAW1B,EAAQ,IAInD,MAAM+mB,EAAc/lB,SAASQ,cAAc,gBACrCwlB,EAAgBhmB,SAASQ,cAAc,kBAGzCulB,GAAeC,GAAeA,EAActC,QAAQqC,IAGpD/lB,SAASQ,cAAc,iBAAmBR,SAASQ,cAAc,qBAEjE,aAAOR,UAAUqhB,aAAa,uCAIlC,aAAO,2CAA2ChG,OAAO,CAAC9D,KAAM,KAGhE,aAAO,wCAAwCtK,UAG/C,aAAO,YAAY4G,QAGnB,aAAO,aAAanI,SAGpB,aAAO,oBAAoB3M,SAAS+P,IAC3BA,EAAOtO,cAAc,YAAW,aAAOsO,GAAQpO,OAAO,UAAW,6BAA6BoO,EAAO1P,aAAa,qBAAuB,uBAC9I,aAAO0P,GAAQA,QAAQ,KAI3B,aAAO,mCAAmC/P,SAASC,IAE/C,IAAIoM,GAAa,aAAOpM,GAAS2G,SAAS,kBACtCsgB,EAAajnB,EAAQ2D,UACT3D,EAAQoV,WAGfrV,SAASujB,IACdlX,EAAOjH,YAAYme,GAEnB2D,EAAWlnB,SAASma,GAAqBoJ,EAAM3f,UAAUC,IAAIsW,IAAW,IAI5Ela,EAAQyB,QAAQ,KAIpB,aAAO,iBAAiB1B,SAASkL,IAE7B,MAAMqO,EAAKrO,EAAK7K,aAAa,MACvB8mB,EAAYlmB,SAASQ,cAAc,QAAQ8X,MAEjD,aAAO4N,GAAWxlB,OAAO,SAAUuJ,EAAK,KAI5C,aAAO,kBAAkBA,QAGzB,aAAO,aAAahD,WAAW,CAACI,aAAa,KAG7C,aAAO,gBAAgBgP,YAGvB,aAAO,gBAAgB5R,YAGvB,aAAO,gBAAgBgJ,SAAS,CAACpG,aAAa,KAG9C,aAAO,uDAAuD0R,SAAS,CACnEC,SAAU,EACV5N,OAAU,gBACVpI,OAAU,wBAId,aAAO,oDAAoDoU,WAAW,CAACe,WAAY,CAAC,UAGpF,aAAO,aAAavD,MAAM,CAACxP,KAAM,cAGjC,IAA4D+gB,EAAxDC,EAAcpmB,SAASQ,cAAc,kBACrC6lB,EAAermB,SAASQ,cAAc,0BAG1C,GAAI4lB,GAAeC,EAAc,CAE7B,IAAIC,EAAYF,EAAYjmB,iBAAiB,cAE7CkmB,EAAahkB,UAAY,GAEzBikB,EAAUvnB,SAAQ,CAACC,EAAqByE,KAEpC,IACI8iB,EAAW,2CAA2C9iB,6BAD9CzE,EAAQ+C,uBAOpB,GAHA/C,EAAQgC,aAAa,KAAM,WAAWyC,KAGlCzE,EAAQY,QAAQ,MAAe,CAE/B,IAAI4mB,EAAYH,EAAa7lB,cAAc,iBACvCimB,GAAYD,aAAS,EAATA,EAAWhmB,cAAc,QAAS6lB,GAE7CI,GAAaD,IAAWC,GAAY,aAAOD,GAAW9lB,OAAO,SAAU,oDAG5E,aAAO+lB,GAAW/lB,OAAO,SAAU6lB,E,MAGlC,aAAOF,GAAc3lB,OAAO,SAAU6lB,GAG3CJ,EAAannB,CAAO,G,EAK5B,aAAO,mBAAmBwc,aAG1B,aAAOxb,UAAU0mB,YAYjB,MAAMC,GAAe,aAAO,gBAExBA,EAAapmB,OAAS,IAEtB,aAAOP,UAAU+gB,OAAO,cAAe,SAAU,kBAAkB,MAE/D,aAAO/gB,UAAU+gB,OAAO,cAAe,OAAQ,mBAAmB,SAAQ,GAG1E4F,EAAa5nB,SAASkO,IAElB,IAAI2Z,GAAiB,aAAO5mB,UAAUC,YAGtC4mB,WAAWC,OAAO7Z,EAAQ,CACtB8Z,KAAM,EACNC,SAAS,EACTC,UAAS,EACTtlB,MAAO,CAAC,IAAK,KACb1B,UAAW2mB,EACXM,MAAO,CAAC,IAAO,GAAG,IAAO,OAI7B,IAAIC,EAAYla,EAAOzM,cAAc,oBACjC4mB,EAAYna,EAAOzM,cAAc,oBAErCyM,EAAO4Z,WAAWpd,GAAG,UAAU,SAAU4d,EAAQC,GACzCA,EAASF,EAAU1kB,MAAQ2kB,EAAOC,GAChCH,EAAUzkB,MAAQ2kB,EAAOC,EACnC,IAGAH,EAAUtkB,iBAAiB,UAAUC,IACjC,IAAIykB,EAASH,EAAU1kB,MACnB8kB,EAASL,EAAUzkB,MACnBuK,EAAO4Z,WAAWY,IAAI,CAACtoB,SAASqoB,GAAQroB,SAASooB,IAAS,IAGlEH,EAAUvkB,iBAAiB,UAAUC,IACjC,IAAIykB,EAASH,EAAU1kB,MACnB8kB,EAASL,EAAUzkB,MACnBuK,EAAO4Z,WAAWY,IAAI,CAACtoB,SAASqoB,GAAQroB,SAASooB,IAAS,GAChE,GACJ,IACH,EAEX,C,+sBCvOA,kBAKA,EAAA5oB,eAAeC,UAAUqO,OAAS,SAAUnO,GAyBxC,MAAM4oB,EAAiB,IAAMhpB,KAAKK,SAASkO,IA0NvC,IAAI0a,OAAO1a,EA1LY,CAACA,I,UAEpB,IAAI2a,EAAiB3a,EAAOtK,UACxBgC,EAASC,GAAsC,SAA9BqI,EAAO7N,aAAawF,IAAwD,UAA9BqI,EAAO7N,aAAawF,IAA4BqI,EAAO7N,aAAawF,GAGvI,GAAIgjB,EAAe5jB,SAAS,WAAa4jB,EAAe5jB,SAAS,kBAAmB,OAGpF,MAAM6jB,EAAOljB,EAAO,eAAgB7F,aAAO,EAAPA,EAAS+oB,MACvCC,EAAanjB,EAAO,eAAgB7F,aAAO,EAAPA,EAASipB,MAC7Cxf,EAAW5D,EAAO,mBAAoB7F,aAAO,EAAPA,EAASyJ,UAC/ChH,EAAaoD,EAAO,qBAAsB7F,aAAO,EAAPA,EAASyC,YACnDymB,EAAarjB,EAAO,qBAAsB7F,aAAO,EAAPA,EAASkpB,YACnDC,EAA+C,UAA5BtjB,EAAO,mBAAsD,KAAtB7F,aAAO,EAAPA,EAAS2J,WAAsBmf,EAAe5jB,SAAS,qBAGjHkkB,EAAqB,CAEvBC,MAAM,EACNC,kBAAkB,EAClBzf,KAAMhE,EAAO,eAAgB,EAC7B0jB,aAAavpB,aAAO,EAAPA,EAASupB,cAAe,CAAC,EACtCpoB,UAAW0E,EAAO,oBAAqB7F,aAAO,EAAPA,EAASmB,YAAa,KAC7DqoB,eAAgBrb,EAAO7N,aAAa,kBAAoB,OAAmBD,SAASwF,EAAO,kBAAkB7F,aAAO,EAAPA,EAASI,QAAS,EAC/HqpB,kBAAgB5jB,EAAO,iBAAkBijB,EAAe5jB,SAAS,oBAA2B,KAG5FwkB,OAAQ7jB,EAAO,iBAAkB7F,aAAO,EAAPA,EAAS0pB,SAAU,KAGpDnnB,WAAYkH,EAAW,CAACkgB,OAAQ,sBAAuBC,OAAQ,uBAAyB,KACxFnnB,WAAYA,EAAa,CAAC6D,KAAM,UAAWujB,GAAI,qBAAsBC,WAAW,GAAQ,KAGxFC,MAAO1pB,SAASwF,EAAO,iBAAkB7F,aAAO,EAAPA,EAAS+pB,QAAS,IAC3D1jB,QAA2B,QAAnB,EAAAR,EAAO,oBAAY,eAAE+B,QAAQ,OAAQ,YAAyB,QAAb,EAAA5H,aAAO,EAAPA,EAASsG,YAAI,eAAEsB,QAAQ,OAAQ,WAAY,KAGpG+B,UAAUwf,GAA2B,CACjCa,sBAAsB,EACtB5jB,MAAwC,QAAjC,EAAA/F,SAASwF,EAAO,yBAAiB,QAAI7F,aAAO,EAAPA,EAASwG,SACrDyjB,kBAAmBpkB,EAAO,sBAAuB7F,aAAO,EAAPA,EAASkqB,gBAAgB,EAC1EC,iBAAkBtkB,EAAO,2BAA4B7F,aAAO,EAAPA,EAASmqB,oBAAoB,GAKtFnb,MAAOnJ,EAAO,gBAAiB7F,aAAO,EAAPA,EAASgP,QAAS,KACjD/D,OAAQpF,EAAO,iBAAkB7F,aAAO,EAAPA,EAASiL,SAAU,KACpDmf,WAAYvkB,EAAO,qBAAsB7F,aAAO,EAAPA,EAASoqB,aAAc,KAGhEC,OAAQrB,EAAa,CAACsB,OAAQtB,GAAc,KAC5CE,WAAYA,EAAa,CAACqB,GAAI,QAASC,QAAStB,GAAc,KAG9DH,KAAMA,EAAO,CACT0B,SAAU,EACVC,eAAgB,YAChB,KAGJC,SAAU,CAACC,SAAS,GAGpBjgB,GAAI,CAEA6b,KAAOxiB,I,MAEH,MAAMkK,EAAiBlK,EAAM6mB,UAEuB,QAApD,EAAA3c,EAAexM,cAAc,+BAAuB,SAAEmC,UAAUC,IAAI,aAtGzD,CAACqK,IAExB,MAAM2c,EAAiB3c,EAAO9M,iBAAiB,eAC/C,aAAOypB,GAAgB3iB,aAGvBgG,EAAO9M,iBAAiB,6CAA6CpB,SAAQ8qB,KACrE,aAAOA,GAAOjgB,WAEVigB,EAAMzqB,aAAa,aACnB,aAAOyqB,GAAO5iB,aAEd4iB,EAAM7oB,aAAa,MAAO6oB,EAAMzqB,aAAa,kBAGjDyqB,EAAMlnB,UAAUlC,OAAO,aACvBopB,EAAMlnB,UAAUlC,OAAO,c,IAKTwM,EAAO9M,iBAAiB,8BAC5BI,OAAS,IAAG,aAAO,aAAamL,QAG5BuB,EAAOzM,cAAc,wBACxB,aAAOR,UAAUqhB,aAAa,qBAAqB,EA8E1DyI,CAAmB9c,EAAe,EAQtC+c,YAAcjnB,I,QAEV,MAAMkK,EAAiBlK,EAAM6mB,UAEa,QAA1C,EAAA3c,EAAexM,cAAc,qBAAa,SAAEmC,UAAUlC,OAAO,aAET,QAApD,EAAAuM,EAAexM,cAAc,+BAAuB,SAAEmC,UAAUC,IAAI,YAAY,IAMxFslB,EAAeK,gBACfzK,QAAQkM,IAAI9B,EAAevf,MAI/BhE,EAAO,aAAaujB,EAAeG,YAAY,KAAO,CAElDC,cAAenpB,SAASwF,EAAO,aAAeujB,EAAeI,gBAIjE3jB,EAAO,aAAaujB,EAAeG,YAAY,MAAQ,CACnDC,cAAenpB,SAASwF,EAAO,aAAeujB,EAAeI,gBAIjE3jB,EAAO,aAAaujB,EAAeG,YAAY,MAAQ,CACnDC,cAAenpB,SAASwF,EAAO,aAAeujB,EAAeI,gBAIjE3jB,EAAO,aAAaujB,EAAeG,YAAY,MAAQ,CACnDC,cAAenpB,SAASwF,EAAO,aAAeujB,EAAeI,gBAIjE,IAAI2B,EAAiBjqB,SAASwY,cAAc,OACxC0R,EAAiBjd,EAAO5I,SAgB5B,GAbAwU,MAAMwJ,KAAK6H,GAAgBnrB,SAASorB,IAChCA,EAAMxnB,UAAUC,IAAI,gBACpBqnB,EAAe9lB,YAAYgmB,EAAM,IAIrCvC,EAAehlB,IAAI,UACnBqnB,EAAejpB,aAAa,QAAS,kBAGrCiM,EAAO9I,YAAY8lB,GAGf1hB,EAAU,CACV,IAAI6hB,EAAqBpqB,SAASwY,cAAc,OAC5C6R,EAAarqB,SAASwY,cAAc,UACpC8R,EAAatqB,SAASwY,cAAc,UAGxC4R,EAAmBppB,aAAa,QAAS,uCAA4D,iBAAf,GAAwC,MAAbuH,EAAmBA,EAAW,qFAC/I8hB,EAAWrpB,aAAa,QAAS,kEAAiE,aAAOhB,UAAUC,UAAU,UAAU0E,EAAO,gBAAiB7F,aAAO,EAAPA,EAASuL,QAAS,8BACjLigB,EAAWtpB,aAAa,QAAS,mEAAkE,aAAOhB,UAAUC,UAAU,YAAY0E,EAAO,gBAAiB7F,aAAO,EAAPA,EAASuL,QAAS,8BAGpL+f,EAAmBjmB,YAAYmmB,GAC/BF,EAAmBjmB,YAAYkmB,GAC/Bpd,EAAO9I,YAAYimB,E,CAIvB,GAAI7oB,EAAY,CACZ,IAAIgpB,EAAqBvqB,SAASwY,cAAc,OAChD+R,EAAmBvpB,aAAa,QAAS,2DAAkF,iBAAjB,GAA4C,MAAfO,EAAqBA,EAAa,4CAIzK0L,EAAO9I,YAAYomB,E,CAIvB,MAAMC,EAAoB,CAAC,EAkB3B,OAjBAzH,OAAOC,QAAQkF,GAAgBnpB,SAAQ,EAAE+jB,EAAKpgB,MAEhC,OAAVA,IAAiB8nB,EAAc1H,GAAOpgB,EAAY,IAIlD6B,MAAMimB,EAAc/hB,SAASvD,SAAQslB,EAAc/hB,SAASvD,MAAQ,KAG3C,SAAzBslB,EAAcrlB,SAEdqlB,EAAc7hB,MAAO,EAErB6hB,EAAcC,WAAa,CAACC,WAAW,IAIpCF,CAAa,EAILG,CAAe1d,GAAQ,IAiC9C,OAdKjN,SAASQ,cAAc,0BAA4B9B,KAAK6B,OAAS,IAElE,aAAOP,UAAU+gB,OAAO,SAAU,OAAQ,cAAc,SAAU,IAGlE,aAAO/gB,UAAU+gB,OAAO,SAAU,SAAU,oBAAoB,KAC5D2G,GAAgB,IACjB,IAGHA,IAIGhpB,IACX,C,+sBC1RA,kBAMA,EAAAC,eAAeC,UAAU8nB,UAAY,SAAU5nB,GAI3C,IAAIsG,GAAOtG,aAAO,EAAPA,EAASsG,OAAQ,MAmH5B,IAhHIA,EAAK1B,SAAS,SAAoB,QAAT0B,MAEzB,aAAO,iBAAiBrG,SAASuqB,IAE7B,IAAIjY,EAASiY,EAAQlqB,aAAa,gBAElC,aAAOkqB,GAAS7f,GAAG,SAAS3G,GAASwmB,EAAQ/d,gBAAgB,kBAE7D,aAAO+d,GAAS7f,GAAG,QAAQ3G,GAASwmB,EAAQtoB,aAAa,cAAeqQ,IAAQ,KAIpF,aAAO,sBAAsBtS,SAAS6rB,IAElC,IAAI/iB,EAAO+iB,EAAKxrB,aAAa,cAAgB,GAG7CwrB,EAAKzqB,iBAAiB,2BAA2BpB,SAAQuX,IAE1CA,EAAUlX,aAAa,QAE7BkX,EAAU1W,QAAQ,SACsC0W,EAAU3T,UAAUC,IAAI,eAAgBiF,EAAU,GACjH,KAIN,aAAO,qBAAqB9I,SAAS8rB,IAEjC,MAAMC,EAAWD,EAAmBrqB,cAAc,oBAC5CuqB,EAAaF,EAAmBzrB,aAAa,mBAC7C4rB,EAAaH,EAAmBrqB,cAAc,sBAC9CyqB,EAAeD,EAAWxqB,cAAc,mBAG1CyqB,EAAa7rB,aAAa,kBAAkB6rB,EAAajqB,aAAa,gBAAiB,KAG3FiqB,EAAa9qB,iBAAiB,UAAUpB,SAASC,IAE7C,IAAIyX,EAAOzX,EAAQI,aAAa,QAEhCJ,EAAQgC,aAAa,qBAAsByV,GAE3CzX,EAAQgC,aAAa,OAAQ,GAAG+pB,KAAcE,EAAa7rB,aAAa,qBAAqBqX,KAAQ,IAIzG,MAAMyU,EAAqBC,IAEvB,MAAMC,EAAmBD,EAAahnB,YAAY2mB,EAAQO,WAAU,IAOpE,GAJAD,EAAiBzoB,UAAUlC,OAAO,UAAW,OAAQ,QAAS,QAAS,UACvE2qB,EAAiBzoB,UAAUC,IAAI,WAAY,SAAU,sBAGjDuoB,EAAa3qB,cAAc,iBAAkB,CAC7C,IAAIylB,EAAakF,EAAa3qB,cAAc,iBAAiBmC,UACjD,CAAC,OAAQ,QAAS,QAAS,UACjCwf,MAAKta,GAAQoe,EAAWjiB,SAAS6D,GAAQujB,EAAiBzoB,UAAUC,IAAIiF,GAAQ,I,CAI1FujB,EAAiBvoB,iBAAiB,SAAUC,IAAc,aAAOA,EAAME,QAAQ2C,SAAS,4BAA4BlF,UAAS,EAIjIqqB,EAAQjoB,iBAAiB,SAAUC,IAE/B,MAAMwoB,EAAcN,EAAW7mB,YAAY8mB,EAAaI,WAAU,IAC5DE,EAAcP,EAAW7qB,iBAAiB,mBAAmBI,OAAO,EAG1E+qB,EAAOtqB,aAAa,gBAAiBuqB,GAGrCD,EAAOnrB,iBAAiB,UAAUpB,SAASC,IAEvC,IAAIyX,EAAOzX,EAAQI,aAAa,sBAGhCJ,EAAQgC,aAAa,OAAQ,GAAG+pB,KAAcQ,MAAgB9U,MAG1DzX,EAAQ0D,QAAO1D,EAAQ0D,MAAQ,IACX,aAApB1D,EAAQ4Q,UAAwB5Q,EAAQqD,UAAY,IAGhC,WAApBrD,EAAQ4Q,UACR5Q,EAAQmB,iBAAiB,cAAcpB,SAAQsR,GAAUA,EAAO9E,gBAAgB,cAE5EvM,EAAQ2D,UAAUqB,SAAS,eAAc,aAAOhF,GAAS8Q,gB,IAKrEob,EAAkBI,EAAO,IAI7BtkB,aAAY,KAER,IAAItF,EAAOmpB,EAAmB1qB,iBAAiB,4CAG3CuB,GAAMA,EAAK3C,SAAQ+B,GAAQA,EAAIN,cAAc,uBAAkD,GAAzB0qB,EAAkBpqB,IAAU,GACvG,IAAK,KAKZsE,EAAK1B,SAAS,UAAqB,QAAT0B,EAAgB,EAE1C,aAAO,gBAAgBqE,GAAG,SAAS0B,IAE/BA,EAAMpI,iBAEN,IAAI0I,EAAUN,EAAMnI,OAChBA,EAAUyI,EAAQrM,aAAa,iBAA4B,EAC3DosB,EAAW/f,EAAQrM,aAAa,iBAG/BosB,GAAyB,aAAbA,EAEK,YAAbA,GACL,aAAO/f,GAAS3H,SAASd,GAAQjE,SAAQgF,GAAWA,EAAStD,WAGvBT,SAASQ,cAAcwC,GAAQvC,UAN/B,aAAOgL,GAAS9F,SAAS3C,GAAQvC,QAQtE,KAIT,aAAO,eAAe1B,SAASC,IAE3B,MAAMysB,EAAUzsB,EAAQ+C,YAAY2pB,MAAM,QACpCC,EAAa3sB,EAAQ+C,YAAY2E,QAAQ,GAAG+kB,IAAW,IAG7DzsB,EAAQgC,aAAa,aAAc,GAAGyqB,KACnCE,IAAe3sB,EAAQI,aAAa,gBAAgBJ,EAAQgC,aAAa,cAAe,GAAG2qB,MAG9F,aAAOrlB,QAAQmD,GAAG,UAAUmiB,KAEpB,aAAO5sB,GAAS4K,WAAa5K,EAAQ2D,UAAUqB,SAAS,cAAa,aAAOhF,GAASsa,SAAS,GACpG,IAIN,IAAIuS,EAAY7rB,SAASQ,cAAc,gCAClCqrB,IAAWA,EAAY7rB,SAASQ,cAAc,qBAC/CqrB,IAAcA,EAAUvT,KAAIuT,EAAUvT,GAAK,c,CAwHnD,IApHIlT,EAAK1B,SAAS,SAAoB,QAAT0B,KAEzB,aAAO,2CAA2CrG,SAASC,IAEvD,MAAM8sB,EAAiB,CAACpe,EAAeqe,KACnC,IAAIC,EAAMte,EAAMge,MAAM,QAAQO,IAAIC,QAElC,OADIF,EAAIzrB,OAAS,GAAGyrB,EAAIna,SAASma,EAAIzrB,OAAS,IACvCyrB,EAAIC,KAAIE,GAAKhqB,KAAKoM,IAAI,EAAGpM,KAAK8X,IAAI,IAAKkS,EAAIJ,MAAUrW,KAAK,KAAK,EAIpE0W,EAAiB1e,IAEnB,IAAI2e,EAAM3e,EAAM/G,MAAM,KAKtB,OAFiB,KAFTxH,SAASktB,EAAI,IAEQ,KAFCltB,SAASktB,EAAI,IAEF,KAFWltB,SAASktB,EAAI,KAEX,GAEtC,EAIpB,IAAIC,EAAUhmB,OAAOsV,iBAAiB5c,GAASoK,gBAC3CmjB,EAAUjmB,OAAOsV,iBAAiB5c,GAASuI,gBAC3CilB,EAAgB,QAChBC,EAAiB,cAGrB,GAAIF,GAAWA,EAAQ7oB,SAAS,aAAe6oB,EAAQb,MAAM,qBAAsB,CAE/E,IAAIgB,EAAS,GAGbH,EAAQb,MAAM,qCAAqC3sB,SAAS2O,IACxDgf,EAAO/oB,KAAK+J,EAAMhH,QAAQ,MAAO,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAI,IAI3E,MAAMimB,EAAWP,EAAcM,EAAOA,EAAOnsB,OAAS,IAClDqsB,EAAWR,EAAcM,EAAO,IAGpCF,EAAaV,EAAea,EAAWC,EAAWF,EAAOA,EAAOnsB,OAAS,GAAKmsB,EAAO,IAAK,IAC1FD,EAAaX,EAAea,EAAWC,EAAWF,EAAOA,EAAOnsB,OAAS,GAAKmsB,EAAO,GAAI,G,MAIpFJ,IAELE,EAAYV,EAAeQ,GAAU,IAErCG,EAAaX,EAAeQ,EAAS,KAIzCttB,EAAQsI,MAAM0B,YAAY,sBAAuBwjB,GACjDxtB,EAAQsI,MAAM0B,YAAY,uBAAwByjB,EAAW,KAKjErnB,EAAK1B,SAAS,UAAqB,QAAT0B,KAAgB,aAAO,eAAerG,SAASiU,IACzE,GAAIA,EAAK5T,aAAa,aAAc,CAChC,IAAI4P,EAAUgE,EAAK5T,aAAa,aAAauH,MAAM,MAAQ,GAC3DqM,EAAK7S,iBAAiB,MAAMpB,SAAQwD,GAAQA,EAAKI,UAAUC,OAAOoM,I,KAKtE5J,EAAK1B,SAAS,iBACd,aAAO1D,UAAUyJ,GAAG,eAAeojB,GAAcA,EAAW9pB,oBAC5D,aAAO/C,UAAUyJ,GAAG,eAAeqjB,GAAcA,EAAW/pB,qBAI5DqC,EAAK1B,SAAS,QAAmB,QAAT0B,KAETpF,SAASQ,cAAc,QACxB,aAAO,QAAQE,OAAO,UAAW,sBAAsBV,SAASyU,cAG9EvH,YAAW,MACP,aAAO,OAAOnO,SAASguB,IAEnB,IAAIC,EAAYD,EAAI3tB,aAAa,UAAY2tB,EAAIzlB,MAAMwG,OAASif,EAAIpe,YAChEse,EAAaF,EAAI3tB,aAAa,WAAa2tB,EAAIzlB,MAAMyC,QAAUgjB,EAAIvP,aACnE0P,EAAeH,EAAIptB,WAAWgP,YAC9Bwe,GAAgB,aAAOJ,EAAIptB,YAAYoK,UAGtCijB,GAAaE,EAAe,GAAIH,EAAI/rB,aAAa,QAAS,GAAGksB,MAC7DD,GAAcE,EAAgB,GAAGJ,EAAI/rB,aAAa,SAAU,GAAGmsB,KAG/DJ,EAAI3tB,aAAa,QAAsC,KAA5B2tB,EAAI3tB,aAAa,QAC7C2tB,EAAI/rB,aAAa,MAAO+rB,EAAIrlB,IAAIuW,UAAU8O,EAAIrlB,IAAIwW,YAAY,KAAK,G,GAEzE,GACH,MAGH,aAAO,wFAAwFnf,SAASymB,I,UAEpG,IAAIb,EAAOa,EAAKpmB,aAAa,eAAiB,GAGIulB,GAA7Ca,EAAKhlB,cAAc,MAAQglB,EAAKzjB,YAAoByjB,EAAKzjB,YAAYqrB,QACtC,QAAxB,EAAA5H,EAAKhlB,cAAc,aAAK,eAAEuB,eAAuC,QAAxB,EAAAyjB,EAAKhlB,cAAc,aAAK,eAAEuB,eAAuC,QAAxB,EAAAyjB,EAAKhlB,cAAc,aAAK,eAAEuB,cAAe,GAGlIyjB,EAAKpmB,aAAa,UAA2C,KAA/BomB,EAAKpmB,aAAa,UAAiBomB,EAAKxkB,aAAa,QAAS2jB,GAC5Fa,EAAKpmB,aAAa,eAAqD,KAApComB,EAAKpmB,aAAa,eAAsBomB,EAAKxkB,aAAa,aAAc2jB,EAAK,KAKzHvf,EAAK1B,SAAS,cAAyB,QAAT0B,EAAgB,CAE9C,MAAMioB,EAAmBrtB,SAASsL,KAAKlM,aAAa,SAE/CY,SAASsL,KAAK3I,UAAUqB,SAAS,cAAgBqpB,aAAgB,EAAhBA,EAAkB3pB,SAAS,cAE1E1D,SAASQ,cAAc,iBAAgB,aAAOR,UAAU+gB,OAAO,UAAW,SAAU,kBAAkB,MACrG,aAAO,eAAehiB,SAASuuB,IAC3B,IAAIC,EAAoBD,EAAKjpB,SAAS,GAAG1B,UAAU,GACrC,IAAI6qB,QAAQF,EAAM,CAACG,aAAc,IAAIF,KAAqB,GAC1E,IACH,GAGAvtB,SAASQ,cAAc,kBAEtB,aAAO,eAAezB,SAAS2uB,IAE3B,MAAMC,EAAkB,GACxBD,EAAUvtB,iBAAiB,MAAMpB,SAAQwD,GAAQorB,EAAgBhqB,KAAKpB,EAAKR,eAG3E,MAAM6rB,EAAe5tB,SAASwY,cAAc,KAC5CoV,EAAajrB,UAAUC,IAAI,cAG3BgrB,EAAa7rB,YAAc4rB,EAAgB,GAC3CA,EAAgB5uB,SAAQ,CAACwD,EAAMkB,IAAUmqB,EAAa5sB,aAAa,aAAayC,IAASlB,KAGzFmrB,EAAU/qB,UAAU5D,SAAQwD,GAASA,EAAKmB,SAAS,QAA6C,KAAnCkqB,EAAajrB,UAAUC,IAAIL,MAGxF,aAAOmrB,GAAWhtB,OAAO,SAAUktB,EAAa,KAIpD,aAAO5tB,UAAU+gB,OAAO,WAAY,SAAU,iBAAkB8M,IAAY,aAAO,eAAe9uB,SAAS+uB,IAEvG,IAAI5uB,EAAQ,GAGZ,IAAK,IAAI0B,EAAI,EAAGA,EAAI,GAAIA,IACjBktB,EAAW1uB,aAAa,aAAawB,MAAQ1B,EAAMyE,KAAKmqB,EAAW1uB,aAAa,aAAawB,MAIpGktB,EAAWxmB,MAAMyC,QAAS,aAAO/J,UAAUyO,OAAM,aAAOqf,GAAY/jB,UACpEgkB,eAAeD,EAAY,CAAC5uB,MAAOA,EAAO8uB,QAAQ,EAAOC,WAAY,KAAK,MAC1E,KAILjuB,SAASQ,cAAc,gBAAkBR,SAASQ,cAAc,0BAE/D,aAAOR,UAAU+gB,OAAO,aAAc,SAAU,cAAe8M,KAE3D,aAAO,oCAAoC9uB,SAAQ,CAACmvB,EAAqBzqB,KAErE,MAAM0qB,EAAiBnuB,SAASwY,cAAc,OACxC4V,EAAiBpuB,SAASwY,cAAc,OAGxC6V,EAAa,cAAc5qB,IACjCyqB,EAAQ5mB,MAAMrH,UAAY,MAC1BiuB,EAAQltB,aAAa,KAAMqtB,GAGvBH,EAAQ9uB,aAAa,eAAe8uB,EAAQltB,aAAa,aAAc,MAG3EmtB,EAAexrB,UAAUC,IAAI,yBAAyB,eAAgB,eACtEwrB,EAAezrB,UAAUC,IAAI,gCAAiC,eAAgB,eAC9EurB,EAAehqB,YAAYiqB,GAG3BF,EAAQ/tB,iBAAiB,cAAcpB,SAASwD,IAE5CA,EAAK+E,MAAMrH,WAAY,aAAOD,UAAUC,YACxCsC,EAAKI,UAAUC,IAAI,wBAGnBwrB,EAAejqB,YAAY5B,EAAK8oB,WAAU,IAG1C9oB,EAAK9B,QAAQ,IAIjBytB,EAAQ/pB,YAAYgqB,GAGpBG,kBAAkBD,EAAY,CAC1BE,iBAAgB,EAChBC,IAAKN,EAAQvrB,UAAUqB,SAAS,sBAAwB,OAAS,QACjEyqB,aAAaP,EAAQ9uB,aAAa,eAAwD,UAAvC8uB,EAAQ9uB,aAAa,eAC1E,GACJ,IACH,G,CAMf,OAAOV,IACX,C,2JCvYA,mBAMA,aAAOsB,UAAUyJ,GAAG,oBAAqBilB,IAwIrC,SAASC,EAAsBC,EAAUC,GAErCC,MAAMC,sBAAsBC,YAAYtoB,QAAQ,eAAgB,oBAAqB,CACjFuoB,OAAQ,OACRC,QAAS,CAAC,eAAgB,oDAC1B5jB,KAAMsjB,EAASzrB,aAGlBgsB,MAAKC,GAAYA,EAASC,SAAQF,MAAK3vB,IAEhCA,EAAK8vB,WAELtvB,SAASG,iBAAiB,kCAAkC0uB,OAAiB9vB,SAAQwD,GAAQA,EAAK9B,WAGlGT,SAASsL,KAAKkB,cAAc,IAAI8C,YAAY,mBAAoB,CAAEC,OAAQ/P,MAG1E,aAAOQ,UAAUue,cAAc,CAC3BjZ,SAAW,IACXF,KAAW,UACXL,SAAW,CAAC,SAAU,OACtBgQ,QAAW,6CAIVvV,EAAK+vB,QAEV,aAAOvvB,UAAUue,cAAc,CAC3BjZ,SAAW,IACXF,KAAW,QACXL,SAAW,CAAC,SAAU,OACtBgQ,QAAW,6BAA+BvV,EAAKuV,S,IAK1Dya,OAAMD,IACHzR,QAAQyR,MAAM,iCAAkCA,EAAM,GAE9D,CA9KAvvB,SAASsL,KAAKzI,iBAAiB,oBAAoB,WAE/CisB,MAAMC,sBAAsBC,YAAYtoB,QAAQ,eAAgB,2BAA4B,CACxFuoB,OAAQ,OACRC,QAAS,CAAC,eAAgB,sDAG7BC,MAAKC,GAAYA,EAASC,SAAQF,MAAK3vB,IAEpC,GAAIA,GAAQA,EAAK8vB,UAAW,CAExB,MAAMG,EAAiBjwB,EAAK8vB,UAAU,oCAGhCI,EAAU1vB,SAASwY,cAAc,OACvCkX,EAAQrtB,UAAYotB,EACpBC,EAAQrtB,WAAa7C,EAAK8vB,UAAU,gBAGpC,aAAO,6CAA6CvwB,SAAQ4wB,GAAQA,EAAKttB,UAAYqtB,EAAQlvB,cAAc,iCAAiC6B,aAG5I,aAAO,0BAA0BtD,SAAQ6wB,GAASA,EAAMvtB,UAAY7C,EAAK8vB,UAAU,iBAGnF,MAAMO,EAAaH,EAAQvvB,iBAAiB,cAAgBuvB,EAAQvvB,iBAAiB,cAAcI,OAAS,GAC5G,aAAO,kCAAkCxB,SAAQ+wB,GAAcA,EAAWztB,UAAYwtB,KAGtF,aAAO,iCAAiCpmB,GAAG,SAAUgD,IAEjDA,EAAU1J,iBACV,MAAMmR,EAASzH,EAAUzJ,OAGnB6rB,EAAc3a,EAAO9U,aAAa,uBAGxC,aAAO8U,GAAQvO,SAAS,cAAchD,UAAUC,IAAI,qBAGpD,MAAMgsB,EAAW,IAAImB,gBACrBnB,EAAS1P,OAAO,gBAAiB2P,GACjCD,EAAS1P,OAAO,SAAU,gCAG1ByP,EAAqBC,EAAUC,EAAY,IAC5C,E,KAIVW,OAAMD,GAASzR,QAAQyR,MAAM,SAAUA,IAC5C,KA6HA,aAAO,oBAAoB9lB,GAAG,SAASgD,IAEnCA,EAAU1J,iBAEV,MAAMmR,EAASzH,EAAUzJ,OACnBgtB,EAAY9b,EAAO9U,aAAa,gBAGtC8U,EAAOvR,UAAUC,IAAI,qBAnIzB,SAA0BsR,EAAQ+b,G,UAE9B,IAAIC,GAA+F,QAApF,EAAkD,QAAlD,gBAAOhc,GAAQvO,SAAS,kCAA0B,eAAEnF,cAAc,0BAAkB,eAAEkC,QAASvD,SAAS+U,EAAO9U,aAAa,mBAAqB,EAG3JyZ,MAAMuM,QAAQ6K,KAAcA,EAAc,CAACA,IAGhDA,EAAcA,EAAY5K,QAAO/M,GAAMA,IAGvC,MAAM2K,EAAa,CAAC,EAC8B,QAAlD,gBAAO/O,GAAQvO,SAAS,kCAA0B,SAAExF,iBAAiB,8BAA8BpB,SAAQ+P,IACvG,MAAMqhB,EAAgBrhB,EAAO1P,aAAa,QACpCgxB,EAAiBthB,EAAOpM,MAC1B0tB,IACAnN,EAAWkN,GAAiBC,E,IAIpC,MAAMC,EAA0B,CAAC5sB,EAAQ,KAErC,GAAIA,GAASwsB,EAAY1vB,OAMrB,OAJA2T,EAAOvR,UAAUlC,OAAO,0BAExBT,SAASsL,KAAKkB,cAAc,IAAI8C,YAAY,mBAAoB,CAACC,OAAQ,CAAC,KAM9E,MAAMqf,EAAW,IAAImB,gBACrBnB,EAAS1P,OAAO,WAAYgR,GAC5BtB,EAAS1P,OAAO,SAAU,2BAC1B0P,EAAS1P,OAAO,aAAc+Q,EAAYxsB,IAG1C,IAAK,MAAOqf,EAAKpgB,KAAUqgB,OAAOC,QAAQC,GAEtC2L,EAAS1P,OAAO4D,EAAKpgB,GAIzBosB,MAAMC,sBAAsBC,YAAYtoB,QAAQ,eAAgB,eAAgB,CAC5EuoB,OAAQ,OACRC,QAAS,CAAC,eAAgB,oDAC1B5jB,KAAMsjB,EAASzrB,aAGlBgsB,MAAKC,GAAYA,EAASC,SAAQF,MAAK3vB,IAEhCA,GAAQA,EAAK+vB,OAEb,aAAOvvB,UAAUue,cAAc,CAC3BjZ,SAAW,IACXF,KAAW,QACXL,SAAW,CAAC,SAAU,OACtBgQ,QAAW,yBAA2BvV,EAAK+vB,UAI/C,aAAOvvB,UAAUue,cAAc,CAC3BjZ,SAAW,IACXF,KAAW,UACXL,SAAW,CAAC,SAAU,OACtBgQ,QAAW,wCAGfsb,EAAwB5sB,EAAQ,G,IAIvC+rB,OAAMD,GAASzR,QAAQyR,MAAM,SAAUA,IAAO,EAInDc,GACJ,CAwDIC,CAAgBpc,EAAQ8b,EAAU,IACnC,IAGH,aAAO,iCAAiCvmB,GAAG,SAAUgD,IAEjDA,EAAU1J,iBACV,MAAMmR,EAASzH,EAAUzJ,OAGnB6rB,EAAc3a,EAAO9U,aAAa,uBAGxC,aAAO8U,GAAQvO,SAAS,cAAchD,UAAUC,IAAI,qBAGpD,MAAMgsB,EAAW,IAAImB,gBACrBnB,EAAS1P,OAAO,gBAAiB2P,GACjCD,EAAS1P,OAAO,SAAU,gCAG1ByP,EAAqBC,EAAUC,EAAY,IAC5C,EAAK,G,2JChOZ,mBAIA,aAAO7uB,UAAUyJ,GAAG,oBAAqBilB,I,QAErC,MAoKM6B,EAAWvwB,SAASQ,cAAc,iBAAmBR,SAASQ,cAAc,yBAC5EgwB,EAAmC,QAAxB,EAAa,QAAb,EAAAxwB,SAASsL,YAAI,eAAE3I,iBAAS,eAAEqB,SAAS,aAGpD,aAAO,wJAAwJjF,SAASuI,GAAsBA,EAAMtG,aAAa,QAAS,SAGrNwvB,GAAYD,EAsBRC,IAAYD,KAEjB,aAAO,8DAA8DxxB,SAAS0xB,IAC1EA,EAAW9tB,UAAUC,IAAI,aACzB6tB,EAAWpuB,UAAYouB,EAAWpuB,UAAUqE,QAAQ,OAAQ,IAAI,KAIpE,aAAO,oCAAoC3H,SAAS2xB,GAAyBA,EAASruB,UAAYquB,EAASruB,UAAUqE,QAAQ,IAAK,OAGlI,aAAO1G,UAAUslB,UA/BjB,aAAO,4CAA4C7e,SAAS,mBAC5D,aAAO,qDAAqDA,SAAS,sBAGrE,aAAOzG,UAAUslB,OA/KjBtlB,SAASG,iBAAiB,eAAepB,SAAS6rB,KAE9C,aAAO,oCAAoCjM,aAG3CiM,EAAK/nB,iBAAiB,UAAWC,IAE7BA,EAAMC,iBACN,MAAM4tB,EAAe/F,EAAKpqB,cAAc,yBAA2BoqB,EAAKpqB,cAAc,0BAA4BoqB,EAAKpqB,cAAc,qBAIrI,GAFAsd,QAAQkM,IAAI2G,IAER/F,EAAKpqB,cAAc,oBAAsBoqB,EAAKpqB,cAAc,UAAW,CAEvEmwB,EAAahuB,UAAUC,IAAI,qBAG3B,MAAMguB,EAAqBC,IAEvB,IAAI/b,EAAO,IAAIc,KAAKib,GAQpB,OAPW/b,EAAKgc,cAOF,KAND,KAAOhc,EAAKic,WAAa,IAAIC,OAAO,GAMrB,KALjB,IAAMlc,EAAKmc,WAAWD,OAAO,GAKA,KAJ3B,IAAMlc,EAAKoc,YAAYF,OAAO,GAIW,KAHvC,IAAMlc,EAAKqc,cAAcH,OAAO,EAGoB,EAIjEpC,EAAW,IAAIwC,SAASxG,GAG9B,IAAK,MAAMyG,KAAQzC,EAAS5L,UAED,iBAAZqO,EAAK,IAAmBA,EAAK,GAAG3F,MAAM,oCAE7CkD,EAASnH,IAAI4J,EAAK,GAAIT,EAAkBS,EAAK,KAKrDvC,MAAMlE,EAAKxrB,aAAa,UAAW,CAC/BkM,KAAMsjB,EACNK,OAAQrE,EAAKxrB,aAAa,YAC3B+vB,MAAKC,IAEJ,IAAKA,EAASkC,GAUV,MARA,aAAOtxB,UAAUue,cAAc,CAC3BnZ,KAAM,QACNE,SAAU,OACVP,SAAU,CAAC,SAAU,UACrBgQ,QAAS,gCAIP,IAAIwc,MAAM,+BAGpB,OAAOnC,EAASzK,MAAM,IACvBwK,MAAK3vB,IAEJmxB,EAAahuB,UAAUC,IAAI,sBAE3B,aAAO,oGAAoG7D,SAAS2T,IAAeA,EAAMhQ,MAAQ,EAAE,IAGnJkoB,EAAKzqB,iBAAiB,iBAAiBpB,SAASC,IAC5C,IAAIwyB,EAAcxyB,EAAQwB,cAAc,iCACxC,MAAMixB,EAAezyB,EAAQwB,cAAc,qBACtCgxB,IAAaA,EAAcxyB,EAAQwB,cAAc,mCAEtDixB,EAAa1vB,YAAcyvB,EAAYzvB,WAAW,IAItD4uB,EAAahuB,UAAUlC,OAAO,qBAE9B,MAAMixB,EAAkBprB,OAAO6G,SAASkH,KAAK3N,QAAQirB,WAAWC,KAAM,IACtEtrB,OAAO6G,SAASkH,KAAUsd,WAAWC,KAAOD,WAAWC,KAAO,oBAAoBF,IAAoB,oBAAoBA,GAAmB,IAC9IlC,OAAMD,KAEL,aAAOvvB,UAAUue,cAAc,CAC3BnZ,KAAM,QACNE,SAAU,OACVP,SAAU,CAAC,SAAU,UACrBgQ,QAASwa,GACX,G,IAGZ,IAIFvvB,SAASQ,cAAc,kBAEvB,aAAO,mBAAmBzB,SAASC,IAC/BA,EAAQgC,aAAa,OAAQ,MAC7BhC,EAAQgC,aAAa,OAAQ,KAAK,KAItC,aAAO,gCAAgCjC,SAASC,GAAgBA,EAAQgC,aAAa,YAAY,MAGjG,aAAO,kBAAkBjC,SAAS8yB,GAAsBA,EAAMpxB,YAC9D,aAAO,6BAA6B1B,SAASC,GAAwBA,EAAQuM,gBAAgB,UAK5F,M,MAEDvL,SAASsL,KAAKlM,aAAa,cAAcY,SAASsL,KAAKtK,aAAa,YAAa,IACjFhB,SAASsL,KAAKlM,aAAa,aAAaY,SAASsL,KAAKtK,aAAa,WAAY,8BAGnF,IAAI8wB,EAA+E,QAAxD,EAAA9xB,SAASQ,cAAc,yCAAiC,eAAEuB,YAAYkc,UAAU,EAAG,KAG1Gje,SAASQ,cAAc,QAAO,aAAO,gBAAgBE,OAAO,SAAU,sBAAsBV,SAASyU,cAGpGzU,SAAS4Y,KAAKpY,cAAc,8BAA6B,aAAOR,SAAS4Y,MAAMlY,OAAO,SAAU,qCAAqCoxB,QAG1I,aAAO,gEAAgE/yB,SAASC,IAE5E,IAAI+yB,EAAgB/yB,EAAQI,aAAa,gBAAkBJ,EAAQI,aAAa,oBAGhF,IAAK2yB,EAAe,CAEhB,IAAIlxB,GAAQ,aAAO7B,GAASsC,KAAK,WAAY,aAAOtC,GAASwC,KAAK,UAAYxC,EAAQgzB,QAAQ,SAE1FC,GAAiB,aAAOjzB,GAAS2G,SAAS,OAAQ,aAAO3G,GAAS2G,SAAS,oBAAqB,aAAO3G,GAAS2G,SAAS,QAExH9E,GAASoxB,IAAgBpxB,GAAQ,aAAOoxB,GAAgB3wB,KAAK,WAAY,aAAO2wB,GAAgBzwB,KAAK,UAEtGX,GAASA,EAAMkB,cAAagwB,EAAgBlxB,EAAMkB,YAAYqrB,O,CAIlEpuB,EAAQI,aAAa,eAAeJ,EAAQgC,aAAa,aAAc,GAAG+wB,KAC1E/yB,EAAQI,aAAa,UAA8C,KAAlCJ,EAAQI,aAAa,UAAiBJ,EAAQgC,aAAa,QAAS,GAAG+wB,KACxG/yB,EAAQI,aAAa,gBAA0D,KAAxCJ,EAAQI,aAAa,gBAAuBJ,EAAQgC,aAAa,cAAe,GAAG+wB,IAAgB,KAIlJ,aAAO,0BAA0BhzB,SAASmV,IAEtC,IAAIge,GAAe,aAAOhe,GAAQvO,SAAS,QACvCwsB,EAAgBD,aAAY,EAAZA,EAAc1xB,cAAc,mBAG3C0xB,GAAiBC,EACbD,IAAiBC,GAAeje,EAAOlT,aAAa,OAAQ,UADhCkT,EAAOlT,aAAa,OAAQ,SACa,GAChF,EAmBQoxB,GAGNpyB,SAASQ,cAAc,iBAAgB,aAAO,QAAQ0P,IAAI,CAAE,QAAW,IAAK,cAAgB,OAAQ,aAAc,WAGtH,aAAO,cAAcnR,SAASC,GAAwBA,EAAQ2D,UAAUlC,OAAO,gBAG/E,aAAO,yBAAyB+M,cAAc,CAAC,MAAkB,OAAVmkB,iBAAU,IAAVA,gBAAU,EAAVA,WAAYC,OAAQ,OAmB5ErB,IAEC,aAAO,kCAAkC9mB,GAAG,SAASzD,GAAWA,EAAQjD,mBAAkB,EAIhE,IAIlCuD,OAAO+rB,aAAe5lB,I,MAElBA,EAAU1J,iBACV,IAAI2P,GAAQ,aAAOjG,EAAUzJ,QAAQxB,KAAK,mBAGtC8wB,EAAgBtyB,SAASQ,cAAc,kBACvC+xB,EAA6D,QAA7C,gBAAO7f,GAAO/M,SAAS,8BAAsB,eAAEnF,cAAc,gBAG5EiM,EAAUzJ,OAAOwvB,aAElB/lB,EAAUzJ,OAAOwvB,WAAaC,GAAG5I,MAAM,CACnCpV,MAAO,eACPvL,UAAU,IAIduD,EAAUzJ,OAAOwvB,WAAW/oB,GAAG,UAAU,KAErC,IAAIipB,EAAiBjmB,EAAUzJ,OAAOwvB,WAAWG,QAAQC,IAAI,aAAaC,QAG1EngB,EAAMhQ,MAAQgwB,EAAeI,SAAS/lB,IAGlCulB,GAAeA,EAActxB,aAAa,MAAO0xB,EAAeI,SAAS/lB,KACzEwlB,IAAeA,EAAcxwB,YAAc2wB,EAAeI,SAASrc,KAAI,KAKnFhK,EAAUzJ,OAAOwvB,WAAWO,MAAM,C,GCpQlCC,EAA2B,CAAC,E,OAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBzrB,IAAjB0rB,EACH,OAAOA,EAAa70B,QAGrB,IAAIC,EAASy0B,EAAyBE,GAAY,CAGjD50B,QAAS,CAAC,GAOX,OAHA80B,EAAoBF,GAAUG,KAAK90B,EAAOD,QAASC,EAAQA,EAAOD,QAAS20B,GAGpE10B,EAAOD,OACf,CCnB0B20B,CAAoB,I","sources":["webpack://Phenix/webpack/universalModuleDefinition","webpack://Phenix/./src/scripts/components/datatable.ts","webpack://Phenix/./src/scripts/components/dropdown.ts","webpack://Phenix/./src/scripts/components/media.ts","webpack://Phenix/./src/scripts/components/menu.ts","webpack://Phenix/./src/scripts/components/popup.ts","webpack://Phenix/./src/scripts/components/progress.ts","webpack://Phenix/./src/scripts/components/select.ts","webpack://Phenix/./src/scripts/components/tabs.ts","webpack://Phenix/./src/scripts/components/timer.ts","webpack://Phenix/./src/scripts/components/uploader.ts","webpack://Phenix/./src/scripts/custom-scripts.ts","webpack://Phenix/./src/scripts/features/animations.ts","webpack://Phenix/./src/scripts/features/collapse.ts","webpack://Phenix/./src/scripts/features/counter.ts","webpack://Phenix/./src/scripts/features/effects-scroll.ts","webpack://Phenix/./src/scripts/features/effects.ts","webpack://Phenix/./src/scripts/features/get-info.ts","webpack://Phenix/./src/scripts/features/notifications.ts","webpack://Phenix/./src/scripts/features/validation.ts","webpack://Phenix/./src/scripts/index.ts","webpack://Phenix/./src/scripts/integration/blocks.ts","webpack://Phenix/./src/scripts/integration/slider.ts","webpack://Phenix/./src/scripts/integration/utilities.ts","webpack://Phenix/./src/scripts/integration/woocommerce.ts","webpack://Phenix/./src/scripts/integration/wordpress.ts","webpack://Phenix/webpack/bootstrap","webpack://Phenix/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Phenix\"] = factory();\n\telse\n\t\troot[\"Phenix\"] = factory();\n})(this, () => {\nreturn ","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animated Counter\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Counter Data\r\n * ===> 05 - Count Runes\r\n * ===> 06 - Start Counting\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animated Counter <====*/\r\nPhenixElements.prototype.datatable = function (options?:{\r\n        items?:number,  //===> Items Per Page\r\n        search?:number,   //===> Enable Search\r\n        sortable?:number, //===> Enable Sorting\r\n        data?:{\r\n            labels?:[],       //===> Table Head Items [array of strings]\r\n            source?:string,   //===> Data Source URL [csv, json]\r\n            editable?:number, //===> Enable Data Edit\r\n        },\r\n    }) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Data Table Options <====//\r\n        let wrapper,\r\n            items    = parseInt(element.getAttribute('data-items')) || options?.items || 15, //===> Rows Per Pages\r\n            search   = element.getAttribute('data-search') || options?.search || true,  //===> Enable Search\r\n            sortable = element.getAttribute('data-sortable') || options?.sortable || true,  //===> Enable Sorting\r\n            source   = element.getAttribute('data-source') || options?.data?.source || false,  //===> Data Source URL [csv, json]\r\n            labels   = element.getAttribute('data-labels') || options?.data?.labels || false,  //===> Table Head Items [array of strings]\r\n            editable = element.getAttribute('data-editable') || options?.data?.editable || false;  //===> Enable Data Edit\r\n\r\n        //====> Detect Responsive Wrapper <====//\r\n        if (element.parentNode.matches('[class*=\"-table\"]')) wrapper = element.parentNode;\r\n\r\n        //====> Label Translate <====//\r\n        const Label_Translate = (english, arabic) => {\r\n            if (Phenix(document).direction() == 'ltr') return english; \r\n            else return arabic;\r\n        };\r\n\r\n        //====> Get Table Elements <====//\r\n        let table_labels  = element.querySelectorAll('thead th'),\r\n            original_rows = element.querySelectorAll('tbody tr'),\r\n            table_rows    = original_rows,\r\n            row_length    = table_rows.length;\r\n\r\n        //====> Create Labels from Data <====//\r\n        if (labels) {\r\n            //====> Remove Head <====//\r\n            element.querySelector('thead')?.remove();\r\n            //====> Create Head Wrapper <====//\r\n            Phenix(element).insert('append', `<thead><tr></tr></thead>`);\r\n            let headRow = element.querySelector('thead tr');\r\n            //====> Create Labels <====//\r\n            for (let i = 0; labels.length-1 >= i; i++) {\r\n                let label = labels[i];\r\n                Phenix(headRow).insert('append', `<th>${label}</th>`);\r\n            };\r\n            //====> get the New Labels <====//\r\n            table_labels = element.querySelectorAll('thead th');\r\n        }\r\n\r\n        //====> Editable Handler <====//\r\n        if (editable) table_rows.forEach(row => {\r\n            row.querySelectorAll('td').forEach(column => column.setAttribute('contenteditable',true));\r\n        });\r\n\r\n        //====> Per-Page Template <====//\r\n        var itemsHTML = '';\r\n        if (items) itemsHTML = `<!-- Per Page Selector -->\r\n            <label class=\"backspace me-10 mb-20\">${Label_Translate('Show', 'اظهار عدد')}</label>\r\n            <select class=\"form-control small items w-auto miw-90\">\r\n                <option value=\"${items}\">${items}</option>\r\n                ${items*2 < row_length ? `<option value=\"${items*2}\">${items*2}</option>` : ''};\r\n                ${items*4 < row_length ? `<option value=\"${items*4}\">${items*4}</option>` : ''};\r\n                ${items*10 < row_length ? `<option value=\"${items*10}\">${items*10}</option>` : ''};\r\n                ${items*20 < row_length ? `<option value=\"${items*20}\">${items*20}</option>` : ''};\r\n                ${items*25 < row_length ? `<option value=\"${items*25}\">${items*25}</option>` : ''};\r\n                ${items*50 < row_length ? `<option value=\"${items*50}\">${items*50}</option>` : ''};\r\n                ${items*100 < row_length ? `<option value=\"${items*100}\">${items*100}</option>` : ''};\r\n                ${`<option value=\"${row_length}\">${row_length}</option>`};\r\n            </select>\r\n            <label class=\"backspace ms-10 mb-20\">${Label_Translate('Per Page', 'فى كل صفحة')}</label>\r\n        `;\r\n\r\n        //====> Search Template <====//\r\n        var searchHTML = '';\r\n        if (search) searchHTML = `\r\n            <div class=\"control-icon small floating-end far fa-search\">\r\n                <input type=\"search\" class=\"table-search form-control small\" placeholder=\"${Label_Translate('Search in Table', 'البحث فى الجدول')}\">\r\n            </div>\r\n        `;\r\n\r\n        //====> Navigation Template <====//\r\n        var tableNav = `<div class=\"datatable-nav flexbox align-between align-center-y\">\r\n            ${search ?             \r\n                `<!-- Search -->\r\n                <div class=\"table-filters col-5 col-md-4 col-lg-3\">\r\n                    ${searchHTML}\r\n                </div>\r\n                <!-- // Search -->` : ''\r\n            }\r\n            ${items ? \r\n                `<!-- Action Area -->\r\n                <div class=\"table-filters flexbox align-center-y\">\r\n                    ${itemsHTML}\r\n                </div>` : ''\r\n            }\r\n        </div>`;\r\n\r\n        //====> Insert Navigation <====//\r\n        Phenix(wrapper).insert('before', tableNav);\r\n\r\n        //====> Pagination Template <====//\r\n        var paginationTemplate = `<div class=\"datatable-pagi flexbox align-between align-center-y\">\r\n            <!-- Display Info -->\r\n            <p>${Label_Translate(\r\n                `Showing from <span class=\"start-count\">1</span> to <span class=\"end-count\">${table_rows.length}</span> out of ${original_rows.length}`,\r\n                `اظهار <span class=\"start-count\">1</span> الي <span class=\"end-count\">${table_rows.length}</span> من مجموع ${original_rows.length}`\r\n            )}</p>\r\n            <!-- Pagination -->\r\n            <ul class=\"pagination small\"></ul>\r\n        </div>`;\r\n\r\n        //====> Insert Pagination <====//\r\n        Phenix(wrapper).insert('after', paginationTemplate);\r\n\r\n        //====> get Navigation and Pagination <====//\r\n        var navigation = Phenix(wrapper).prev('.datatable-nav');\r\n        var pagination = Phenix(wrapper).next('.datatable-pagi');\r\n\r\n        //====> Set Page Handler <====//\r\n        const setPage = (rows, start, end) => {\r\n            //====> Clear Current Items <====//\r\n            element.querySelectorAll('tbody tr')?.forEach(del => del.remove());\r\n            //====> Define the Body <====//\r\n            let bodyElement:any = element.querySelector('tbody');\r\n            //====> Set Pages <====//\r\n            while (start < end) {\r\n                Phenix(bodyElement).insert('append', rows[start]);\r\n                start++;\r\n            }\r\n            //====> Display Information <====//\r\n            pagination.querySelector('.start-count').textContent = start+1;\r\n            pagination.querySelector('.end-count').textContent = end+1;\r\n        };\r\n\r\n        //====> Pagination Handlers <====//\r\n        const paginationHandlers = () => {\r\n            //===> Set New Page <===//\r\n            const setNewPage = item => {\r\n                //====> Positions <====//\r\n                var thisPage   = parseInt(item.textContent),\r\n                    itemsNumber = navigation.querySelector('.items').value;\r\n\r\n                //====> Activate <====//\r\n                item.parentNode.querySelector('.active')?.classList.remove('active')\r\n                item.classList.add('active');\r\n\r\n                //====> Items Calculation <====//\r\n                var startPoint = thisPage == 1 ? 0 : thisPage*itemsNumber-itemsNumber,\r\n                    endPoint   = thisPage*itemsNumber-1;\r\n\r\n                //====> Set First Page <====//\r\n                setPage(original_rows, startPoint, endPoint);\r\n            };\r\n\r\n            //===> Get Pagination Items <===//\r\n            pagination.querySelectorAll('.pagination li:not(.next-page):not(.prev-page)').forEach(item => {\r\n                //===> On Item Click <===//\r\n                item.addEventListener('click', event => {\r\n                    event.preventDefault();\r\n                    setNewPage(event.target);\r\n                });\r\n            });\r\n\r\n            //===> Next Page <===//\r\n            pagination.querySelector('.pagination .next-page')?.addEventListener('click', event => {\r\n                event.preventDefault();\r\n                //====> Positions <====//\r\n                var item = Phenix(pagination.querySelector('li.active')).next('li:not(.prev-page):not(.next-page)');\r\n                if(item) setNewPage(item);\r\n            });\r\n\r\n            //===> Prev Page <===//\r\n            pagination.querySelector('.pagination .prev-page')?.addEventListener('click', event => {\r\n                event.preventDefault();\r\n                //====> Positions <====//\r\n                var item = Phenix(pagination.querySelector('li.active')).prev('li:not(.prev-page):not(.next-page)');\r\n                if (item) setNewPage(item);\r\n            });\r\n        };\r\n\r\n        //====> Create Pagination <====//\r\n        const createPagination = (rows, start, end) => {\r\n            //====> Clear Current Items <====//\r\n            element.querySelectorAll('tbody tr')?.forEach(del => del.remove());\r\n\r\n            //====> Select Pagination List <====//\r\n            var paginationList = pagination.querySelector('.pagination'),\r\n                pagesNumber    = Math.ceil(rows.length/items);\r\n\r\n            //===> Reset Pagination <===//\r\n            paginationList.innerHTML = null;\r\n\r\n            //====> Create Pagination Items <====//\r\n            for(let i = 0; pagesNumber-1 >= i; i++) Phenix(paginationList).insert('append', `<li class=\"${i==0?'active':''}\">${i+1}</li>`);\r\n\r\n            //====> Create Next / Prev Buttons <====//\r\n            if (pagesNumber > 1) {\r\n                Phenix(paginationList.querySelector('li:first-child')).insert('before', `<li class=\"prev-page far fa-angle-${Phenix(document).direction('start')}\"></li>`);\r\n                Phenix(paginationList).insert('append', `<li class=\"next-page far fa-angle-${Phenix(document).direction('end')}\"></li>`);\r\n            }\r\n\r\n            //====> Set First Page <====//\r\n            setPage(rows, start, end);\r\n\r\n            //====> Activate Pagination <====//\r\n            paginationHandlers();\r\n        };\r\n\r\n        //====> Per-Page Activate <====//\r\n        if(items) {\r\n            //====> Create Pagination <====//\r\n            createPagination(original_rows, 0, items-1);\r\n\r\n            //====> Per-Page Handler <====//\r\n            var itemsControl = navigation.querySelector('.items');\r\n            // Forms.advancedSelect(itemsControl);\r\n\r\n            itemsControl.addEventListener('change', event => {\r\n                items = event.target.value;\r\n                //====> Create Pagination <====//\r\n                createPagination(original_rows, 0, items-1);\r\n            });\r\n        }\r\n\r\n        //====> Search Handler <====//\r\n        if(search) {\r\n            navigation.querySelector('.table-search')?.addEventListener('keyup', event => {\r\n                //====> Get Search Data <====//\r\n                var currentValue = event.target.value.toString().toLowerCase(),\r\n                    keyboard_key = event.keyCode || event.charCode,\r\n                    filteredData = [];\r\n    \r\n                //====> Search Process <====//\r\n                if(keyboard_key == 8 && currentValue == '' || null) {\r\n                    //====> if its Empty Return Original Data <====//\r\n                    filteredData = table_rows;\r\n                } else {\r\n                    //=====> Loop Through Options <=====//\r\n                    table_rows.forEach((item,index) => {\r\n                        //=====> Search and Options Data <=====//\r\n                        var labelValue = item.textContent.toString().toLowerCase();\r\n                        //=====> Show / Hide Options <=====//\r\n                        if (labelValue.includes(currentValue)) filteredData.push(item);\r\n                    });\r\n                }\r\n    \r\n                //====> Search Result <====//\r\n                if (items && filteredData.length > 0) createPagination(filteredData, 0, items-1);\r\n                if (!items) setPage(filteredData, 0, filteredData.length-1);\r\n            });\r\n        }\r\n\r\n        //====> Sorting Handler <====//\r\n        if(sortable) {\r\n            table_labels.forEach((label, tdIndex) => {\r\n                //====> Set Sort Icons <====//\r\n                label.classList.add('px-sortable');\r\n                Phenix(label).insert('append', `<span class=\"sort-icon fas fa-sort float-end\"></span>`);\r\n\r\n                //====> Handler <====//\r\n                label.addEventListener('click', event => {\r\n                    event.preventDefault();\r\n                    //====> Deactivate Handler <====//\r\n                    const deactivateOther = () => {\r\n                        //====> Deactivate Other <====//\r\n                        Phenix(label).siblings('.active')?.forEach(sibling => {\r\n                            sibling.classList.remove('active');\r\n                            sibling.classList.remove('asc-sort');\r\n                            sibling.classList.remove('desc-sort');\r\n                        });\r\n                    }\r\n\r\n                    //====> Sort Detector <====//\r\n                    if(!label.classList.contains('asc-sort')) {\r\n                        var sortBy = 'asc'\r\n                        //====> Deactivates Other <====//\r\n                        deactivateOther();\r\n                        //====> Activate Item <====//\r\n                        label.classList.add('active');\r\n                        label.classList.add('asc-sort');\r\n                        label.classList.remove('desc-sort');\r\n                    } else {\r\n                        var sortBy = 'desc';\r\n                        //====> Deactivates Other <====//\r\n                        deactivateOther();\r\n                        //====> Activate Item <====//\r\n                        label.classList.add('active');\r\n                        label.classList.add('desc-sort');\r\n                        label.classList.remove('asc-sort');\r\n                    }\r\n\r\n                    //====> Clear Current Items <====//\r\n                    if(items) {\r\n                        var tableBody = element.querySelector('tbody');\r\n                        tableBody.querySelectorAll('tr')?.forEach(del => del.remove());\r\n                        //====> Show All <====//\r\n                        if (tableBody) table_rows.forEach(row => tableBody.appendChild(row));\r\n                    }\r\n\r\n                    //====> Rows Sorting <====//\r\n                    element.querySelectorAll('tbody tr')?.forEach((row, index) => {\r\n                        var rowSiblings = Phenix(row).siblings('tr'),\r\n                            currentValue = row.children[tdIndex].textContent;\r\n                        //====> Compare Row to its Sibling <====//\r\n                        rowSiblings.forEach(sibling => {\r\n                            var siblingValue = sibling.children[tdIndex].textContent;\r\n                            \r\n                            //====> Compare as Number <====//\r\n                            if (!isNaN(currentValue)) {\r\n                                currentValue = parseFloat(currentValue);\r\n                                siblingValue = parseFloat(siblingValue);\r\n                            } \r\n                            \r\n                            //====> Compare as String <====//\r\n                            if (isNaN(currentValue)) {\r\n                                currentValue = currentValue.toString();\r\n                                siblingValue = siblingValue.toString();\r\n                            }\r\n\r\n                            //====> ASC Sorting <====//\r\n                            if(sortBy == 'asc' && currentValue >= siblingValue) Phenix(row).insert('after', sibling);\r\n                            //====> DESC Sorting <====//\r\n                            if(sortBy == 'desc' && currentValue <= siblingValue) Phenix(row).insert('after', sibling);\r\n                        });\r\n                    });\r\n\r\n                    //====> new Sorted Rows <====//\r\n                    table_rows = element.querySelectorAll('tbody tr');\r\n                    //====> Create Pagination <====//\r\n                    if (items && table_rows.length > 0) createPagination(table_rows, 0, items-1);\r\n                    if (!items) setPage(table_rows, 0, table_rows.length-1);\r\n                });\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Dropdown\r\n * ===> 03 - Default Options\r\n * ===> 04 - Set Trigger Accessibility\r\n * ===> 05 - When Click on the Trigger\r\n * ===> 06 - De-Activate Other\r\n * ===> 07 - Activate Button and List\r\n * ===> 08 - De-Activate on Blank\r\n * ===> 09 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Dropdown <====*/\r\nPhenixElements.prototype.dropdown = function (options?:{\r\n    toggle?:string,   //====> Toggle Button Class Name : px-toggle\r\n    target?:string,   //====> Target to Toggle (add/remove) Active Class\r\n    active?:string,   //====> Active Class Name : px-active\r\n    hover?:boolean,   //====> Support on Hover Show/Hide\r\n    exclude?:string,  //====> Exclude from on Blank Click only [CSS :not()... Selector]\r\n    position?:string, //====> the position of the target [top or bottom, start or end]\r\n    //====> Hide/Show Toggle Effect [fade, slide] <====//\r\n    effect?:{\r\n        type?:string,\r\n        duration?:number,\r\n        delay?:number,\r\n        display?:string,\r\n    },\r\n}) {    \r\n    this.forEach(dropdown_wrapper => {\r\n        //====> if its already mounted <====//\r\n        if (dropdown_wrapper.classList.contains('px-mounted')) return;\r\n\r\n        //====> Default Options <====//\r\n        let siblings,\r\n            inline = attr => dropdown_wrapper.getAttribute(attr),\r\n            active  = inline('data-active') || options?.active || 'px-active',\r\n            toggle  = inline('data-toggle') || options?.toggle || '.px-toggle',\r\n            target  = inline('data-target') || options?.target || '.px-dropdown-list',\r\n            position  = inline('data-position') || options?.position || 'bottom, start',\r\n            exclude  = inline('data-exclude') || options?.exclude || '.px-toggle',\r\n            activated = `${target}.${active}`,\r\n            //====> Effect Options <====//\r\n            delay  = inline('data-delay') || options?.effect?.delay || 0,\r\n            effect = inline('data-effect') || options?.effect?.type || 'fade',\r\n            display = inline('data-display') || options?.effect?.display || 'block',\r\n            duration = inline('data-duration') || options?.effect?.duration || 300,\r\n            //====> Catch the Target <====//\r\n            dropdown_target = dropdown_wrapper.querySelector(target);\r\n\r\n        //===> Dynamic Position <===//\r\n        let change_position = () => {\r\n            if(position[0] === 'top' || position[0] === 'bottom') Phenix(dropdown_target).dynamicPosition();\r\n        };\r\n\r\n        //====> identify the effect <====//\r\n        dropdown_wrapper.setAttribute('data-effect', effect);\r\n\r\n        //====> Hide Activated Dropdowns <====//\r\n        const hide_others = (activated) => {\r\n            //==== Hide Others ====//\r\n            Phenix(activated).forEach((dropdown:HTMLElement) => {\r\n                if (dropdown_target !== dropdown) {\r\n                    //====> Get the Effect Type <====//\r\n                    let dropdown_wrapper = Phenix(dropdown).ancestor('[data-effect]'),\r\n                        current_effect   = dropdown_wrapper.getAttribute('data-effect');\r\n    \r\n                    //====> De-Activate Triggers <====//\r\n                    dropdown.classList.remove(active);\r\n                    dropdown_wrapper.querySelector('.px-toggle').classList.remove(active);\r\n    \r\n                    Phenix(dropdown).siblings(active)?.forEach((sibling:HTMLElement) => {\r\n                        sibling.classList.remove(active);\r\n                    });\r\n    \r\n                    //====> Hide Opened Dropdowns <====//\r\n                    if (current_effect == 'fade') Phenix(dropdown).fadeOut(duration, delay, display);\r\n                    else if (current_effect == 'slide') Phenix(dropdown).slideUp(duration, delay, display);\r\n                }\r\n            });\r\n        },\r\n\r\n        //====> Click to Dropdown <====//\r\n        dropdown_start = event => {\r\n            //====> De-Activate Other <====//\r\n            hide_others(activated);\r\n\r\n            //====> Prevent Default <====//\r\n            event.preventDefault();\r\n            \r\n            //====> Get the Target and its Sibling <====//\r\n            let event_trigger = event.target;\r\n            if (!event.target.matches(toggle)) event_trigger = Phenix(event_trigger).ancestor(toggle);\r\n\r\n            //===> Get the Targeted Sibling <===//\r\n            siblings = Phenix(event_trigger).siblings(target);\r\n\r\n            //===> Activate the Button <===//\r\n            Phenix(event_trigger).toggleClass(active);\r\n\r\n            //====> Active Button and the Target <====//\r\n            if (siblings) {\r\n                //====> Change Position <====//\r\n                change_position();\r\n\r\n                //====> Active Target <====//\r\n                Phenix(siblings).toggleClass(active);\r\n\r\n                //====> Effect : Fading <====//\r\n                if (effect == 'fade') { Phenix(siblings).fadeToggle(duration, delay, display); }\r\n                //====> Effect : Slide <====//\r\n                else if (effect == 'slide') { Phenix(siblings).slideToggle(duration, delay, display); }\r\n            }\r\n        };\r\n\r\n        //====> Click to Dropdown <====//\r\n        let toggle_element = dropdown_wrapper.querySelector(toggle);\r\n        toggle_element.addEventListener('click', clicked => {\r\n            dropdown_start(clicked);\r\n        });\r\n\r\n        //====> Set Accessibility Options <====//\r\n        toggle_element.setAttribute('role', 'button');\r\n        toggle_element.setAttribute('tabIndex', '0');\r\n\r\n        //====> De-Activate on Blank <====//\r\n        window.addEventListener('click', (blank) => {\r\n            //====> Clicked Target <====//\r\n            let exclude_final = `${target} *:not([href^=\"#\"]):not(${exclude})`,\r\n                clicked:any = blank.target;\r\n\r\n            //====> if the target is not the current element or any of its children <====//\r\n            if (!clicked.matches(target) && !clicked.matches(toggle) && !clicked.matches(`${toggle} *`) && !clicked.matches(exclude_final)) {\r\n                hide_others(activated);\r\n            }\r\n        });\r\n\r\n        //====> CSS Prepare <====//\r\n        Phenix(dropdown_wrapper).addClass(\"position-rv\");\r\n\r\n        //====> Divide Positions <====//\r\n        position = position.replace(' ','').split(',');\r\n\r\n        //====> Define Targets <====//\r\n        let the_target = Phenix(dropdown_target),\r\n            isScrolling = false\r\n\r\n        //====> Style Utilites <====//\r\n        the_target.addClass(\"position-ab\").addClass(\"z-index-dropdown\").addClass(\"hidden\");\r\n        the_target.addClass(`pos-${position[1] !== \"center\" ? `${position[1]}-0` : `${position[1]}-x`}`);\r\n        position[0] === \"top\" ? the_target.addClass('pos-before-y') : the_target.addClass('pos-after-y');\r\n\r\n        //====> Change Position on Scroll <====//\r\n        window.addEventListener('scroll', scrolling => isScrolling = true, {passive: true});\r\n\r\n        setInterval(() => {\r\n            if (isScrolling) {\r\n                isScrolling = false;\r\n                change_position();\r\n            }\r\n        }, 300);\r\n\r\n        //===> Finished Mounting <===//\r\n        dropdown_wrapper.classList.add('px-mounted');\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Media Setter\r\n * ===> 03 - Methods\r\n * ========> - Background Method\r\n * ===> 04 - Phenix Elements\r\n * ===> 05 - Get Options Data\r\n * ===> 06 - Set Media Size\r\n * ===> 07 - Clean Source [URL]\r\n * ===> 08 - Media Handler\r\n * ========> - Background Type\r\n * ===> 09 - Lazy-Loading Mode\r\n * ===> 10 - None-Valid Source\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Media Setter [un-tested] <====*/\r\nPhenixElements.prototype.multimedia = function (options?:{\r\n    type?:string,   //===> background, image, video, embed, iframe, gradient, mixed-bg, audio\r\n    src?:string,    //===> Media Source [URL]\r\n    size?:string,   //===> Aspect Ratio Size [1x1, 4x3, 16x9, 16x10, 21x9, *%]\r\n    player?:string, //===> Players [phenix, html or standard]\r\n    lazyloading?:boolean, //===> Lazyloading [true, false]\r\n    //===> Gradient Settings <===//\r\n    gradient?:{\r\n        value?:[],       //===> CSS Gradient Value [rotation, color1, color2, etc...]\r\n        mode?:string,    //===> Gradient Mode [linear, radial, conic]\r\n        repeat?:boolean, //===> Gradient Repeat [true, false]\r\n    },\r\n    //===> Players and Embed <===//\r\n    embed?:string,      //====> Embed Source [video, audio, youtube, vemio]\r\n    controls?:boolean,  //====> Embed Controls Enable\r\n    autoplay?:boolean,  //====> Embed Autoplay Enable\r\n    loop?:boolean,  //====> Embed infinite loop Enable\r\n    muted?:boolean,  //====> Embed Audio Mute Enable\r\n    //===> Extra <===//\r\n    alt?:string,   //===> Alternative Text for SEO\r\n    cover?:string, //===> Cover Image for [videos]\r\n}) {\r\n    //====> Background Method <====//\r\n    let background = (element, source) => {\r\n        //===> Clean Source [URL] <===//\r\n        source = encodeURI(source);\r\n        //===> Clean # for CSS Benefits <===//\r\n        source = source.replaceAll('#','%23');\r\n\r\n        //===> De-Activate Lazy-Loading <===//\r\n        if (options?.lazyloading) element.classList.remove('lazyloader');\r\n\r\n        //===> Set As CSS Background <===//\r\n        element.style.backgroundImage = `url(\"${source}\")`;\r\n    };\r\n\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Media Checker <====//\r\n        let mediaDone = false;\r\n        if (mediaDone) return;\r\n        if (element.length != undefined) return;\r\n\r\n        //====> Get Options Data <====//\r\n        let type = element.getAttribute('data-type') || options?.type || 'background',\r\n            src  = element.getAttribute('data-src') || options?.src,\r\n            alt  = element.getAttribute('data-alt') || options?.alt || '',\r\n            ratio  = element.getAttribute('data-size') || options?.size,\r\n            splide = Phenix(element).ancestor('.splide.is-initialized'),\r\n            embed  = element.getAttribute('data-embed') || options?.embed || 'video',\r\n            cover  = element.getAttribute('data-cover') || options?.cover,\r\n            gradient = element.getAttribute('data-gradient') || options?.gradient?.value || false,\r\n            gradient_mode = element.getAttribute('data-mode') || options?.gradient?.mode || 'linear',\r\n            gradient_repeat = element.getAttribute('data-repeat') || options?.gradient?.repeat,\r\n            //====> Embed & Lazyloading <====//\r\n            lazyloading = element.getAttribute('data-lazyloading') || options?.lazyloading || false,\r\n            player_controls = element.getAttribute('data-controls') || options?.controls || false,\r\n            player_autoplay = element.getAttribute('data-autoplay') || options?.autoplay || false,\r\n            player_loop = element.getAttribute('data-loop') || options?.loop || false,\r\n            player_muted = element.getAttribute('data-muted') || options?.muted || false,\r\n            //====> .... <====//\r\n            lazy = lazyloading && lazyloading !== 'false' ? true : false,\r\n            controls = player_controls && player_controls !== 'false' ? true : false,\r\n            autoplay = player_autoplay && player_autoplay !== 'false' && player_autoplay !== 'hover' ? true : false,\r\n            loop = player_loop && player_loop !== 'false' ? true : false,\r\n            muted = player_muted && player_muted !== 'false' ? true : false;\r\n        //====> Set Media Size <====//\r\n        if (ratio && ratio != null || undefined) {\r\n            //====> Predefined Ratio's <====//\r\n            if (!element.classList.toString().includes('ratio')) element.classList.add(`ratio-${ratio}`);\r\n\r\n            //====> Otherwise <====//\r\n            else {\r\n                //====> Convert To Number <====//\r\n                let ratio_convert = parseInt(ratio);\r\n                //====> Set Height w/ Padding Bottom <====//\r\n                ratio_convert > 0 ? element.style.setProperty('--ratio-size', `${ratio_convert}%`) : null;\r\n            }\r\n        }\r\n\r\n        //====> if has Valid Source <====//\r\n        if (src || gradient)  {\r\n            //====> Media Handler <====//\r\n            let mediaHandle = () => {\r\n                //====> Gradient Validation <====//\r\n                let multiple = false;\r\n                if (gradient) {\r\n                    //=== Replace white Space ===//\r\n                    gradient = gradient.replace(' ','');\r\n                    //=== for Hex Colors ===//\r\n                    if (gradient.includes('#')) multiple = gradient.includes(',') ? true : false;\r\n                    //=== for RGB Colors ===//\r\n                    else if (gradient.includes('rgb')) multiple = gradient.includes('),') ? true : false;\r\n                    //=== for CSS Variables ===//\r\n                    else if (gradient.includes('var')) multiple = gradient.includes('),') ? true : false;\r\n                }\r\n\r\n                //====> De-Activate Loader <====//\r\n                if (lazy) {\r\n                    element.classList.remove('px-is-loading');\r\n                    if (element.style.backgroundImage) element.style.removeProperty('background-image');\r\n                }\r\n    \r\n                //====> Background Type <====//\r\n                if (type == 'background') {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n    \r\n                //====> Image Type <====//\r\n                else if (type == 'image') {\r\n                    //===> Set Background <===//\r\n                    // background(element, src);\r\n                    //===> Create Image <===//\r\n                    if(!element.querySelector(':scope > img')) Phenix(element).insert('prepend',`<img src=\"${src}\" alt=\"${alt}\" class=\"px-media-img\" loading=\"lazy\" />`);\r\n                    else element.querySelector(':scope > img').setAttribute('loading', 'lazy');\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n                \r\n                //====> Gradient Type <====//\r\n                else if (type == 'gradient') {\r\n                    //===> Check for Repeat <====//\r\n                    gradient_repeat ? gradient_repeat = 'repeating-' : gradient_repeat = '';\r\n                    //===> Set the Gradient <===//\r\n                    if(multiple) {\r\n                        element.style.backgroundImage = `${gradient_repeat}${gradient_mode}-gradient(${gradient})`;\r\n                    //===> Set As Color if it Single Value <===//\r\n                    } else element.style.backgroundColor = `${gradient}`;\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Mixed Type <====//\r\n                else if (type == 'mixed-bg') {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Get Current Background <===//\r\n                    let currentBg = element.style.backgroundImage,\r\n                        orderBG   = element.getAttribute('data-bg-order');\r\n\r\n                    //===> Check for Repeat <====//\r\n                    gradient_repeat ? gradient_repeat = 'repeating-' : gradient_repeat = '';\r\n                    //===> Set the Gradient <===//\r\n                    if(multiple) {\r\n                        if (orderBG === 'reverse') {\r\n                            element.style.backgroundImage = `${currentBg}, ${gradient_repeat}${gradient_mode}-gradient(${gradient})`;\r\n                        } else {\r\n                            element.style.backgroundImage = `${gradient_repeat}${gradient_mode}-gradient(${gradient}), ${currentBg}`;\r\n                        }\r\n                    //===> Set As Color if it Single Value <===//\r\n                    } else {\r\n                        if (orderBG === 'reverse') {\r\n                            element.style.backgroundImage = `${currentBg}, linear-gradient(${gradient},${gradient})`;\r\n                        } else {\r\n                            element.style.backgroundImage = `linear-gradient(${gradient},${gradient}), ${currentBg}`;\r\n                        }\r\n                    }\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> iFrame Type <====//\r\n                else if (type == 'iframe') {\r\n                    //===> Get the Current iFrame <===//\r\n                    let iframe = element.querySelector(':scope > iframe');\r\n                    //===> Create View <===//\r\n                    if (!iframe) {\r\n                        Phenix(element).insert('append', `<iframe src=\"${src}\" frameborder=\"0\" ${lazy ? 'loading=\"lazy\"' : ''} allowfullscreen sandbox=\"allow-scripts allow-same-origin\"></iframe>`);\r\n                    }\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Embed Type <====//\r\n                else if (type == 'embed') {\r\n                    //===> Embed Options <===//\r\n                    let media_attributes = `${lazy ? 'loading=\"lazy\"' : ''} ${autoplay ? 'autoplay=\"true\" playsinline=\"true\"' : ''} ${controls ? 'controls' : ''} ${loop ? 'loop' : ''} ${muted ? 'muted' : ''} ${cover ? `poster=\"${cover}\"` : ''}`;\r\n                    //===> Video Source <===//\r\n                    if (embed == 'video' && !element.querySelector(':scope > .px-video')) {\r\n                        Phenix(element).insert('append', `<video class=\"px-video\" src=\"${src}\" ${media_attributes}></video>`);\r\n                        if (player_autoplay === 'hover') {\r\n                            const video = element.querySelector('.px-video');\r\n                            Phenix(element).on('mouseenter', event => video.play());\r\n                            Phenix(element).on('mouseleave', event => video.pause());\r\n                        }\r\n                    }\r\n                    //===> Video Source <===//\r\n                    else if (embed != 'video' && !element.querySelector(':scope > .px-iframe')) {\r\n                        //====> Get the Source <====//\r\n                        let source = src;\r\n                        //====> Cleanup URL <====//\r\n                        if (source.includes('youtube.com')) source = src.replace('watch?v=', 'embed/');\r\n                        else if (source.includes('youtu.be')) source = src.replace('https://youtu.be/', 'https://www.youtube.com/embed/');\r\n                        else if (source.includes('vimeo.com')) source = src.replace('vimeo.com', 'player.vimeo.com/video');\r\n                        //====> Create the View <====//\r\n                        Phenix(element).insert('append', `<iframe class=\"px-iframe\" src=\"${source}\"  ${lazy ? 'loading=\"lazy\"' : ''} frameborder=\"0\" allowfullscreen></iframe>`);\r\n                    } \r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Something Else <====//\r\n                else {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n            };\r\n\r\n            //====> Lazy-Loading Mode <====//\r\n            if (lazy) {\r\n                //====> Activate Lazy-Loading <====//\r\n                if (!splide) element.classList.add('px-is-loading');\r\n                //====> First View Handler <=====//\r\n                if (Phenix(element).inView() || element.offsetTop < Phenix(document).viewport().height) mediaHandle();\r\n                //====> On-Scroll Handler <====//\r\n                window.addEventListener('scroll', event => Phenix(element).inView({offset: 100}) ? mediaHandle() : null);\r\n            }\r\n\r\n            //====> None-Lazy <====//\r\n            else mediaHandle();\r\n        }\r\n\r\n        //====> None-Valid Source <====//\r\n        else element.style.backgroundImage = 'https://via.placeholder.com/1280x650?text=Source+URL+Not+Supported+or+404';\r\n    });\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Menu Builder\r\n * ===> 03 - Get Inline Options\r\n * ===> 04 - Default Options\r\n * ===> 05 - Dropdown Submenus\r\n * ===> 06 - Marking Submenus\r\n * ===> 07 - Marking Triggers\r\n * ===> 08 - Get Triggers\r\n * ===> 09 - Submenus Handler \r\n * ===> 10 - Active Submenus\r\n * ===> 11 - Responsive Toggle\r\n * ===> 12 - Phenix Selecting Method\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Menu Builder <====*/\r\nPhenixElements.prototype.menu = function (options?:{\r\n    menu_id?:string,     //===> Menu CSS ID\r\n    hover?:boolean,      //===> Dropdown on Hover [Desktop only]\r\n    sub_active?:string,  //===> Submenus CSS Active Class [px-submenu-active]\r\n    mobile?:string,      //===> Responsive Mode [dropdown, custom]\r\n    effect?:string,      //===> Dropdown Effect [slide, fade, custom]\r\n    arrow?:string,       //===> Dropdown Arrow icon class names\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(menu => {\r\n        /*====> Get Inline Options <====*/\r\n        let inline = attr => menu.getAttribute(attr);\r\n\r\n        /*====> Default Options <====*/\r\n        let menu_id = inline('data-id') || options?.menu_id || null,\r\n            hover = inline('data-hover') || options?.hover || false,\r\n            sub_active = inline('data-sub-active') || options?.sub_active || 'px-submenu-active',\r\n            effect = inline('data-effect') || options?.effect,\r\n            arrow  = inline('data-arrow') || options?.arrow?.split(\" \"),\r\n            responsive = inline('data-mobile') || options?.mobile || 'dropdown';\r\n\r\n        //====> Dropdown Submenus <====//\r\n        let submenus  = menu.querySelectorAll('li > ul, li > .megamenu'),\r\n            dropdowns = [];\r\n\r\n        //====> Dropdown Default Effect <====//\r\n        if (responsive === 'dropdown') {\r\n            !effect ? effect = 'slide' : null;\r\n        }\r\n\r\n        menu.setAttribute('data-effect', effect);\r\n\r\n        //====> Marking Submenus <====//\r\n        submenus.forEach((submenu_item:any) => {\r\n            submenu_item.classList.add('submenu');\r\n            if (Phenix(submenu_item).getCSS('display') !== 'none') submenu_item.style.display = 'none';\r\n            //===> Mark the Parent <====//\r\n            let submenu_toggle = submenu_item.parentNode;\r\n            submenu_toggle.classList.add('submenu-item');\r\n            //===> set arrow icons <===//\r\n            let arrow_icon = arrow?.split(' ');\r\n\r\n            if (arrow_icon) {\r\n                let toggle_btn = submenu_toggle;\r\n                if (toggle_btn.querySelector(':scope > a')) toggle_btn = toggle_btn.querySelector(':scope > a');\r\n                \r\n                //===> Add Classes <===//\r\n                toggle_btn.classList.add('arrow-icon');\r\n                for (let index = 0; index < arrow_icon.length; index++) {\r\n                    let iconName = arrow_icon[index];              \r\n                    toggle_btn.classList.add(iconName);\r\n                }\r\n            }\r\n            //===> Megamenu Fix <===//\r\n            if(submenu_item.classList.contains('megamenu')) {\r\n                submenu_item.parentNode.style.position = 'static';\r\n                submenu_item.querySelectorAll('ul').forEach(element => element.classList.add('megalist'));\r\n            }\r\n        });\r\n\r\n        //====> Marking Triggers <====//\r\n        Phenix(dropdowns).addClass('submenu-toggle');\r\n\r\n        //====> Get Triggers <====//\r\n        submenus.forEach(submenu => dropdowns.push(...Phenix(submenu).siblings('a')));\r\n\r\n        //====> Submenus Handler <====//\r\n        let submenus_handle = (elements:any) => Phenix(elements).on('click', click => {\r\n            //===> Disable Default Behavior <===//\r\n            click.preventDefault();\r\n\r\n            //===> Dropdown Data <===//\r\n            let trigger = click.target,\r\n                parent  = trigger.parentNode,\r\n                siblings = Phenix(parent).siblings(`.${sub_active}`),\r\n                target = parent.querySelector('.submenu');\r\n\r\n            //===> Toggle Dropdown <===//\r\n            if (effect === 'slide') Phenix(target).slideToggle();\r\n            else if (effect === 'fade') Phenix(target).fadeToggle();\r\n            parent.classList.toggle(sub_active);\r\n            parent.classList.toggle(sub_active.replace(\"active\", \"deactivate\"));\r\n\r\n            //===> Disable Others <===//\r\n            if (siblings) siblings.forEach(element => {\r\n                if (effect === 'slide') Phenix(element.querySelector('.submenu')).slideUp();\r\n                else if (effect === 'fade') Phenix(element.querySelector('.submenu')).fadeOut();\r\n                element.classList.remove(sub_active);\r\n                element.classList.add(sub_active.replace(\"active\", \"deactivate\"));\r\n            });\r\n        });\r\n\r\n        /*====> Active Submenus <====*/\r\n        if(!hover) submenus_handle(dropdowns);\r\n\r\n        /*====> Media Query Check <====*/\r\n        else if (hover && Phenix(document).viewport('width') < 1100) window.addEventListener('resize', resized => {\r\n            if (Phenix(document).viewport('width') < 1100) submenus_handle(dropdowns);\r\n        });\r\n\r\n        /*====> Responsive Toggle <====*/\r\n        if (menu_id && menu_id !== null) {\r\n            /*====> Set ID to the Menu <====*/\r\n            if (responsive === 'dropdown') !menu.getAttribute('id') ? menu.setAttribute('id', menu_id) : null;\r\n\r\n            /*====> Create External Menu <====*/\r\n            else if (responsive === 'custom') {\r\n                if (!document.querySelector(`#${menu_id}`)) {\r\n                    //====> Create the Menu into the Body <====//\r\n                    Phenix(document.body).insert('append', \r\n                        `<nav id=\"${menu_id}\" ${effect? 'data-effect=\"'+effect+'\"' : ''} class=\"px-custom-menu\">\r\n                            <div class=\"menu-wrapper\">${menu.innerHTML}</div>\r\n                            <a href=\"#${menu_id}\" class=\"menu-toggle\" data-id=\"${menu_id}\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\"></a>\r\n                        </nav>`\r\n                    );\r\n    \r\n                    //====> Clean Markup <====//\r\n                    Phenix(`#${menu_id} [id]`).forEach((element:HTMLElement) => element.removeAttribute('id'));\r\n                    Phenix(`#${menu_id} .menu-wrapper > *`).removeClass('flexbox');\r\n    \r\n                    /*====> Active Submenus <====*/\r\n                    effect = 'slide';\r\n                    submenus_handle(Phenix(`#${menu_id} .submenu-item > a`));\r\n                }\r\n            }\r\n        }\r\n    });\r\n    \r\n\r\n    /*====> Toggle Button <====*/\r\n    Phenix(`.menu-toggle`).on('click', click => {\r\n        //===> Disable Default Behavior <===//\r\n        click.preventDefault();\r\n        if (Phenix(click.target).ancestor('.block-editor-block-list__block')) return;\r\n\r\n        //===> Dropdown Data <===//\r\n        let trigger = click.target,\r\n            target  = trigger.getAttribute('data-id');\r\n\r\n        //===> Define Target <====//\r\n        if (target) target = `#${target}`;\r\n        else target = trigger.getAttribute('href');\r\n        target = document.querySelector(target);\r\n\r\n        //===> Toggle Menu <====//\r\n        target.classList.toggle('px-menu-active');\r\n        let effect = target.getAttribute('data-effect');\r\n        if (effect === 'slide') Phenix(target).slideToggle();\r\n        else if (effect === 'fade') Phenix(target).fadeToggle(500, 0, 'flex');\r\n    });\r\n\r\n    //====> Return Phenix Query <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Loop Through Phenix Query\r\n * ===> 03 - Popup Options\r\n * ===> 04 - Backdrop Trigger\r\n * ===> 05 - Popup CSS Classes\r\n * ===> 06 - Create Custom Event\r\n * ===> 07 - Show and Hide Modal\r\n * ===> 08 - Open by URL\r\n * ===> 09 - Open on Load\r\n * ===> 10 - Open When Scroll\r\n * ===> 11 - Lightbox Mode\r\n * ===> 12 - Active Triggers\r\n * ===> 13 - Close Triggers\r\n * ===> 14 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Popups Modals <====*/\r\nPhenixElements.prototype.popup = function (options?:{\r\n    type:string;        //===> the type of the popup as modal or lightbox\r\n    hash_url?:boolean;  //===> Show the Modal if called from url\r\n    backdrop?:boolean;  //===> Enable/Disable Close by Backdrop\r\n    onload?:boolean;    //===> Show on Page Load Required for 'timeout';\r\n    showon?:string;     //===> Show the Modal when the target is in View-Point\r\n    timeout?:number;    //===> Delay the Modal from showing work for [showon, onload]\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(popup => {\r\n        //=====> Popup Options <=====//\r\n        let type     = options?.type || popup.getAttribute('data-type') || 'modal',\r\n            timeout  = options?.timeout || parseInt(popup.getAttribute('data-timeout')),\r\n            showon   = options?.showon || popup.getAttribute('data-showon'),\r\n            onload   = options?.onload || popup.getAttribute('data-onload'),\r\n            hash_url = options?.hash_url || popup.getAttribute('data-hash'),\r\n            backdrop = options?.backdrop || popup.getAttribute('data-backdrop') || true,\r\n            modal_id = popup.getAttribute('id');\r\n\r\n        /*=====> Backdrop Trigger <=====*/\r\n        if (backdrop && !popup.querySelector('.backdrop-btn') && backdrop !== 'false') {\r\n            Phenix(popup).insert('append', `<button type=\"button\" class=\"reset-button backdrop-btn modal-close position-fx fluid h-100vh pos-start-0 pos-top-0 bg-alpha-75\" title=\"Close Window\"></button>`);\r\n            backdrop = popup.querySelector('.backdrop-btn');\r\n        }\r\n\r\n        //====> Return if has no ID <====//\r\n        if (!modal_id) return;\r\n\r\n        //====> Popup CSS Classes <====//\r\n        popup.classList.add(\r\n            'pdy-30',\r\n            'w-fluid',\r\n            'h-100vh',\r\n            'flexbox',\r\n            'px-popup',\r\n            'pos-top-0',\r\n            'position-fx',\r\n            'pos-start-0',\r\n            'px-scrollbar',\r\n            'z-index-modal',\r\n            'overflow-y-auto',\r\n        );\r\n\r\n        popup.querySelector('.modal-content')?.classList.add('position-rv', 'z-index-header');\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('modal-showed'),\r\n              hidden = new Event('modal-hidden');\r\n\r\n        //====> Show and Hide Modal <====//\r\n        let show_modal = () => {\r\n            //=====> Close Other Modals <=====//\r\n            let current_active = document.querySelector('.px-popup.active');\r\n            if (current_active && current_active != popup) {\r\n                hide_modal('.px-popup.active > *');\r\n            }\r\n\r\n            //==== Prevent Scroll ====//\r\n            document.body.classList.add('overflow-hidden');\r\n            //==== Open the Modal ====//\r\n            Phenix(`#${modal_id}`).fadeIn(500, 0, 'flex').addClass('active');\r\n            popup.classList.add('has-shown');\r\n            popup.classList.remove('hidden');\r\n            //====> Fire Event <====//\r\n            popup.dispatchEvent(showed);\r\n        },\r\n\r\n        hide_modal = (trigger) => {\r\n            //==== Close the Modal ====//\r\n            let parent = Phenix(trigger).ancestor('.px-popup');\r\n            Phenix(parent).fadeOut().removeClass('active');\r\n            //==== Restore Scroll ====//\r\n            document.body.classList.remove('overflow-hidden');\r\n            popup.classList.add('hidden');\r\n            //====> Fire Event <====//\r\n            popup.dispatchEvent(hidden);\r\n            //===> Cleanup Lightbox <===//\r\n            popup.querySelectorAll('.px-lightbox-media, .lightbox-slider').forEach(element => element.remove());\r\n        };\r\n\r\n        //=====> Lightbox Mode <=====//\r\n        if (type === 'lightbox') {\r\n            //===> Set ID <===//\r\n            modal_id = 'px-lightbox';\r\n\r\n            //===> Lightbox Triggers <===//\r\n            Phenix('.px-lightbox').on('click', isClicked => {\r\n                //===> Prevent Default <===//\r\n                isClicked.preventDefault();\r\n\r\n                //===> Get the Media URL <===//\r\n                let thumbnail = isClicked.target,\r\n                    media_url = thumbnail.getAttribute('href') || thumbnail.getAttribute('data-src');\r\n\r\n                //===> Fix URl <===//\r\n                if(!media_url) media_url = thumbnail.getAttribute('src');\r\n\r\n                //===> Check Group <===//\r\n                let lightbox_group = thumbnail.getAttribute('data-group'),\r\n                    lightbox_wrapper = popup.querySelector('.modal-content');\r\n\r\n                //===> Media Type Handler <===//\r\n                let media_type = (url, trigger) => {\r\n                    //===> Get Media Type <===//\r\n                    let media_type = trigger.getAttribute('data-media');\r\n\r\n                    //===> Video Type <===//\r\n                    if (media_type === 'video') {\r\n                        //===> Width Fix <===//\r\n                        lightbox_wrapper.classList.add('col-11', 'w-max-768');\r\n                        //===> Return Video <===//\r\n                        return `<div class=\"px-media ratio-16x9 px-lightbox-media\" data-type=\"html\">\r\n                            <video src=\"${url}\" autoplay controls></video>\r\n                        </div>`;\r\n                    }\r\n\r\n                    //===> Embed Type <===//\r\n                    else if (media_type === 'embed') {\r\n                        //===> Width Fix <===//\r\n                        lightbox_wrapper.classList.add('col-11');\r\n\r\n                        //===> Cleanup URL <===//\r\n                        if (url.includes('youtube.com')) url = url.replace('watch?v=', 'embed/');\r\n                        else if (url.includes('vimeo.com')) url = url.replace('vimeo.com', 'player.vimeo.com/video');\r\n\r\n                        //===> Create iframe <===//\r\n                        return `<div class=\"px-media ratio-16x9 px-lightbox-media\">\r\n                            <iframe src=\"${url}\" loading=\"lazy\" frameborder=\"0\" allowfullscreen></iframe>\r\n                        </div>`;\r\n                    }\r\n\r\n                    //===> Image Type <===//\r\n                    else {\r\n                        return `<img src=\"${url}\" alt=\"Full Size Image\" class=\"px-lightbox-media\" />`;\r\n                    }\r\n                }\r\n\r\n                //===> if Single Media <===//\r\n                if (!lightbox_group) {\r\n                    //===> Remove Current <===//\r\n                    lightbox_wrapper.querySelector('.px-lightbox-media')?.remove();\r\n                    //===> Create the Media Element if Not Exist <===//\r\n                    Phenix(lightbox_wrapper).insert('append', media_type(media_url, thumbnail));\r\n                }\r\n\r\n                //===> Group Mode <===//\r\n                else {\r\n                    //===> Create Slider Wrapper <===//\r\n                    let slider_wrapper = Phenix(lightbox_wrapper).insert('append', `<div class=\"lightbox-slider px-slider\" data-controls=\"1\"></div>`);\r\n\r\n                    //===> Insert Elements of the Group <===//\r\n                    Phenix(`[data-group=\"${lightbox_group}\"]`).forEach((item:any) => {\r\n                        //===> Get the URL of each item <===//\r\n                        media_url = item.getAttribute('href') || item.getAttribute('data-src');\r\n\r\n                        //===> Insert the Current Item as First <===//\r\n                        if (item === thumbnail) {\r\n                            Phenix(slider_wrapper).insert('prepend', `<div class=\"px-item\">${media_type(media_url, item)}</div>`);\r\n                        } else {\r\n                            Phenix(slider_wrapper).insert('append', `<div class=\"px-item\">${media_type(media_url, item)}</div>`);\r\n                        }\r\n                    });\r\n\r\n                    lightbox_wrapper.classList.add('w-max-1100');\r\n                    lightbox_wrapper.querySelectorAll('.px-item .px-lightbox-media').forEach(element => element.classList.add('w-fluid'));\r\n\r\n                    //===> Activate the Slider <===//\r\n                    popup.addEventListener('modal-showed', event => {\r\n                        Phenix('.lightbox-slider').slider({ autoplay: false });\r\n                    });\r\n                }\r\n\r\n                //===> Show Lightbox <===//\r\n                show_modal();\r\n            });\r\n        }\r\n\r\n        //=====> Open by URL <=====//\r\n        if (hash_url) {\r\n            if (hash_url !== '0' || 'false') window.addEventListener('load', () => {\r\n                setTimeout(() => {\r\n                    if (window.location.hash.substr(1) == modal_id) show_modal();\r\n                }, timeout)\r\n            });\r\n        }\r\n\r\n        //=====> Open on Load <=====//\r\n        if (onload) {\r\n            if (onload !== '0' || 'false') window.addEventListener('load', () => setTimeout(show_modal, timeout));\r\n        }\r\n        \r\n        //=====> Open When Scroll <=====//\r\n        if (showon) {\r\n            Phenix(showon).forEach(selector => {\r\n                //===> First View <===//\r\n                if (Phenix(selector).inView()) show_modal();\r\n\r\n                //===> Hidden View <===//\r\n                window.addEventListener('scroll', scrolling => {\r\n                    if (Phenix(selector).inView()) {\r\n                        if (!popup.classList.contains('active') && !popup.classList.contains('has-shown')) show_modal();\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //=====> Active Triggers <=====//\r\n        if (type === 'modal') {\r\n            let triggers_select = `[data-modal=\"${modal_id}\"], [href=\"#${modal_id}\"]:not([target=\"_blank\"])`;\r\n            Phenix(triggers_select).on('click', show_modal);\r\n\r\n            //====> Set Accessibility Options <====//\r\n            Phenix(triggers_select).setAttributes({'role': 'button', 'tabIndex': '0'});\r\n        }\r\n\r\n        //=====> Close Triggers <=====///\r\n        popup.querySelectorAll('.modal-close').forEach(trigger => {\r\n            trigger.addEventListener('click', () => {\r\n                hide_modal(trigger);\r\n            });\r\n            //====> Set Accessibility Options <====//\r\n            trigger.setAttribute('role', 'button');\r\n            trigger.setAttribute('tabIndex', '0');\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Progress Plugin\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Progress <====*/\r\nPhenixElements.prototype.progress = function (options?:{\r\n    type?:string,    //===> Timer Type [bar, circle, radial]\r\n    color?:any,      //===> the Progress Color\r\n    value?:number,   //===> the progress value\r\n    label?:string,   //===> the progress label\r\n    size?:number,    //===> the size of the progress with px\r\n    lazyloading?:boolean,  //====> Animate when its visible\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((progress:any) => {\r\n        //====> Get Progress Data <====//\r\n        let type = progress.getAttribute('data-type') || options?.type || 'bar',\r\n            color = progress.getAttribute('data-color') || options?.color || 'var(--primary-color)',\r\n            value = parseInt(progress.getAttribute('data-value')) || options?.value || 0,\r\n            label = progress.getAttribute('data-label') || options?.label || \"\",\r\n            lazy  = progress.getAttribute('data-lazy')  || options?.lazyloading,\r\n            circleSize = 700;\r\n\r\n        //====> Set Progress <====//\r\n        let setProgress = (bar) => {\r\n            //====> Progress Handler <====//\r\n            let progress_handler = () => {\r\n                //====> Get Current Value <====//\r\n                let value = parseFloat(progress.getAttribute('data-value')) || options?.value || 0,\r\n                    color = progress.getAttribute('data-color') || options?.color || 'var(--primary-color)';\r\n\r\n                //====> Set Bar Data <====//\r\n                if (type === 'bar') {\r\n                    bar.style.width = `${value}%`;\r\n                    bar.style.backgroundColor = color;\r\n                    bar.setAttribute('data-value', value);\r\n                    bar.setAttribute('data-label', label);\r\n                }\r\n                //====> Set Circle Data <====//\r\n                if (type === 'circle') {\r\n                    //====> Define Elements <====//\r\n                    let circle_path = bar.querySelector('.circle-progress');\r\n                    let circle_text = bar.querySelector('.circle-text');\r\n\r\n                    //====> Check if is Counting <====//\r\n                    if (circle_text.classList.contains('is-counting')) return;\r\n                    \r\n                    //====> Create Temp Value <====//\r\n                    let current_value = 0;\r\n                    circle_path.setAttribute('stroke-dashoffset', `${circleSize*((value/100)-1)}px`);\r\n\r\n                    //====> Animate the Counting <====//\r\n                    let CountUpTimer = setInterval(() => {\r\n                        //====> Set Progress <====//\r\n                        if (current_value < value) {\r\n                            current_value += 1;\r\n                            circle_text.classList.add('is-counting');\r\n                            circle_text.textContent = `${current_value}%`;\r\n                        }\r\n                        //===> if Already Done <===//\r\n                        if (current_value === value || circle_text.classList.contains('done-counting')) {\r\n                            //====> Clear When Done <====//\r\n                            circle_text.classList.add('done-counting');\r\n                            clearInterval(CountUpTimer);\r\n                        }\r\n                    }, 50);\r\n                }\r\n                //====> Set Circle Data <====//\r\n                if (type === 'radial') {\r\n                    //===> get Progress Data <===//\r\n                    let radial_meter = bar.querySelector('.progress'),\r\n                        meter_calc = radial_meter.getTotalLength() * ((100 - value) / 100),\r\n                        radial_path = bar.querySelector('.progress');\r\n                    //===> Set Progress <===//\r\n                    radial_path.setAttribute('stroke-dashoffset', Math.max(0, meter_calc));\r\n                    radial_path.setAttribute('stroke', color);\r\n                }\r\n            }\r\n\r\n            //====> Set Progress <====//\r\n            if (lazy) {\r\n                //===> First View <===//\r\n                if (Phenix(progress).inView()) progress_handler();\r\n                //===> Hidden View <===//\r\n                window.addEventListener('scroll', scrolling => {\r\n                    Phenix(progress).inView() ? progress_handler() : null\r\n                });\r\n            } else {\r\n                progress_handler();\r\n            };\r\n        };\r\n\r\n        //====> Wrapper Properties <====//\r\n        progress.classList.add('position-rv', 'tx-align-center', 'lineheight-1');\r\n        progress.setAttribute('data-type', type);\r\n\r\n        //====> Bar Mode <====//\r\n        if (type === 'bar') {\r\n            //====> get the bar <====//\r\n            let progressBar = progress.querySelector('.px-progress-bar'),\r\n                size = progress.getAttribute('data-size')  || options?.size || 16;\r\n\r\n            //====> Create the bar if not existed <====// \r\n            if (!progressBar) {\r\n                //====> Add Progress Bar <====//\r\n                Phenix(progress).insert('append', `<span class=\"px-progress-bar display-block transition-fast overflow-hidden position-rv\" data-value=\"${value}\" ${label ? `data-label=\"${label}\"`: null} style=\"width:0;height:100%\"></span>`);\r\n                progressBar = progress.querySelector('.px-progress-bar'); \r\n            }\r\n\r\n            //====> Setup the Progress <====//\r\n            if (!progress.classList.contains('px-progress-bar-js')) {\r\n                //====> Base Background <====//\r\n                progress.classList.add('bg-alpha-10', 'overflow-hidden', 'px-progress-bar-js');\r\n                progress.style.height = `${Phenix(document).toREM(size)}`;\r\n                progress.style.lineHeight = `calc(${Phenix(document).toREM(size)})`;\r\n                progress.style.setProperty('--width', `${Phenix(document).toREM(progress.clientWidth)}`);\r\n                //====> Set Progress <====//\r\n                setProgress(progressBar);\r\n\r\n            } else {\r\n                setProgress(progressBar);\r\n            }\r\n        }\r\n\r\n        //====> Circle Mode <====//\r\n        if (type === 'circle') {\r\n            //====> Circle Shape <====//\r\n            let size = progress.getAttribute('data-size') || options?.size || 15,\r\n                svg  = progress.querySelector('.px-progress-circle');\r\n            \r\n            //====> Create SVG if not Existed <====//\r\n            if (!svg) {\r\n                let circle_shape = `<svg class=\"px-progress-circle\" viewBox=\"-15 -15 225 225\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" style=\"transform:rotate(-90deg);\">\r\n                    <circle r=\"100\" class=\"circle-base\" cx=\"100\" cy=\"100\" fill=\"transparent\" stroke-width=\"${size}\" stroke=\"var(--gray-light)\" stroke-dasharray=\"${circleSize}px\" stroke-dashoffset=\"0\"></circle>\r\n                    <circle r=\"100\" class=\"circle-progress\" cx=\"100\" cy=\"100\" style=\"transition: stroke-dashoffset ${value*50}ms linear 0.2s\" stroke-width=\"${size}\" stroke=\"${color}\" stroke-linecap=\"round\" stroke-dashoffset=\"${circleSize}px\" fill=\"transparent\" stroke-dasharray=\"${circleSize}px\"></circle>\r\n                    <text x=\"${Phenix(document).direction() === 'rtl' ? '72%' : '25%'}\" class=\"circle-text\" y=\"52%\" fill=\"${color}\" font-size=\"52px\" font-weight=\"bold\" style=\"transform:rotate(90deg) translate(0px, -196px)\">0%</text>\r\n                </svg>`;\r\n\r\n                Phenix(progress).insert('append', circle_shape);\r\n                svg = progress.querySelector('.px-progress-circle');\r\n                setProgress(svg);\r\n            }\r\n            //====> if Exist Update it <====//\r\n            else {\r\n                setProgress(svg);\r\n            }\r\n        }\r\n\r\n        //====> Circle Mode <====//\r\n        if (type === 'radial') {\r\n            //====> Circle Shape <====//\r\n            let size = progress.getAttribute('data-size') || options?.size || 10,\r\n            svg  = progress.querySelector('.px-progress-radial');\r\n            \r\n            //====> Create SVG if not Existed <====//\r\n            if (!svg) {\r\n                let circle_shape = `<svg width=\"100%\" viewBox=\"0 0 200 180\" class=\"px-progress-radial\">\r\n                    <path class=\"progress-bg\" stroke=\"rgba(0,0,0, 0.05)\" stroke-width=\"${size}\" d=\"M41 149.5a77 77 0 1 1 117.93 0\"  fill=\"none\" stroke-miterlimit=\"round\"/>\r\n                    <path class=\"progress\" stroke=\"${color}\" stroke-width=\"${size}\" d=\"M41 149.5a77 77 0 1 1 117.93 0\" fill=\"none\" stroke-miterlimit=\"round\" stroke-dasharray=\"350\" stroke-dashoffset=\"350\"/>\r\n                </svg>`;\r\n                \r\n                Phenix(progress).insert('append', circle_shape);\r\n                svg = progress.querySelector('.px-progress-radial');\r\n\r\n                setProgress(svg);\r\n            }\r\n            //====> if Exist Update it <====//\r\n            else {\r\n                setProgress(svg);\r\n            }\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Advanced Select\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Advanced Select <====*/\r\nPhenixElements.prototype.select = function (options?:{\r\n    max?:number,\r\n    search:boolean,\r\n    multiple:boolean,\r\n    placeholder?:string,\r\n    searchPlaceholder?:string,\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(select => {\r\n        //====> if Empty Select Return <====//\r\n        if (!select.querySelector('option')) return;\r\n\r\n        //====> Get Options <====//\r\n        let events_data:any = {},\r\n            classes  = select.classList,\r\n            multiple = select.hasAttribute('multiple') || options?.multiple,\r\n            maxItems = parseInt(select.getAttribute('data-max')) || options?.max,\r\n            search = select.getAttribute('data-search') || options?.search,\r\n            placeholder = select.getAttribute('data-placeholder') || options?.placeholder,\r\n            searchPlaceholder = select.getAttribute('data-search-placeholder') || options?.searchPlaceholder || 'Search...';\r\n        \r\n        //====> Create Custom Events <====//\r\n        const opened = new CustomEvent('opened', {detail: events_data,bubbles: true,cancelable: false}), \r\n              change = new CustomEvent('change', {detail: events_data,bubbles: true,cancelable: false}), \r\n              update = new CustomEvent('update', {detail: events_data,bubbles: true,cancelable: false}), \r\n              typing = new CustomEvent('typing', {detail: events_data,bubbles: true,cancelable: false}), \r\n              focus  = new CustomEvent('focus',  {detail: events_data,bubbles: true,cancelable: false}), \r\n              closed = new CustomEvent('closed', {detail: events_data,bubbles: true,cancelable: false});\r\n\r\n        //====> Select Component <====//\r\n        const select_create = () => {\r\n            //====> Create Custom Select <====//\r\n            let hasWrapper = Phenix(select).ancestor('.px-select'),\r\n                new_select = hasWrapper?.querySelector('.px-select-options') ? hasWrapper : null;\r\n\r\n            //====> Create Select wrapper if not existed <====//\r\n            if (hasWrapper && !new_select) {\r\n                new_select = Phenix(hasWrapper).css({\"line-height\": \"var(--height)\", \"cursor\": \"pointer\"}).addClass('flexbox').addClass('position-rv')[0];\r\n            } else {\r\n                new_select = Phenix(select).insert('before', `<div class=\"px-select flexbox position-rv\" style=\"line-height:var(--height);cursor: pointer;\"></div>`);\r\n            }\r\n            \r\n            //====> Copy Select Classes and Prepare CSS <====//\r\n            new_select.classList.add(...classes);\r\n            new_select = Phenix(new_select);\r\n\r\n            //====> Fix Padding for Single <====//\r\n            if (!multiple) {\r\n                new_select.css({\r\n                    \"padding-left\": \"0\",\r\n                    \"padding-right\": \"0\",\r\n                });\r\n            } else {\r\n                new_select.css({\r\n                    \"height\" : \"auto\",\r\n                    \"min-height\": \"var(--height)\",\r\n                    \"padding-left\": `calc(var(--padding)/2)`,\r\n                    \"padding-right\": `calc(var(--padding)/2)`,\r\n                });\r\n            }\r\n\r\n            //====> Create Options Wrapper <====//\r\n            let options_list = new_select.insert('append', `<ul class=\"reset-list fs-13 hidden border-1 border-solid border-alpha-10 fluid bg-inherit px-select-options bx-shadow-dp-2 position-ab fluid lineheight-160 pos-start-0 pos-after-y z-index-dropdown overflow-y-auto\" style=\"max-height:270px;\"></ul>`);\r\n                options_list = Phenix(options_list);\r\n\r\n            //====> Wrap the Original Select <====//\r\n            select.classList.add('hidden', 'px-mounted');\r\n            if(!hasWrapper) select = new_select.insert('append', select);\r\n\r\n            //===> Return new Data <===//\r\n            return [new_select, options_list]\r\n        };\r\n\r\n        //===> if its Wrong Element Skip-it <====//\r\n        if (select.tagName !== \"SELECT\") return;\r\n\r\n        //====> Rebuild from Scratch <====//\r\n        if (select.classList.contains('px-mounted')) {\r\n            select.addEventListener('update', isUpdated => {\r\n                Phenix(isUpdated.target).rebuildSelect();\r\n                //===> Get Options <====//\r\n                // const original_options = select.querySelectorAll('option'),\r\n                //       select_wrapper =  Phenix(select).ancestor('.px-select'),\r\n                //       new_select_options = select_wrapper.querySelectorAll('.px-select-options .px-select-option');\r\n                \r\n                // //===> if there is a new Items Rebuild <====/\r\n                // if (original_options.length !== new_select_options.length) {\r\n                //     //===> Remove Classes <===//\r\n                //     select.classList.remove('px-mounted');\r\n                //     select_wrapper.classList.remove('px-mounted');\r\n\r\n                //     //===> Remove Elements <===//\r\n                //     select_wrapper.querySelectorAll('.px-select-toggle, .px-select-options').forEach((element:HTMLElement) => element.remove());\r\n\r\n                //     //===> Rebuild the Component <====//\r\n                //     Phenix(select).select();\r\n                // }\r\n            });\r\n        }\r\n\r\n        //====> if Not Mounted Create <====//\r\n        else {\r\n            //====> Create New Component <====//\r\n            let select_component = select_create(),\r\n                new_select = select_component[0],\r\n                options_list = select_component[1];\r\n\r\n            //====> Create Options List <====//\r\n            select.querySelectorAll(':scope > *').forEach(option => {\r\n                //====> Get Option Data <====//\r\n                let option_text = option.textContent,\r\n                    option_value = option.getAttribute('value'),\r\n                    option_classes = `divider-b pdy-10 lineheight-150`,\r\n                    image_icon = ``,\r\n                    current_item:any;\r\n\r\n                //====> Set Images <====//\r\n                if (option.hasAttribute('data-image')) {\r\n                    let source = option.getAttribute('data-image');\r\n                    //===> Clean Source [URL] <===//\r\n                    source = encodeURI(source);\r\n                    //===> Set the image <===//\r\n                    image_icon = `<img style=\"width:1em\" alt=\"${option_text}\" src=\"${source}\" class=\"me-5\">`;\r\n                }\r\n\r\n                //====> Set Selected Class <====//\r\n                if (option.hasAttribute('selected') && option.getAttribute('selected') === 'true') option_classes += ` px-selected`;\r\n\r\n                //====> Options Headline <====//\r\n                if (option.matches('optgroup')) {\r\n                    //===> Create Option Group <===//\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-group mb-0 bg-alpha-05 pdx-10 weight-strong ${option_classes}\" data-value=\"${option_value}\">${image_icon}${option.getAttribute('label') ? option.getAttribute('label') : option_text}</li>`);\r\n                    \r\n                    //===> Create Sub Options <===//\r\n                    option.querySelectorAll('option').forEach(sub_option => {\r\n                        //===> Create Option <===//\r\n                        current_item = options_list.insert('append', `<li class=\"px-select-option mb-0 pdx-15 ${option_classes}\" data-value=\"${sub_option.getAttribute('value')}\" role=\"button\" tabIndex=\"0\">${image_icon}${sub_option.textContent}</li>`);\r\n                    });\r\n                }\r\n                \r\n                //====> Disabled Options  <====//\r\n                else if (option.hasAttribute('disabled')) {\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-disabled mb-0 pdx-15 color-gray tx-line-through ${option_classes}\" data-value=\"${option_value}\">${image_icon}${option_text}</li>`);\r\n                } \r\n                \r\n                //====> Options Items <====//\r\n                else {\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-option mb-0 pdx-15 ${option_classes}\" data-value=\"${option_value}\" role=\"button\" tabIndex=\"0\">${image_icon}${option_text}</li>`);\r\n                }\r\n\r\n                //====> Copy Classes <====//\r\n                let original_classes = option.classList;\r\n                if(original_classes.length > 0) original_classes.forEach((cl:any) => current_item.classList.add(cl));\r\n            });\r\n\r\n            //====> Create Placeholder <====//\r\n            let first_option = select.querySelector('option:first-of-type'),\r\n                first_label = placeholder ? placeholder : '---',\r\n                first_classes = (holder) => {\r\n                    //===> Get Placeholder Classes <===//\r\n                    if (placeholder && holder) return holder;\r\n                    else if (first_option.classList) return first_option.classList;\r\n                },\r\n                first_image = (image, alt) => {\r\n                    if(placeholder && image) {\r\n                        //===> Clean Source [URL] <===//\r\n                        image = encodeURI(image);\r\n                        //===> Set the image <===//\r\n                        return `<img style=\"width:1em\" alt=\"${alt}\" src=\"${image}\" class=\"me-5\">`;\r\n                    } else {return '';}\r\n                };\r\n\r\n            //====> Define [Multiple] Variables <====//\r\n            let new_select_value, new_value_group, tag_classes, tag_remover,\r\n                //====> Tag Remover Handler <====//\r\n                set_tag_remover = (value_element) => {\r\n                    if (value_element) value_element.addEventListener('click', clicked => {\r\n                        //===> Get Value <===//\r\n                        let tag_value = value_element.parentNode.getAttribute('data-value'),\r\n                            select_values = new_select[0].getAttribute('data-value').split(',');\r\n\r\n                        //===> Remove Tag <====//\r\n                        value_element.parentNode.remove();\r\n\r\n                        //===> Remove from Values <===//\r\n                        select_values.forEach((val, index) => {\r\n                            if(val === tag_value) {\r\n                                if (select_values.length === 1) {\r\n                                    select_values = \"\";\r\n                                } else {\r\n                                    select_values = select_values.splice(index-1, 1);\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        //====> Set Values <====//\r\n                        new_select[0].setAttribute('data-value', select_values);\r\n                        select.value = select_values;\r\n\r\n                        //====> Unselect Option <====//\r\n                        select.querySelector(`[value=\"${tag_value}\"]`)?.removeAttribute('selected');\r\n                        new_select[0].querySelector(`[data-value=\"${tag_value}\"]`)?.classList.remove('px-selected');\r\n                        \r\n                        //===> Fire Events <===//\r\n                        new_select[0].dispatchEvent(change);\r\n                        select.dispatchEvent(change);\r\n                    });\r\n                },\r\n                //====> Tag Remover Handler <====//\r\n                tag_padding_fixer = () => {\r\n                    //===> Remover Size Fixer <===//\r\n                    if(Phenix(document).direction() === 'ltr') return `padding-left: calc(1.5em + ${Phenix(document).toREM(8)})`;\r\n                    else return `padding-right: calc(1.5em + ${Phenix(document).toREM(8)})`;\r\n                },\r\n                //====> Default Value Setter <====//\r\n                get_default_value = () => {\r\n                    //====> Set Default Value <====//\r\n                    if (!multiple && select.querySelector('[selected]')) {\r\n                        //====> Set Value <====//\r\n                        let selected_option = select.querySelector('[selected]'),\r\n                            default_value = selected_option.getAttribute('value'),\r\n                            default_label = selected_option.textContent;\r\n\r\n                        new_select[0].setAttribute('data-value', default_value);\r\n                        new_select_value.textContent = default_label;\r\n\r\n                        //====> Change Classes <====//\r\n                        if(selected_option.classList) {\r\n                            //====> Get new Classes <====//\r\n                            let new_classes = selected_option.classList,\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => {\r\n                                if (cl === '') return;\r\n                                new_select_value.classList.remove(cl);\r\n                            });\r\n\r\n                            //====> Set New Classes <====//\r\n                            new_select_value.classList.add(...new_classes);\r\n                        }\r\n\r\n                        //====> Change Image <====//\r\n                        if (selected_option.getAttribute('data-image')) {\r\n                            //===> Get New Image <===//\r\n                            let new_image = encodeURI(selected_option.getAttribute('data-image')),\r\n                                current_image = new_select_value.querySelector('img'),\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //===> If Exist Change URL <====//\r\n                            if (current_image) {\r\n                                current_image.setAttribute('src', new_image);\r\n                                current_image.setAttribute('alt', selected_option.textContent);\r\n                            }\r\n\r\n                            //===> Create Image <===//\r\n                            else Phenix(new_select_value).insert('prepend', `<img style=\"width:1em\" alt=\"${selected_option.textContent}\" src=\"${new_image}\" class=\"me-5\">`);\r\n                        }\r\n                    } \r\n                    //====> For Multiple Selection <====//\r\n                    else if (multiple) {\r\n                        //====> Collect Default Value <====//\r\n                        let default_values = [],\r\n                            search_element = Phenix(new_value_group.querySelector('.px-select-search'));\r\n\r\n                        //====> Reset Value <====//\r\n                        new_value_group.querySelectorAll('.px-selected-value').forEach(value => value.remove());\r\n\r\n                        //====> Attach each Option as Tag <====// \r\n                        select.querySelectorAll('[selected]').forEach(item => {\r\n                            //====> Create the Option <====//\r\n                            let value_element = search_element.insert('before', `<span style=\"font-size: 0.8em;${tag_padding_fixer()}\" class=\"${tag_classes}\" data-value=\"${item.value}\">${tag_remover} ${item.textContent}</span>`);\r\n\r\n                            //====> Collect its Value <=====//\r\n                            default_values.push(item.value);\r\n\r\n                            //====> Set Remover <====//\r\n                            set_tag_remover(value_element.querySelector('.px-value-remover'));\r\n                        });\r\n                        //====> Set Default Values <====//\r\n                        new_select[0].setAttribute('data-value', default_values);\r\n                        select.value = default_values;\r\n                    }\r\n                };\r\n\r\n            //====> Multiple Mode <====//\r\n            if (multiple) {\r\n                //===> Tag Classes <===//\r\n                tag_classes = 'px-selected-value inline-block lineheight-160 bg-alpha-10 mb-5 radius-sm pdy-5 pde-10 me-5 position-rv';\r\n\r\n                //===> Tag Remover <===//\r\n                tag_remover = `<button type=\"button\" class=\"px-value-remover reset-button fs-inherit inline-block position-ab pos-center-y pos-start-0 h-100 bg-alpha-05\" style=\"width:1.5em\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" style=\"width:0.6em\">\r\n                        <path fill=\"var(--color)\" d=\"M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z\"/>\r\n                    </svg>\r\n                </button>`;\r\n\r\n                //===> Create Values Group <===//\r\n                new_value_group = new_select.insert('prepend', `<div class=\"px-selected-values pdt-5 px-select-toggle tx-nowrap col-12 flexbox align-center-y\">\r\n                    <input class=\"px-select-search col w-50 reset-input input-inherit mb-5\" placeholder=\"${first_label}\" />\r\n                </div>`);\r\n            }\r\n            //====> Single Mode <====//\r\n            else {\r\n                //===> Get First Label <===//\r\n                let first_label = placeholder ? placeholder : first_option.textContent,\r\n                    holder_classes = select.getAttribute('data-holder-classes'),\r\n                    holder_image   = select.getAttribute('data-image');\r\n\r\n                //===> Create Placeholder <===//\r\n                new_select_value = new_select.insert('prepend', `<button type=\"button\" class=\"reset-button h-min-100 px-select-toggle tx-nowrap col ${first_classes(holder_classes)}\">${first_image(holder_image,first_label)}${first_label}</button>`);\r\n\r\n                //===> Set First Option as Value <===//\r\n                new_select[0].setAttribute('data-value', `${first_option ? first_option.getAttribute('value') : ''}`);\r\n\r\n                //===> Style Placeholder <===//\r\n                Phenix(new_select_value).css({\r\n                    \"padding-left\": \"var(--padding)\",\r\n                    \"padding-right\": \"var(--padding)\",\r\n                });\r\n            }\r\n\r\n            //====> Set Default Value <====//\r\n            get_default_value();\r\n\r\n            //====> Disabled Mode <====//\r\n            if (select.hasAttribute('disabled')) new_select.addClass('disabled');\r\n            \r\n            //====> Enable Search <====//\r\n            if(search || multiple) {\r\n                //====> Create Search <====//\r\n                if (!multiple) options_list.insert('prepend', `<li class=\"pdy-5 pdx-15 divider-b flexbox flow-nowrap align-center-y\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"me-5\" style=\"width:.9em\">\r\n                        <path fill=\"var(--color)\" d=\"M508.5 468.9L387.1 347.5c-2.3-2.3-5.3-3.5-8.5-3.5h-13.2c31.5-36.5 50.6-84 50.6-136C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c52 0 99.5-19.1 136-50.6v13.2c0 3.2 1.3 6.2 3.5 8.5l121.4 121.4c4.7 4.7 12.3 4.7 17 0l22.6-22.6c4.7-4.7 4.7-12.3 0-17zM208 368c-88.4 0-160-71.6-160-160S119.6 48 208 48s160 71.6 160 160-71.6 160-160 160z\" />\r\n                    </svg>\r\n                    <input class=\"pdy-5 px-select-search col reset-input input-inherit w-50\" placeholder=\"${searchPlaceholder}\">\r\n                </li>`);\r\n\r\n                //====> Search <====//\r\n                new_select[0].querySelectorAll('.px-select-search').forEach(input => {\r\n                    input.addEventListener('input', typing => {\r\n                        //====> Get Search Value <====//\r\n                        let search_value = typing.target.value.toLowerCase();\r\n    \r\n                        //====> Hide All Group Titles <====//\r\n                        options_list[0].querySelectorAll('.px-select-group').forEach(headline => headline.classList.add('hidden'));\r\n                        \r\n                        //====> Loop Through Options <====//\r\n                        options_list[0].querySelectorAll('.px-select-option,.px-select-disabled').forEach(option => {\r\n                            //====> Hide Options <====//\r\n                            option.classList.add('hidden');\r\n    \r\n                            //====> Get Value <====//\r\n                            let option_value = option.getAttribute('data-value').toLowerCase(),\r\n                                option_label = option.textContent.toLowerCase();\r\n    \r\n                            //====> if matched show it <====//\r\n                            if (option_value.includes(search_value) || option_label.includes(search_value)) option.classList.remove('hidden');\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n\r\n            //====> Set Event Data <====//\r\n            events_data = {\r\n                select  : new_select[0],\r\n                original: select,\r\n                list    : options_list[0],\r\n                search  : new_select[0].querySelector('.px-select-search'),\r\n                value   : new_select[0].getAttribute('data-value'),\r\n            };\r\n\r\n            //====> Show Options <====//\r\n            new_select[0].querySelector('.px-select-toggle')?.addEventListener('click', clicked => {\r\n                //===> if Disabled <====//\r\n                if (select.hasAttribute('disabled') || clicked.target.matches('.px-selected-value')) return;\r\n                //===> Show Options <===//\r\n                Phenix(options_list).dynamicPosition().fadeToggle().toggleClass('is-opened');\r\n                //===> Fire Event <===//\r\n                events_data.value = new_select[0].getAttribute('data-value');\r\n                new_select[0].dispatchEvent(opened);\r\n                select.dispatchEvent(opened);\r\n            });\r\n\r\n            //====> Hide Options on Blank <====//\r\n            window.addEventListener('click', blank => {\r\n                //====> Clicked Target <====//\r\n                let clicked:any = blank.target,\r\n                    select_toggle = new_select[0].querySelector('.px-select-toggle'),\r\n                    select_search = new_select[0].querySelector('.px-select-search'),\r\n                    check_clicked = clicked !== new_select[0] && clicked !== select_toggle && !clicked.matches('.px-selected-value'),\r\n                    check_clicked_2 = clicked !== select_search && !clicked.matches('.px-select-disabled');\r\n\r\n                //====> if the target is not the current element or any of its children <====//\r\n                if (check_clicked && check_clicked_2) {\r\n                    Phenix(options_list).fadeOut().removeClass('is-opened');\r\n                    //===> Fire Event <===//\r\n                    events_data.value = new_select[0].getAttribute('data-value');\r\n                    new_select[0].dispatchEvent(closed);\r\n                    select.dispatchEvent(closed);\r\n                    //====> Search Reset <====//\r\n                    options_list[0].querySelectorAll('.hidden').forEach(hidden => hidden.classList.remove('hidden'));\r\n                }\r\n            });\r\n\r\n            //====> Set Option Value <====//\r\n            let set_value = (option) => {\r\n                option.addEventListener('click', clicked => {\r\n                    //===> Get the Options Value <===//\r\n                    let prevValue = new_select[0].getAttribute('data-value'),\r\n                        value = option.getAttribute('data-value'),\r\n                        label = option.textContent;\r\n\r\n                    //===> Set value and label <===//\r\n                    if (!multiple) {\r\n                        //====> Set Value <====//\r\n                        select.value = value;\r\n                        new_select_value.textContent = label;\r\n                        new_select[0].setAttribute('data-value', value);\r\n\r\n                        //====> Original Option <====//\r\n                        let original_option = select.querySelector(`[value=\"${value}\"]`);\r\n\r\n                        //====> Change Classes <====//\r\n                        if(original_option.classList?.length > 0) {\r\n                            //====> Get new Classes <====//\r\n                            let new_classes = select.querySelector(`[value=\"${value}\"]`).classList,\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''],\r\n                                prev_classes = select.querySelector(`[value=\"${prevValue}\"]`)?.classList;\r\n\r\n                            //====> Remove Old Classes <====//\r\n                            holder_classes.concat(...prev_classes).forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //====> Set New Classes <====//\r\n                            new_select_value.classList.add(...new_classes);\r\n                        }\r\n\r\n                        //====> Change Image <====//\r\n                        if (original_option && original_option.getAttribute('data-image')) {\r\n                            //===> Get New Image <===//\r\n                            let new_image = encodeURI(original_option.getAttribute('data-image')),\r\n                                current_image = new_select_value.querySelector('img'),\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //===> If Exist Change URL <====//\r\n                            if (current_image) {\r\n                                current_image.setAttribute('src', new_image);\r\n                                current_image.setAttribute('alt', option.textContent);\r\n                            }\r\n\r\n                            //===> Create Image <===//\r\n                            else Phenix(new_select_value).insert('prepend', `<img style=\"width:1em\" alt=\"${option.textContent}\" src=\"${new_image}\" class=\"me-5\">`);\r\n                        }\r\n                    } \r\n                    //===> Multiple Mode <===//\r\n                    else {\r\n                        //====> Get Current Value <====//\r\n                        let current_values = new_select[0].getAttribute('data-value').split(','),\r\n                        isSelected = false;\r\n                          \r\n                        //====> Check Selected Values <====//\r\n                        current_values.forEach(val => val === value ? isSelected = true : null);\r\n\r\n                        //===> if items has reaches the Maximum or is already Selected <===//\r\n                        if (current_values.length >= maxItems || isSelected) return;\r\n\r\n                        //====> Create the Option <====//\r\n                        let value_element = Phenix(new_value_group.querySelector('.px-select-search')).insert('before', `<span style=\"font-size: 0.8em;${tag_padding_fixer()}\" class=\"${tag_classes}\" data-value=\"${value}\">${tag_remover} ${label}</span>`);\r\n                        current_values.push(value);\r\n\r\n                        //====> Set Remover <====//\r\n                        set_tag_remover(value_element.querySelector('.px-value-remover'));\r\n\r\n                        //====> Set New Values <====//\r\n                        new_select[0].setAttribute('data-value', current_values);\r\n                        select.value = current_values;\r\n\r\n                        //====> Select Original Options <====//\r\n                        select.querySelector(`[value=\"${value}\"]`)?.setAttribute('selected', true);\r\n                        options_list[0].querySelector(`[data-value=\"${value}\"]`)?.classList.add('px-selected');\r\n                    }\r\n\r\n                    //===> Fire Event <===//\r\n                    events_data.value = new_select[0].getAttribute('data-value');\r\n                    new_select[0].dispatchEvent(change);\r\n                    select.dispatchEvent(change);\r\n                });\r\n            };\r\n\r\n            options_list[0].querySelectorAll(':scope > .px-select-option').forEach(option => set_value(option));\r\n\r\n            //====> Change Position on Scroll <====//\r\n            let isScrolling = false;\r\n            window.addEventListener('scroll', scrolling => isScrolling = true, {passive: true});\r\n\r\n            setInterval(() => {\r\n                if (isScrolling) {\r\n                    isScrolling = false;\r\n                    Phenix(options_list).dynamicPosition();\r\n                }\r\n            }, 300);\r\n\r\n            //===> Update Value <==//\r\n            select.addEventListener('update', isUpdated => get_default_value());\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n}\r\n\r\n//====> Rebuild Select Method <====//\r\nPhenixElements.prototype.rebuildSelect = function () {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(select => {\r\n        //====> Get the Select Wrapper <====//\r\n        let selectWrapper = Phenix(select).ancestor('.px-select');\r\n\r\n        //====> Remove Mounted Class <====//\r\n        select.classList.remove('px-mounted', 'hidden');\r\n\r\n        //====> Move the Select Element and Remove the Select Wrapper <====//\r\n        Phenix(selectWrapper).insert('before', select);\r\n        selectWrapper.remove();\r\n\r\n        //====> Rebuild the Select Element <====//\r\n        Phenix(select).select();\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Tabs Panels\r\n * ===> 03 - Default Options\r\n * ===> 03 - Activator\r\n * ===> 03 - Loop Through Phenix Query\r\n * ===> 03 - \r\n * ===> 09 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Tabs Panels <====*/\r\nPhenixElements.prototype.tabs = function (options?:{\r\n    active?:number,     //===> Show Tab # on Initial\r\n    navigation?:string, //===> Navigation Selector\r\n    hash_url?:boolean,  //===> Show Tab from URL #ID\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(tabs => {\r\n        //====> Options Data <====//\r\n        let active =  parseInt(tabs.getAttribute('data-active')) || options?.active || 0,\r\n            navigation = options?.navigation || '.tabs-navigation',\r\n            hash_url = options?.hash_url || tabs.getAttribute('data-hash'),\r\n            panels  = tabs.querySelectorAll('.tab-panel'),\r\n            buttons = tabs.querySelector(navigation).querySelectorAll('[data-tab], [href^=\"#\"]'),\r\n            isHashed = window.location.hash && hash_url && hash_url !== '0' || hash_url !== 'false';\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('tab-showed'),\r\n              hidden = new Event('tab-hidden');\r\n\r\n        //====> Hide All Tabs <====//\r\n        panels.forEach((panel, index) => {\r\n            //====> Default Activation <====//\r\n            if (index === active) {\r\n                panel.classList.add('active');\r\n                panel.classList.remove('hidden');\r\n                //====> Fire Event <====//\r\n                panel.dispatchEvent(showed);\r\n            } else {\r\n                panel.classList.add('hidden');\r\n            }\r\n        });\r\n\r\n        //====> Loop Through Buttons <====//\r\n        buttons.forEach((button:HTMLElement, index:number) => {\r\n            //====> Default Activation <====//\r\n            if (index === active) button.classList.add('active');\r\n\r\n            //====> Set Accessibility Options <====//\r\n            button.setAttribute('role', 'button');\r\n            button.setAttribute('tabIndex', '0');\r\n\r\n            //====> Tab Clicked <====//\r\n            Phenix(button).on('click', clicked => {\r\n                //====> Prevent Default Behaver <====//\r\n                clicked.preventDefault();\r\n\r\n                //====> Get the Panel ID <====//\r\n                let button = clicked.target,\r\n                    tab_id = button.getAttribute('data-tab');\r\n\r\n                if (!tab_id && button.hasAttribute('href')) {\r\n                    tab_id = button.getAttribute('href')?.replace('#','');\r\n                    if (button.parentNode.childNodes.length < 2) button = button.parentNode;\r\n                }\r\n\r\n                //====> Add to URL <====//\r\n                if (hash_url && hash_url !== '0' || hash_url !== 'false') {\r\n                    const url = window.location.href.replace(location.hash, \"\") + `#${tab_id}`;\r\n                    history.pushState({ additionalInformation: 'Updated the URL with JS' }, document.title, url);\r\n                }\r\n\r\n                //====> Active the Button <====//\r\n                Phenix(button).addClass('active').siblings()?.forEach(sibling => sibling.classList.remove('active'));\r\n\r\n                //====> Active the Panel and Get its Siblings <====//\r\n                let TabElement:any = Phenix(`#${tab_id}`),\r\n                    TabDisplay = TabElement[0].getAttribute('data-display') || \"block\";\r\n\r\n                TabElement.fadeIn(700, 0, TabDisplay).addClass('active').removeClass('hidden').siblings('.tab-panel')?.forEach(panel => {\r\n                    //====> Fire Event <====//\r\n                    document.querySelector(`#${tab_id}`).dispatchEvent(showed);\r\n\r\n                    //====> if the sibling is active <====//\r\n                    if (panel.classList.contains('active')) {\r\n                        //===> Deactivate the Panel <===//\r\n                        let the_panel:any = Phenix(panel).removeClass('active').addClass('hidden')[0];\r\n                        the_panel.style.display = null;\r\n                        //====> Fire Event <====//\r\n                        panel.dispatchEvent(hidden);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        //====> Active By URL <====//\r\n        if (isHashed) {\r\n            window.addEventListener('load', () => {\r\n                //====> Get the Panel ID <====//\r\n                let tab_id = window.location.hash.substr(1);\r\n\r\n                //====> Active the Panel and Get its Siblings <====//\r\n                if(tab_id) {\r\n                    //====> Active the Panel <====//\r\n                    Phenix(`#${tab_id}`).fadeIn().addClass('active').removeClass('hidden').siblings('.tab-panel').forEach(panel => {\r\n                        //====> Check if it is active <====//\r\n                        if (!panel.classList.contains('active')) return;\r\n                        //====> Deactivate the Panel <====//\r\n                        let the_panel:any = Phenix(panel).removeClass('active').addClass('hidden')[0];\r\n                        //===> Clear Display Style <===//\r\n                        the_panel.style.display = null;\r\n                    });\r\n\r\n                    //===> Active the Panel Button <===//\r\n                    Phenix(`[data-tab=\"${tab_id}\"], [href=\"#${tab_id}\"]`).forEach((button:any) => {\r\n                        //====> get this button <====//\r\n                        let target = button;\r\n\r\n                        //====> if the button is inside a list <====//\r\n                        if (button.hasAttribute('href') && button.parentNode.tagName === \"li\") target = button.parentNode;\r\n\r\n                        //====> Active the Button <====//\r\n                        Phenix(target).addClass('active').siblings()?.forEach(sibling => sibling.classList.remove('active'));\r\n                    });\r\n\r\n                    //====> Fire Event <====//\r\n                    document.querySelector(`#${tab_id}`).dispatchEvent(showed);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Timer Counter\r\n * ===> 03 - Loop Through Phenix Elements\r\n * ===> 04 - Get Options Data\r\n * ===> 05 - Timer Markup Elements\r\n * ===> 06 - Create Date Object\r\n * ===> 07 - Time Loop\r\n * ===> 08 - Get Elapsed Time\r\n * ===> 09 - Timer Calculation\r\n * ===> 10 - Update Timer\r\n * ===> 11 - Clear Time Loop\r\n * ===> 12 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Timer Counter <====*/\r\nPhenixElements.prototype.timer = function (options?:{\r\n    type?:string,    //===> Timer Type [countdown, stopwatch]\r\n    time?:string,    //===> Time = Hour:Minutes\r\n    date?:string,    //===> Date = Year-Month-Day\r\n    message?:string, //===> Time End Message\r\n    lazyloading?:boolean,   //===> Lazyloading Timer\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let type = element.getAttribute('data-type') || options?.type || 'countdown',\r\n            time = element.getAttribute('data-time') || options?.time || '00:00',\r\n            date = element.getAttribute('data-date')?.replace(/:/g, \"/\") || options?.date.replace(/:/g, \"/\") || '',\r\n            message = element.getAttribute('data-message') || options?.message || 'Time is up.',\r\n            lazyloading = element.getAttribute('data-lazy') || options?.lazyloading,\r\n            elementPds = Phenix(element);\r\n\r\n        //====> Create Custom Event <====//\r\n        const start_event = new Event('timerStart'),\r\n              end_event = new Event('timerEnd');\r\n\r\n        //====> Countdown Mode<====//\r\n        if (type == 'countdown') {\r\n            //====> Timer Handler <====//\r\n            let timer_handler = () => {\r\n                //====> Timer Markup Elements <====//\r\n                let childs  = {\r\n                    seconds : element.querySelector('.seconds') || elementPds.insert('append', `<span data-label=\"seconds\" class=\"seconds\">00</span>`),\r\n                    minutes : element.querySelector('.minutes') || elementPds.insert('append', `<span data-label=\"minutes\" class=\"minutes\">00</span>`),\r\n                    hours   : element.querySelector('.hours')   || elementPds.insert('append', `<span data-label=\"hours\" class=\"hours\">00</span>`),\r\n                    days    : element.querySelector('.days')    || elementPds.insert('append', `<span data-label=\"days\" class=\"days\">00</span>`)\r\n                };\r\n    \r\n                //====> Convert Date <====//\r\n                if(date.split(\"-\")[0].length < 4) date = date.split(/\\D/).reverse().join('-');\r\n\r\n                //====> Fire Starting Event <====//\r\n                setTimeout(() => element.dispatchEvent(start_event), 200);\r\n\r\n                //====> Time Loop <====//\r\n                let stringDate = new Date(`${date}T${time}`).getTime(),\r\n                    update = setInterval(function () {\r\n                        //====> Get Elapsed Time <====//\r\n                        let current = new Date().getTime(),\r\n                            elapsed = stringDate - current,\r\n                            //====> Timer Calculation <====//\r\n                            days = Math.floor(elapsed / (1000 * 60 * 60 * 24)),\r\n                            hours = Math.floor((elapsed % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n                            minutes = Math.floor((elapsed % (1000 * 60 * 60)) / (1000 * 60)),\r\n                            seconds = Math.floor((elapsed % (1000 * 60)) / 1000);\r\n        \r\n                        //====> Update Timer <====//\r\n                        childs.seconds.innerHTML = seconds.toString().padStart(2, '0');\r\n                        childs.minutes.innerHTML = minutes.toString().padStart(2, '0');\r\n                        childs.hours.innerHTML = hours.toString().padStart(2, '0');\r\n                        childs.days.innerHTML = days.toString().padStart(2, '0');\r\n        \r\n                        //====> Clear Time Loop <====//\r\n                        if (elapsed < 0) {\r\n                            clearInterval(update);\r\n                            element.innerHTML = `<p class=\"timer-message reset-block\">${message}</p>`;\r\n                            element.classList.add('px-timer-ended');\r\n                            //====> Fire Ending Event <====//\r\n                            element.dispatchEvent(end_event);\r\n                        }\r\n                    }, 1000);\r\n            }\r\n\r\n            //====> Set Timer <====//\r\n            if (lazyloading) {\r\n                //===> First View <===//\r\n                if (Phenix(element).inView()) timer_handler();\r\n                //===> Hidden View <===//\r\n                window.addEventListener('scroll', scrolling => {\r\n                    Phenix(element).inView() ? timer_handler() : null\r\n                });\r\n            } else {\r\n                timer_handler();\r\n            };\r\n        }\r\n\r\n        //====> Countdown Mode<====//\r\n        else if (type == 'stopwatch') {\r\n            //====> Timer Handler <====//\r\n            let timer_handler = () => {\r\n                //====> Timer Markup Elements <====//\r\n                let time_unites = time.split(':'),\r\n                    total_seconds = 0,\r\n                    childs  = {\r\n                        hours   : time_unites.length >= 3 ? element.querySelector('.hours')   || elementPds.insert('append', `<span data-label=\"hours\" class=\"hours\">00</span>`) : '',\r\n                        minutes : time_unites.length >= 2 ? element.querySelector('.minutes') || elementPds.insert('append', `<span data-label=\"minutes\" class=\"minutes\">00</span>`) : '',\r\n                        seconds : element.querySelector('.seconds') || elementPds.insert('append', `<span data-label=\"seconds\" class=\"seconds\">00</span>`),\r\n                    };\r\n                //====> Fire Starting Event <====//\r\n                setTimeout(() => element.dispatchEvent(start_event), 200);\r\n                //====> Time Loop <====//\r\n                let update = setInterval(function () {\r\n                    //====> Increase Seconds <====//\r\n                    ++total_seconds;\r\n                    //====> Increase Seconds <====//\r\n                    let hours:any = Math.floor(total_seconds / 3600),\r\n                        minutes:any = Math.floor((total_seconds - hours * 3600) / 60),\r\n                        seconds:any = total_seconds - (hours * 3600 + minutes * 60);\r\n\r\n                    //====> Convert to Dubble Digits <====//\r\n                    hours = hours.toString().padStart(2, '0');\r\n                    minutes = minutes.toString().padStart(2, '0');\r\n                    seconds = seconds.toString().padStart(2, '0');\r\n\r\n                    //====> Update Timer <====//\r\n                    time_unites.length >= 3 ? childs.hours.innerHTML = hours : '';\r\n                    time_unites.length >= 2 ? childs.minutes.innerHTML = minutes : '';\r\n                    childs.seconds.innerHTML = seconds;\r\n\r\n                    //====> Timer Checker <====//\r\n                    let timer_checker = () => {\r\n                        if (time_unites.length >= 3) return `${hours}:${minutes}:${seconds}`;\r\n                        else if (time_unites.length >= 2) return `${minutes}:${seconds}`;\r\n                        else return `${seconds}`;\r\n                    };\r\n\r\n                    //====> Clear Time Loop <====//\r\n                    if (time == timer_checker()) {\r\n                        clearInterval(update);\r\n                        element.innerHTML = `<p class=\"timer-message reset-block\">${message}</p>`;\r\n                        element.classList.add('px-timer-ended');\r\n                        //====> Fire Ending Event <====//\r\n                        element.dispatchEvent(end_event);\r\n                    }\r\n                }, 1000);\r\n            }\r\n\r\n            //====> Set Timer <====//\r\n            if (lazyloading) {\r\n                //===> First View <===//\r\n                if (elementPds.inView()) timer_handler();\r\n                //===> Hidden View <===//\r\n                window.addEventListener('scroll', scrolling => {\r\n                    elementPds.inView() ? timer_handler() : null\r\n                });\r\n            } else {\r\n                timer_handler();\r\n            };\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - \r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Uploader [un-tested] <====*/\r\nPhenixElements.prototype.uploader = function (options?:{\r\n    type?:string,   //===> standard, advanced\r\n    src?:string,    //===> Media Source [URL]\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(uploader => {\r\n        if(uploader.classList.contains('px-done')) return;\r\n        //====> Options <====//\r\n        let type = uploader.getAttribute('data-uploader') || options?.type || 'standard',\r\n            controler = uploader.querySelector('input[type=\"file\"]'),\r\n            multiple  = uploader.getAttribute('multiple' || 'data-multiple'),\r\n            placeholder = uploader.getAttribute('data-placeholder') || 'Drag and Drop your file to upload';\r\n\r\n        //====> Standard Uploader <===//\r\n        if (type == 'standard') {\r\n            //====> When Select a file <===//\r\n            controler.addEventListener('change', event => {\r\n                //===> Get Files Names <===//\r\n                var filePath = [];\r\n                for (var i = 0; i < controler.files.length; ++i) filePath.push(controler.files[i].name);\r\n                //===> Set Files Names <===//\r\n                uploader.setAttribute('data-placeholder', filePath);\r\n            });\r\n        } else {\r\n            //====> set Uploader Placeholder <====//\r\n            Phenix(controler).insert('after', `<span>${placeholder}</span><ul class=\"files\"></ul>`);\r\n\r\n            //====> Change File Function <===//\r\n            const changeFile = (files) => {\r\n                //===> Get File Data <===//\r\n                var filePath = [],\r\n                    filesList = uploader.querySelector('.files'),\r\n                    fileType,\r\n                    fileUrl;\r\n                //===> Set Files Data <===//\r\n                for (var i = 0; i < files.length; ++i) {\r\n                    filePath.push(files[i].name);\r\n                    fileType = files[i].type.split('/');\r\n                    fileUrl = URL.createObjectURL(files[i]);\r\n                }\r\n                //===> Reset File List <===//\r\n                filesList.innerHTML = '';\r\n                //===> Create Files List <===//\r\n                filePath.forEach(file => {\r\n                    //===> Create new File Item <===//\r\n                    Phenix(filesList).insert('append', `<li>${file}</li>`);\r\n\r\n                    //===> Handle Previews <===//\r\n                    if(multiple === null) {\r\n                        //===> Image Preview Mode <===//\r\n                        if(fileType[0] === 'image') {\r\n                            uploader.style.backgroundImage = `url(${fileUrl})`;\r\n                            uploader.classList.add('image-mode');\r\n                            //===> if Video , Reset <===//\r\n                            if (uploader.classList.contains('video-mode')) {\r\n                                uploader.classList.remove('video-mode');\r\n                                uploader.querySelector('video')?.remove();\r\n                            }\r\n                        }\r\n                        //===> Video Preview Mode <===//\r\n                        if (fileType[0] === 'video') {\r\n                            uploader.classList.add('video-mode');\r\n                            var videoCheck = Phenix(controler).next('video');\r\n                            //===> if video exist replace data else create new video <==//\r\n                            if(videoCheck) videoCheck.remove();\r\n                            Phenix(controler).insert('after', `<video controls><source src=\"${fileUrl}\" type=\"video/${fileType[1]}\"></video>`);\r\n                            //===> if Image , Reset <===//\r\n                            if (uploader.classList.contains('image-mode')) {\r\n                                uploader.classList.remove('image-mode');\r\n                                uploader.style.backgroundImage = null;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                //===> File Type <===//\r\n            };\r\n\r\n            //====> Change File <===//\r\n            controler.addEventListener('change', event => changeFile(event.target.files));\r\n\r\n            //====> Highlight Droparea <===//\r\n            controler.addEventListener('dragenter', event => uploader.classList.add('highlight'));\r\n            controler.addEventListener('dragleave', event => uploader.classList.remove('highlight'));\r\n\r\n            //====> Drop Files <===//\r\n            controler.addEventListener('drop', event => {\r\n                /*====> get Files <====*/\r\n                var data = event.dataTransfer,\r\n                    files = data.files;\r\n                controler.files = files;\r\n                uploader.classList.remove('highlight')\r\n            });\r\n        }\r\n        //===> Done <===//\r\n        uploader.classList.add('px-done');\r\n    });\r\n}","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix from '.';\r\ndeclare var PDS_WP_KEY: any;\r\n\r\n//======> D.O.M is Ready [for you] <=======//\r\nPhenix(document).ready((event:any) => {});","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animations\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Animations Loader\r\n * ===> 05 - Directions Resolve\r\n * ===> 06 - Hide the Element\r\n * ===> 07 - Animate Method\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animations <====*/\r\nPhenixElements.prototype.animations = function (options?:{\r\n    animation?:string, //===> Animation Name\r\n    duration?:number,  //===> Animation Duration\r\n    delay?:number,     //===> Animation Delay\r\n    animateCSS?:boolean, //===> Animations Library\r\n    directionFix?:boolean, //===> Directions Resolver\r\n    flow:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    into:number,    //====> Increase Target Position By [number]\r\n    offset:number,  //====> Decrease Target Position By [number]\r\n    lazyloading:boolean, //====> to Animate Element after Another\r\n    lazygroup:any,      //====> Define the group fo each lazyloading group\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    let viewPort_Handler = this.forEach((element:any, index) => {\r\n        //====> if its the Main Document Return Nothing <====//\r\n        if (element === window.document) return;\r\n\r\n        //====> Get Options Data <====//\r\n        let animation = element.getAttribute('data-animation') || options?.animation || 'fadeIn',\r\n            duration  = parseInt(element.getAttribute('data-duration')) || options?.duration || 700,\r\n            offset = parseInt(element.getAttribute('data-offset')) || options?.offset || false,\r\n            flow = parseInt(element.getAttribute('data-flow')) || options?.flow || false,\r\n            into = parseInt(element.getAttribute('data-into')) || options?.into || false,\r\n            delay = parseInt(element.getAttribute('data-delay')) || options?.delay || 0,\r\n            lazygroup = element.getAttribute('data-lazy-group') || options?.lazygroup || false,\r\n            directionFix = options?.directionFix || true;\r\n\r\n        //====> Directions Resolve <====//\r\n        if (directionFix) {\r\n            //====> Get Direction <====//\r\n            let pageDir = Phenix(document).direction();\r\n\r\n            //====> Fix Directions <====//\r\n            if (animation.includes('Start')) {\r\n                animation = animation.replace('Start', pageDir === 'ltr' ? 'Left' : 'Right');\r\n            } else if (animation.includes('End')) {\r\n                animation = animation.replace('End',  pageDir === 'ltr' ? 'Right' : 'Left');\r\n            }\r\n        }\r\n\r\n        //====> Hide the Element <====//\r\n        element.classList.add('visibility-hidden', 'animated');\r\n        //====> Set Duration <====//\r\n        // if (!element.getAttribute('data-duration')) element.setAttribute('data-duration', duration);\r\n\r\n        //===> Set the Animation Name as CSS Variable <====//\r\n        element.style.setProperty('--animation-delay', delay);\r\n        element.style.setProperty('--animation-name', animation);\r\n        element.style.setProperty('--animation-duration', duration);\r\n\r\n        //====> if the Element in view Show it <====//\r\n        let isInView = () => {\r\n            //====> Animations CSS <====//\r\n            if (delay) element.style.animationDelay = `${delay}ms`;\r\n            if (duration) element.style.animationDuration = `${duration}ms`;\r\n\r\n            //====> Animate Method <====//\r\n            let animate = () => {\r\n                //====> Show the Element <====//\r\n                Phenix(element).removeClass('visibility-hidden');\r\n                //====> Slider Fallback <====//\r\n                if (Phenix(element).ancestor('.px-slider')) return;\r\n                //====> Animations Classes <====//\r\n                element.classList.add('view-active', animation);\r\n            }\r\n\r\n            //====> Animate if it is in ViewPort <====//\r\n            if (Phenix(element).inView({offset:offset, into: into, flow: flow})) animate();\r\n\r\n            //===> When is out of view Reset <===//\r\n            // else element.classList.remove('view-active', animation);\r\n        };\r\n\r\n        //====> Lazyloading Group <====//\r\n        if (lazygroup) {\r\n            //===> Define Delay <===//\r\n            let current_delay = 0;\r\n\r\n            //===> Loop over the Animated Children <===//\r\n            element.querySelectorAll('[data-animation]').forEach((item, index) => {\r\n                current_delay += duration/2;\r\n                item.setAttribute('data-delay', current_delay/3);\r\n                element.style.setProperty('--animation-delay', current_delay/3);\r\n            });\r\n        }\r\n\r\n        //====> Check for Loading Screen <====//\r\n        const startAnimations = () => {\r\n            //====> First View <====//\r\n            isInView();\r\n            //====> Scrolling Spy <====//\r\n            Phenix(window).on('scroll', isInView);\r\n        }\r\n\r\n        //====> Get Loading Screen <====//\r\n        let loadingScreen:any = document.querySelector(\".px-page-loader\");\r\n\r\n        //====> Check for Loading Screen <====//\r\n        if (loadingScreen) {\r\n            //====> Search for Loading Screen <====//\r\n            let loadingScreenChecker = setInterval(() => {\r\n                //===> When the Loading Screen is Hidden <===//\r\n                if (Phenix(loadingScreen).getCSS('display') === 'none') {\r\n                    //===> Start Animations <====//\r\n                    startAnimations();\r\n                    //====> Clear Interval <====//\r\n                    clearInterval(loadingScreenChecker);\r\n                }\r\n            }, 500);\r\n        } else startAnimations();\r\n    });\r\n\r\n    //====> Animations Loader <====//\r\n    let thirdParty:any = options?.animateCSS || 'all';\r\n\r\n    //====> Loading Handler <====//\r\n    let animation_loader = (package_name, id) => {\r\n        if (document.querySelector(`#px-animations${id}`)) return;\r\n\r\n        //===> Create Script Element <===//\r\n        let animations_loader = document.createElement(\"link\"),\r\n            package_url =  `${Phenix(document).getURL().phenixCSS}animations/${package_name}.css`;\r\n\r\n        //===> Set Attributes <===//\r\n        animations_loader.setAttribute('id', `px-animations${id}`);\r\n        animations_loader.setAttribute('rel', 'stylesheet');\r\n        animations_loader.setAttribute('class', 'px-css-file');\r\n        animations_loader.setAttribute('media', 'screen and (min-width: 2500px)');\r\n\r\n        //===> Set Source <===//\r\n        animations_loader.setAttribute(\"href\", package_url);\r\n\r\n        //===> Append Script <===//\r\n        document.head.appendChild(animations_loader);\r\n\r\n        //====> When Loaded Run <====//\r\n        animations_loader.addEventListener(\"load\", () => {\r\n            viewPort_Handler;\r\n            animations_loader.setAttribute('media', 'all');\r\n        });\r\n\r\n        //====> When Error Re-Load <====//\r\n        animations_loader.addEventListener(\"error\", () => animations_loader.setAttribute(\"href\", package_url));\r\n    }\r\n    \r\n    //====> Load All Animations <====//\r\n    if (thirdParty.includes('all')) {\r\n        animation_loader('all', '');\r\n    }\r\n\r\n    //====> Load Packages one by one <====//\r\n    else {\r\n        if (thirdParty === Array) thirdParty.push('utilities');\r\n        thirdParty.forEach(animate_package => animation_loader(animate_package, `-${animate_package}`));\r\n    }\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Collapse\r\n * ===> 03 - Loop Through Phenix Query\r\n * ===> 04 - Get Options\r\n * ===> 05 - Create Custom Event\r\n * ===> 06 - Collapse Handler\r\n * ===> 07 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Collapse <====*/\r\nPhenixElements.prototype.collapse = function (options?:{\r\n    target?:string;   //===> Panel Target Selector\r\n    related?:boolean; //===> Panel Target is related to the button in the DOM Tree\r\n    parent?:string;   //===> Accordion Group Selector\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(button => {\r\n        //====> if is Done Return no thing <====//\r\n        if(button.classList.contains('pxjs-done')) return;\r\n\r\n        //====> Get Options <====//\r\n        let classes = button.classList,\r\n            parent = button.getAttribute('data-parent') || options?.parent,\r\n            related = button.getAttribute('data-related') || options?.related,\r\n            active_class = 'px-collapse-active',\r\n            target = button.getAttribute('data-target') || options?.target;\r\n\r\n        //===> Add Icon Class Name <====//\r\n        classes.forEach((className:string) => {\r\n            //===> Get the Icon Name <===//\r\n            if(className.includes('fa-')) button.setAttribute('data-trigger-icon-normal', `${className}`);\r\n        });\r\n\r\n        //===> Store the Icon Name <===//\r\n        const normal_icon = button.getAttribute('data-trigger-icon-normal');\r\n\r\n        //===> Get the Icon Class for Active <===//\r\n        if (normal_icon && normal_icon.includes('plus')) {\r\n            button.setAttribute('data-trigger-icon', `${normal_icon.replace('plus', 'minus')}`);\r\n        } else if (normal_icon && normal_icon.includes('down')) {\r\n            button.setAttribute('data-trigger-icon', `${normal_icon.replace('down', 'up')}`);\r\n        }\r\n\r\n        //===> Change Active Item Icon <===//\r\n        const active_icon = button.getAttribute('data-trigger-icon');\r\n        if (button.classList.contains(active_class)) {\r\n            button.classList.add(active_icon);\r\n            button.classList.remove(normal_icon);\r\n        }\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('collapse-showed'),\r\n              hidden = new Event('collapse-hidden');\r\n\r\n        //====> Get Target as Element <====//\r\n        if (typeof(target) === 'string') {\r\n            related ? target = Phenix(button).siblings(target)[0] : target = document.querySelector(target);\r\n        }\r\n\r\n        //====> Collapse Handler <====//\r\n        let collapse_handler = () => {\r\n            //====> Show if its Hidden <====//\r\n            if (Phenix(target).getCSS('display') === 'none') {\r\n                //====> Hide Other Panels <====//\r\n                if (parent) {\r\n                    //====> Get Other Activated Items <====//\r\n                    let others = Phenix(button).ancestor(parent).querySelectorAll(`.${active_class}`);\r\n\r\n                    //====> and for each item <====//\r\n                    others.forEach(element => {\r\n                        //====> Remove Active Class <====//\r\n                        element.classList.remove(active_class, active_icon);\r\n                        //====> Hide Targets <====//\r\n                        if (element.matches(button.getAttribute('data-target') || options?.target)) {\r\n                            Phenix(element).slideUp();\r\n                        } else {\r\n                            element.classList.add(normal_icon);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                //====> Active Button <====//\r\n                button.classList.remove(normal_icon);\r\n                button.classList.add(active_class, active_icon);\r\n\r\n                //====> Show Target <====//\r\n                Phenix(target).slideDown().addClass(active_class);\r\n\r\n                //====> Fire Event <====//\r\n                button.dispatchEvent(showed);\r\n                target.dispatchEvent(showed);\r\n            }\r\n            //====> Hide if its Shown <====//\r\n            else {\r\n                //====> Active Button <====//\r\n                button.classList.add(normal_icon);\r\n                button.classList.remove(active_class, active_icon);\r\n\r\n                //====> Show Target <====//\r\n                Phenix(target).slideUp().removeClass(active_class);\r\n\r\n                //====> Fire Event <====//\r\n                button.dispatchEvent(hidden);\r\n                target.dispatchEvent(hidden);\r\n            }\r\n        };\r\n\r\n        //====> ... <====//\r\n        button.addEventListener('click', collapse_handler);\r\n\r\n        //====> Set Accessibility Options <====//\r\n        button.setAttribute('role', 'button');\r\n        button.setAttribute('tabIndex', '0');\r\n\r\n        //====> Done <====//\r\n        button.classList.add('pxjs-done');\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animated Counter\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Counter Data\r\n * ===> 05 - Count Runer\r\n * ===> 06 - Start Counting\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animated Counter <====*/\r\nPhenixElements.prototype.counter = function (options?:{\r\n        value?:number,    //===> Number to Count\r\n        duration?:number, //===> Animation Duration\r\n        delay?:number,    //===> Animation Delay\r\n        decimal?:number,  //===> Decimal Numbers Support\r\n        symbol?:string,   //===> Symbol After the Number\r\n        steps?:number,    //===> Count per Step\r\n        reverse?:boolean, //===> Count Down instead of Up\r\n        lazyloading?:boolean, //===> Lazyload Animation\r\n    }) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let duration = parseInt(element.getAttribute('data-duration')) || options?.duration || 2000,\r\n            decimal  = parseInt(element.getAttribute('data-decimal')) || options?.decimal || 0,\r\n            value    = parseInt(element.getAttribute('data-value')) || options?.value || parseInt(element.textContent.replaceAll(',','')),\r\n            symbol   = element.getAttribute('data-symbol') || options?.symbol || '',\r\n            delay    = parseInt(element.getAttribute('data-delay')) || options?.delay  || 0,\r\n            steps    = parseInt(element.getAttribute('data-steps')) || options?.steps  || 10,\r\n            reverse  = element.getAttribute('data-reverse') || options?.reverse || false,\r\n            lazyloading = element.getAttribute('data-lazy') || options?.lazyloading,\r\n            counting = element.classList.contains('counting');\r\n\r\n        //====> Counter Data <===//\r\n        let input = (element.nodeName.toLowerCase() === 'input') ? true : false,\r\n            count = 0,\r\n            increment = Math.ceil(value / (duration / steps)),\r\n            interval = null,\r\n            decimal_regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n\r\n        //====> Switch Count for Counting Down <====//\r\n        if (reverse) count = value;\r\n\r\n        \r\n        //====> Count Runner <===//\r\n        const runCounter = () => {\r\n            //===> Round Up Values <===//\r\n            // count = Math.round(count);\r\n            // value = Math.round(value);\r\n\r\n            //===> Set is Counting <===//\r\n            if (!counting) element.classList.add('counting');\r\n\r\n            //===> if [Count Down] is Activated => Decrease the Count Otherwise Increase the Count <===//\r\n            count += (reverse ? -Math.min(increment, Math.abs(value - count)) : Math.min(increment, Math.abs(value - count)));\r\n            // if (reverse && count > 0) count -= increment;\r\n            // else if (count < value) count += increment;\r\n\r\n            //===> Current Value <===//\r\n            // let current = `${count.toFixed(decimal).toString().replace(decimal_regex, ',')}${symbol}`;\r\n\r\n            //===> Update the Element <===//\r\n            element[ input ? 'value' : 'innerHTML' ] = `${count.toFixed(decimal).toString().replace(decimal_regex, ',')}${symbol}`;\r\n            // if (input) element.value = current;\r\n            // //===> Otherwise <===//\r\n            // else element.innerHTML = current;\r\n\r\n            //===> Clear When Count Up Reaches The Target <===//\r\n            if (count === (reverse ? 0 : value)) clearInterval(interval);\r\n        };\r\n\r\n        //====> Counter Handler <====//\r\n        let counter_handler = () => {\r\n            setTimeout(function() {\r\n                interval = setInterval(runCounter.bind(this), steps);\r\n            }.bind(this), delay);\r\n        }\r\n\r\n        //====> Run Counter <====//\r\n        if (lazyloading) {\r\n            //===> First View <===//\r\n            if (Phenix(element).inView()) {\r\n                counter_handler();\r\n            }\r\n            //===> Hidden View <===//\r\n            if(!counting) window.addEventListener('scroll', scrolling => {\r\n                counting = element.classList.contains('counting');\r\n                if(!counting && Phenix(element).inView()) counter_handler();\r\n            });\r\n        } else {\r\n            counter_handler();\r\n        };\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Smoth-Scroll\r\n * ===> 03 - Sticky Elements\r\n * ===> 04 - Scroll-Spy\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Smooth-Scroll [Bugged] <====*/\r\nPhenixElements.prototype.smothScroll = function (options?:{\r\n    target?:string,   //===> Target to Scroll to\r\n    offset?:number,   //===> Decrease Target Position By [number]\r\n    into?:number,     //===> Increase Target Position By [number]\r\n    duration?:number, //===> Scroll Animation Duration\r\n    delay?:number,    //===> Delay Before Scroll\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.on('click', event => {\r\n        //====> Prevent Default Click Behavior <====//\r\n        event.preventDefault();\r\n\r\n        //====> Element Data <====//\r\n        let element:HTMLElement = event.target,\r\n            target:HTMLElement  = document.querySelector(element.getAttribute('href')?.length > 1 ? element.getAttribute('href') : element.getAttribute('data-target') ? element.getAttribute('data-target') : options.target ? options?.target : 'div:first-of-type'),\r\n            start:number  = null,\r\n            into:number   = parseInt(element.getAttribute('data-into')) || options?.into || 0,\r\n            offset:number = parseInt(element.getAttribute('data-offset')) || options?.offset || 0,\r\n            viewPos:number  = Math.round(window.pageYOffset || window.scrollY),\r\n            duration:number = parseInt(element.getAttribute('data-duration')) || options?.duration || 700,\r\n            delay:number = parseInt(element.getAttribute('data-delay')) || options?.delay || 0,\r\n            posTest = target?.getBoundingClientRect(),\r\n            position:number = posTest ? Math.round(posTest?.top) : 0,\r\n            numCheck = (n) => {return 1/(n*0)===1/0},\r\n            //====> Animations Timing Function <====//\r\n            timeFunc:any  = (time, current, target, duration) => {\r\n                //===> Time / Duration / 2 <===//\r\n                time /= duration / 2;\r\n                //===> if Time Ends <===//\r\n                if (time < 1) return target / 2 * time * time + current;\r\n                //===> Otherwise <===//\r\n                else {\r\n                    time--;\r\n                    return -target / 2 * (time * (time - 2) - 1) + current;\r\n                }\r\n            };\r\n\r\n        //====> Offset Calc <====//\r\n        if (into && into > 0) position = position + into;\r\n        if (offset && offset > 0) position = position - offset;\r\n        \r\n        //====> Scroll Animation <====//\r\n        function activator(currentTime) {\r\n            //====> Update Start Time <====//\r\n            if (start === null) start = currentTime;\r\n\r\n            //====> Update Time <====//\r\n            let timeElapsed = currentTime - start,\r\n                scrollAnimate = timeFunc(timeElapsed, viewPos, position, duration);\r\n\r\n            //====> Start Scrolling <====//\r\n            window.scrollTo(0, scrollAnimate);\r\n\r\n            //====> not the End ? get the next frame <====//\r\n            if (timeElapsed < duration) requestAnimationFrame(activator);\r\n\r\n            //====> the End ? Update View Position <====//\r\n            else {\r\n                viewPos = Math.round(window.pageYOffset);\r\n                //===> Hash URL Update <===//\r\n                let loc:any = window;\r\n                loc.location.href = element.getAttribute('href') || element.getAttribute('data-target') || options?.target;\r\n            }\r\n        }\r\n\r\n        //====> Activate Scrolling <====//\r\n        if(delay > 0) {\r\n            //====> Delay Scroll <====//\r\n            setTimeout(() => requestAnimationFrame(activator), delay);\r\n        } else requestAnimationFrame(activator);\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Sticky Elements <====*/\r\nPhenixElements.prototype.sticky = function (options?:{\r\n    type?:string,   //===> Fixed, Sticky\r\n    offset?:number, //===> Increase Target Position By [number]\r\n    into?:number,   //===> Decrease Target Position By [number]\r\n    flow?:string,   //===> Flow Direction [X, Y]\r\n    active?:string, //===> Active Class Name\r\n}) {\r\n    //====> Define Direction Flow <====//\r\n    let direction = options?.flow?.toLowerCase() || 'y';\r\n\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Get Data <====//\r\n        let type   = element.getAttribute('data-sticky') || options?.type || 'sticky',\r\n            into   = parseInt(element.getAttribute('data-into')) || options?.into || 0,\r\n            active = options?.active || 'is-sticky',\r\n            offset = parseInt(element.getAttribute('data-offset')) || options?.offset || 0;\r\n\r\n        //====> Relative to its Parent [workout] <====//\r\n        // if (type && type === 'sticky') element.parentNode.style.transform = \"translateZ(0)\";\r\n\r\n        //====> Y Scroll Mode <====//\r\n        if(!direction || direction === 'y') {\r\n            //====> Offset Calc <====//\r\n            if (into && into > 0) offset = element.offsetTop + into;\r\n            else if (offset && offset > 0) offset   = element.offsetTop - offset;\r\n\r\n            //====> First Position [workout] <====//\r\n            if (window.scrollY > offset) element.classList.add(active); \r\n\r\n            //====> While Window Scrolling <====//\r\n            window.addEventListener('scroll', event => {\r\n                //====> if position matches element Activate <====//\r\n                if (window.scrollY >= offset) element.classList.add(active); \r\n\r\n                //====> Otherwise De-Activate <====//\r\n                if (window.scrollY <= offset) element.classList.remove(active);\r\n            });\r\n        }\r\n\r\n        //====> X Scroll Mode <====//\r\n        else if (direction && direction === 'x') {\r\n            //====> Offset Calc <====//\r\n            if (into && into > 0) element.offsetLeft + into;\r\n            if (offset && offset > 0)   element.offsetLeft - offset;\r\n    \r\n            //====> First Position [workout] <====//\r\n            if (window.scrollX > offset) element.classList.add(active); \r\n\r\n            //====> While Window Scrolling <====//\r\n            window.addEventListener('scroll', event => {\r\n                //====> if position matches element Activate <====//\r\n                if (window.scrollX >= offset) element.classList.add(active); \r\n\r\n                //====> Otherwise De-Activate <====//\r\n                else if (window.scrollX <= offset) element.classList.remove(active);\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Scroll-Spy <====*/\r\nPhenixElements.prototype.scrollSpy = function (options?:{\r\n    active:string,  //===> Active Class Name Default : px-active\r\n    flow:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    offset:number,  //====> Decrease Target Position By [number]\r\n    into:number     //====> Increase Target Position By [number]\r\n}) {\r\n    //====> Define Options <=====//\r\n    let className:string = options?.active || 'px-active',\r\n        spotFlow:string = options?.flow || 'both',\r\n        spotInto:number = options?.into || 0,\r\n        spotOffset:number = options?.offset || 0;\r\n\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Get All Links & Triggers <====//\r\n        let triggers:any = element.querySelectorAll('[href], [data-target]');\r\n\r\n        //====> Apply Smooth Scroll & Loop Through Links & Triggers <====//\r\n        triggers.forEach(trigger => {            \r\n            Phenix(trigger).smothScroll({\r\n                into : element.getAttribute('data-into') || spotInto,\r\n                offset : element.getAttribute('data-offset') || spotOffset\r\n            })\r\n        });\r\n        \r\n        triggers.forEach(element => {\r\n            //====> Get Data <====//\r\n            let selector = element.getAttribute('href') || element.getAttribute('data-target'),\r\n\r\n            //====> Activator <====//\r\n            activator = () => {\r\n                //====> Define Siblings & Parent Elements <====//\r\n                let siblings, parent;\r\n\r\n                //====> if Trigger not List-Item Get Ancestor List-Item <====//\r\n                if (!element.matches('li')) parent = Phenix(element).ancestor('li');\r\n\r\n                //====> Active & Get Siblings <====//\r\n                siblings = Phenix(parent || element).addClass(className).siblings();\r\n\r\n                //====> Loop Through Siblings <====//\r\n                if (siblings) siblings.forEach(sibling => {\r\n                    //====> De-Activate Siblings <====//\r\n                    sibling.classList.remove(className);\r\n\r\n                    //====> Get Activated child's & De-Activate them <====//\r\n                    sibling.querySelector(`.${className}`)?.classList.remove(className);\r\n                });\r\n            };\r\n\r\n            //====> First View [workout] <====//\r\n            if (document.querySelector(`${selector}`) && Phenix(selector).inView({\r\n                flow : options?.flow || 'both',\r\n                into : element.getAttribute('data-into') || options?.into || 0,\r\n                offset : element.getAttribute('data-offset') || options?.offset || 0,\r\n            })) activator();\r\n\r\n            //====> Check While Scroll if in view-point : Activate <====//\r\n            window.addEventListener('scroll', event => Phenix(selector).inView() ? activator() : null);\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Effects : SlideUp\r\n * ===> 03 - Effects : SlideDown\r\n * ===> 04 - Effects : SlideToggle\r\n * ===> 05 - Effects : FadeOut\r\n * ===> 06 - Effects : FadeIn\r\n * ===> 07 - Effects : FadeToggle\r\n * ===> 08 - Effects : (Smoth-Scroll, Sticky Elements, Scroll-Spy)\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Effects : SlideUp <====*/\r\nPhenixElements.prototype.slideUp = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element).display !== 'none') {\r\n            //====> Set Initial Animation Properties <====//\r\n            Phenix(element).css({ \"overflow\": 'hidden' });\r\n\r\n            //====> Animation Data <====//\r\n            const fullHeight = element.scrollHeight;\r\n            const initialStyles = Phenix(element).getCSS();\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n            const endHeight = 0;\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateSlideUp(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set the element's style based on the animation progress\r\n                Phenix(element).css({\r\n                    height: `${fullHeight * (1 - progress)}px`,\r\n                    paddingTop: `${parseFloat(initialStyles.paddingTop) * (1 - progress)}px`,\r\n                    paddingBottom: `${parseFloat(initialStyles.paddingBottom) * (1 - progress)}px`\r\n                });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateSlideUp); // Continue the animation\r\n                } else {\r\n                    // After Animation : Hide the Element\r\n                    Phenix(element).css({ \"display\": 'none', \"height\": \"\", \"paddingTop\": \"\", \"paddingBottom\": \"\", \"overflow\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateSlideUp), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : SlideDown <====*/\r\nPhenixElements.prototype.slideDown = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element and Set Initial Styles <====//\r\n            Phenix(element).css({\r\n                \"overflow\": 'hidden',\r\n                \"display\": display || 'block',\r\n                \"height\": \"0px\", // Start height for sliding effect\r\n                \"paddingTop\": \"0px\",\r\n                \"paddingBottom\": \"0px\"\r\n            });\r\n\r\n            //====> Animation Data <====//\r\n            const fullHeight = element.scrollHeight;\r\n            const initialStyles = Phenix(element).getCSS();\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateSlideDown(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set the element's style based on the animation progress\r\n                Phenix(element).css({\r\n                    height: `${progress * fullHeight}px`,\r\n                    paddingTop: `${parseFloat(initialStyles.paddingTop) * progress}px`,\r\n                    paddingBottom: `${parseFloat(initialStyles.paddingBottom) * progress}px`\r\n                });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateSlideDown); // Continue the animation\r\n                } else {\r\n                    // Clear overflow and reset properties after animation completes\r\n                    Phenix(element).css({ \"height\": \"\", \"paddingTop\": \"\", \"paddingBottom\": \"\", \"overflow\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateSlideDown), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : SlideToggle <====*/\r\nPhenixElements.prototype.slideToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).slideDown(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).slideUp(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeOut <====*/\r\nPhenixElements.prototype.fadeOut = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element)?.display !== 'none') {\r\n            //====> Set Initial Style for Animation <====//\r\n            Phenix(element).css({ \"opacity\": \"1\" });\r\n\r\n            //====> Animation Data <====//\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateFadeOut(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Apply the opacity based on the animation progress\r\n                Phenix(element).css({ opacity: `${1 - progress}` });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateFadeOut); // Continue the animation\r\n                } else {\r\n                    // After Animation : Hide the Element and Reset Inline Styles\r\n                    Phenix(element).css({ \"display\": 'none', \"opacity\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateFadeOut), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeIn <====*/\r\nPhenixElements.prototype.fadeIn = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element with Initial Opacity <====//\r\n            Phenix(element).css({\r\n                \"display\": display || 'block',\r\n                \"opacity\": \"0\"\r\n            });\r\n\r\n            //====> Animation Data <====//\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateFadeIn(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set opacity based on the animation progress\r\n                Phenix(element).css({ opacity: `${progress}` });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateFadeIn); // Continue animation\r\n                } else {\r\n                    // Clear inline opacity style after animation completes\r\n                    Phenix(element).css({ \"opacity\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateFadeIn), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeToggle <====*/\r\nPhenixElements.prototype.fadeToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).fadeIn(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).fadeOut(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : (Smoth-Scroll, Sticky, Scroll-Spy) <====*/\r\nimport './effects-scroll';\r\n","/**====> Reference By Comment <====\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Get Information Class\r\n * ===> 03 - Page Direction\r\n * ===> 04 - Get Element Height\r\n * ===> 05 - ViewPort Detector\r\n * ===> 06 - Get CSS Properties\r\n * ===> 07 - Get Viewport Dimensions\r\n * ===> 00 - ....\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Page Direction <====*/\r\nPhenixElements.prototype.direction = function (property?:string) {\r\n    //====> Default Direction <====//\r\n    let direction  = getComputedStyle(document.body).direction,\r\n        directionStart = 'left',\r\n        directionEnd   = 'right';\r\n\r\n    //====> Change Direction if RTL <====//\r\n    if (direction === 'rtl') {\r\n        directionStart = 'right';\r\n        directionEnd = 'left';\r\n    }\r\n\r\n    //====> Return Property Value <====//\r\n    if (property == \"start\") return directionStart;\r\n    else if (property == \"end\") return directionEnd;\r\n    else return direction;\r\n}\r\n\r\n/*====> Get Element Height <====*/\r\nPhenixElements.prototype.height = function () {\r\n    //====> Define Target Data <====//\r\n    let element:any = this[0],\r\n        display = getComputedStyle(element).display,\r\n        style = element.style,\r\n        inlineDisplay = style.display;\r\n\r\n    //====> for Getting Hidden Element Height <====//\r\n    if (display == 'none') {\r\n        style.display = 'block';\r\n        style.visibility = 'hidden';\r\n    }\r\n\r\n    //====> Define Height Data <====//\r\n    let height = element.scrollHeight,\r\n        padding = parseInt(getComputedStyle(element).padding, 10) || 0;\r\n\r\n    //====> Reset the Hidden Element <====//\r\n    if (display === 'none') {\r\n        //===> Reset Display <===//\r\n        inlineDisplay ? style.display = display : style.display = null;\r\n        //===> Reset Visibility <===//\r\n        style.visibility = null;\r\n    }\r\n\r\n    return (height + padding);\r\n}\r\n\r\n/*====> Get CSS Properties <====*/\r\nPhenixElements.prototype.getCSS = function(property?:string, pseudo?:string) {\r\n    //====> Define the Target <====//\r\n    let element:any = this[0];\r\n\r\n    //====> Get the Target Style <====//\r\n    let styles = getComputedStyle(element, pseudo);\r\n\r\n    //====> If Property is Targeted <====//\r\n    if (property) styles = styles[property];\r\n\r\n    //====> Return Information <====//\r\n    return styles;\r\n}\r\n\r\n/*====> ViewPort Detector <====*/\r\nPhenixElements.prototype.inView = function (options?:{\r\n    flow:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    into:number,    //====> Increase Target Position By [number]\r\n    offset:number,  //====> Decrease Target Position By [number]\r\n}, flowOn?:string) {\r\n    //====> Define Data <====//\r\n    let element:any = this[0],\r\n        flow:string = flowOn || options?.flow,\r\n        scrollPosition = window.scrollY || window.pageYOffset,\r\n        targetPosition = element.getBoundingClientRect().top + scrollPosition,\r\n\r\n        //===> ViewPoint Position <====//\r\n        viewport = {\r\n            top: scrollPosition,\r\n            bottom: scrollPosition + window.innerHeight\r\n        };\r\n\r\n        //====> Into Calc <====//\r\n        if (options?.into && options?.into > 0) targetPosition = targetPosition + options?.into;\r\n\r\n        //====> Offset Calc <====//\r\n        else if (options?.offset && options?.offset > 0) targetPosition = targetPosition - options?.offset;\r\n\r\n        //===> Target Data <====//\r\n        let target = {\r\n            top: targetPosition,\r\n            bottom: targetPosition + element.clientHeight\r\n        },\r\n\r\n        //===> inBetween Odds <====//\r\n        topIn = viewport.bottom >= target.top && target.top >= viewport.top ? true : false,\r\n        bottomIn = viewport.top <= target.bottom && target.bottom <= viewport.bottom ? true : false,\r\n        inBetween = topIn || bottomIn ? true : false;\r\n\r\n    //====> if Visible from Top to Bottom <====//\r\n    if(flow === 'start') return viewport.bottom >= target.top ? true : false;\r\n\r\n    //====> if Visible from Bottom to Top <====//\r\n    else if (flow === 'end') return bottomIn;\r\n\r\n    //====> if Visible from Any of Both Directions <====//\r\n    else return inBetween;\r\n}\r\n\r\n//=====> Get Viewport Dimensions <=====//\r\nPhenixElements.prototype.viewport = function (property:string) {\r\n    //====> Get Element Data <====//\r\n    let element = document.documentElement,\r\n        width   = Math.max(element.clientWidth || 0, window.innerWidth || 0),\r\n        height  = Math.max(element.clientHeight || 0, window.innerHeight || 0);\r\n\r\n    //====> Get Width <====//\r\n    if (property === 'width') return width;\r\n    //====> Get Height <====//\r\n    else if (property === 'height') return height;\r\n    //====> Get Both <====//\r\n    else return {width: width, height: height}\r\n}\r\n\r\n//====> Copyrights <====//\r\nPhenixElements.prototype.copyrights = function (project_name) {\r\n    //===> Name Resolve <===//\r\n    let name = project_name;\r\n    if(!name) name = 'Phenix Themes';\r\n    while (name.length < 24) name += ` `;\r\n    //====> Print Copyrights <====//\r\nconsole.info(`🔥🔥🔥🔥🔥 %cPhenix Design System 🔥🔥🔥💥🐦\r\n🔥                                      🔥\r\n🔥  - Project : ${name}🔥\r\n🔥  - System  : Phenix Blocks           🔥\r\n🔥  - Author  : Abdullah Ramadan        🔥\r\n🔥  - Version : PDS v1.0.0              🔥\r\n🔥  - Website : phenixthemes.com        🔥\r\n🔥  - Docs    : design.phenixthemes.com 🔥\r\n🔥  - Contact : +2-01122974539          🔥\r\n🔥                                      🔥\r\n🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🚀`, \"color: #FB955D;font-weight: 600\");\r\n    //===> Return Phenix <===//\r\n    return this;\r\n};\r\n\r\n//====> Get Current Path <====//\r\nPhenixElements.prototype.getURL = function (location?) {\r\n    //====> Current Script File <====//\r\n    let url = document.querySelector('script[src*=\"phenix.js\"]')?.getAttribute('src'),\r\n        phenix_js = url.substring(0, url.lastIndexOf('/')+1);\r\n    //====> Return information's <====//\r\n    return {\r\n        script : url,\r\n        window : window.location.href,\r\n        page   : window.location.pathname,\r\n        phenixJS : phenix_js || 'https://cdn.jsdelivr.net/npm/phenix-ui@0.6.5/dist/js/',\r\n        phenixCSS : phenix_js.replace('js', 'css') || 'https://cdn.jsdelivr.net/npm/phenix-ui@0.6.5/dist/css/',\r\n    }\r\n}\r\n","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Notifications\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n//=====> Notifications <=====//\r\nPhenixElements.prototype.notifications = function (options?:{\r\n    type?:string,     //=== Message Type [normal, error, success, warning]\r\n    message?:string,  //=== Message Content\r\n    duration?:number, //=== Message Timeout\r\n    position?:any,     //=== Message Position {y, x} [top,center,bottom] [start,center,end]\r\n}) {\r\n    //====> Element & Data <====//\r\n    let current,\r\n        type = options?.type || 'normal',\r\n        message = options?.message || 'No Message Defined.',\r\n        duration = options?.duration || 3000,\r\n        notifications = document.querySelector('.px-notifications'),\r\n        background = 'bg-primary color-white',\r\n        item_position = 'pos-bottom-0 pos-start-0',\r\n        css_classes = 'px-item pdy-10 pdx-15 fs-14 mb-10 radius-sm';\r\n    \r\n    //====> Figure Position <=====//\r\n    if(options?.position) {\r\n        //=== get position ===//\r\n        let position = options?.position;\r\n        if (typeof(options?.position) == \"string\") position = options?.position.split(',');\r\n        let y_pos = position[0].replace(/\\s/g, ''),\r\n            x_pos = position[1].replace(/\\s/g, '');\r\n\r\n        //=== set X position ===//\r\n        x_pos == 'start' ? x_pos = 'me-auto' :\r\n        x_pos == 'center' ? x_pos = 'mgx-auto' :\r\n        x_pos == 'end' ? x_pos = 'ms-auto' : '';\r\n\r\n        //=== set Y position ===//\r\n        y_pos == 'top' ? y_pos = 'start' :\r\n        y_pos == 'center' ? y_pos = 'center' :\r\n        y_pos == 'bottom' ? y_pos = 'end' : '';\r\n\r\n        //=== set position ===//\r\n        item_position = `align-self-${y_pos} ${x_pos}`;\r\n\r\n    //====> Set Default <===//\r\n    } else item_position = `align-self-end`;\r\n\r\n    //====> Create Notifications Area <====//\r\n    if(!document.querySelector('.px-notifications')) {\r\n        notifications = Phenix('body').insert('append', `<div class=\"px-notifications position-fx pos-bottom-0 pos-start-0 hidden z-index-modal pd-15 ${options?.position ? 'flexbox h-100vh col-12' : ''}\" style=\"pointer-events: none\"></div>`);\r\n    }\r\n\r\n    //====> Change Background <====//\r\n    if (type === 'error') background = 'bg-danger color-white';\r\n    else if (type === 'success') background = 'bg-success color-white';\r\n    else if (type === 'warning') background = 'bg-warning color-dark';\r\n\r\n    //=== Set Notifications ===//\r\n    current = Phenix(notifications).insert('append', `<div class=\"w-max-320 z-index-modal position-rv ${css_classes} ${background} ${item_position} hidden\" style=\"pointer-events: all\">${message}</div>`);\r\n\r\n    //====> Show Notifications <====//\r\n    Phenix(notifications).removeClass('hidden').fadeIn(500, 0, 'flex');\r\n    Phenix(current).removeClass('hidden').fadeIn();\r\n\r\n    //====> Hide Notifications <====//\r\n    setTimeout(()=> {\r\n        Phenix(current).fadeOut();\r\n        setTimeout(() => current ? current.remove() : '', 500);\r\n    }, duration);\r\n\r\n    Phenix(current).on('click', isClicked => {\r\n        Phenix(current).fadeOut();\r\n        setTimeout(() => current ? current.remove() : '', 500);\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n};","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Validation\r\n * ===> 03 - Default Browser Api\r\n * ===> 04 - Multiple Validation\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Validation <====*/\r\nPhenixElements.prototype.validation = function (options?:{\r\n    //===> Error Message Default Api\r\n    defaults?:{\r\n        valueMissing?:string,  //===> Error for Missing Values\r\n        typeMismatch?:string,  //===> Error for Type\r\n        tooLong?:string,       //===> Error for too Long Value\r\n        tooShort?:string,      //===> Error for too Short Value\r\n    },\r\n    //====> Different Pattern for Each input <====//\r\n    patterns?:[{\r\n        name?:string,     //===> Input Name Attribute\r\n        pattern?:string,  //===> RegEx Pattern\r\n        message?:string,  //===> Error Message\r\n        position?:string, //===> Message Position [top, bottom]\r\n    }], \r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let defaults  = options?.defaults,\r\n            patterns  = options?.patterns,\r\n            pageDir   = Phenix(document).direction();\r\n\r\n        //===> Error Handler <===//\r\n        const errorHandler = (input, message, position) => {\r\n            //===> Input Data <====//\r\n            let inputWrapper = input.parentNode,\r\n                hasWrapper = inputWrapper.classList.contains(\"option-control\") || inputWrapper.classList.contains(\".control-icon\");\r\n\r\n            //===> Set Error <===//\r\n            input.classList.add('error');\r\n            input.classList.remove('success');\r\n\r\n            //===> Check for Error Message <===//\r\n            let hasError = position === 'before' ? Phenix(hasWrapper ? inputWrapper : input).prev('.px-validation') : Phenix(hasWrapper ? inputWrapper : input).next('.px-validation');\r\n\r\n            //====> if already has errors <====//\r\n            if (hasError) {\r\n                //===> get the errors list <===//\r\n                let errors_list = hasError.querySelector('.errors-list');\r\n\r\n                //====> if it has error list <====//\r\n                if(errors_list) {\r\n                    //===> Create a new Message <===//\r\n                    if (errors_list.querySelector('li:last-child').textContent !== message) errors_list.append(`${message}`);\r\n                //====> Create an Error List <====//\r\n                } else if (hasError.textContent !== message) {\r\n                    //===> get previous message <===//\r\n                    let original = hasError.textContent;\r\n\r\n                    //===> Create the List <===//\r\n                    hasError.innerHTML = `<ul class=\"errors-list reset-list\">\r\n                        <li>${original}</li>\r\n                        ${original !== message ? `<li>${message}</li>`: ''}\r\n                    </ul>`;\r\n                }\r\n            }\r\n\r\n            //===> Create Error Message <===//\r\n            else {\r\n                Phenix(hasWrapper ? inputWrapper : input).insert('after', `<div class=\"px-validation color-danger\">${message}</div>`);\r\n            }\r\n        };\r\n\r\n        //====> Reset Method <====//\r\n        const reset_status = (input, position) => {\r\n             //===> Remove Error <===//\r\n             input.setCustomValidity('');\r\n             input.classList.remove('error', 'success');\r\n             //===> Delete Error Message <===//\r\n             if (position === 'after') {\r\n                 Phenix(input).next('.px-validation')?.remove();\r\n             } else {\r\n                 Phenix(input).prev('.px-validation')?.remove();\r\n             }\r\n        };\r\n\r\n        //===> Control Validation <===//\r\n        let valid_control = (input, submit?) => {\r\n            //===> Get Error Message Position <===//\r\n            let position = input.getAttribute('data-pos') || \"after\";\r\n\r\n            //====> Validation Handler <====//\r\n            let validate = () => {\r\n                let hasError = false;\r\n                let message = input.getAttribute('data-message');\r\n                //===> Set Error <===//\r\n                input.classList.add('error');\r\n                input.classList.remove('success');\r\n\r\n                //====> .Value Check. <====//\r\n                if (input.validity.valueMissing) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"This field is required!\" : \"هذا الحقل مطلوب يرجي املاءه\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Type/Bad/Pattern Check. <====//\r\n                else if (input.validity.typeMismatch || input.validity.badInput || input.validity.patternMismatch) {\r\n                    hasError = true;\r\n                    if (!message && input.getAttribute('type') === \"email\") {\r\n                        message = pageDir == 'ltr' ? \"Please enter a valid E-Mail!\" : \"من فضلك ادخل عنوان بريد صحيح.\";\r\n                    }\r\n                    else if (!message) {\r\n                        message = input.getAttribute('data-message') || defaults?.typeMismatch || pageDir == 'ltr' ? \"Please correct your value.\" : \"لقد ادخلت قيمة خاطئه يرجي التصحيح.\";\r\n                    }\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                } \r\n                \r\n                //====> Email Validation <====//\r\n                else if (input.getAttribute('type') === \"email\" && /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(input.value) === false) {\r\n                    hasError = true;\r\n                    if (!message && input.getAttribute('type') === \"email\") {\r\n                        message = pageDir == 'ltr' ? \"Please enter a valid e-mail!\" : \"من فضلك ادخل عنوان بريد صحيح.\";\r\n                    }\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Too-Long Check. <====//\r\n                else if (input.validity.tooLong || input.validity.rangeOverflow) {\r\n                    hasError = true;\r\n                    if (!message) message = defaults?.tooLong || pageDir == 'ltr' ? \"You have exceeded the maximum number.\" : \"لقد تخطيت الحد الاقصي يرجي تصحيح القيمة.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Too-Short Check. <====//\r\n                else if (input.validity.tooShort || input.validity.rangeUnderflow || input.validity.stepMismatch) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"Your value is less than the minimum.\" : \"لقد ادخلت قيمة اقل من الحد الادني يرجي التصحيح.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Success. <====//\r\n                else if (input.validity.valid) {\r\n                    //===> Remove Error <===//\r\n                    input.classList.remove('error');\r\n                    //===> Delete Error Message <===//\r\n                    if (position === 'after') {\r\n                        Phenix(input).next('.px-validation')?.remove();\r\n                    } else {\r\n                        Phenix(input).prev('.px-validation')?.remove();\r\n                    }\r\n                }\r\n\r\n                //===> Do not Submit <===//\r\n                if (submit && hasError) submit.preventDefault();\r\n                return hasError;\r\n            }\r\n\r\n            //====> Reset When New Value is Set <====//\r\n            if (input.tagName !== 'SELECT') input.addEventListener(\"input\", event => {\r\n                reset_status(input, position);\r\n                input.checkValidity();\r\n                validate();\r\n            });\r\n\r\n            else if (input.tagName === 'SELECT') input.addEventListener(\"change\", event => {\r\n                reset_status(input, position);\r\n                input.checkValidity();\r\n                validate();\r\n            });\r\n\r\n            //====> if has invalid value Re-Validate <====//\r\n            input.addEventListener(\"invalid\", invalid => validate());\r\n\r\n            //====> Init <====//\r\n            validate();\r\n        }\r\n\r\n        //===> Active on Form Submit <===//\r\n        if(element.tagName == 'FORM') {\r\n            element.addEventListener('submit', isSubmitting => {\r\n                element.querySelectorAll('input, textarea, select').forEach(item => {\r\n                    valid_control(item, isSubmitting);\r\n                });\r\n            });\r\n        }\r\n\r\n        //===> Active for Controls <===//\r\n        else {\r\n            valid_control(element);\r\n        }\r\n\r\n        //====> Multiple Validation <====//\r\n        if (patterns && patterns.length > 0) patterns.forEach(pattern => {\r\n            //====> Get the Pattern Data <====//\r\n            let inputs    = element.tagName == 'FORM' ? element.querySelectorAll(`[name=\"${pattern.name}\"]`) : [element],\r\n                regEx:any = pattern.pattern,\r\n                message   = pattern.message,\r\n                position  = pattern.position || 'after';\r\n\r\n            //====> For Each Input <====//\r\n            inputs.forEach(input => {\r\n                //====> Get input Value <====//\r\n                let validate = () => {\r\n                    //====> Check the Pattern <====//\r\n                    if (regEx.test(input.value)) {\r\n                        //===> Set Success <===//\r\n                        input.classList.add('success');\r\n                        input.classList.remove('error');\r\n                        //===> Delete Error Message <===//\r\n                        if (position === 'after') {\r\n                            Phenix(input).next('.px-validation')?.remove();\r\n                        } else {\r\n                            Phenix(input).prev('.px-validation')?.remove();\r\n                        }\r\n                    } else {\r\n                        errorHandler(input, message, position);\r\n                    }\r\n                };\r\n                //====> Check While input <====//\r\n                if (input.tagName !== 'SELECT') input.addEventListener('input', validate);\r\n                else if (input.tagName === 'SELECT') input.addEventListener('change', validate);\r\n            });\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/*\r\n * Phenix.js\r\n * Version  : 0.6 Beta\r\n * License  : MIT\r\n * Copyright: 2022 Abdullah.Ramadan\r\n*/\r\n\r\n/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - D.O.M Ready\r\n * ===> 03 - Add Class\r\n * ===> 04 - Remove Class\r\n * ===> 05 - Toggle Class\r\n * ===> 06 - Get Ancestor [Parent, Parents Until]\r\n * ===> 07 - Get Siblings\r\n * ===> 08 - Get Next Siblings\r\n * ===> 09 - Get Previous Siblings\r\n * ===> 10 - CSS Styling\r\n * ===> 11 - Set Multiple Attributes\r\n * ===> 12 - Insert Elements\r\n * ===> 13 - Event Handler\r\n * ===> 14 - Resources Lazy-Loader\r\n * ===> 15 - Media Query Method\r\n * ===> 16 - Service Worker\r\n * ===> 17 - Define information's\r\n * ===> 18 - Define UI Effects\r\n * ===> 19 - Define Other Features\r\n * ===> 20 - Include Features\r\n * ===> 21 - Integration\r\n * ===> 22 - Phenix Selecting Method\r\n * ===> 23 - Your Custom Script [JS]\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nexport class PhenixElements extends Array<HTMLElement | Record <string, any>> {\r\n    /*====> D.O.M Ready <====*/\r\n    ready(callback) {\r\n         //====> Check if its Ready <====//\r\n        if (document.readyState === 'complete') queueMicrotask(callback);\r\n        //====> Wait for It to be Ready <====//\r\n        else document.addEventListener('DOMContentLoaded', () => queueMicrotask(callback),{ once: true });\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Add Class <====*/\r\n    addClass(className: any) {\r\n        //====> Split classNames string into an array of class names <====//\r\n        const classNamesArray = className.split(' ');\r\n        const classNamesLength = classNamesArray.length;\r\n\r\n        //====> Add Class for Each Element <====//\r\n        for (let i = 0; i < this.length; i++) {\r\n            const element = this[i] as HTMLElement;\r\n            const classList = element.classList;\r\n\r\n            for (let j = 0; j < classNamesLength; j++) {\r\n                classList.add(classNamesArray[j]);\r\n            }\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Remove Class <====*/\r\n    removeClass(className: string) {\r\n        //====> Split classNames string into an array of class names and convert it to a Set <====//\r\n        const classNamesSet = new Set(className.split(' '));\r\n\r\n        //====> Remove Class for Each Element <====//\r\n        this.forEach((element: HTMLElement) => {\r\n            element.classList.remove(...classNamesSet);\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Toggle Class <====*/\r\n    toggleClass(className: string) {\r\n        //====> Split classNames string into an array of class names <====//\r\n        const classNamesArray = className.split(' ');\r\n\r\n        //====> Loop through each element only once <====//\r\n        for (let i = 0; i < this.length; i++) {\r\n            const element = this[i] as HTMLElement;\r\n            const classList = element.classList;\r\n\r\n            //====> Check if element already has the class <====//\r\n            const hasClass = classNamesArray.some(className => classList.contains(className));\r\n\r\n            //====> Toggle the class based on its presence <====//\r\n            classNamesArray.forEach(className => {\r\n                if (hasClass) {\r\n                    classList.remove(className);\r\n                } else {\r\n                    classList.add(className);\r\n                }\r\n            });\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Get Ancestor <====*/\r\n    ancestor(target?) {\r\n        //====> Define Ancestor Arrays <====//\r\n        let ancestors = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Define The First Parent <====//\r\n            let parent:any = element.parentNode;\r\n\r\n            //====> if has a Target <===//\r\n            if (target && !element.matches('html')) {\r\n                //====> Loop Over The Ancestors <====//\r\n                while (parent && !parent.matches('html')) {\r\n                    //====> When the Target has been Found Return it <====//\r\n                    if (parent.matches(target)) { ancestors.push(parent); break; }\r\n                    //====> Otherwise get the Next Ancestor <====//\r\n                    else parent = parent.parentNode;\r\n                }\r\n            }\r\n\r\n            //====> Otherwise Return the Parent <====//\r\n            else ancestors.push(parent);\r\n        });\r\n\r\n        //====> Return Ancestors <====//\r\n        if (ancestors.length > 1) return ancestors;\r\n        else if (ancestors.length === 1) return ancestors[0];\r\n    }\r\n\r\n    /*====> Get Siblings <====*/\r\n    siblings(target?) {\r\n        //====> Siblings Define <====//\r\n        let siblings = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Get This Element Parent Childs <====//\r\n            let childs = element.parentNode.children;\r\n\r\n            //====> if has No target [Return All Sibling] <====//\r\n            if (!target) Array.from(childs).forEach((child:HTMLElement) => child !== element ? siblings.push(child) : null);\r\n\r\n            //====> Otherwise Return the matched targets <====//\r\n            else Array.from(childs).forEach((child:HTMLElement) => child !== element && child.matches(target) ? siblings.push(child) : null);\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        return siblings.length > 0 ? siblings : null;\r\n    }\r\n\r\n    /*====> Get Next Siblings <====*/\r\n    next(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n        \r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Next Unit <====//\r\n            let nextUnit = element.nextElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Next Sibling] <====//\r\n            if (!target) siblings.push(nextUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            if (target) {\r\n                //====> if All Next is the Target <====//\r\n                if (target.includes('all', 0)) {\r\n                    //====> Loop Through All Next Siblings <====//\r\n                    while (nextUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && nextUnit.matches(all_target)) siblings.push(nextUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        if (!all_target) siblings.push(nextUnit);\r\n    \r\n                        //====> get the next one <====//\r\n                        nextUnit = nextUnit.nextElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Next Matched Target [Next Until] <====//\r\n                else {\r\n                    //====> While there is a Next Unit <====//\r\n                    while (nextUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (nextUnit.matches(target)) { siblings.push(nextUnit); break; } \r\n                        \r\n                        //====> Otherwise Get the Next Unit <====//\r\n                        else nextUnit = nextUnit.nextElementSibling;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        if (siblings.length > 1) return siblings;\r\n        else if (siblings.length === 1) return siblings[0];\r\n    }\r\n\r\n    /*====> Get Previous Siblings <====*/\r\n    prev(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n        \r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Previous Unit <====//\r\n            let prevUnit = element.previousElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Previous Sibling] <====//\r\n            if (!target) siblings.push(prevUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            if (target) {\r\n                //====> if All Previous is the Target <====//\r\n                if (target.includes('all', 0)) {\r\n                    //====> Loop Through All Previous Siblings <====//\r\n                    while (prevUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && prevUnit.matches(all_target)) siblings.push(prevUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        if (!all_target) siblings.push(prevUnit);\r\n    \r\n                        //====> get the previous one <====//\r\n                        prevUnit = prevUnit.previousElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Previous Matched Target [Previous Until] <====//\r\n                else {\r\n                    //====> While there is a Previous Unit <====//\r\n                    while (prevUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (prevUnit.matches(target)) {\r\n                            siblings.push(prevUnit);\r\n                            break;\r\n                        } else {\r\n                            prevUnit = prevUnit.previousElementSibling;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        \r\n        //====> Return Siblings <====//\r\n        if (siblings.length > 1) return siblings;\r\n        else if (siblings.length === 1) return siblings[0];\r\n    }\r\n\r\n    /*====> Get Children <====*/\r\n    child(target?:string) {\r\n        //====> Children Define <====//\r\n        let childs = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> All Children <====//\r\n            let all_childs = element.children;\r\n    \r\n            //====> if No target [Return All Direct Children] <====//\r\n            if (!target) childs = all_childs;\r\n    \r\n            //====> if Target is Matched Return it <====//\r\n            if (target) all_childs.forEach(element => element.matches(target) ? childs.push(element) : '');\r\n        });\r\n\r\n        //====> Return Children <====//\r\n        if (childs.length > 1) return childs;\r\n        else if (childs.length === 1) return childs[0];\r\n    }\r\n\r\n    /*====> CSS Styling <====*/\r\n    css(style:object, clearInline?) {\r\n        //====> Check for the Elements <====//\r\n        if (this.length === 0) return;\r\n\r\n        //====> if inline-style Clear is Activated <====//\r\n        if (clearInline) this.forEach((element:HTMLElement) => (element.removeAttribute('style')));\r\n\r\n        //====> for Each CSS Property <====//\r\n        for (const [key, value] of Object.entries(style)) {\r\n            //====> Style Elements <====//\r\n            this.forEach((element:HTMLElement) => {\r\n                element.style.setProperty(key, value);\r\n            });\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this\r\n    }\r\n\r\n    /*====> Set Multiple Attributes <====*/\r\n    setAttributes(attributes:{}) {\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Loop Through the Attributes <====//\r\n            Object.keys(attributes).forEach(attribute => {\r\n                //====> Set Attributes One By One <====//\r\n                element.setAttribute(attribute, attributes[attribute]);\r\n            });\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Insert Elements <====*/\r\n    insert(position?:string, elementsPackage?:any) {\r\n        //====> Define the Package <====//\r\n        let new_package = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //===> String Element Converter to [Node] <===//\r\n            if (typeof(elementsPackage) === 'string') elementsPackage = document.createRange().createContextualFragment(elementsPackage);\r\n\r\n            //====> Insert After The Element <====//\r\n            if (position === 'after') {\r\n                element.parentNode.insertBefore(elementsPackage, element.nextSibling);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.nextElementSibling);\r\n            }\r\n\r\n            //====> Insert Before The Element <====//\r\n            else if (position === 'before') {\r\n                element.parentNode.insertBefore(elementsPackage, element);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.previousElementSibling);\r\n            }\r\n\r\n            //====> Insert Inside The Element at First <====//\r\n            else if (position == 'prepend') {\r\n                element.prepend(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.firstChild);\r\n            }\r\n\r\n            //====> Insert Inside The Element at Last <====//\r\n            else if (position == 'append') {\r\n                element.appendChild(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.lastChild);\r\n            }\r\n        });\r\n\r\n        //====> Return the New Elements Package <====//\r\n        if (new_package.length > 1) return new_package;\r\n        else if (new_package.length === 1) return new_package[0];\r\n    }\r\n\r\n    /*====> Event Handler <====*/\r\n    on(event, callback, live?, timer?) {\r\n        //====> Attache a Normal Event <====//\r\n        if (!live) {\r\n            //====> Event for Each Element <====//\r\n            this.forEach((element:HTMLElement) => {\r\n                element.addEventListener(event, callback);\r\n            });\r\n\r\n            //====> Return Phenix Elements <====//\r\n            return this;\r\n\r\n        //====> Live Event <====//\r\n        } else if (live && this.length > 0) {\r\n            //====> Create Time Loop & Attach Event <====//\r\n            let timerLoop = setInterval(() => this.forEach((element:HTMLElement) => element.addEventListener(event, callback)), timer | 1000);\r\n\r\n            //====> Return the Elements & Time Loop <====//\r\n            return {\r\n                elements: this,\r\n                timeLoop: timerLoop\r\n            };\r\n        }\r\n    }\r\n\r\n    /*====> Resources Lazy-Loader <====*/\r\n    lazyLoading() {\r\n        //====> Loop Through Media Elements <====//\r\n        Phenix('img, video, audio, iframe').forEach((element:HTMLElement) => {\r\n            //====> Set Loading Mode <====//\r\n            if (!Phenix(element).inView()) {\r\n                //====> Get Data <====//\r\n                let playable = element.matches('video' || 'audio' || 'iframe'),\r\n                    preloaded = element.getAttribute('preload' || 'loading');\r\n\r\n                //===> Mark as Loading <===//\r\n                if (element.matches('img'||'iframe')) element.classList.add('px-loading');\r\n\r\n                //===> Native Loading Attribute <===//\r\n                if (playable && !preloaded) element.setAttribute('preload', 'none');\r\n                else if(element.matches('img')) element.setAttribute('loading', 'lazy');\r\n\r\n                //====> Keep Watching Element While Scrolling <====//\r\n                document.addEventListener('scroll', event => {\r\n                    if (element.matches('img'||'iframe') && Phenix(element).inView({offset: 100}) && !element.matches('.px-loaded')) {\r\n                        element.classList.remove('px-loading');\r\n                        element.classList.add('px-loaded');\r\n                    };\r\n                });\r\n            }\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Media Query <====*/\r\n    mediaQuery(breakpoint:any, fn_callback?:any, mobile_first?:boolean) {\r\n        /*==== Breakpoints Points ====*/\r\n        let xsmall_end = 499, /*===> Max xSmall breakpoint Width */\r\n            small_start= 500, /*===> Min Small breakpoint Width */\r\n            small_end = 774,  /*===> Max Small breakpoint Width */\r\n            /*==== Medium Points ====*/\r\n            medium_start = 775,  /*===> Min Medium breakpoint Width */\r\n            medium_end = 1204,   /*===> Max Medium breakpoint Width */\r\n            /*==== Large Points ====*/\r\n            large_start = 1205, /*===> Min Large breakpoint Width */\r\n            large_end = 1404,   /*===> Max Large breakpoint Width */\r\n            /*==== xLarge Points ====*/\r\n            xlarge_start = 1405, /*===> Min xLarge breakpoint Width */\r\n            xlarge_end = 2565;   /*===> Max xLarge breakpoint Width */\r\n\r\n        /*==== Activator ====*/\r\n        const createQuery = () => {\r\n            //==== Get Current Screen Width ====//\r\n            let current_vw = Phenix(document).viewport('width');\r\n\r\n            /*==== Extra Small ====*/\r\n            if (mobile_first && breakpoint == 'xsmall') {\r\n                if (current_vw >= 0) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'xsmall') {\r\n                if (current_vw <= xsmall_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Small ====*/\r\n            if (mobile_first && breakpoint == 'small')  {\r\n                if (current_vw >= small_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'small')  {\r\n                if (current_vw <= small_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Medium ====*/\r\n            if (mobile_first && breakpoint == 'medium') {\r\n                if (current_vw >= medium_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'medium') {\r\n                if (current_vw <= medium_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Large ====*/\r\n            if (mobile_first && breakpoint == 'large')  {\r\n                if (current_vw >= large_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'large')  {\r\n                if (current_vw <= large_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Extra Large ====*/\r\n            if (mobile_first && breakpoint == 'xlarge') {\r\n                if (current_vw >= xlarge_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'xlarge')  {\r\n                if (current_vw <= xlarge_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Custom Media ====*/\r\n            if (mobile_first && typeof(breakpoint) == 'number')   {\r\n                if (current_vw >= breakpoint) {\r\n                    fn_callback();\r\n                }\r\n            } else if (typeof(breakpoint) == 'number')  {\r\n                if (current_vw <= breakpoint) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n        };\r\n\r\n        //===> Active <===//\r\n        createQuery();\r\n\r\n        //===> Live Check <===//\r\n        window.addEventListener('resize', resizing => {\r\n            createQuery();\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Dynamic Position <====*/\r\n    dynamicPosition = () => {\r\n        //====> Event for Each Element <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //=== Check for Visibility ===//\r\n            let target_element:any = Phenix(element),\r\n                panel_size = Math.round(target_element[0].clientHeight),\r\n                stickyElement = document.querySelector('[data-sticky=\"absolute\"]')?.getBoundingClientRect().height;\r\n            \r\n            if (panel_size == 0) return;\r\n    \r\n            //=== get viewport postion ===//\r\n            let top = Math.round(target_element[0].getBoundingClientRect().top),\r\n                stickySize = Math.round(stickyElement) || 0,\r\n                offsetTop = Math.round(top+stickySize-(stickySize/4)),\r\n                offsetBottom = Phenix(document).viewport().height - (panel_size + offsetTop);\r\n    \r\n            //====> to Top <====//\r\n            if (offsetBottom < 0) {\r\n                target_element.addClass('pos-before-y').removeClass('pos-after-y');\r\n            }\r\n    \r\n            //====> to Bottom <====//\r\n            else {\r\n                target_element.addClass('pos-after-y').removeClass('pos-before-y');\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*====> CSS/JS Importer <====*/\r\n    import = (id:string, tag:string, source:string, callback:any, isIntegrated:boolean) => {\r\n        //===> Get Correct Tagname <===//\r\n        if (tag === \"css\") tag = \"link\";\r\n        else if (tag === \"js\") tag = \"script\";\r\n\r\n        //===> Define Element and URL Path <===//\r\n        let element = document.querySelector(`#${id}-phenix-${tag === \"link\" ? \"css\" : tag}`),\r\n            libPath = Phenix(document).getURL().phenixJS.replace('js/', 'lib/'),\r\n            trueUrl = `${isIntegrated ? libPath : \"\"}${source}`;\r\n\r\n        //===> Create a new Element if is not Loaded yet <===//\r\n        if (!element) {\r\n            //===> Create Element <===//\r\n            element = document.createElement(tag);\r\n    \r\n            //===> Set ID <===//\r\n            element.setAttribute('id', `${id}-phenix-${tag === \"link\" ? \"css\" : tag}`);\r\n    \r\n            //===> Load JS Script <===//\r\n            if (tag === \"script\" || tag === \"js\") {\r\n                element.setAttribute(\"src\", trueUrl);\r\n                element.setAttribute(\"async\", \"\");\r\n                //===> Append Element <===//\r\n                document.body.appendChild(element);\r\n            }\r\n\r\n            //===> Load CSS File <===//\r\n            else if (tag === \"link\" || tag === \"css\") {\r\n                element.setAttribute(\"href\", trueUrl);\r\n                element.setAttribute(\"rel\", \"stylesheet\");\r\n                //===> Append Element <===//\r\n                document.head.appendChild(element);\r\n            };\r\n        }\r\n\r\n        //====> When Loaded Run Callback <====//\r\n        element.addEventListener(\"load\", callback);\r\n\r\n        //====> When Error Re-Load <====//\r\n        element.addEventListener(\"error\", event => element.setAttribute(\"src\", trueUrl));\r\n    };\r\n\r\n    /*====> Convert Pixels to REM <====*/\r\n    toREM(size, base = 16) {\r\n        return `${(parseFloat(size) / base)}rem`;\r\n    };\r\n\r\n    /*====> Copy to Clipboard <====*/\r\n    async copyText (text) {\r\n        //===> Copy to Clipboard Method <===//\r\n        const type = \"text/plain\";\r\n        const blob = new Blob([text], { type });\r\n        const data = [new ClipboardItem({ [type]: blob })];\r\n        await navigator.clipboard.write(data);\r\n    };\r\n\r\n    /*====> Voice Trigger <=====*/\r\n    audioTrigger = (trigger) => {\r\n        //===> Define Objects <===//\r\n        let audio_player:any = document.querySelector('#px-audio-player');\r\n\r\n        //===> Create Audio Player <===//\r\n        if (!audio_player) {\r\n            //===> Create Player <===//\r\n            audio_player = document.createElement(\"audio\");\r\n            //=== Set Player ID ===//\r\n            audio_player.setAttribute('id', 'px-audio-player');\r\n            //=== Insert Player to the Document ===//\r\n            document.body.appendChild(audio_player);\r\n        }\r\n\r\n        //====> Audio Buttons <====//\r\n        Phenix(trigger).on('click', event => {\r\n            event.preventDefault();\r\n            //=== Get Data ===//\r\n            let button = event.target,\r\n                audio_file = button.getAttribute('href') || button.getAttribute('data-audio');\r\n\r\n            //=== Check if the Audio is Already Playing ===//\r\n            if (audio_player.getAttribute('src') === audio_file && !audio_player.paused) {\r\n                //=== Pause the Audio ===//\r\n                audio_player.pause();\r\n\r\n                //=== Switch Play Status icon ===//\r\n                if(button.classList.contains('fa-pause')) {\r\n                    button.classList.remove('fa-pause');\r\n                    button.classList.add('fa-play');\r\n                }\r\n\r\n                //=== Switch Play Status icon ===//\r\n                else if(button.classList.contains('fa-music-note')) {\r\n                    button.classList.remove('fa-music-note');\r\n                    button.classList.add('fa-music-note-slash');\r\n                }\r\n            } else {\r\n                //=== Set Audio and Play ===//\r\n                audio_player.setAttribute('src', audio_file);\r\n                audio_player.play();\r\n\r\n                //=== Switch Play Status icon ===//\r\n                if (button.classList.contains('fa-play')) {\r\n                    button.classList.add('fa-pause');\r\n                    button.classList.remove('fa-play');\r\n                }\r\n\r\n                //=== Switch Play Status icon ===//\r\n                else if(button.classList.contains('fa-music-note-slash')) {\r\n                    button.classList.add('fa-music-note');\r\n                    button.classList.remove('fa-music-note-slash');\r\n                }\r\n\r\n                //=== When Audio is Finished Switch the Status icon ===//\r\n                audio_player.addEventListener('ended', (isEnded) => {\r\n                    //=== Switch Play Status icon ===//\r\n                    if (button.classList.contains('fa-play')) {\r\n                        button.classList.add('fa-pause');\r\n                        button.classList.remove('fa-play');\r\n                    }\r\n\r\n                    //=== Switch Play Status icon ===//\r\n                    else if(button.classList.contains('fa-music-note-slash')) {\r\n                        button.classList.add('fa-music-note');\r\n                        button.classList.remove('fa-music-note-slash');\r\n                    }\r\n                });\r\n            }\r\n        }, true);\r\n    };\r\n\r\n    /*====> Define Information <====*/\r\n    height; getCSS; direction; getURL\r\n    inView; viewport; copyrights;\r\n\r\n    /*====> Define UI Effects <====*/\r\n    slideUp; slideDown; slideToggle;\r\n    fadeOut; fadeIn; fadeToggle;\r\n\r\n    /*====> Define Other Features <====*/\r\n    counter; multimedia; timer;\r\n    sticky; smothScroll; scrollSpy;\r\n    design; themes; animations;\r\n\r\n    /*====> Define Components <====*/\r\n    dropdown; tabs; collapse; connect;\r\n    popup; lightbox; menu; datatable;\r\n    validation; uploader; progress; rebuildSelect\r\n    select; repeater; rating; seo; loader;\r\n    slider; utilities; notifications; init; debounce\r\n}\r\n\r\n/*====> Phenix Selecting Method <====*/\r\nconst Phenix = (selector?:any) => {\r\n    /*====> Get Elements from Selector <====*/\r\n    if (typeof(selector) === 'string' && selector.length > 0) {\r\n        //====> Select as Phenix Elements <====//\r\n        const selected = document.querySelectorAll(selector);\r\n        //====> Create Elements Query <====//\r\n        return new PhenixElements(...selected);\r\n    }\r\n\r\n    /*====> if its Elements Passed it <====*/\r\n    else if (selector !== null && typeof(selector) !== 'undefined' || 'number') {\r\n        //====> if Not Array Make it one <====//\r\n        const elements = Array.isArray(selector) ? selector : [selector];\r\n        //====> Filter Undefined/Nulled Items <====//\r\n        const filteredElements = elements.filter((element) => element !== null && element !== undefined);\r\n        //====> and Create Elements Query <====//\r\n        return new PhenixElements(...filteredElements);\r\n    }\r\n}\r\n\r\n//====> Export Phenix <====//\r\nexport default Phenix;\r\n\r\n/*====> Import Features <====*/\r\nimport './features/get-info';   //==> Information\r\nimport './features/effects';    //==> UI Effects\r\nimport './features/counter';    //==> Animated Counter\r\nimport './features/animations'; //==> View-port Animations\r\nimport './features/validation'; //==> Form Validation\r\nimport './features/collapse';   //==> Collapse Toggle\r\nimport './features/notifications'; //==> Notifications\r\n\r\n/*====> Import Components <====*/\r\nimport './components/menu';      //==> Menus\r\nimport './components/media';     //==> Media Setter\r\nimport './components/timer';     //==> Time Counter\r\nimport './components/dropdown';  //==> Dropdown\r\nimport './components/tabs';      //==> Tabs System\r\nimport './components/popup';     //==> Popups\r\nimport './components/progress';  //==> Progress\r\nimport './components/select';    //==> Advanced Select\r\nimport './components/uploader';  //==> File Uploader\r\nimport './components/datatable'; //==> Data-Tables\r\n\r\n/*====> Integration <====*/\r\nimport './integration/slider';    //==> Splide.js Slider\r\nimport './integration/utilities'; //==> Phenix Utilities\r\nimport './integration/blocks';    //==> Phenix Blocks Scripts\r\nimport './integration/wordpress'; //==> Wordpress Integration\r\nimport './integration/woocommerce'; //==> WooCommerce Integration\r\n\r\n/*====> Custom Script <====*/\r\nimport './custom-scripts';\r\n\r\n//====> Export Global Phenix <====//\r\nmodule.exports = Phenix;","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\ndeclare var noUiSlider: any;\r\n\r\n/*====> Phenix Blocks Script <====*/\r\nPhenixElements.prototype.init = function (scripts?:[]) {\r\n    //===> Activate Lazyloading <===//\r\n    Phenix(document).lazyLoading();\r\n\r\n    //===> Smooth Scroll <====//\r\n    Phenix('a.smooth-scroll, .smooth-scroll a[href*=\"#\"]').forEach((link:HTMLElement) => {\r\n        // let hasFunction = Phenix(link).ancestor('.px-tabs') || Phenix(link).ancestor('.scrollspy-menu');\r\n        // if (!hasFunction) \r\n        Phenix(link).smothScroll();\r\n    });\r\n\r\n    Phenix(\".go-up-btn\").on(\"click\", isClicked => window.scrollTo({top: 0,left: 0,behavior: \"smooth\",}));\r\n\r\n    /*====> Add Data Options to un-reachable Elements <====*/\r\n    Phenix(`[data-add-options]`).forEach((element:HTMLElement) => {\r\n        //===> Get Data Options <====//\r\n        let dataOptions = JSON.parse(element.getAttribute('data-add-options'));\r\n        //===> Add Data Options the Elements <====//\r\n        Object.entries(dataOptions).forEach(([selector, options]) => {\r\n            //===> Get Selector <====//\r\n            element.querySelectorAll(`.${selector}`).forEach((item:HTMLElement) => {\r\n                //===> Add Data Options to Elements <====//\r\n                Object.entries(options).forEach(([attribute, value]) => item.setAttribute(`${attribute}`, value));\r\n            });\r\n        });\r\n    });\r\n\r\n    //===> Move Elements to Sibling Grid <===//\r\n    Phenix('.move-to-grid').forEach(element => {\r\n        let grid_element = Phenix(element).siblings('.row')[0];\r\n        Phenix(grid_element).insert(\"append\", element);\r\n    });\r\n\r\n    //===> Move Elements to Sibling Grid <===//\r\n    Phenix('.move-to-grid-before').forEach(element => {\r\n        let grid_element = Phenix(element).siblings('.row')[0];\r\n        Phenix(grid_element).insert(\"prepend\", element);\r\n    });\r\n\r\n    //===> Move Header <===//\r\n    const main_header = document.querySelector('.main-header'),\r\n          header_holder = document.querySelector('#header-holder');\r\n\r\n    //====> Header Holders <====//\r\n    if (main_header && header_holder) header_holder.prepend(main_header);\r\n\r\n    //===> Audio Player [Testimonials] <===//\r\n    if (document.querySelector('[data-audio]') || document.querySelector('.audio-trigger')) {\r\n        //====> Audio Buttons <====//\r\n        Phenix(document).audioTrigger('button[data-audio], .audio-trigger');\r\n    }\r\n\r\n    //===> Sticky Elements <====//\r\n    Phenix(\"[data-sticky], .main-header.position-st\").sticky({into: 0});\r\n\r\n    //====> Sliders <====//\r\n    Phenix('.px-slider:not([data-is-navigation])').slider();\r\n\r\n    //====> Tabs <====//\r\n    Phenix('.px-tabs').tabs();\r\n    \r\n    //====> Popups <====//\r\n    Phenix('.px-modal').popup();\r\n\r\n    //====> Activate Select <====//\r\n    Phenix('select.px-select').forEach((select:HTMLElement) => {\r\n        if (!select.querySelector('option')) Phenix(select).insert('prepend', `<option value=\"\" selected>${select.getAttribute('data-placeholder') || 'Default'}</option>`);\r\n        Phenix(select).select();\r\n    });\r\n\r\n    //===> Unlocated Menu fallback style. <===//\r\n    Phenix('.px-navigation > div.reset-list').forEach((element:HTMLElement) => {\r\n        //===> Define Elements <===//\r\n        let parent:any = Phenix(element).ancestor(\".px-navigation\"),\r\n            classNames = element.classList,\r\n            children  = element.childNodes;\r\n\r\n        //===> Move Children <===//\r\n        children.forEach((child:any) => {\r\n            parent.appendChild(child);\r\n            //===> Move Classnames <===//\r\n            classNames.forEach((className:string) => child.classList.add(className));\r\n        });\r\n\r\n        //===> Remove Element <===//\r\n        element.remove();\r\n    });\r\n\r\n    //===> Megamenu Hooks <===//\r\n    Phenix(\".pds-megamenu\").forEach((menu:HTMLElement) => {\r\n        //===> Get Elements <====//\r\n        const id = menu.getAttribute('id');\r\n        const menu_item = document.querySelector(`.mgh-${id}`);\r\n        //===> Get the Menu Item <===//\r\n        Phenix(menu_item).insert('append', menu);\r\n    });\r\n\r\n    //===> Phenix Menu <===//\r\n    Phenix('.px-navigation').menu();\r\n\r\n    //====> Multimedia <====//\r\n    Phenix('.px-media').multimedia({lazyloading: true});\r\n\r\n    //====> Phenix Uploader <====//\r\n    Phenix('.px-uploader').uploader();\r\n\r\n    //====> Dropdown Buttons <====//\r\n    Phenix('.px-dropdown').dropdown();\r\n\r\n    //====> Progress <====//\r\n    Phenix('.px-progress').progress({lazyloading: true});\r\n\r\n    //====> Global Accordion <====//\r\n    Phenix('.px-accordion:not(.custom-accordion) .accordion-btn').collapse({\r\n        related : true,\r\n        parent  : '.px-accordion',\r\n        target  : '.accordion-content',\r\n    });\r\n\r\n    //===> Animations <===//\r\n    Phenix('[data-animation], .px-animate, [data-lazy-group]').animations({animateCSS: [\"all\"]});\r\n\r\n    //====> Build Timer's <====//\r\n    Phenix('.px-timer').timer({type: \"countdown\"});\r\n\r\n    /*===> Table of contents Menu <===*/\r\n    let postContent = document.querySelector(\".entry-content\"), last_title,\r\n        content_menu = document.querySelector('#table-of-content-list');\r\n\r\n    /*===> Loop Through Titles <===*/\r\n    if (postContent && content_menu) {\r\n        //===> Get Headlines <===//\r\n        let headlines = postContent.querySelectorAll('h2, h3, h4');\r\n        //===> Reset List <===//\r\n        content_menu.innerHTML = \"\";\r\n        //===> for Each Headline <===//\r\n        headlines.forEach((element:HTMLElement, index) => {\r\n            //====> Get Data <====//\r\n            let title = element.textContent,\r\n                itemHtml = `<li class=\"tx-nowrap\"><a href=\"#section-${index}\" class=\"smoth-scroller\">${title}</a></li>`;\r\n    \r\n            //====> Set ID <====//\r\n            element.setAttribute('id', `section-${index}`);\r\n\r\n            //====> Sub-Titles <====//\r\n            if (element.matches('h3' || 'h4')) {\r\n                //===> ... <===//\r\n                let last_item = content_menu.querySelector('li:last-child'),\r\n                    last_list = last_item?.querySelector('ul') || content_menu;\r\n                //====> Create new Menu <====//\r\n                if (!last_list && last_item) last_list = Phenix(last_item).insert('append', '<ul class=\"table-of-content-menu pdx-15\"></ul>');\r\n    \r\n                //====> Create as Menu Item <====//\r\n                Phenix(last_list).insert('append', itemHtml);\r\n            }\r\n            //====> Create as Main Title <====//\r\n            else Phenix(content_menu).insert('append', itemHtml);\r\n    \r\n            //====> Assign Last Title <====//\r\n            last_title = element;\r\n        });\r\n    }\r\n\r\n    //===> .Scrollspy. <===//\r\n    Phenix(\".scrollspy-menu\").scrollSpy();\r\n\r\n    //===> .Others. <===//\r\n    Phenix(document).utilities();\r\n\r\n    //===> Header Hacks <===//\r\n    if (main_header) {\r\n        \r\n    }\r\n\r\n    //===> Add Support for CSS Scroll Driving Animations <===//\r\n    // Phenix(document).import(\"scroll-timeline\", \"script\", \"https://flackr.github.io/scroll-timeline/dist/scroll-timeline.js\", ()=>{}, false);\r\n\r\n    //===> Add Support Price Range Sliders <===//\r\n    //===> Price Range Slider <===//\r\n    const RangeSliders = Phenix('.price-range');\r\n\r\n    if (RangeSliders.length > 0) {\r\n        //====> Import Slider Plugin <====//\r\n        Phenix(document).import(\"rangeslider\", \"script\", \"rangeslider.js\", ()=>{\r\n            //====> Import CSS <====//\r\n            Phenix(document).import(\"rangeslider\", \"link\", \"rangeslider.css\", ()=>{}, true);\r\n\r\n            //====> Activate Sliders <====//\r\n            RangeSliders.forEach((slider:any) => {\r\n                //===> Get Page Direction <===//\r\n                let page_direction = Phenix(document).direction();\r\n        \r\n                //===> Initial the Slider <===//\r\n                noUiSlider.create(slider, {\r\n                    step: 5,\r\n                    connect: true,\r\n                    tooltips:true,\r\n                    start: [150, 700],\r\n                    direction: page_direction,\r\n                    range: {'min': 10,'max': 900},\r\n                });\r\n        \r\n                //===> Update Controls Values <===//\r\n                var min_range = slider.querySelector('.price-range-min'),\r\n                    max_range = slider.querySelector('.price-range-max');\r\n        \r\n                slider.noUiSlider.on('update', function (values, handle) {\r\n                    if (handle) {max_range.value = values[handle];} \r\n                    else {min_range.value = values[handle];}\r\n                });\r\n        \r\n                //===> Update From Controls <===//\r\n                min_range.addEventListener('change', event => {\r\n                    var maxVal = max_range.value,\r\n                        minVal = min_range.value;\r\n                        slider.noUiSlider.set([parseInt(minVal),parseInt(maxVal)]);\r\n                });\r\n        \r\n                max_range.addEventListener('change', event => {\r\n                    var maxVal = max_range.value,\r\n                        minVal = min_range.value;\r\n                        slider.noUiSlider.set([parseInt(minVal),parseInt(maxVal)]);\r\n                });\r\n            });\r\n        }, true);\r\n    }\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix and Splide\r\n * ===> 02 - Phenix Slider\r\n * ===> 03 - Create Markup\r\n * ===> 02 - \r\n * ===> 02 - \r\n*/\r\n\r\n\r\n/*====> Phenix Query <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n/*====> Swiper JS for The Slider Core <====*/\r\ndeclare var Swiper: any;\r\n\r\n/*====> Phenix Slider <====*/\r\nPhenixElements.prototype.slider = function (options?:{\r\n    type?:string;\r\n    items?:number;\r\n    speed?:number;\r\n    duration?:number;\r\n    autoplay?:boolean;\r\n    controls?:any;\r\n    pagination?:any;\r\n    breakpoints?:any;\r\n    direction?:string;\r\n    arrow?:string;\r\n    page?:string;\r\n    waitForTransition?:boolean;\r\n    reverseDirection?:boolean;\r\n    sync?:string;\r\n    pauseOnHover?:boolean;\r\n    rewind?:boolean;\r\n    width?:string;\r\n    height?:string;\r\n    autoHeight?:string;\r\n    center?:any;\r\n    controller?:any;\r\n    zoom:any;\r\n}) {\r\n    //====> Sliders Activator <====//\r\n    const slider_handler = () => this.forEach((slider:HTMLElement) => {\r\n        //====> Integration <====//\r\n        const slider_integration = (slider) => {\r\n            //====> Multimedia Integration <====//\r\n            const media_elements = slider.querySelectorAll('[data-src]');\r\n            Phenix(media_elements).multimedia();\r\n    \r\n            //====> Lazyloading Integration <====//\r\n            slider.querySelectorAll('.px-media.px-loading, .px-media.px-loader').forEach(media => {\r\n                if (Phenix(media).inView()) {\r\n                    //====> Multimedia Loader <====//\r\n                    if (media.getAttribute('data-src')) {\r\n                        Phenix(media).multimedia();\r\n                    } else {\r\n                        media.setAttribute('src', media.getAttribute('data-lazyload'));\r\n                    }\r\n                    //====> Disable Loading Spinner <====//\r\n                    media.classList.remove('px-loader');\r\n                    media.classList.remove('px-loading');\r\n                }\r\n            });\r\n\r\n            //====> Popup Modals <====//\r\n            const modalTriggers = slider.querySelectorAll(\".px-lightbox, [data-modal]\");\r\n            if (modalTriggers.length > 0) Phenix('.px-modal').popup();\r\n            \r\n            //====> Audio Buttons <====//\r\n            const audioTriggers = slider.querySelector(\"button[data-audio]\");\r\n            if (audioTriggers) Phenix(document).audioTrigger(\"button[data-audio]\");\r\n        };\r\n\r\n        //====> Slider Creator <=====//\r\n        const slider_creator = (slider:any) => {\r\n            /*====> Get Inline Options <====*/\r\n            let currentClasses = slider.classList,\r\n                inline = attr => slider.getAttribute(attr) === \"true\" ? true : slider.getAttribute(attr) === \"false\" ? false : slider.getAttribute(attr);\r\n\r\n            //====> Already Exist <====//\r\n            if (currentClasses.contains('swiper') || currentClasses.contains('swiper-wrapper')) return;\r\n\r\n            //====> Get Options <====//\r\n            const zoom = inline('data-zoom') || options?.zoom;\r\n            const thumbnails = inline('data-sync') || options?.sync;\r\n            const controls = inline('data-controls') || options?.controls;\r\n            const pagination = inline('data-pagination') || options?.pagination;\r\n            const controller = inline('data-controller') || options?.controller;\r\n            const autoPlayDisabled = inline('data-autoplay') === 'false' || options?.autoplay === false || currentClasses.contains(\"data-autoplay-off\");\r\n\r\n            //====> Default Options <====//\r\n            const slider_options:any = {\r\n                //===> Main Options <===//\r\n                a11y: true,\r\n                slidesOffsetAfter:0,\r\n                loop: inline('data-loop') || true,\r\n                breakpoints: options?.breakpoints || {},\r\n                direction: inline('data-direction') || options?.direction || null,\r\n                slidesPerView: (slider.getAttribute('data-autoWidth') ? \"auto\" : false) || parseInt(inline('data-items')) || options?.items || 1,\r\n                centeredSlides: inline('data-center') || currentClasses.contains(\"data-center-on\") ? true : null,\r\n\r\n                //===> User Actions <====//\r\n                rewind: inline('data-rewind') || options?.rewind || null,\r\n\r\n                //===> Controls <===//\r\n                navigation: controls ? {nextEl: `.swiper-button-next`, prevEl: `.swiper-button-prev`} : null,\r\n                pagination: pagination ? {type: 'bullets', el: '.swiper-pagination', clickable: true} : null,\r\n\r\n                //===> Animations <===//\r\n                speed: parseInt(inline('data-speed')) || options?.speed || 700,\r\n                effect: inline('data-type')?.replace(\"loop\", \"slide\") || options?.type?.replace(\"loop\", \"slide\") || null,\r\n\r\n                //===> Autoplay <===//\r\n                autoplay: autoPlayDisabled ? false : {\r\n                    disableOnInteraction: false,\r\n                    delay: parseInt(inline('data-duration')) ?? options?.duration,\r\n                    pauseOnMouseEnter: inline('data-pause-hover') || options?.pauseOnHover || true,\r\n                    reverseDirection: inline('data-reverseDirection') || options?.reverseDirection || false,\r\n                    // waitForTransition: inline('data-waitForTransition') || options?.waitForTransition || false,\r\n                },\r\n\r\n                //===> Style <===//\r\n                width: inline('data-width') || options?.width || null,\r\n                height: inline('data-height') || options?.height || null,\r\n                autoHeight: inline('data-autoHeight') || options?.autoHeight || null,\r\n\r\n                //===> Syncing Controller and THumbnails <===//\r\n                thumbs: thumbnails ? {swiper: thumbnails} : null,\r\n                controller: controller ? {by: 'slide', control: controller} : null,\r\n\r\n                //===> Zooming Feature <===//\r\n                zoom: zoom ? {\r\n                    maxRatio: 5,\r\n                    containerClass: \"px-media\"\r\n                } : null,\r\n\r\n                //===> Accessibility <====//\r\n                keyboard: {enabled: true},\r\n\r\n                //===> Events <===//\r\n                on: {\r\n                    //===> Slider Init <===//\r\n                    init: (event) => {\r\n                        //====> Get Slider Wrapper <====//\r\n                        const slider_wrapper = event.wrapperEl;\r\n                        //====> Active Slide <====//\r\n                        slider_wrapper.querySelector(\".swiper-slide-active\")?.classList.add(\"is-active\");\r\n                        //====> Run Integration <====//\r\n                        slider_integration(slider_wrapper);\r\n                    },\r\n                    // //===> Slider Loop Fix <===//\r\n                    // loopFix: (event) => {\r\n                    //     //====> Run Integration <====//\r\n                    //     slider_integration();\r\n                    // },\r\n                    //===> Slider Slide Change <===//\r\n                    slideChange: (event) => {\r\n                        //====> Get Slider Wrapper <====//\r\n                        const slider_wrapper = event.wrapperEl;\r\n                        //====> Remove Active Slide <====//\r\n                        slider_wrapper.querySelector(\".is-active\")?.classList.remove(\"is-active\");\r\n                        //====> Active Slide <====//\r\n                        slider_wrapper.querySelector(\".swiper-slide-active\")?.classList.add(\"is-active\");\r\n                    },\r\n                },\r\n            }\r\n\r\n            //===> Center Mode <===//\r\n            if (slider_options.centeredSlides) {\r\n                console.log(slider_options.loop);\r\n            }\r\n\r\n            //====> Mobile Responsive <====//\r\n            inline('data-sm') ? slider_options.breakpoints[570] = { \r\n                //===> Slides Per View and Loop Fixer <===//\r\n                slidesPerView: parseInt(inline('data-sm')) || slider_options.slidesPerView,\r\n            } : '';\r\n\r\n            //===> Medium Screens <===//\r\n            inline('data-md') ? slider_options.breakpoints[1100] = {\r\n                slidesPerView: parseInt(inline('data-md')) || slider_options.slidesPerView,\r\n            } : '';\r\n\r\n            //===> Large Screens <===//\r\n            inline('data-lg') ? slider_options.breakpoints[1170] = {\r\n                slidesPerView: parseInt(inline('data-lg')) || slider_options.slidesPerView,\r\n            } : '';\r\n\r\n            //===> xLarge Screens <===//\r\n            inline('data-xl') ? slider_options.breakpoints[1400] = {\r\n                slidesPerView: parseInt(inline('data-xl')) || slider_options.slidesPerView,\r\n            } : '';\r\n\r\n            //====> Create Markup <====//\r\n            let swiper_wrapper = document.createElement(\"div\"),\r\n                current_slides = slider.children;\r\n\r\n            //====> Move Slides <====//\r\n            Array.from(current_slides).forEach((slide:any) => {\r\n                slide.classList.add('swiper-slide');\r\n                swiper_wrapper.appendChild(slide);\r\n            });\r\n\r\n            //====> Set Class Names <====//\r\n            currentClasses.add('swiper');\r\n            swiper_wrapper.setAttribute(\"class\", \"swiper-wrapper\");\r\n\r\n            //====> Append Elements <====//\r\n            slider.appendChild(swiper_wrapper);\r\n\r\n            //===> Create Navigation <===//\r\n            if (controls) {\r\n                let navigation_wrapper = document.createElement(\"div\"),\r\n                    nextButton = document.createElement(\"button\"),\r\n                    prevButton = document.createElement(\"button\");\r\n    \r\n                //===> Set Attributes <===//\r\n                navigation_wrapper.setAttribute(\"class\", `px-slider-controls z-index-dropdown ${typeof(controls) === \"string\" && controls !== \"1\" ? controls : 'fluid flexbox position-ab pos-center-y align-between align-center-y pos-start-0'}`);\r\n                nextButton.setAttribute(\"class\", `swiper-button-next px-slider-button reset-button fas fa-angle-${Phenix(document).direction(\"end\")} ${inline('data-arrow') || options?.arrow || 'btn primary small square'}`);\r\n                prevButton.setAttribute(\"class\", `swiper-button-prev px-slider-button reset-button  fas fa-angle-${Phenix(document).direction(\"start\")} ${inline('data-arrow') || options?.arrow || 'btn primary small square'}`);\r\n    \r\n                //===> Append Elements <===//\r\n                navigation_wrapper.appendChild(prevButton);\r\n                navigation_wrapper.appendChild(nextButton);\r\n                slider.appendChild(navigation_wrapper);\r\n            }\r\n\r\n            //===> Create Pagination <===//\r\n            if (pagination) {\r\n                let pagination_wrapper = document.createElement(\"div\");\r\n                pagination_wrapper.setAttribute(\"class\", `swiper-pagination px-slider-pagination z-index-dropdown ${typeof(pagination) === \"string\" && pagination !== \"1\" ? pagination : 'position-ab pos-center-x pos-bottom-15'}`);\r\n                // let page_class  = inline('data-page') || options?.page || 'pd-5 bg-primary no-border tiny square radius-circle mx-5';\r\n    \r\n                //===> Append Pagination <===//\r\n                slider.appendChild(pagination_wrapper);\r\n            }\r\n\r\n            //====> Return Options <====//\r\n            const final_options:any = {};\r\n            Object.entries(slider_options).forEach(([key, value]) => {\r\n                //===> Remove Null Options <===//\r\n                value !== null ? final_options[key] = value : null;\r\n            });\r\n\r\n            //====> Default <====//\r\n            if (isNaN(final_options.autoplay.delay)) final_options.autoplay.delay = 6000;\r\n\r\n            //====> Fade Effect Fixes <====//\r\n            if (final_options.effect === \"fade\") {\r\n                //===> Disable Loop <===//\r\n                final_options.loop = false;\r\n                //===> Fade Effect Avoid seeing content behind <===//\r\n                final_options.fadeEffect = {crossFade: true};\r\n            }\r\n\r\n            //====> Return Options <====//\r\n            return final_options;\r\n        }\r\n\r\n        //====> Run Slider <====//\r\n        new Swiper(slider, slider_creator(slider));\r\n\r\n        //====> Stop Played Media <====//\r\n        // the_slider.on(['inactive'], function(data) {\r\n        //     let video = data.slide.querySelector('video'),\r\n        //         iframe = data.slide.querySelector('iframe');\r\n\r\n        //     //====> Played Video <====//\r\n        //     if (video) video.playing ? video.pause() : null;\r\n\r\n        //     //====> Played iFrame <====//\r\n        //     if (iframe) {\r\n        //         let source = iframe.getAttribute('src');\r\n        //         iframe.setAttribute('src', source);\r\n        //     };\r\n        // });\r\n    });\r\n\r\n    //====> Load Splide JS <====//\r\n    if (!document.querySelector('#slider-phenix-script') && this.length > 0) {\r\n        //===> Load CSS <===//\r\n        Phenix(document).import(\"slider\", \"link\", \"swiper.css\", () => {}, true);\r\n\r\n        //===> Create Script Element <===//\r\n        Phenix(document).import(\"slider\", \"script\", \"swiper-slider.js\", () => {\r\n            slider_handler();\r\n        }, true);\r\n    //====> if Al-ready loaded run the sliders <====//\r\n    } else {\r\n        slider_handler();\r\n    }\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Phenix Utilities\r\n * ===> 03 - Form Utilities\r\n * ===> 04 - Placeholder Handler\r\n * ===> 05 - Global Utilities\r\n * ===> 06 - Item Remover\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\ndeclare var Masonry:any;\r\ndeclare var tinyTypewriter:any;\r\ndeclare var initMarqueeSlider:any;\r\n\r\n/*====> Phenix Utilities <====*/\r\nPhenixElements.prototype.utilities = function (options?:{\r\n    type?:string, //====> Utilities Types\r\n}) {\r\n    //====> Default Type <====//\r\n    let type = options?.type || 'all';\r\n\r\n    //===> Form Utils <====//\r\n    if (type.includes(\"form\") || type === \"all\") {\r\n        //===> Placeholder Effect <====//\r\n        Phenix('[placeholder]').forEach((control:HTMLElement) => {\r\n            //====> Current Placeholder <===//\r\n            let holder = control.getAttribute('placeholder');\r\n            //====> Empty Placeholder <===//\r\n            Phenix(control).on('focus', event => control.removeAttribute('placeholder'));\r\n            //====> Restore Placeholder <===//\r\n            Phenix(control).on('blur', event => control.setAttribute('placeholder', holder));\r\n        });\r\n\r\n        //===> Form Controls Group <===//\r\n        Phenix('.form-ui, .px-form').forEach((form:HTMLElement) => {\r\n            //===> Get the Controls Size <====//\r\n            let size = form.getAttribute('data-size') || '';\r\n    \r\n            //===> for Each Form <====//\r\n            form.querySelectorAll('input, select, textarea').forEach(controler => {\r\n                //====> Get the controler type <====//\r\n                let type = controler.getAttribute('type');\r\n                //====> if has no such class names or type <====//\r\n                if (!controler.matches('.btn' || '.form-control'))\r\n                    type !== 'submit' || 'button' || 'radio' || 'checkbox' ? controler.classList.add('form-control', size) : '';\r\n            });\r\n        });\r\n\r\n        //====> Form Repeater <====//\r\n        Phenix(\".px-form-repeater\").forEach((repeater_container:Element) => {\r\n            //====> Define Data <====//\r\n            const add_btn  = repeater_container.querySelector(\".px-repeater-add\"),\r\n                  fields_key = repeater_container.getAttribute(\"data-fields-key\"),\r\n                  items_list = repeater_container.querySelector(\".px-repeater-items\"),\r\n                  original_row = items_list.querySelector(\"[data-item-key]\");\r\n\r\n            //===> Set a Number for the Original Row <===//\r\n            if(!original_row.getAttribute('data-item-key')) original_row.setAttribute(\"data-item-key\", \"0\");\r\n\r\n            //===> Correct the name of the Fields <===//\r\n            original_row.querySelectorAll(\"[name]\").forEach((element:HTMLElement) => {\r\n                //====> Get the Name <====//\r\n                let name = element.getAttribute(\"name\");\r\n                //====> Move the Original Name to new Attribute <====//\r\n                element.setAttribute('data-original-name', name);\r\n                //====> Correct the Name <====//\r\n                element.setAttribute(\"name\", `${fields_key}[${original_row.getAttribute('data-item-key')}][${name}]`);\r\n            });\r\n\r\n            //===> Remove Button Creator <===//\r\n            const create_remove_btn = (repeater_row:any) => {\r\n                //===> Insert the Remove Button <===//\r\n                const currentRemoveBtn = repeater_row.appendChild(add_btn.cloneNode(false));\r\n\r\n                //===> Change the Button Style <===//\r\n                currentRemoveBtn.classList.remove(\"fa-plus\", \"tiny\", \"small\", \"large\", \"xlarge\");\r\n                currentRemoveBtn.classList.add('fa-minus', 'danger', 'px-repeater-remove');\r\n\r\n                //====> Correct Button Size <====//\r\n                if (repeater_row.querySelector(\".form-control\")) {\r\n                    let classNames = repeater_row.querySelector(\".form-control\").classList;\r\n                    let sizes = [\"tiny\", \"small\", \"large\", \"xlarge\"];\r\n                    sizes.some(size => classNames.contains(size) ? currentRemoveBtn.classList.add(size) : '');\r\n                }\r\n\r\n                //====> Remove the Item <====//\r\n                currentRemoveBtn.addEventListener(\"click\", (event:any) => Phenix(event.target).ancestor(\".px-form-repeater-fields\").remove());\r\n            };\r\n\r\n            //====> Add New Item (Remove Item Method Included) <====//\r\n            add_btn.addEventListener(\"click\", (event:any) => {\r\n                //===> Create new Row <===//\r\n                const newRow:any  = items_list.appendChild(original_row.cloneNode(true)),\r\n                      currentRows = items_list.querySelectorAll(\"[data-item-key]\").length-1;\r\n\r\n                //===> Increase the Row Number <===//\r\n                newRow.setAttribute(\"data-item-key\", currentRows);\r\n\r\n                //===> Change the Fields Name <===//\r\n                newRow.querySelectorAll(\"[name]\").forEach((element:any) => {\r\n                    //====> Get the Name <====//\r\n                    let name = element.getAttribute('data-original-name');\r\n\r\n                    //====> Set the Name <====//\r\n                    element.setAttribute(\"name\", `${fields_key}[${currentRows}][${name}]`);\r\n\r\n                    //====> Cleanup Any Values <====//\r\n                    if (element.value) element.value = \"\";\r\n                    if (element.tagName === \"TEXTAREA\") element.innerHTML = \"\";\r\n\r\n                    //====> Clean Up Select Options <====//\r\n                    if (element.tagName === \"SELECT\") {\r\n                        element.querySelectorAll('[selected]').forEach(option => option.removeAttribute('selected'));\r\n                        //====> Advanced Select Rebuild <====//\r\n                        if (element.classList.contains('px-select')) Phenix(element).rebuildSelect();\r\n                    }\r\n                });\r\n\r\n                //===> Create Remove Button <===//\r\n                create_remove_btn(newRow);\r\n            });\r\n\r\n            //====> Create Remove Button Whenever it is not found <====//\r\n            setInterval(() => {\r\n                //====> Get the Rows <====//\r\n                let rows = repeater_container.querySelectorAll('[data-item-key]:not([data-item-key=\"0\"])');\r\n\r\n                //====> Create Remove Button <====//\r\n                if (rows) rows.forEach(row => !row.querySelector('.px-repeater-remove') ? create_remove_btn(row) : '');\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    //====> Others <====//\r\n    if (type.includes(\"other\") || type === \"all\") {\r\n        //====> Item Remover <====//\r\n        Phenix('.remove-item').on('click', click => {\r\n            //====> Prevent Default Behavior <====//\r\n            click.preventDefault();\r\n            //====> Remover Data <====//\r\n            let trigger = click.target,\r\n                target  = trigger.getAttribute('data-target' || 'href') || false,\r\n                relation = trigger.getAttribute('data-relation');\r\n    \r\n            //=== Remove Target in Ancestors ===//\r\n            if (!relation || relation === 'ancestor') Phenix(trigger).ancestor(target).remove();\r\n            //=== Remove Target in Siblings ===//\r\n            else if (relation === 'sibling') {\r\n                Phenix(trigger).siblings(target).forEach(sibling => sibling .remove());\r\n            }\r\n            //=== Remove Target as Global ===//\r\n            else if (relation === 'global' || 'none') document.querySelector(target).remove();\r\n            //=== Remove the Closest Target ===//\r\n            else if (relation === 'closest' || 'related') trigger.closest(target).remove();\r\n        });\r\n\r\n        //====> Create Animated Count Up <====//\r\n        Phenix('.px-counter').forEach((element:HTMLElement) => {\r\n            //===> Separate Numbers from Symbols <====//\r\n            const numbers = element.textContent.match(/\\d+/g),\r\n                  characters = element.textContent.replace(`${numbers}`, '');\r\n\r\n            //===> Set Correct Values <====//\r\n            element.setAttribute('data-value', `${numbers}`);\r\n            if(characters && !element.getAttribute('data-symbol')) element.setAttribute('data-symbol', `${characters}`);\r\n\r\n            //====> inView Checker <====//\r\n            Phenix(window).on('scroll', scroll => {\r\n                //===> Start Counting <====//\r\n                if (Phenix(element).inView() && !element.classList.contains('counting')) Phenix(element).counter();\r\n            });\r\n        });\r\n\r\n        //====> To Top Hook <=====//\r\n        let toTopHook = document.querySelector('.entry-content *:first-child');\r\n        if (!toTopHook) toTopHook = document.querySelector('.main-header + *');\r\n        if (toTopHook && !toTopHook.id) toTopHook.id = 'to-top-hook';\r\n    }\r\n    \r\n    //====> Dynamic Word Coloring <====//\r\n    if (type.includes(\"text\") || type === \"all\") {\r\n        //===> Dynamic Colors Variants for Elements Shadow <===//\r\n        Phenix(\"[class*='bx-shadow-gls'], .pds-sc-props\").forEach((element:HTMLElement) => {\r\n            //====> Color Transformer <====//\r\n            const transformColor = (color: string, amount: number) => {\r\n                let rgb = color.match(/\\d+/g).map(Number);\r\n                if (rgb.length > 4) rgb.splice(-(rgb.length - 3));\r\n                return rgb.map(c => Math.max(0, Math.min(255, c + amount))).join(', ');\r\n            };\r\n\r\n            //====> Color Contrast Checker <====//\r\n            const isLightOrDark = (color:string) => {\r\n                //===> get Colors Range <====//\r\n                let all = color.split(','),\r\n                    r = parseInt(all[0]), g = parseInt(all[1]), b = parseInt(all[2]);\r\n                //===> Calculate the luminance of the color <===//\r\n                let luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n                //===> Return 'light' or 'dark' based on the luminance <===//\r\n                return luminance;\r\n            }\r\n\r\n            //====> get the Background Color <====//\r\n            let bgColor = window.getComputedStyle(element).backgroundColor,\r\n                bgImage = window.getComputedStyle(element).backgroundImage,\r\n                darkerRgb:any = \"0,0,0\",\r\n                lighterRgb:any = \"255,255,255\";\r\n\r\n            //====> Check if has Background Gradient <====//\r\n            if (bgImage && bgImage.includes('gradient') && bgImage.match(/gradient\\((.*?)\\)/)) {\r\n                //===> Check for gradient Match colors <===//\r\n                let colors = [];\r\n\r\n                //===> Get Colors <===//\r\n                bgImage.match(/rgb\\(\\d{1,3}, \\d{1,3}, \\d{1,3}\\)/g).forEach((color:string) => {\r\n                    colors.push(color.replace('rgb', '').replace('(', '').replace(')', ''));\r\n                });\r\n\r\n                //===> Get the colors from the gradient <===//\r\n                const colorOne = isLightOrDark(colors[colors.length - 1]),\r\n                    colorTwo = isLightOrDark(colors[0]);\r\n\r\n                //===> Set the Colors <===//\r\n                darkerRgb  = transformColor(colorOne < colorTwo ? colors[colors.length - 1] : colors[0], -95);\r\n                lighterRgb = transformColor(colorOne > colorTwo ? colors[colors.length - 1] : colors[0], 95);\r\n            }\r\n\r\n            //====> Check if has Background Color <====//\r\n            else if (bgColor) {\r\n                //====> Create a darker shade by subtracting 90 from each color component <====//\r\n                darkerRgb = transformColor(bgColor, -95);\r\n                //====> Create a lighter shade by adding 80 to each color component <====//\r\n                lighterRgb = transformColor(bgColor, 95);\r\n            }\r\n\r\n            //====> Add the Colors to the CSS Properties <====//\r\n            element.style.setProperty('--shadow-color-dark', darkerRgb);\r\n            element.style.setProperty('--shadow-color-light', lighterRgb);\r\n        });\r\n    }\r\n\r\n    //====> icons List <====//\r\n    if (type.includes(\"icons\") || type === \"all\") Phenix('.icons-list').forEach((list:HTMLElement) => {\r\n        if (list.getAttribute('data-icon')) {\r\n            let classes = list.getAttribute('data-icon').split(\" \") || [];\r\n            list.querySelectorAll('li').forEach(item => item.classList.add(...classes));\r\n        }\r\n    });\r\n\r\n    //====> Copyrights Protection <====//\r\n    if (type.includes(\"copyrights\")) {\r\n        Phenix(document).on(\"contextmenu\", rightClick => rightClick.preventDefault());\r\n        Phenix(document).on(\"selectstart\", textSelect => textSelect.preventDefault());\r\n    }\r\n\r\n    //====> SEO Fix <====//\r\n    if (type.includes(\"seo\") || type === \"all\") {\r\n        //====> Headline Fix <====//\r\n        let headline = document.querySelector('h1');\r\n        if(!headline) Phenix('body').insert('prepend', `<h1 class=\"hidden\">${document.title}</h1>`);\r\n\r\n        //====> Images SEO/Performance <====//\r\n        setTimeout(() => {\r\n            Phenix('img').forEach((img:any) => {\r\n                //===> Get Image Data <===//\r\n                let img_width = img.getAttribute('width') || img.style.width || img.clientWidth,\r\n                    img_height = img.getAttribute('height') || img.style.height || img.clientHeight,\r\n                    parent_width = img.parentNode.clientWidth,\r\n                    parent_height = Phenix(img.parentNode).height();\r\n    \r\n                //===> Set Width and Height <===//\r\n                if (!img_width && parent_width > 0)  img.setAttribute('width', `${parent_width}`);\r\n                if (!img_height && parent_height > 0) img.setAttribute('height', `${parent_height}`);\r\n    \r\n                //===> Alternative Text <===//\r\n                if (!img.getAttribute('alt') || img.getAttribute('alt') === \"\") {\r\n                    img.setAttribute('alt', img.src.substring(img.src.lastIndexOf('/')+1));\r\n                }\r\n            });\r\n        }, 500);\r\n    \r\n        //====> Links SEO <====//\r\n        Phenix('a:not([title]):empty, button:not([title]):empty, a:not([title]), button:not([title])').forEach((link:any) => {\r\n            //===> Text Checker <===//\r\n            let text = link.getAttribute('data-title') || \"\";\r\n\r\n            //===> Get Text <===//\r\n            if (!link.querySelector('*') && link.textContent) text = link.textContent.trim();\r\n            else text = link.querySelector('h2')?.textContent || link.querySelector('h3')?.textContent || link.querySelector('h4')?.textContent || '';\r\n\r\n            //===> Alternative Text <===//\r\n            if (!link.getAttribute('title') || link.getAttribute('title') === \"\") link.setAttribute('title', text);\r\n            if (!link.getAttribute('aria-label') || link.getAttribute('aria-label') === \"\") link.setAttribute('aria-label', text);\r\n        });\r\n    }\r\n\r\n    //====> Third-Party Libraries <====//\r\n    if (type.includes(\"libraries\") || type === \"all\") {\r\n        //===> Prevent on WP Editor <====//\r\n        const document_classes = document.body.getAttribute('class');\r\n        //===> Check the Document Type <===//\r\n        if (!document.body.classList.contains('wp-admin') && !document_classes?.includes('-editor')) {\r\n            //===> Import Masonry Grid Plugin <===//\r\n            if(document.querySelector('.px-masonry')) Phenix(document).import(\"masonry\", \"script\", \"masonry.min.js\", ()=> {\r\n                Phenix(\".px-masonry\").forEach((grid:any) => {\r\n                    let first_child_class = grid.children[0].classList[0];\r\n                    var masonry = new Masonry(grid, {itemSelector: `.${first_child_class}`});\r\n                });\r\n            }, true);\r\n    \r\n            //===> Typed List <===//\r\n            if(document.querySelector('.typed-list')) {\r\n                //====> Create the List Structure <====//\r\n                Phenix('.typed-list').forEach((text_list:HTMLElement) => {\r\n                    //===> Gather the Items <===//\r\n                    const text_list_items = [];\r\n                    text_list.querySelectorAll('li').forEach(item => text_list_items.push(item.textContent));\r\n            \r\n                    //===> Create the Typed Text Element <===//\r\n                    const text_element = document.createElement('p');\r\n                    text_element.classList.add('typed-text');\r\n            \r\n                    //===> Assign the Text List <===//\r\n                    text_element.textContent = text_list_items[0];\r\n                    text_list_items.forEach((item, index) => text_element.setAttribute(`data-text-${index}`, item));\r\n            \r\n                    //===> Copy List Classed to Text Element <===//\r\n                    text_list.classList.forEach(item => !item.includes('list') ? text_element.classList.add(item) : null);\r\n            \r\n                    //===> Insert the Typed Text <===//\r\n                    Phenix(text_list).insert('before', text_element);\r\n                });\r\n        \r\n                //===> Import Typed Effect for Texts Library <====//\r\n                Phenix(document).import('typed-js', 'script', 'typewriter.js', (isReady) => Phenix('.typed-text').forEach((typeWriter:HTMLElement) => {\r\n                    //===> Items <===//\r\n                    let items = [];\r\n            \r\n                    //===> Get Text Items <===//\r\n                    for (let i = 0; i < 20; i++) {\r\n                        if(typeWriter.getAttribute(`data-text-${i}`)) { items.push(typeWriter.getAttribute(`data-text-${i}`)); }\r\n                    }\r\n            \r\n                    //===> Run the Typewriter <===//\r\n                    typeWriter.style.height = Phenix(document).toREM(Phenix(typeWriter).height());\r\n                    tinyTypewriter(typeWriter, {items: items, cursor: false, startDelay: 700});\r\n                }), true);\r\n            }\r\n    \r\n            //===> Marquee Slider <===//\r\n            if(document.querySelector('.px-marquee') || document.querySelector('.px-marquee-reverse')) {\r\n                //====> Import Marquee Library <====//\r\n                Phenix(document).import('marquee-js', 'script', 'marquee.js', (isReady) => {\r\n                    //===> Create Marquee <===//\r\n                    Phenix('.px-marquee, .px-marquee-reverse').forEach((marquee:HTMLElement, index) => {\r\n                        //===> Create Structure Wrappers Elements <===//\r\n                        const marquee_slider = document.createElement('div');\r\n                        const marquee_slides = document.createElement('div');\r\n            \r\n                        //===> Set Slider ID <===//\r\n                        const marquee_id = `px-marquee-${index}`;\r\n                        marquee.style.direction = 'ltr';\r\n                        marquee.setAttribute('id', marquee_id);\r\n        \r\n                        //===> Marquess Settings <===//\r\n                        if(!marquee.getAttribute('data-speed')) marquee.setAttribute('data-speed', \"15\");\r\n        \r\n                        //===> Set Wrappers Properties <===//\r\n                        marquee_slider.classList.add('marquee-slider-wrapper','display-flex', 'position-rv',);\r\n                        marquee_slides.classList.add('marquee-slider-slides-wrapper', 'display-flex', 'position-rv');\r\n                        marquee_slider.appendChild(marquee_slides);\r\n\r\n                        //===> Move Content Items to the Slides Wrapper <===//\r\n                        marquee.querySelectorAll(':scope > *').forEach((item:HTMLElement) => {\r\n                            //===> Set Item Properties <===//\r\n                            item.style.direction = Phenix(document).direction();\r\n                            item.classList.add('marquee-slider-slide');\r\n        \r\n                            //===> Append Item to the Slides Wrapper <===//\r\n                            marquee_slides.appendChild(item.cloneNode(true));\r\n        \r\n                            //===> Remove Item After it was Copied <===//\r\n                            item.remove();\r\n                        });\r\n            \r\n                        //===> Append the Slider Wrapper to the Marquee <===//\r\n                        marquee.appendChild(marquee_slider);\r\n            \r\n                        //===> Initialize Marquee <===//\r\n                        initMarqueeSlider(marquee_id, {\r\n                            allowPointEvent:true,\r\n                            dir: marquee.classList.contains('px-marquee-reverse') ? 'left' : 'right',\r\n                            stopOnHover: marquee.getAttribute('data-hover') && marquee.getAttribute('data-hover') === 'false' ? false : true,\r\n                        });\r\n                    });\r\n                }, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    //====> Return Phenix Query <====//\r\n    return this;\r\n}","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Custom Variables <====*/\r\ndeclare var wc_add_to_cart_params: any;\r\n\r\n/*====> D.O.M is Ready ? <====*/\r\nPhenix(document).on(\"DOMContentLoaded\", (loaded) => {\r\n    //===> WooCommerce Mini Cart Updater <===//\r\n    document.body.addEventListener('pds_cart_updated', function() {\r\n        //===> Fetch the updated cart fragments using Fetch API <===//\r\n        fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'get_refreshed_fragments'), {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n        })\r\n        //===> Return the Response as JSON data <===//\r\n        .then(response => response.json()).then(data => {\r\n            //===> Check for the Cart Fragments <===//\r\n            if (data && data.fragments) {\r\n                //===> Cart Content Fragment <===//\r\n                const newCartContent = data.fragments[\"div.widget_shopping_cart_content\"];\r\n\r\n                //===> Temporary Container for the Content <===//\r\n                const tempDiv = document.createElement('div');\r\n                tempDiv.innerHTML = newCartContent;\r\n                tempDiv.innerHTML += data.fragments['.cart-table'];\r\n\r\n                //===> Update The Mini Cart Items <===//\r\n                Phenix(\".pds-cart-fragment .woocommerce-mini-cart\").forEach(cart => cart.innerHTML = tempDiv.querySelector('.widget_shopping_cart_content').innerHTML);\r\n\r\n                //===> Update Cart Table <===//\r\n                Phenix(\".woocommerce-cart-form\").forEach(table => table.innerHTML = data.fragments['.cart-table']);\r\n\r\n                //===> Update Counts <===//\r\n                const itemsCount = tempDiv.querySelectorAll('.cart-item') ? tempDiv.querySelectorAll('.cart-item').length : 0;\r\n                Phenix(\".pds-cart-fragment .cart-count\").forEach(cart_count => cart_count.innerHTML = itemsCount);\r\n\r\n                //===> Update Cart Item Remover <===//\r\n                Phenix(\".cart-item .cart-item-remover\").on(\"click\", (isClicked) => {\r\n                    //===> Prevent link navigation <===//\r\n                    isClicked.preventDefault();\r\n                    const button = isClicked.target;\r\n\r\n                    //===> Get the Item Key <===//\r\n                    const cartItemKey = button.getAttribute('data-cart_item_key');\r\n\r\n                    //===> Activate Loading Mode <===//\r\n                    Phenix(button).ancestor('.cart-item').classList.add('px-loading-inline');\r\n\r\n                    //===> Create Form Data Request <===//\r\n                    const formData = new URLSearchParams();\r\n                    formData.append('cart_item_key', cartItemKey);\r\n                    formData.append('action', 'woocommerce_remove_cart_item');\r\n                    \r\n                    //===> Remove the Item from the Cart <===//\r\n                    pds_remove_from_cart(formData, cartItemKey);\r\n                }, true);\r\n            }\r\n        })\r\n        //===> Catch any errors <===//\r\n        .catch(error => console.error('Error:', error));\r\n    });\r\n\r\n    function pds_add_to_cart (button, product_ids) {\r\n        //===> Get Quantity <===//\r\n        let quantity = Phenix(button).ancestor('.single-product-content')?.querySelector('.quantity-input')?.value || parseInt(button.getAttribute('data-quantity')) || 1;\r\n\r\n        //===> Convert single ID to array <===//\r\n        if (!Array.isArray(product_ids)) product_ids = [product_ids];\r\n\r\n        //===> Remove Empty Items from Array <===//\r\n        product_ids = product_ids.filter(id => id);\r\n\r\n         //===> Collect Selected Attributes <===//\r\n        const attributes = {};\r\n        Phenix(button).ancestor('.single-product-content')?.querySelectorAll('select[name^=\"attribute_\"]').forEach(select => {\r\n            const attributeName = select.getAttribute('name');\r\n            const attributeValue = select.value;\r\n            if (attributeValue) {\r\n                attributes[attributeName] = attributeValue;\r\n            }\r\n        });\r\n\r\n        const addProductsSequentially = (index = 0) => {\r\n            //===> Ensure valid index and stop when done <===//\r\n            if (index >= product_ids.length) {\r\n                //===> Disable loading mode <===//\r\n                button.classList.remove('px-loading-inline');\r\n                //===> Trigger WooCommerce's AJAX event to update the cart fragments <===//\r\n                document.body.dispatchEvent(new CustomEvent('pds_cart_updated', {detail: {}}));\r\n                //===> Close Func <===//\r\n                return;\r\n            }\r\n\r\n            //===> Create Form Data Request <===//\r\n            const formData = new URLSearchParams();\r\n            formData.append('quantity', quantity);\r\n            formData.append('action', 'woocommerce_add_to_cart');\r\n            formData.append('product_id', product_ids[index]);\r\n\r\n            //===> Append Collected Attributes <===//\r\n            for (const [key, value] of Object.entries(attributes)) {\r\n                /*====> Custom Variables <====*/\r\n                formData.append(key, value as any);\r\n            }\r\n    \r\n            //===> Send the request to WooCommerce via Fetch API <===//\r\n            fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'add_to_cart'), {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n                body: formData.toString()\r\n            })\r\n            //===> Return the Response as JSON data <===//\r\n            .then(response => response.json()).then(data => {\r\n                //===> Check for Data and Error <===//\r\n                if (data && data.error) {\r\n                    //====> Show Notifications <====//\r\n                    Phenix(document).notifications({\r\n                        duration : 5000,\r\n                        type     : \"error\",\r\n                        position : [\"bottom\", \"end\"],\r\n                        message  : 'Error adding to cart: ' + data.error,\r\n                    });\r\n                } else {\r\n                    //====> Show Notifications <====//\r\n                    Phenix(document).notifications({\r\n                        duration : 5000,\r\n                        type     : \"success\",\r\n                        position : [\"bottom\", \"end\"],\r\n                        message  : \"Product added to cart successfully.\",\r\n                    });\r\n                    //===> Add next product in the list <===//\r\n                    addProductsSequentially(index + 1);\r\n                }\r\n            })\r\n            //===> Catch any errors <===//\r\n            .catch(error => console.error('Error:', error));\r\n        };\r\n\r\n        //===> Start Processing <===//\r\n        addProductsSequentially();\r\n    };\r\n\r\n    function pds_remove_from_cart (formData, cartItemKey) {\r\n        //===> Send the AJAX request via Fetch API <===//\r\n        fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'remove_from_cart'), {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n            body: formData.toString()\r\n        })\r\n        //===> Return the Response as JSON data <===//\r\n        .then(response => response.json()).then(data => {\r\n            //===> Check for Data Fragments <===//\r\n            if (data.fragments) {\r\n                //====> Remove the Item from the DOM <====//\r\n                document.querySelectorAll(`.cart-item[data-cart_item_key=\"${cartItemKey}\"]`).forEach(item => item.remove());\r\n    \r\n                //===> Trigger WooCommerce's AJAX event to update the cart fragments <===//\r\n                document.body.dispatchEvent(new CustomEvent('pds_cart_updated', { detail: data }));\r\n\r\n                //====> Show Notifications <====//\r\n                Phenix(document).notifications({\r\n                    duration : 5000,\r\n                    type     : \"success\",\r\n                    position : [\"bottom\", \"end\"],\r\n                    message  : \"Product removed from cart successfully.\",\r\n                });\r\n            } \r\n            //===> Check for Error <===//\r\n            else if (data.error) {\r\n                //====> Show Notifications <====//\r\n                Phenix(document).notifications({\r\n                    duration : 5000,\r\n                    type     : \"error\",\r\n                    position : [\"bottom\", \"end\"],\r\n                    message  : 'Error removing from cart: ' + data.message,\r\n                });\r\n            }\r\n        })\r\n        //===> Catch any errors <===//\r\n        .catch(error => {\r\n            console.error('Error removing item from cart:', error);\r\n        });\r\n    };\r\n\r\n    //===> WooCommerce Add to Cart <===//\r\n    Phenix(\".pds-add-to-cart\").on(\"click\", isClicked => {\r\n        //===> Prevent link navigation <===//\r\n        isClicked.preventDefault();\r\n        //===> Define Item Data <===//\r\n        const button = isClicked.target;\r\n        const productId = button.getAttribute('data-product');\r\n\r\n        //===> Activate Loading Mode <===//\r\n        button.classList.add('px-loading-inline');\r\n\r\n        //===> Add the Item to the Cart <===//\r\n        pds_add_to_cart(button, productId);\r\n    }, true);\r\n\r\n    //===> WooCommerce Mini Cart Item Remover <===//\r\n    Phenix(\".cart-item .cart-item-remover\").on(\"click\", (isClicked) => {\r\n        //===> Prevent link navigation <===//\r\n        isClicked.preventDefault();\r\n        const button = isClicked.target;\r\n\r\n        //===> Get the Item Key <===//\r\n        const cartItemKey = button.getAttribute('data-cart_item_key');\r\n\r\n        //===> Activate Loading Mode <===//\r\n        Phenix(button).ancestor('.cart-item').classList.add('px-loading-inline');\r\n\r\n        //===> Create Form Data Request <===//\r\n        const formData = new URLSearchParams();\r\n        formData.append('cart_item_key', cartItemKey);\r\n        formData.append('action', 'woocommerce_remove_cart_item');\r\n        \r\n        //===> Remove the Item from the Cart <===//\r\n        pds_remove_from_cart(formData, cartItemKey);\r\n    }, true);\r\n});","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n*/\r\n\r\n/*====> Phenix JS <====*/\r\nimport Phenix from \"..\";\r\ndeclare var wp:any, PDS_WP_KEY:any, window:any;\r\n\r\n/*====> D.O.M is Ready ? <====*/\r\nPhenix(document).on(\"DOMContentLoaded\", (loaded) => {\r\n    //===> Contact Form 7 Fixes <===//\r\n    const fixCF7 = () => {\r\n        //====> Fetching Form Data for CF7 <=====//\r\n        document.querySelectorAll('.wpcf7-form').forEach((form:any) => {\r\n            //====> Forms Validation <====//\r\n            Phenix('.wpcf7-form, .px-form-validation').validation();\r\n\r\n            //====> on Submit Prevent the Native behavior and submit with Fetch <====//\r\n            form.addEventListener('submit', (event:any) => {\r\n                //====> Prevent the default form submission <====//\r\n                event.preventDefault();\r\n                const submitButton = form.querySelector('input[type=\"submit\"]') || form.querySelector('button[type=\"submit\"]') || form.querySelector('.btn:last-of-type');\r\n\r\n                console.log(submitButton);\r\n\r\n                if(!form.querySelector('.px-validation') && !form.querySelector('.error')) {\r\n                    //====> Disable Form <====//\r\n                    submitButton.classList.add('px-loading-inline');\r\n\r\n                    //====> Date/Time Reformated <====//\r\n                    const dateTimeFormatter = (dateString) => {\r\n                        //===> Get Current Date and Time Data <===//\r\n                        let date = new Date(dateString),\r\n                            year = date.getFullYear(),\r\n                            month = ('0' + (date.getMonth() + 1)).slice(-2),\r\n                            day = ('0' + date.getDate()).slice(-2),\r\n                            hours = ('0' + date.getHours()).slice(-2),\r\n                            minutes = ('0' + date.getMinutes()).slice(-2);\r\n\r\n                        //===> Construct a readable date and time format <===//\r\n                        return year + '-' + month + '-' + day + ' ' + hours + ':' + minutes;\r\n                    }\r\n\r\n                    // Create a new FormData object from the form\r\n                    const formData = new FormData(form);\r\n\r\n                    //====> Loop through each entry in the FormData object <===//\r\n                    for (const pair of formData.entries()) {\r\n                        //====> Check if the entry value is a date/time string <====//\r\n                        if (typeof pair[1] === 'string' && pair[1].match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/)) {\r\n                            //====> Reformat the date/time string <====//\r\n                            formData.set(pair[0], dateTimeFormatter(pair[1]));\r\n                        }\r\n                    }\r\n\r\n                    //====> Submit with Ajax [Fetch] <====//\r\n                    fetch(form.getAttribute('action'), {\r\n                        body: formData,\r\n                        method: form.getAttribute('method'),\r\n                    }).then(response => {\r\n                        //====> Check Network Connection <====//\r\n                        if (!response.ok) {\r\n                            //===> Show Failed Message <===//\r\n                            Phenix(document).notifications({\r\n                                type: \"error\",\r\n                                duration: \"7000\",\r\n                                position: [\"center\", \"center\"],\r\n                                message: \"Network response was not ok\",\r\n                            });\r\n    \r\n                            //===> Throw an Error <====//\r\n                            throw new Error('Network response was not ok');\r\n                        }\r\n                        //====> Return Response Text <====//\r\n                        return response.text();\r\n                    }).then(data => {\r\n                        //====> Enable Form <====//\r\n                        submitButton.classList.add('px-loading-inline');\r\n                        //===> Reset Forms on Loading <===//\r\n                        Phenix('.wpcf7 input:not([type=\"hidden\"]):not(.btn):not([type=\"submit\"]), .wpcf7 select, .wpcf7 textarea').forEach((input:any) => {input.value = '';});\r\n\r\n                        //===> Reset PX Select Component <===//\r\n                        form.querySelectorAll('div.px-select').forEach((element: any) => {\r\n                            let firstOption = element.querySelector('.px-select-option:first-child');\r\n                            const toggleButton = element.querySelector('.px-select-toggle');\r\n                            if (!firstOption) firstOption = element.querySelector('.px-select-option:nth-child(2)');\r\n                            \r\n                            toggleButton.textContent = firstOption.textContent;\r\n                        });\r\n\r\n                        //====> Disable Form <====//\r\n                        submitButton.classList.remove('px-loading-inline');\r\n                        //===> Redirect to Success <===//\r\n                        const sourceParameter = window.location.href.replace(PDS_WP_KEY.site, '');\r\n                        window.location.href = `${PDS_WP_KEY.site ? PDS_WP_KEY.site + `/success/?source=${sourceParameter}` : `/success/?source=${sourceParameter}`}`;\r\n                    }).catch(error => {\r\n                        //===> Show Error Message <===//\r\n                        Phenix(document).notifications({\r\n                            type: \"error\",\r\n                            duration: \"7000\",\r\n                            position: [\"center\", \"center\"],\r\n                            message: error,\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //===> CF7 Style Fixes <===//\r\n        if (document.querySelector(\".wpcf7-form\")) {\r\n            //===> Textarea <===//\r\n            Phenix('.wpcf7-textarea').forEach((element:any) => {\r\n                element.setAttribute('cols', null);\r\n                element.setAttribute('rows', null);\r\n            });\r\n\r\n            //===> Required <===//\r\n            Phenix('.wpcf7-validates-as-required').forEach((element:any) => element.setAttribute('required', true));\r\n\r\n            /*===== Whitespace =====*/\r\n            Phenix('.wpcf7-form br').forEach((space:HTMLElement) => space.remove());\r\n            Phenix('.wpcf7[dir], .wpcf7 [dir]').forEach((element:HTMLElement) => element.removeAttribute('dir'));\r\n        }\r\n    },\r\n\r\n    //====> S.E.O : Fixes <====//\r\n    fixSEO = () => {\r\n        //====> Schema Meta Data Set <====//\r\n        if(!document.body.getAttribute('itemscope')) document.body.setAttribute('itemscope', \"\");\r\n        if(!document.body.getAttribute('itemtype')) document.body.setAttribute('itemtype', \"https://schema.org/WebPage\");\r\n\r\n        //====> Create Placeholder Keywords <=====//\r\n        let pds_meta_description = document.querySelector('.entry-content p:first-of-type')?.textContent.substring(0, 160);\r\n\r\n        //====> Check for Headline Level 1 <====//\r\n        if(!document.querySelector('h1')) Phenix('.main-header').insert('append', `<h1 class=\"hidden\">${document.title}</h1>`);\r\n\r\n        //====> S.E.O : Missing Meta <====//\r\n        if (!document.head.querySelector('meta[name=\"description\"]')) Phenix(document.head).insert('append', `<meta name=\"description\" content=\"${pds_meta_description}\">`);\r\n\r\n        //====> Inputs do not have a discernible name <====//\r\n        Phenix('input:not([title]):not([type=\"submit\"]), select:not([title])').forEach((element:HTMLElement) => {\r\n            //===> Define Data <===//\r\n            let element_label = element.getAttribute('placeholder') || element.getAttribute('data-placeholder');\r\n\r\n            //===> If the placeholder is not valid <===//\r\n            if (!element_label) {\r\n                //===> Get the Label <===//\r\n                let label = Phenix(element).prev('label') || Phenix(element).next('label') || element.closest('label');\r\n                //=== Get the Controller Parent ====//\r\n                let element_parent = Phenix(element).ancestor('p') || Phenix(element).ancestor('[class*=\"col\"]') || Phenix(element).ancestor('div');\r\n                //===> if the label not exist get the parent text <====//\r\n                if (!label && element_parent) label = Phenix(element_parent).prev('label') || Phenix(element_parent).next('label');\r\n                //===> Correct Label if there are none <===//\r\n                if (label && label.textContent) element_label = label.textContent.trim();\r\n            }\r\n\r\n            //===> Set Attributes <===//\r\n            if(!element.getAttribute('aria-label')) element.setAttribute('aria-label', `${element_label}`);\r\n            if(!element.getAttribute('title') || element.getAttribute('title') === \"\") element.setAttribute('title', `${element_label}`);\r\n            if(!element.getAttribute('placeholder') || element.getAttribute('placeholder') === \"\") element.setAttribute('placeholder', `${element_label}`);\r\n        });\r\n\r\n        //===> Buttons Fixes <===//\r\n        Phenix('button.btn:not([type])').forEach((button:HTMLElement) => {\r\n            //===> Check if the Button in a Form <===//\r\n            let checkForForm = Phenix(button).ancestor('form'),\r\n                checkForInput = checkForForm?.querySelector('[type=\"submit\"]');\r\n\r\n            //===> Set Type Attribute <===//\r\n            if (!checkForForm || !checkForInput) button.setAttribute('type', \"button\");\r\n            else if (checkForForm && !checkForInput) button.setAttribute('type', 'submit');\r\n        });\r\n    };\r\n\r\n    const isEditor = document.querySelector(\"#site-editor\") || document.querySelector('body[class*=\"editor\"]');\r\n    const isAdmin  = document.body?.classList?.contains('wp-admin');\r\n\r\n    /*====> Unblock Fonts <====*/\r\n    Phenix('#fontawesome-css, #pds-icons-css, #pds-cfont-css, #theme-style-css, #phenix-css, #pds-primary-font-css, #pds-secondary-font-css, #pds-style-font-css').forEach((style:HTMLElement) => style.setAttribute('media', 'all'));\r\n\r\n    /*====> for Front-End <====*/\r\n    if (!isAdmin && !isEditor) {\r\n        /*====> Activated Menu Items <====*/\r\n        Phenix('.current-menu-parent, .current-menu-item').addClass('px-item-active');\r\n        Phenix(\".px-navigation.has-active-submenu .px-item-active\").addClass(\"px-submenu-active\");\r\n\r\n        //===> Run Scripts <===//\r\n        Phenix(document).init();\r\n        \r\n        //====> Start Fixes <====//\r\n        fixCF7(); fixSEO();\r\n\r\n        //====> Adminbar Fix <====//\r\n        if (document.querySelector('#wpadminbar')) Phenix('body').css({ \"padding\": \"0\", 'padding-top' : '32px', \"margin-top\": \"-24px\"});\r\n        \r\n        //===> Alignwide Fix <===//\r\n        Phenix(\".alignfull\").forEach((element:HTMLElement) => element.classList.remove('alignfull'));\r\n\r\n        //===> Set Logo Link <===//\r\n        Phenix(\".wp-block-phenix-logo\").setAttributes({\"href\": PDS_WP_KEY?.site || \"/\"});\r\n    }\r\n\r\n    /*====> for Admin Panel <====*/\r\n    else if (isAdmin && !isEditor) {\r\n        //===> Fix Tables Style <===//\r\n        Phenix('.wp-list-table .column-date, .wp-list-table .column-author').forEach((dateColumn:HTMLElement) => {\r\n            dateColumn.classList.add('tx-nowrap');\r\n            dateColumn.innerHTML = dateColumn.innerHTML.replace('<br>', ' ');\r\n        });\r\n\r\n        //===> Fix Tables Style <===//\r\n        Phenix('.wp-list-table .row-actions span').forEach((spanLink:HTMLElement) => spanLink.innerHTML = spanLink.innerHTML.replace('|', ''));\r\n        \r\n        //===> Run Scripts <===//\r\n        Phenix(document).init();\r\n    }\r\n\r\n    /*====> for Block Editor <====*/\r\n    if(isEditor) {\r\n        //====> Disable Links <====//\r\n        Phenix('.editor-styles-wrapper a[href]').on('click', clicked => clicked.preventDefault(), true);\r\n    }\r\n\r\n    /*====> for Block Editor and Admin <====*/\r\n    else if (isEditor || isAdmin) {}\r\n});\r\n\r\n//===> Create WP Uploader <===//\r\nwindow.PxWpUploader = isClicked => {\r\n    //===> Prevent Default <===//\r\n    isClicked.preventDefault();\r\n    let input = Phenix(isClicked.target).next(\".uploader-input\");\r\n\r\n    //===> Preview <===//\r\n    let input_preview = document.querySelector('.loading-image'),\r\n        value_preview = Phenix(input).ancestor('.px-custom-uploader')?.querySelector('.input-value');\r\n\r\n    //===> Track Media Frame for Each Instance <===//\r\n    if (!isClicked.target.mediaPopup) {\r\n        //===> Create Media Popup if it Doesn't Exist <===//\r\n        isClicked.target.mediaPopup = wp.media({\r\n            title: \"Upload Image\",\r\n            multiple: false\r\n        });\r\n\r\n        //===> Handle Media Selection <===//\r\n        isClicked.target.mediaPopup.on(\"select\", () => {\r\n            //===> Get the Image URL <===//\r\n            var uploaded_image = isClicked.target.mediaPopup.state().get(\"selection\").first();\r\n    \r\n            //===> Set the URL to the Input <===//\r\n            input.value = uploaded_image.toJSON().url;\r\n    \r\n            //===> Set Preview and Value <===//\r\n            if (input_preview) input_preview.setAttribute('src', uploaded_image.toJSON().url);\r\n            if (value_preview) value_preview.textContent = uploaded_image.toJSON().name;\r\n        });\r\n    }\r\n\r\n    //===> Open the Popup <===//\r\n    isClicked.target.mediaPopup.open();\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(929);\n"],"names":["root","factory","exports","module","define","amd","this","PhenixElements","prototype","datatable","options","forEach","element","wrapper","items","parseInt","getAttribute","search","sortable","labels","data","source","editable","parentNode","matches","Label_Translate","english","arabic","document","direction","table_labels","querySelectorAll","original_rows","table_rows","row_length","length","querySelector","remove","insert","headRow","i","label","row","column","setAttribute","itemsHTML","searchHTML","tableNav","paginationTemplate","navigation","prev","pagination","next","setPage","rows","start","end","del","bodyElement","textContent","createPagination","paginationList","pagesNumber","Math","ceil","innerHTML","setNewPage","item","thisPage","itemsNumber","value","classList","add","addEventListener","event","preventDefault","target","paginationHandlers","currentValue","toString","toLowerCase","keyboard_key","keyCode","charCode","filteredData","index","includes","push","tdIndex","deactivateOther","siblings","sibling","contains","sortBy","tableBody","appendChild","rowSiblings","children","siblingValue","isNaN","parseFloat","dropdown","dropdown_wrapper","inline","attr","active","toggle","position","exclude","activated","delay","effect","type","display","duration","dropdown_target","change_position","dynamicPosition","hide_others","ancestor","current_effect","fadeOut","slideUp","toggle_element","clicked","event_trigger","toggleClass","fadeToggle","slideToggle","dropdown_start","window","blank","exclude_final","addClass","replace","split","the_target","isScrolling","scrolling","passive","setInterval","multimedia","background","encodeURI","replaceAll","lazyloading","style","backgroundImage","mediaDone","undefined","src","alt","ratio","size","splide","embed","cover","gradient","gradient_mode","mode","gradient_repeat","repeat","player_controls","controls","player_autoplay","autoplay","player_loop","loop","player_muted","muted","lazy","ratio_convert","setProperty","mediaHandle","multiple","removeProperty","backgroundColor","currentBg","orderBG","media_attributes","video","on","play","pause","inView","offsetTop","viewport","height","offset","menu","menu_id","hover","sub_active","arrow","responsive","mobile","submenus","dropdowns","submenu_item","getCSS","submenu_toggle","arrow_icon","toggle_btn","iconName","submenu","submenus_handle","elements","click","parent","resized","body","removeAttribute","removeClass","trigger","popup","timeout","showon","onload","hash_url","backdrop","modal_id","showed","Event","hidden","show_modal","current_active","hide_modal","fadeIn","dispatchEvent","isClicked","thumbnail","media_url","lightbox_group","lightbox_wrapper","media_type","url","slider_wrapper","slider","setTimeout","location","hash","substr","selector","triggers_select","setAttributes","progress","color","setProgress","bar","progress_handler","width","circle_path","circle_text","current_value","CountUpTimer","clearInterval","meter_calc","getTotalLength","radial_path","max","progressBar","toREM","lineHeight","clientWidth","svg","circle_shape","select","events_data","classes","hasAttribute","maxItems","placeholder","searchPlaceholder","opened","CustomEvent","detail","bubbles","cancelable","change","closed","tagName","isUpdated","rebuildSelect","select_component","hasWrapper","new_select","css","options_list","select_create","option","current_item","option_text","option_value","option_classes","image_icon","sub_option","original_classes","cl","new_select_value","new_value_group","tag_classes","tag_remover","first_option","first_label","first_classes","holder","first_image","image","set_tag_remover","value_element","tag_value","select_values","val","splice","tag_padding_fixer","get_default_value","selected_option","default_value","default_label","new_classes","new_image","current_image","default_values","search_element","holder_classes","holder_image","input","typing","search_value","headline","option_label","original","list","select_toggle","select_search","check_clicked","check_clicked_2","set_value","prevValue","current_values","isSelected","original_option","prev_classes","concat","selectWrapper","tabs","panels","buttons","isHashed","panel","button","tab_id","childNodes","href","history","pushState","additionalInformation","title","TabElement","TabDisplay","timer","time","date","message","elementPds","start_event","end_event","timer_handler","childs","seconds","minutes","hours","days","reverse","join","stringDate","Date","getTime","update","current","elapsed","floor","padStart","time_unites","total_seconds","uploader","controler","filePath","files","name","changeFile","fileType","fileUrl","filesList","URL","createObjectURL","file","videoCheck","dataTransfer","ready","animations","animation","flow","into","lazygroup","directionFix","pageDir","isInView","animationDelay","animationDuration","current_delay","startAnimations","loadingScreen","loadingScreenChecker","thirdParty","animateCSS","animation_loader","package_name","id","animations_loader","createElement","package_url","getURL","phenixCSS","head","Array","animate_package","collapse","related","active_class","className","normal_icon","active_icon","slideDown","counter","decimal","symbol","steps","counting","nodeName","count","increment","interval","decimal_regex","runCounter","min","abs","toFixed","counter_handler","bind","smothScroll","viewPos","round","pageYOffset","scrollY","posTest","getBoundingClientRect","top","activator","currentTime","timeElapsed","scrollAnimate","timeFunc","scrollTo","requestAnimationFrame","sticky","offsetLeft","scrollX","scrollSpy","spotInto","spotOffset","triggers","getComputedStyle","fullHeight","scrollHeight","initialStyles","timespeed","startTime","performance","now","animateSlideUp","elapsedTime","paddingTop","paddingBottom","animateSlideDown","animateFadeOut","opacity","animateFadeIn","property","directionStart","directionEnd","inlineDisplay","visibility","padding","pseudo","styles","flowOn","scrollPosition","targetPosition","innerHeight","clientHeight","bottomIn","documentElement","innerWidth","copyrights","project_name","console","info","phenix_js","substring","lastIndexOf","script","page","pathname","phenixJS","notifications","item_position","y_pos","x_pos","validation","defaults","patterns","errorHandler","inputWrapper","hasError","errors_list","append","reset_status","setCustomValidity","valid_control","submit","validate","validity","valueMissing","typeMismatch","badInput","patternMismatch","test","tooLong","rangeOverflow","tooShort","rangeUnderflow","stepMismatch","valid","checkValidity","invalid","isSubmitting","pattern","inputs","regEx","target_element","Phenix","panel_size","stickyElement","stickySize","import","tag","callback","isIntegrated","libPath","trueUrl","audioTrigger","audio_player","audio_file","paused","isEnded","readyState","queueMicrotask","once","classNamesArray","classNamesLength","j","classNamesSet","Set","hasClass","some","ancestors","from","child","all_target","nextUnit","nextElementSibling","prevUnit","previousElementSibling","all_childs","clearInline","key","Object","entries","attributes","keys","attribute","elementsPackage","new_package","createRange","createContextualFragment","insertBefore","nextSibling","prepend","firstChild","lastChild","live","timeLoop","lazyLoading","playable","preloaded","mediaQuery","breakpoint","fn_callback","mobile_first","createQuery","current_vw","resizing","base","copyText","text","blob","Blob","ClipboardItem","navigator","clipboard","write","selected","filteredElements","isArray","filter","init","scripts","link","left","behavior","dataOptions","JSON","parse","grid_element","main_header","header_holder","classNames","menu_item","last_title","postContent","content_menu","headlines","itemHtml","last_item","last_list","utilities","RangeSliders","page_direction","noUiSlider","create","step","connect","tooltips","range","min_range","max_range","values","handle","maxVal","minVal","set","slider_handler","Swiper","currentClasses","zoom","thumbnails","sync","controller","autoPlayDisabled","slider_options","a11y","slidesOffsetAfter","breakpoints","slidesPerView","centeredSlides","rewind","nextEl","prevEl","el","clickable","speed","disableOnInteraction","pauseOnMouseEnter","pauseOnHover","reverseDirection","autoHeight","thumbs","swiper","by","control","maxRatio","containerClass","keyboard","enabled","wrapperEl","media_elements","media","slider_integration","slideChange","log","swiper_wrapper","current_slides","slide","navigation_wrapper","nextButton","prevButton","pagination_wrapper","final_options","fadeEffect","crossFade","slider_creator","form","repeater_container","add_btn","fields_key","items_list","original_row","create_remove_btn","repeater_row","currentRemoveBtn","cloneNode","newRow","currentRows","relation","numbers","match","characters","scroll","toTopHook","transformColor","amount","rgb","map","Number","c","isLightOrDark","all","bgColor","bgImage","darkerRgb","lighterRgb","colors","colorOne","colorTwo","rightClick","textSelect","img","img_width","img_height","parent_width","parent_height","trim","document_classes","grid","first_child_class","Masonry","itemSelector","text_list","text_list_items","text_element","isReady","typeWriter","tinyTypewriter","cursor","startDelay","marquee","marquee_slider","marquee_slides","marquee_id","initMarqueeSlider","allowPointEvent","dir","stopOnHover","loaded","pds_remove_from_cart","formData","cartItemKey","fetch","wc_add_to_cart_params","wc_ajax_url","method","headers","then","response","json","fragments","error","catch","newCartContent","tempDiv","cart","table","itemsCount","cart_count","URLSearchParams","productId","product_ids","quantity","attributeName","attributeValue","addProductsSequentially","pds_add_to_cart","isEditor","isAdmin","dateColumn","spanLink","submitButton","dateTimeFormatter","dateString","getFullYear","getMonth","slice","getDate","getHours","getMinutes","FormData","pair","ok","Error","firstOption","toggleButton","sourceParameter","PDS_WP_KEY","site","space","pds_meta_description","element_label","closest","element_parent","checkForForm","checkForInput","fixSEO","PxWpUploader","input_preview","value_preview","mediaPopup","wp","uploaded_image","state","get","first","toJSON","open","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}