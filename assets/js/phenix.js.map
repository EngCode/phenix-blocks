{"version":3,"file":"js/phenix.js","mappings":"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","sources":["webpack://Phenix/webpack/universalModuleDefinition","webpack://Phenix/./src/scripts/components/dropdown.ts","webpack://Phenix/./src/scripts/components/media.ts","webpack://Phenix/./src/scripts/components/menu.ts","webpack://Phenix/./src/scripts/components/popup.ts","webpack://Phenix/./src/scripts/components/progress.ts","webpack://Phenix/./src/scripts/components/rating.ts","webpack://Phenix/./src/scripts/components/select.ts","webpack://Phenix/./src/scripts/components/tabs.ts","webpack://Phenix/./src/scripts/components/timer.ts","webpack://Phenix/./src/scripts/components/uploader.ts","webpack://Phenix/./src/scripts/custom-scripts.ts","webpack://Phenix/./src/scripts/features/animations.ts","webpack://Phenix/./src/scripts/features/collapse.ts","webpack://Phenix/./src/scripts/features/counter.ts","webpack://Phenix/./src/scripts/features/effects.ts","webpack://Phenix/./src/scripts/features/get-info.ts","webpack://Phenix/./src/scripts/features/notifications.ts","webpack://Phenix/./src/scripts/features/scroll-spy.ts","webpack://Phenix/./src/scripts/features/smooth-scroll.ts","webpack://Phenix/./src/scripts/features/sticky-elements.ts","webpack://Phenix/./src/scripts/features/validation.ts","webpack://Phenix/./src/scripts/features/viewport.ts","webpack://Phenix/./src/scripts/index.ts","webpack://Phenix/./src/scripts/integration/blocks.ts","webpack://Phenix/./src/scripts/integration/slider.ts","webpack://Phenix/./src/scripts/integration/utilities.ts","webpack://Phenix/./src/scripts/integration/woocommerce.ts","webpack://Phenix/./src/scripts/integration/wordpress.ts","webpack://Phenix/webpack/bootstrap","webpack://Phenix/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Phenix\"] = factory();\n\telse\n\t\troot[\"Phenix\"] = factory();\n})(this, () => {\nreturn ","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Dropdown\r\n * ===> 03 - Default Options\r\n * ===> 04 - Set Trigger Accessibility\r\n * ===> 05 - When Click on the Trigger\r\n * ===> 06 - De-Activate Other\r\n * ===> 07 - Activate Button and List\r\n * ===> 08 - De-Activate on Blank\r\n * ===> 09 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Dropdown <====*/\r\nPhenixElements.prototype.dropdown = function (options?:{\r\n    toggle?:string,   //====> Toggle Button Class Name : px-toggle\r\n    target?:string,   //====> Target to Toggle (add/remove) Active Class\r\n    active?:string,   //====> Active Class Name : px-active\r\n    hover?:boolean,   //====> Support on Hover Show/Hide\r\n    exclude?:string,  //====> Exclude from on Blank Click only [CSS :not()... Selector]\r\n    position?:string, //====> the position of the target [top or bottom, start or end]\r\n    //====> Hide/Show Toggle Effect [fade, slide] <====//\r\n    effect?:{\r\n        type?:string,\r\n        duration?:number,\r\n        delay?:number,\r\n        display?:string,\r\n    },\r\n}) {    \r\n    this.forEach(dropdown_wrapper => {\r\n        //====> if its already mounted <====//\r\n        if (dropdown_wrapper.classList.contains('px-mounted')) return;\r\n\r\n        //====> Default Options <====//\r\n        let siblings,\r\n            inline = attr => dropdown_wrapper.getAttribute(attr),\r\n            active  = inline('data-active') || options?.active || 'px-active',\r\n            toggle  = inline('data-toggle') || options?.toggle || '.px-toggle',\r\n            target  = inline('data-target') || options?.target || '.px-dropdown-list',\r\n            position  = inline('data-position') || options?.position || 'bottom, start',\r\n            exclude  = inline('data-exclude') || options?.exclude || '.px-toggle',\r\n            activated = `${target}.${active}`,\r\n            //====> Effect Options <====//\r\n            delay  = inline('data-delay') || options?.effect?.delay || 0,\r\n            effect = inline('data-effect') || options?.effect?.type || 'fade',\r\n            display = inline('data-display') || options?.effect?.display || 'block',\r\n            duration = inline('data-duration') || options?.effect?.duration || 300,\r\n            //====> Catch the Target <====//\r\n            dropdown_target = dropdown_wrapper.querySelector(target);\r\n\r\n        //===> Dynamic Position <===//\r\n        let change_position = () => {\r\n            if(position[0] === 'top' || position[0] === 'bottom') Phenix(dropdown_target).dynamicPosition();\r\n        };\r\n\r\n        //====> identify the effect <====//\r\n        dropdown_wrapper.setAttribute('data-effect', effect);\r\n\r\n        //====> Hide Activated Dropdowns <====//\r\n        const hide_others = (activated) => {\r\n            //==== Hide Others ====//\r\n            Phenix(activated).forEach((dropdown:HTMLElement) => {\r\n                if (dropdown_target !== dropdown) {\r\n                    //====> Get the Effect Type <====//\r\n                    let dropdown_wrapper = Phenix(dropdown).ancestor('[data-effect]'),\r\n                        current_effect   = dropdown_wrapper.getAttribute('data-effect');\r\n    \r\n                    //====> De-Activate Triggers <====//\r\n                    dropdown.classList.remove(active);\r\n                    dropdown_wrapper.querySelector('.px-toggle').classList.remove(active);\r\n    \r\n                    Phenix(dropdown).siblings(active)?.forEach((sibling:HTMLElement) => {\r\n                        sibling.classList.remove(active);\r\n                    });\r\n    \r\n                    //====> Hide Opened Dropdowns <====//\r\n                    if (current_effect == 'fade') Phenix(dropdown).fadeOut(duration, delay, display);\r\n                    else if (current_effect == 'slide') Phenix(dropdown).slideUp(duration, delay, display);\r\n                }\r\n            });\r\n        },\r\n\r\n        //====> Click to Dropdown <====//\r\n        dropdown_start = event => {\r\n            //====> De-Activate Other <====//\r\n            hide_others(activated);\r\n\r\n            //====> Prevent Default <====//\r\n            event.preventDefault();\r\n            \r\n            //====> Get the Target and its Sibling <====//\r\n            let event_trigger = event.target;\r\n            if (!event.target.matches(toggle)) event_trigger = Phenix(event_trigger).ancestor(toggle);\r\n\r\n            //===> Get the Targeted Sibling <===//\r\n            siblings = Phenix(event_trigger).siblings(target);\r\n\r\n            //===> Activate the Button <===//\r\n            Phenix(event_trigger).toggleClass(active);\r\n\r\n            //====> Active Button and the Target <====//\r\n            if (siblings) {\r\n                //====> Change Position <====//\r\n                change_position();\r\n\r\n                //====> Active Target <====//\r\n                Phenix(siblings).toggleClass(active);\r\n\r\n                //====> Effect : Fading <====//\r\n                if (effect == 'fade') { Phenix(siblings).fadeToggle(duration, delay, display); }\r\n                //====> Effect : Slide <====//\r\n                else if (effect == 'slide') { Phenix(siblings).slideToggle(duration, delay, display); }\r\n            }\r\n        };\r\n\r\n        //====> Click to Dropdown <====//\r\n        let toggle_element = dropdown_wrapper.querySelector(toggle);\r\n        toggle_element.addEventListener('click', clicked => {\r\n            dropdown_start(clicked);\r\n        });\r\n\r\n        //====> Set Accessibility Options <====//\r\n        toggle_element.setAttribute('role', 'button');\r\n        toggle_element.setAttribute('tabIndex', '0');\r\n\r\n        //====> De-Activate on Blank <====//\r\n        window.addEventListener('click', (blank) => {\r\n            //====> Clicked Target <====//\r\n            let exclude_final = `${target} *:not([href^=\"#\"]):not(${exclude})`,\r\n                clicked:any = blank.target;\r\n\r\n            //====> if the target is not the current element or any of its children <====//\r\n            if (!clicked.matches(target) && !clicked.matches(toggle) && !clicked.matches(`${toggle} *`) && !clicked.matches(exclude_final)) {\r\n                hide_others(activated);\r\n            }\r\n        });\r\n\r\n        //====> CSS Prepare <====//\r\n        Phenix(dropdown_wrapper).addClass(\"position-rv\");\r\n\r\n        //====> Divide Positions <====//\r\n        position = position.replace(' ','').split(',');\r\n\r\n        //====> Define Targets <====//\r\n        let the_target = Phenix(dropdown_target),\r\n            isScrolling = false\r\n\r\n        //====> Style Utilites <====//\r\n        the_target.addClass(\"position-ab\").addClass(\"z-index-dropdown\").addClass(\"hidden\");\r\n        the_target.addClass(`pos-${position[1] !== \"center\" ? `${position[1]}-0` : `${position[1]}-x`}`);\r\n        position[0] === \"top\" ? the_target.addClass('pos-before-y') : the_target.addClass('pos-after-y');\r\n\r\n        //====> Change Position on Scroll <====//\r\n        window.addEventListener('scroll', scrolling => isScrolling = true, {passive: true});\r\n\r\n        setInterval(() => {\r\n            if (isScrolling) {\r\n                isScrolling = false;\r\n                change_position();\r\n            }\r\n        }, 300);\r\n\r\n        //===> Finished Mounting <===//\r\n        dropdown_wrapper.classList.add('px-mounted');\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Media Setter\r\n * ===> 03 - Methods\r\n * ========> - Background Method\r\n * ===> 04 - Phenix Elements\r\n * ===> 05 - Get Options Data\r\n * ===> 06 - Set Media Size\r\n * ===> 07 - Clean Source [URL]\r\n * ===> 08 - Media Handler\r\n * ========> - Background Type\r\n * ===> 09 - Lazy-Loading Mode\r\n * ===> 10 - None-Valid Source\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n// ===> Add Type Declaration for Globals <===\r\ndeclare global {\r\n    interface Window {\r\n        // For three-utils.js script\r\n        threeUtils?: {\r\n            initializeViewer: (container: HTMLElement, options: object, assetsBasePath: string) => Promise<void>;\r\n        };\r\n        // For data localized from PHP using your existing key\r\n        PDS_WP_KEY?: {       // <-- Use your existing key name\r\n            assetsBasePath: string; // <-- Add the property we need\r\n            // Add other existing properties declared for PDS_WP_KEY if known\r\n            [key: string]: any; // Allows other existing properties\r\n        };\r\n    }\r\n}\r\n// ===> End Type Declaration <===\r\n\r\n/*====> Media Setter [un-tested] <====*/\r\nPhenixElements.prototype.multimedia = function (options?:{\r\n    type?:string,   //===> background, image, video, embed, iframe, gradient, mixed-bg, audio\r\n    src?:string,    //===> Media Source [URL]\r\n    size?:string,   //===> Aspect Ratio Size [1x1, 4x3, 16x9, 16x10, 21x9, *%]\r\n    player?:string, //===> Players [phenix, html or standard]\r\n    lazyloading?:boolean, //===> Lazyloading [true, false]\r\n    //===> Gradient Settings <===//\r\n    gradient?:{\r\n        value?:[],       //===> CSS Gradient Value [rotation, color1, color2, etc...]\r\n        mode?:string,    //===> Gradient Mode [linear, radial, conic]\r\n        repeat?:boolean, //===> Gradient Repeat [true, false]\r\n    },\r\n    //===> Players and Embed <===//\r\n    embed?:string,      //====> Embed Source [video, audio, youtube, vemio]\r\n    controls?:boolean,  //====> Embed Controls Enable\r\n    autoplay?:boolean,  //====> Embed Autoplay Enable\r\n    loop?:boolean,  //====> Embed infinite loop Enable\r\n    muted?:boolean,  //====> Embed Audio Mute Enable\r\n    //===> Extra <===//\r\n    alt?:string,   //===> Alternative Text for SEO\r\n    cover?:string, //===> Cover Image for [videos]\r\n}) {\r\n    //====> Background Method <====//\r\n    let background = (element, source) => {\r\n        //===> Clean Source [URL] <===//\r\n        source = encodeURI(source);\r\n        //===> Clean # for CSS Benefits <===//\r\n        source = source.replaceAll('#','%23');\r\n\r\n        //===> Set As CSS Background <===//\r\n        element.style.backgroundImage = `url(\"${source}\")`;\r\n        \r\n        //===> Remove Loading State <===//\r\n        element.classList.remove('px-is-loading');\r\n    };\r\n\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Media Checker <====//\r\n        let mediaDone = false;\r\n        if (mediaDone) return;\r\n        if (element.length != undefined) return;\r\n\r\n        //====> Get Options Data <====//\r\n        let type = element.getAttribute('data-type') || options?.type || 'background',\r\n            src  = element.getAttribute('data-src') || options?.src,\r\n            alt  = element.getAttribute('data-alt') || options?.alt || '',\r\n            ratio  = element.getAttribute('data-size') || options?.size,\r\n            splide = Phenix(element).ancestor('.splide.is-initialized'),\r\n            marquee = Phenix(element).ancestor('.px-marquee') || Phenix(element).ancestor('.px-marquee-reverse'),\r\n            embed  = element.getAttribute('data-embed') || options?.embed || 'video',\r\n            cover  = element.getAttribute('data-cover') || options?.cover,\r\n            gradient = element.getAttribute('data-gradient') || options?.gradient?.value || false,\r\n            gradient_mode = element.getAttribute('data-mode') || options?.gradient?.mode || 'linear',\r\n            gradient_repeat = element.getAttribute('data-repeat') || options?.gradient?.repeat,\r\n            //====> Embed & Lazyloading <====//\r\n            lazy = Phenix(document).toBoolean(element.getAttribute('data-lazyloading') || options?.lazyloading),\r\n            controls = Phenix(document).toBoolean(element.getAttribute('data-controls') || options?.controls),\r\n            autoplay = Phenix(document).toBoolean(element.getAttribute('data-autoplay') || options?.autoplay) && (element.getAttribute('data-autoplay') || options?.autoplay) !== 'hover',\r\n            loop = Phenix(document).toBoolean(element.getAttribute('data-loop') || options?.loop),\r\n            muted = Phenix(document).toBoolean(element.getAttribute('data-muted') || options?.muted),\r\n            player_autoplay = element.getAttribute('data-autoplay') || options?.autoplay || 'hover';\r\n\r\n        //====> Set Media Size <====//\r\n        if (ratio && ratio != null || undefined) {\r\n            //====> Predefined Ratio's <====//\r\n            if (!element.classList.toString().includes('ratio')) element.classList.add(`ratio-${ratio}`);\r\n\r\n            //====> Otherwise <====//\r\n            else {\r\n                //====> Convert To Number <====//\r\n                let ratio_convert = parseInt(ratio);\r\n                //====> Set Height w/ Padding Bottom <====//\r\n                ratio_convert > 0 ? element.style.setProperty('--ratio-size', `${ratio_convert}%`) : null;\r\n            }\r\n        }\r\n\r\n        //====> if has Valid Source <====//\r\n        if (src || gradient)  {\r\n            //====> Media Handler <====//\r\n            let mediaHandle = () => {\r\n                //====> Gradient Validation <====//\r\n                let multiple = false;\r\n                if (gradient) {\r\n                    //=== Replace white Space ===//\r\n                    gradient = gradient.replace(' ','');\r\n                    //=== for Hex Colors ===//\r\n                    if (gradient.includes('#')) multiple = gradient.includes(',') ? true : false;\r\n                    //=== for RGB Colors ===//\r\n                    else if (gradient.includes('rgb')) multiple = gradient.includes('),') ? true : false;\r\n                    //=== for CSS Variables ===//\r\n                    else if (gradient.includes('var')) multiple = gradient.includes('),') ? true : false;\r\n                }\r\n\r\n                //====> De-Activate Loader <====//\r\n                if (lazy) {\r\n                    element.classList.remove('px-is-loading');\r\n                    if (element.style.backgroundImage) element.style.removeProperty('background-image');\r\n                }\r\n\r\n                //====> Background Type <====//\r\n                if (type == 'background') {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n    \r\n                //====> Image Type <====//\r\n                else if (type == 'image') {\r\n                    //===> Set Background <===//\r\n                    // background(element, src);\r\n                    //===> Create Image <===//\r\n                    if(!element.querySelector(':scope > img')) Phenix(element).insert('prepend',`<img src=\"${src}\" alt=\"${alt}\" class=\"px-media-img\" loading=\"lazy\" />`);\r\n                    else element.querySelector(':scope > img').setAttribute('loading', 'lazy');\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n                \r\n                //====> Gradient Type <====//\r\n                else if (type == 'gradient') {\r\n                    //===> Check for Repeat <====//\r\n                    gradient_repeat ? gradient_repeat = 'repeating-' : gradient_repeat = '';\r\n                    //===> Set the Gradient <===//\r\n                    if(multiple) {\r\n                        element.style.backgroundImage = `${gradient_repeat}${gradient_mode}-gradient(${gradient})`;\r\n                    //===> Set As Color if it Single Value <===//\r\n                    } else element.style.backgroundColor = `${gradient}`;\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Mixed Type <====//\r\n                else if (type == 'mixed-bg') {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Get Current Background <===//\r\n                    let currentBg = element.style.backgroundImage,\r\n                        orderBG   = element.getAttribute('data-bg-order');\r\n\r\n                    //===> Check for Repeat <====//\r\n                    gradient_repeat ? gradient_repeat = 'repeating-' : gradient_repeat = '';\r\n                    //===> Set the Gradient <===//\r\n                    if(multiple) {\r\n                        if (orderBG === 'reverse') {\r\n                            element.style.backgroundImage = `${currentBg}, ${gradient_repeat}${gradient_mode}-gradient(${gradient})`;\r\n                        } else {\r\n                            element.style.backgroundImage = `${gradient_repeat}${gradient_mode}-gradient(${gradient}), ${currentBg}`;\r\n                        }\r\n                    //===> Set As Color if it Single Value <===//\r\n                    } else {\r\n                        if (orderBG === 'reverse') {\r\n                            element.style.backgroundImage = `${currentBg}, linear-gradient(${gradient},${gradient})`;\r\n                        } else {\r\n                            element.style.backgroundImage = `linear-gradient(${gradient},${gradient}), ${currentBg}`;\r\n                        }\r\n                    }\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> iFrame Type <====//\r\n                else if (type == 'iframe') {\r\n                    //===> Get the Current iFrame <===//\r\n                    let iframe = element.querySelector(':scope > iframe');\r\n                    //===> Create View <===//\r\n                    if (!iframe) {\r\n                        Phenix(element).insert('append', `<iframe src=\"${src}\" frameborder=\"0\" ${lazy ? 'loading=\"lazy\"' : ''} allowfullscreen sandbox=\"allow-scripts allow-same-origin\"></iframe>`);\r\n                    }\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Embed Type <====//\r\n                else if (type == 'embed') {\r\n                    //===> Embed Options <===//\r\n                    let media_attributes = `${lazy ? 'loading=\"lazy\"' : ''} ${autoplay ? 'autoplay=\"true\" playsinline=\"true\"' : ''} ${controls ? 'controls' : ''} ${loop ? 'loop' : ''} ${muted ? 'muted' : ''} ${cover ? `poster=\"${cover}\"` : ''}`;\r\n                    //===> Video Source <===//\r\n                    if (embed == 'video' && !element.querySelector(':scope > .px-video')) {\r\n                        //====> Create the Video <====//\r\n                        Phenix(element).insert('append', `<video class=\"px-video\" src=\"${src}\" ${media_attributes}></video>`);\r\n                        //====> Video Autoplay <====//\r\n                        if (player_autoplay === 'hover') {\r\n                            const video = element.querySelector('.px-video');\r\n                            Phenix(element).on('mouseenter', event => video.play());\r\n                            Phenix(element).on('mouseleave', event => video.pause());\r\n                        }\r\n                    }\r\n                    //===> Video Source <===//\r\n                    else if (embed != 'video' && !element.querySelector(':scope > .px-iframe')) {\r\n                        //====> Get the Source <====//\r\n                        let source = src;\r\n                        //====> Cleanup URL <====//\r\n                        if (source.includes('youtube.com')) source = src.replace('watch?v=', 'embed/');\r\n                        else if (source.includes('youtu.be')) source = src.replace('https://youtu.be/', 'https://www.youtube.com/embed/');\r\n                        else if (source.includes('vimeo.com')) source = src.replace('vimeo.com', 'player.vimeo.com/video');\r\n                        //====> Create the View <====//\r\n                        Phenix(element).insert('append', `<iframe class=\"px-iframe\" src=\"${source}\"  ${lazy ? 'loading=\"lazy\"' : ''} frameborder=\"0\" allowfullscreen></iframe>`);\r\n                    } \r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> 3D Object Type <====//\r\n                else if (type == '3d-viewer') {\r\n                    //====> Define the Canvas <====//\r\n                    let canvas = element.querySelector(':scope > canvas.px-3d') as HTMLElement;\r\n\r\n                    //====> Create the Canvas if it doesn't exist <====//\r\n                    if (!canvas) {\r\n                         //====> Default Model Type <====//\r\n                         let modelTypeForCanvas = 'gltf';\r\n                         //====> Get the Model Type from the the Extension <====//\r\n                         const extension = src.split('.').pop()?.toLowerCase();\r\n                         //====> If the Extension is Valid <====//\r\n                         if (extension && ['gltf', 'glb', 'obj', 'fbx'].includes(extension)) modelTypeForCanvas = extension;\r\n                         //====> If the Extension is Null/Undefined <====//\r\n                         else if (extension) modelTypeForCanvas = extension || 'gltf';\r\n                         //====> Create the Canvas <====//\r\n                         const canvasHTML = `<canvas class=\"px-3d fluid\" data-object=\"${src}\" data-model-type=\"${modelTypeForCanvas}\" data-background=\"${element.getAttribute('data-background') || 'null'}\" data-auto-rotate=\"${element.getAttribute('data-auto-rotate') || 'false'}\" data-controls=\"${element.getAttribute('data-controls') || 'orbit'}\"></canvas>`;\r\n                         //====> Append the Canvas <====//\r\n                         Phenix(element).insert('append', canvasHTML);\r\n                         //====> Redefine the Canvas <====//\r\n                         canvas = element.querySelector(':scope > canvas.px-3d') as HTMLElement;\r\n                    }\r\n\r\n                    //====> Check if already initialized ====//\r\n                    if (canvas && canvas.dataset.threeInitialized !== 'true') {\r\n                        //====> Get Asset Base Path from Localized Data (using PDS_WP_KEY) ====//\r\n                        const assetsBasePath = window.PDS_WP_KEY?.assetsBasePath;\r\n\r\n                        //====> Gather Options from Canvas ====//\r\n                        const viewerOptions = {\r\n                            modelPath: canvas.dataset.object,\r\n                            modelType: canvas.dataset.modelType || 'gltf',\r\n                            background: canvas.dataset.background === 'null' ? \"transparent\" : canvas.dataset.background,\r\n                            autoRotate: canvas.dataset.autoRotate === 'true',\r\n                            controls: canvas.dataset.controls || 'orbit'\r\n                        };\r\n\r\n                        //====> Load three-utils.js & Initialize ====//\r\n                        if (window.threeUtils?.initializeViewer) {\r\n                            //====> Initialize the Viewer ====//\r\n                            window.threeUtils.initializeViewer(canvas, viewerOptions, assetsBasePath).catch(err => console.error(\"Error during Three.js initialization:\", err, canvas));\r\n                            //====> Set the Initialized Attribute ====//\r\n                            canvas.dataset.threeInitialized = 'true';\r\n                        } else {\r\n                            //====> Import the Script ====//\r\n                            Phenix(document).import(\"three-utils\", \"script\", \"three/three-utils.js\", () => {\r\n                                //====> Initialize the Viewer ====//\r\n                                if (window.threeUtils?.initializeViewer) {\r\n                                    //====> Initialize the Viewer ====//    \r\n                                    window.threeUtils.initializeViewer(canvas, viewerOptions, assetsBasePath).catch(err => console.error(\"Error during Three.js initialization:\", err, canvas));\r\n                                    //====> Set the Initialized Attribute ====//\r\n                                    canvas.dataset.threeInitialized = 'true';\r\n                                }\r\n                                //====> Remove Loading Class from Canvas Wrapper ====//\r\n                                element.classList.remove('px-loading');\r\n                            }, { integrated: true, module: false });\r\n                        }\r\n                    }\r\n                    \r\n                    //===> Mark as Done for media handler loop ===//\r\n                    mediaDone = true;\r\n                }\r\n\r\n                //====> Something Else <====//\r\n                else {\r\n                    //===> Set Background <===//\r\n                    background(element, src);\r\n                    //===> Mark as Done <===//\r\n                    mediaDone = true;\r\n                }\r\n            };\r\n\r\n            //====> Lazy-Loading Mode <====//\r\n            if (lazy) {\r\n                //====> Activate Lazy-Loading <====//\r\n                if (!splide) {\r\n                    element.classList.add('px-is-loading');\r\n                    // Set temporary loading background\r\n                    element.style.backgroundImage = 'none';\r\n                }\r\n\r\n                if (marquee) mediaHandle();\r\n\r\n                //====> First View Handler <=====//\r\n                Phenix(element).inView({\r\n                    offset: 100,\r\n                    callback: (element) => mediaHandle()\r\n                });\r\n            }\r\n\r\n            //====> None-Lazy <====//\r\n            else mediaHandle();\r\n        }\r\n\r\n        //====> None-Valid Source <====//\r\n        else element.style.backgroundImage = 'https://placehold.co/1280x650?text=Source+URL+Not+Supported+or+404';\r\n    });\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Menu Builder\r\n * ===> 03 - Get Inline Options\r\n * ===> 04 - Default Options\r\n * ===> 05 - Dropdown Submenus\r\n * ===> 06 - Marking Submenus\r\n * ===> 07 - Marking Triggers\r\n * ===> 08 - Get Triggers\r\n * ===> 09 - Submenus Handler \r\n * ===> 10 - Active Submenus\r\n * ===> 11 - Responsive Toggle\r\n * ===> 12 - Phenix Selecting Method\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Menu Builder <====*/\r\nPhenixElements.prototype.menu = function (options?:{\r\n    menu_id?:string,     //===> Menu CSS ID\r\n    hover?:boolean,      //===> Dropdown on Hover [Desktop only]\r\n    sub_active?:string,  //===> Submenus CSS Active Class [px-submenu-active]\r\n    mobile?:string,      //===> Responsive Mode [dropdown, custom]\r\n    effect?:string,      //===> Dropdown Effect [slide, fade, custom]\r\n    arrow?:string,       //===> Dropdown Arrow icon class names\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(menu => {\r\n        /*====> Get Inline Options <====*/\r\n        let inline = attr => menu.getAttribute(attr);\r\n\r\n        /*====> Default Options <====*/\r\n        let menu_id = inline('data-id') || options?.menu_id || null,\r\n            hover = inline('data-hover') || options?.hover || false,\r\n            sub_active = inline('data-sub-active') || options?.sub_active || 'px-submenu-active',\r\n            effect = inline('data-effect') || options?.effect,\r\n            arrow  = inline('data-arrow') || options?.arrow?.split(\" \"),\r\n            responsive = inline('data-mobile') || options?.mobile || 'dropdown';\r\n\r\n        //====> Dropdown Submenus <====//\r\n        let submenus  = menu.querySelectorAll('li > ul, li > .megamenu'),\r\n            dropdowns = [];\r\n\r\n        //====> Dropdown Default Effect <====//\r\n        if (responsive === 'dropdown') {\r\n            !effect ? effect = 'slide' : null;\r\n        }\r\n\r\n        menu.setAttribute('data-effect', effect);\r\n\r\n        //====> Marking Submenus <====//\r\n        submenus.forEach((submenu_item:any) => {\r\n            submenu_item.classList.add('submenu');\r\n            if (Phenix(submenu_item).getCSS('display') !== 'none') submenu_item.style.display = 'none';\r\n            //===> Mark the Parent <====//\r\n            let submenu_toggle = submenu_item.parentNode;\r\n            submenu_toggle.classList.add('submenu-item');\r\n            //===> set arrow icons <===//\r\n            let arrow_icon = arrow?.split(' ');\r\n\r\n            if (arrow_icon) {\r\n                let toggle_btn = submenu_toggle;\r\n                if (toggle_btn.querySelector(':scope > a')) toggle_btn = toggle_btn.querySelector(':scope > a');\r\n                \r\n                //===> Add Classes <===//\r\n                toggle_btn.classList.add('arrow-icon');\r\n                for (let index = 0; index < arrow_icon.length; index++) {\r\n                    let iconName = arrow_icon[index];              \r\n                    toggle_btn.classList.add(iconName);\r\n                }\r\n            }\r\n            //===> Megamenu Fix <===//\r\n            if(submenu_item.classList.contains('megamenu')) {\r\n                submenu_item.parentNode.style.position = 'static';\r\n                submenu_item.querySelectorAll('ul').forEach(element => element.classList.add('megalist'));\r\n            }\r\n        });\r\n\r\n        //====> Marking Triggers <====//\r\n        Phenix(dropdowns).addClass('submenu-toggle');\r\n\r\n        //====> Get Triggers <====//\r\n        submenus.forEach(submenu => dropdowns.push(...Phenix(submenu).siblings('a')));\r\n\r\n        //====> Submenus Handler <====//\r\n        let submenus_handle = (elements:any) => Phenix(elements).on('click', click => {\r\n            //===> Disable Default Behavior <===//\r\n            click.preventDefault();\r\n\r\n            //===> Dropdown Data <===//\r\n            let trigger = click.target,\r\n                parent  = trigger.parentNode,\r\n                siblings = Phenix(parent).siblings(`.${sub_active}`),\r\n                target = parent.querySelector('.submenu');\r\n\r\n            //===> Toggle Dropdown <===//\r\n            if (effect === 'slide') Phenix(target).slideToggle();\r\n            else if (effect === 'fade') Phenix(target).fadeToggle();\r\n            parent.classList.toggle(sub_active);\r\n            parent.classList.toggle(sub_active.replace(\"active\", \"deactivate\"));\r\n\r\n            //===> Disable Others <===//\r\n            if (siblings) siblings.forEach(element => {\r\n                if (effect === 'slide') Phenix(element.querySelector('.submenu')).slideUp();\r\n                else if (effect === 'fade') Phenix(element.querySelector('.submenu')).fadeOut();\r\n                element.classList.remove(sub_active);\r\n                element.classList.add(sub_active.replace(\"active\", \"deactivate\"));\r\n            });\r\n        });\r\n\r\n        /*====> Active Submenus <====*/\r\n        if(!hover) submenus_handle(dropdowns);\r\n\r\n        /*====> Media Query Check <====*/\r\n        else if (hover && Phenix(document).viewport('width') < 1100) window.addEventListener('resize', resized => {\r\n            if (Phenix(document).viewport('width') < 1100) submenus_handle(dropdowns);\r\n        });\r\n\r\n        /*====> Responsive Toggle <====*/\r\n        if (menu_id && menu_id !== null) {\r\n            /*====> Set ID to the Menu <====*/\r\n            if (responsive === 'dropdown') !menu.getAttribute('id') ? menu.setAttribute('id', menu_id) : null;\r\n\r\n            /*====> Create External Menu <====*/\r\n            else if (responsive === 'custom') {\r\n                if (!document.querySelector(`#${menu_id}`)) {\r\n                    //====> Create the Menu into the Body <====//\r\n                    Phenix(document.body).insert('append', \r\n                        `<nav id=\"${menu_id}\" ${effect? 'data-effect=\"'+effect+'\"' : ''} class=\"px-custom-menu\">\r\n                            <div class=\"menu-wrapper\">${menu.innerHTML}</div>\r\n                            <a href=\"#${menu_id}\" class=\"menu-toggle\" data-id=\"${menu_id}\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\"></a>\r\n                        </nav>`\r\n                    );\r\n    \r\n                    //====> Clean Markup <====//\r\n                    Phenix(`#${menu_id} [id]`).forEach((element:HTMLElement) => element.removeAttribute('id'));\r\n                    Phenix(`#${menu_id} .menu-wrapper > *`).removeClass('flexbox');\r\n    \r\n                    /*====> Active Submenus <====*/\r\n                    effect = 'slide';\r\n                    submenus_handle(Phenix(`#${menu_id} .submenu-item > a`));\r\n                }\r\n            }\r\n        }\r\n    });\r\n    \r\n\r\n    /*====> Toggle Button <====*/\r\n    Phenix(`.menu-toggle`).on('click', click => {\r\n        //===> Disable Default Behavior <===//\r\n        click.preventDefault();\r\n        if (Phenix(click.target).ancestor('.block-editor-block-list__block')) return;\r\n\r\n        //===> Dropdown Data <===//\r\n        let trigger = click.target,\r\n            target  = trigger.getAttribute('data-id');\r\n\r\n        //===> Define Target <====//\r\n        if (target) target = `#${target}`;\r\n        else target = trigger.getAttribute('href');\r\n        target = document.querySelector(target);\r\n\r\n        //===> Toggle Menu <====//\r\n        target.classList.toggle('px-menu-active');\r\n        let effect = target.getAttribute('data-effect');\r\n        if (effect === 'slide') Phenix(target).slideToggle();\r\n        else if (effect === 'fade') Phenix(target).fadeToggle(500, 0, 'flex');\r\n    });\r\n\r\n    //====> Return Phenix Query <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Loop Through Phenix Query\r\n * ===> 03 - Popup Options\r\n * ===> 04 - Backdrop Trigger\r\n * ===> 05 - Popup CSS Classes\r\n * ===> 06 - Create Custom Event\r\n * ===> 07 - Show and Hide Modal\r\n * ===> 08 - Open by URL\r\n * ===> 09 - Open on Load\r\n * ===> 10 - Open When Scroll\r\n * ===> 11 - Lightbox Mode\r\n * ===> 12 - Active Triggers\r\n * ===> 13 - Close Triggers\r\n * ===> 14 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Popups Modals <====*/\r\nPhenixElements.prototype.popup = function (options?:{\r\n    type:string;        //===> the type of the popup as modal or lightbox\r\n    hash_url?:boolean;  //===> Show the Modal if called from url\r\n    backdrop?:boolean;  //===> Enable/Disable Close by Backdrop\r\n    onload?:boolean;    //===> Show on Page Load Required for 'timeout';\r\n    showon?:string;     //===> Show the Modal when the target is in View-Point\r\n    timeout?:number;    //===> Delay the Modal from showing work for [showon, onload]\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(popup => {\r\n        //=====> Popup Options <=====//\r\n        let type     = options?.type || popup.getAttribute('data-type') || 'modal',\r\n            timeout  = options?.timeout || parseInt(popup.getAttribute('data-timeout')),\r\n            showon   = options?.showon || popup.getAttribute('data-showon'),\r\n            onload   = options?.onload || popup.getAttribute('data-onload'),\r\n            hash_url = options?.hash_url || popup.getAttribute('data-hash'),\r\n            backdrop = options?.backdrop || popup.getAttribute('data-backdrop') || true,\r\n            modal_id = popup.getAttribute('id');\r\n\r\n        /*=====> Backdrop Trigger <=====*/\r\n        if (backdrop && !popup.querySelector('.backdrop-btn') && backdrop !== 'false') {\r\n            Phenix(popup).insert('append', `<button type=\"button\" class=\"reset-button backdrop-btn modal-close position-fx fluid h-100vh pos-start-0 pos-top-0 bg-alpha-75\" title=\"Close Window\"></button>`);\r\n            backdrop = popup.querySelector('.backdrop-btn');\r\n        }\r\n\r\n        //====> Return if has no ID <====//\r\n        if (!modal_id) return;\r\n\r\n        //====> Popup CSS Classes <====//\r\n        popup.classList.add(\r\n            'w-fluid',\r\n            'h-100vh',\r\n            'flexbox',\r\n            'px-popup',\r\n            'pos-top-0',\r\n            'position-fx',\r\n            'pos-start-0',\r\n            'px-scrollbar',\r\n            'z-index-modal',\r\n            'overflow-y-auto',\r\n        );\r\n\r\n        popup.querySelector('.modal-content')?.classList.add('position-rv', 'z-index-header');\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('modal-showed'),\r\n              hidden = new Event('modal-hidden');\r\n\r\n        //====> Show and Hide Modal <====//\r\n        let show_modal = () => {\r\n            //=====> Close Other Modals <=====//\r\n            let current_active = document.querySelector('.px-popup.active');\r\n            if (current_active && current_active != popup) {\r\n                hide_modal('.px-popup.active > *');\r\n            }\r\n\r\n            //==== Prevent Scroll ====//\r\n            document.body.classList.add('overflow-hidden');\r\n            //==== Open the Modal ====//\r\n            Phenix(`#${modal_id}`).fadeIn(500, 0, 'flex').addClass('active');\r\n            popup.classList.add('has-shown');\r\n            popup.classList.remove('hidden');\r\n            //====> Fire Event <====//\r\n            popup.dispatchEvent(showed);\r\n        },\r\n\r\n        hide_modal = (trigger) => {\r\n            //==== Close the Modal ====//\r\n            let parent = Phenix(trigger).ancestor('.px-popup');\r\n            Phenix(parent).fadeOut().removeClass('active');\r\n            //==== Restore Scroll ====//\r\n            document.body.classList.remove('overflow-hidden');\r\n            popup.classList.add('hidden');\r\n            //====> Fire Event <====//\r\n            popup.dispatchEvent(hidden);\r\n            //===> Cleanup Lightbox <===//\r\n            popup.querySelectorAll('.px-lightbox-media, .lightbox-slider').forEach(element => element.remove());\r\n        };\r\n\r\n        //=====> Lightbox Mode <=====//\r\n        if (type === 'lightbox') {\r\n            //===> Set ID <===//\r\n            modal_id = 'px-lightbox';\r\n\r\n            //===> Lightbox Triggers <===//\r\n            Phenix('.px-lightbox').on('click', isClicked => {\r\n                //===> Prevent Default <===//\r\n                isClicked.preventDefault();\r\n\r\n                //===> Get the Media URL <===//\r\n                let thumbnail = isClicked.target,\r\n                    media_url = thumbnail.getAttribute('href') || thumbnail.getAttribute('data-src');\r\n\r\n                //===> Fix URl <===//\r\n                if(!media_url) media_url = thumbnail.getAttribute('src');\r\n\r\n                //===> Check Group <===//\r\n                let lightbox_group = thumbnail.getAttribute('data-group'),\r\n                    lightbox_wrapper = popup.querySelector('.modal-content');\r\n\r\n                //===> Media Type Handler <===//\r\n                let media_type = (url, trigger) => {\r\n                    //===> Get Media Type <===//\r\n                    let media_type = trigger.getAttribute('data-media');\r\n\r\n                    //===> Video Type <===//\r\n                    if (media_type === 'video') {\r\n                        //===> Width Fix <===//\r\n                        lightbox_wrapper.classList.add('col-11', 'w-max-768');\r\n                        //===> Return Video <===//\r\n                        return `<div class=\"px-media ratio-16x9 px-lightbox-media\" data-type=\"html\">\r\n                            <video src=\"${url}\" autoplay controls></video>\r\n                        </div>`;\r\n                    }\r\n\r\n                    //===> Embed Type <===//\r\n                    else if (media_type === 'embed') {\r\n                        //===> Width Fix <===//\r\n                        lightbox_wrapper.classList.add('col-11');\r\n\r\n                        //===> Cleanup URL <===//\r\n                        if (url.includes('youtube.com')) url = url.replace('watch?v=', 'embed/');\r\n                        else if (url.includes('vimeo.com')) url = url.replace('vimeo.com', 'player.vimeo.com/video');\r\n\r\n                        //===> Create iframe <===//\r\n                        return `<div class=\"px-media ratio-16x9 px-lightbox-media\">\r\n                            <iframe src=\"${url}\" loading=\"lazy\" frameborder=\"0\" allowfullscreen></iframe>\r\n                        </div>`;\r\n                    }\r\n\r\n                    //===> Image Type <===//\r\n                    else {\r\n                        return `<img src=\"${url}\" alt=\"Full Size Image\" class=\"px-lightbox-media\" />`;\r\n                    }\r\n                }\r\n\r\n                //===> if Single Media <===//\r\n                if (!lightbox_group) {\r\n                    //===> Remove Current <===//\r\n                    lightbox_wrapper.querySelector('.px-lightbox-media')?.remove();\r\n                    //===> Create the Media Element if Not Exist <===//\r\n                    Phenix(lightbox_wrapper).insert('append', media_type(media_url, thumbnail));\r\n                }\r\n\r\n                //===> Group Mode <===//\r\n                else {\r\n                    //===> Create Slider Wrapper <===//\r\n                    let slider_wrapper = Phenix(lightbox_wrapper).insert('append', `<div class=\"lightbox-slider px-slider\" data-controls=\"1\"></div>`);\r\n\r\n                    //===> Insert Elements of the Group <===//\r\n                    Phenix(`[data-group=\"${lightbox_group}\"]`).forEach((item:any) => {\r\n                        //===> Get the URL of each item <===//\r\n                        media_url = item.getAttribute('href') || item.getAttribute('data-src');\r\n\r\n                        //===> Insert the Current Item as First <===//\r\n                        if (item === thumbnail) {\r\n                            Phenix(slider_wrapper).insert('prepend', `<div class=\"px-item\">${media_type(media_url, item)}</div>`);\r\n                        } else {\r\n                            Phenix(slider_wrapper).insert('append', `<div class=\"px-item\">${media_type(media_url, item)}</div>`);\r\n                        }\r\n                    });\r\n\r\n                    lightbox_wrapper.classList.add('w-max-1100');\r\n                    lightbox_wrapper.querySelectorAll('.px-item .px-lightbox-media').forEach(element => element.classList.add('w-fluid'));\r\n\r\n                    //===> Activate the Slider <===//\r\n                    popup.addEventListener('modal-showed', event => {\r\n                        Phenix('.lightbox-slider').slider({ autoplay: false });\r\n                    });\r\n                }\r\n\r\n                //===> Show Lightbox <===//\r\n                show_modal();\r\n            });\r\n        }\r\n\r\n        //=====> Open by URL <=====//\r\n        if (hash_url) {\r\n            if (hash_url !== '0' || 'false') window.addEventListener('load', () => {\r\n                setTimeout(() => {\r\n                    if (window.location.hash.substr(1) == modal_id) show_modal();\r\n                }, timeout)\r\n            });\r\n        }\r\n\r\n        //=====> Open on Load <=====//\r\n        if (onload) {\r\n            if (onload !== '0' || 'false') window.addEventListener('load', () => setTimeout(show_modal, timeout));\r\n        }\r\n        \r\n        //=====> Open When Scroll <=====//\r\n        if (showon) {\r\n            Phenix(showon).forEach(selector => {\r\n                Phenix(selector).inView({\r\n                    callback: () => {\r\n                        if (!popup.classList.contains('active') && !popup.classList.contains('has-shown')) {\r\n                            show_modal();\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        //=====> Active Triggers <=====//\r\n        if (type === 'modal') {\r\n            let triggers_select = `[data-modal=\"${modal_id}\"], [href=\"#${modal_id}\"]:not([target=\"_blank\"])`;\r\n            Phenix(triggers_select).on('click', show_modal);\r\n\r\n            //====> Set Accessibility Options <====//\r\n            Phenix(triggers_select).setAttributes({'role': 'button', 'tabIndex': '0'});\r\n        }\r\n\r\n        //=====> Close Triggers <=====///\r\n        popup.querySelectorAll('.modal-close').forEach(trigger => {\r\n            trigger.addEventListener('click', () => {\r\n                hide_modal(trigger);\r\n            });\r\n            //====> Set Accessibility Options <====//\r\n            trigger.setAttribute('role', 'button');\r\n            trigger.setAttribute('tabIndex', '0');\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Progress Plugin\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Progress <====*/\r\nPhenixElements.prototype.progress = function (options?:{\r\n    type?:string,    //===> Timer Type [bar, circle, radial]\r\n    color?:any,      //===> the Progress Color\r\n    value?:number,   //===> the progress value\r\n    label?:string,   //===> the progress label\r\n    size?:number,    //===> the size of the progress with px\r\n    lazyloading?:boolean,  //====> Animate when its visible\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((progress:any) => {\r\n        //====> Get Progress Data <====//\r\n        let type = progress.getAttribute('data-type') || options?.type || 'bar',\r\n            color = progress.getAttribute('data-color') || options?.color || 'var(--primary-color)',\r\n            value = parseInt(progress.getAttribute('data-value')) || options?.value || 0,\r\n            label = progress.getAttribute('data-label') || options?.label || \"\",\r\n            lazy  = progress.getAttribute('data-lazy')  || options?.lazyloading,\r\n            circleSize = 700;\r\n\r\n        //====> Set Progress <====//\r\n        let setProgress = (bar) => {\r\n            //====> Progress Handler <====//\r\n            let progress_handler = () => {\r\n                //====> Get Current Value <====//\r\n                let value = parseFloat(progress.getAttribute('data-value')) || options?.value || 0,\r\n                    color = progress.getAttribute('data-color') || options?.color || 'var(--primary-color)';\r\n\r\n                //====> Set Bar Data <====//\r\n                if (type === 'bar') {\r\n                    bar.style.width = `${value}%`;\r\n                    bar.style.backgroundColor = color;\r\n                    bar.setAttribute('data-value', value);\r\n                    bar.setAttribute('data-label', label);\r\n                }\r\n                //====> Set Circle Data <====//\r\n                if (type === 'circle') {\r\n                    //====> Define Elements <====//\r\n                    let circle_path = bar.querySelector('.circle-progress');\r\n                    let circle_text = bar.querySelector('.circle-text');\r\n\r\n                    //====> Check if is Counting <====//\r\n                    if (circle_text.classList.contains('is-counting')) return;\r\n                    \r\n                    //====> Create Temp Value <====//\r\n                    let current_value = 0;\r\n                    circle_path.setAttribute('stroke-dashoffset', `${circleSize*((value/100)-1)}px`);\r\n\r\n                    //====> Animate the Counting <====//\r\n                    let CountUpTimer = setInterval(() => {\r\n                        //====> Set Progress <====//\r\n                        if (current_value < value) {\r\n                            current_value += 1;\r\n                            circle_text.classList.add('is-counting');\r\n                            circle_text.textContent = `${current_value}%`;\r\n                        }\r\n                        //===> if Already Done <===//\r\n                        if (current_value === value || circle_text.classList.contains('done-counting')) {\r\n                            //====> Clear When Done <====//\r\n                            circle_text.classList.add('done-counting');\r\n                            clearInterval(CountUpTimer);\r\n                        }\r\n                    }, 50);\r\n                }\r\n                //====> Set Circle Data <====//\r\n                if (type === 'radial') {\r\n                    //===> get Progress Data <===//\r\n                    let radial_meter = bar.querySelector('.progress'),\r\n                        meter_calc = radial_meter.getTotalLength() * ((100 - value) / 100),\r\n                        radial_path = bar.querySelector('.progress');\r\n                    //===> Set Progress <===//\r\n                    radial_path.setAttribute('stroke-dashoffset', Math.max(0, meter_calc));\r\n                    radial_path.setAttribute('stroke', color);\r\n                }\r\n            }\r\n\r\n            //====> Set Progress <====//\r\n            if (lazy && lazy !== 'false') {\r\n                //====> Add Loading State <====//\r\n                progress.classList.add('px-is-loading');\r\n                progress.style.setProperty('--progress-value', '0');\r\n\r\n                //====> First View Handler <====//\r\n                Phenix(progress).inView({\r\n                    offset: 100,\r\n                    callback: () => {\r\n                        //====> Remove Loading State <====//\r\n                        progress.classList.remove('px-is-loading');\r\n                        //====> Start Progress <====//\r\n                        progress_handler();\r\n                    },\r\n                    feature: 'progress'\r\n                });\r\n            } else {\r\n                progress_handler();\r\n            };\r\n        };\r\n\r\n        //====> Wrapper Properties <====//\r\n        progress.classList.add('position-rv', 'tx-align-center', 'lineheight-1');\r\n        progress.setAttribute('data-type', type);\r\n\r\n        //====> Bar Mode <====//\r\n        if (type === 'bar') {\r\n            //====> get the bar <====//\r\n            let progressBar = progress.querySelector('.px-progress-bar'),\r\n                size = progress.getAttribute('data-size')  || options?.size || 16;\r\n\r\n            //====> Create the bar if not existed <====// \r\n            if (!progressBar) {\r\n                //====> Add Progress Bar <====//\r\n                Phenix(progress).insert('append', `<span class=\"px-progress-bar display-block transition-fast overflow-hidden position-rv\" data-value=\"${value}\" ${label ? `data-label=\"${label}\"`: null} style=\"width:0;height:100%\"></span>`);\r\n                progressBar = progress.querySelector('.px-progress-bar'); \r\n            }\r\n\r\n            //====> Setup the Progress <====//\r\n            if (!progress.classList.contains('px-progress-bar-js')) {\r\n                //====> Base Background <====//\r\n                progress.classList.add('bg-alpha-10', 'overflow-hidden', 'px-progress-bar-js');\r\n                progress.style.height = `${Phenix(document).toREM(size)}`;\r\n                progress.style.lineHeight = `calc(${Phenix(document).toREM(size)})`;\r\n                progress.style.setProperty('--width', `${Phenix(document).toREM(progress.clientWidth)}`);\r\n                //====> Set Progress <====//\r\n                setProgress(progressBar);\r\n\r\n            } else {\r\n                setProgress(progressBar);\r\n            }\r\n        }\r\n\r\n        //====> Circle Mode <====//\r\n        if (type === 'circle') {\r\n            //====> Circle Shape <====//\r\n            let size = progress.getAttribute('data-size') || options?.size || 15,\r\n                svg  = progress.querySelector('.px-progress-circle');\r\n            \r\n            //====> Create SVG if not Existed <====//\r\n            if (!svg) {\r\n                let circle_shape = `<svg class=\"px-progress-circle\" viewBox=\"-15 -15 225 225\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" style=\"transform:rotate(-90deg);\">\r\n                    <circle r=\"100\" class=\"circle-base\" cx=\"100\" cy=\"100\" fill=\"transparent\" stroke-width=\"${size}\" stroke=\"var(--gray-light)\" stroke-dasharray=\"${circleSize}px\" stroke-dashoffset=\"0\"></circle>\r\n                    <circle r=\"100\" class=\"circle-progress\" cx=\"100\" cy=\"100\" style=\"transition: stroke-dashoffset ${value*50}ms linear 0.2s\" stroke-width=\"${size}\" stroke=\"${color}\" stroke-linecap=\"round\" stroke-dashoffset=\"${circleSize}px\" fill=\"transparent\" stroke-dasharray=\"${circleSize}px\"></circle>\r\n                    <text x=\"${Phenix(document).direction() === 'rtl' ? '72%' : '25%'}\" class=\"circle-text\" y=\"52%\" fill=\"${color}\" font-size=\"52px\" font-weight=\"bold\" style=\"transform:rotate(90deg) translate(0px, -196px)\">0%</text>\r\n                </svg>`;\r\n\r\n                Phenix(progress).insert('append', circle_shape);\r\n                svg = progress.querySelector('.px-progress-circle');\r\n                setProgress(svg);\r\n            }\r\n            //====> if Exist Update it <====//\r\n            else {\r\n                setProgress(svg);\r\n            }\r\n        }\r\n\r\n        //====> Circle Mode <====//\r\n        if (type === 'radial') {\r\n            //====> Circle Shape <====//\r\n            let size = progress.getAttribute('data-size') || options?.size || 10,\r\n            svg  = progress.querySelector('.px-progress-radial');\r\n            \r\n            //====> Create SVG if not Existed <====//\r\n            if (!svg) {\r\n                let circle_shape = `<svg width=\"100%\" viewBox=\"0 0 200 180\" class=\"px-progress-radial\">\r\n                    <path class=\"progress-bg\" stroke=\"rgba(0,0,0, 0.05)\" stroke-width=\"${size}\" d=\"M41 149.5a77 77 0 1 1 117.93 0\"  fill=\"none\" stroke-miterlimit=\"round\"/>\r\n                    <path class=\"progress\" stroke=\"${color}\" stroke-width=\"${size}\" d=\"M41 149.5a77 77 0 1 1 117.93 0\" fill=\"none\" stroke-miterlimit=\"round\" stroke-dasharray=\"350\" stroke-dashoffset=\"350\"/>\r\n                </svg>`;\r\n                \r\n                Phenix(progress).insert('append', circle_shape);\r\n                svg = progress.querySelector('.px-progress-radial');\r\n\r\n                setProgress(svg);\r\n            }\r\n            //====> if Exist Update it <====//\r\n            else {\r\n                setProgress(svg);\r\n            }\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - \r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Uploader [un-tested] <====*/\r\nPhenixElements.prototype.rating = function (options?:{\r\n    type?:string,   //===> standard, advanced\r\n    src?:string,    //===> Media Source [URL]\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> if its Done <====//\r\n        if(element.classList.contains('js-done')) return;\r\n\r\n        //====> Get Data <====//\r\n        let rating_name = \".rate-icon\",\r\n            input = element.querySelector('input'),\r\n            maxRate:any = parseInt(input.getAttribute('max')) || 5,\r\n            iconName = element.getAttribute('data-icon') || 'fas fa-star';\r\n\r\n        //====> Create Elements <====//\r\n        for (let i = 1; maxRate >= i; i++) {\r\n            Phenix(input).insert('after', `<a href=\"javascript:void(0)\" class=\"${iconName} rate-icon\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\"></a>`);\r\n        }\r\n\r\n        //====> get the New Elements <====//\r\n        const ratingElements = element.querySelectorAll(rating_name);\r\n\r\n        //====> Loop Through Rating Elements <====//\r\n        ratingElements.forEach((rateElement, index) => {\r\n            //===> Activate From Current Value <===//\r\n            if (parseInt(input.value) >= index) rateElement.classList.add('active');\r\n\r\n            //===> Activated Stars as Elements <===//\r\n            const activated = rateElement.parentNode.querySelectorAll(`${rating_name}.active`);\r\n\r\n            //===> Hover Effect <===//\r\n            rateElement.addEventListener('mouseenter', event => {\r\n                //===> Activate Elements <===//\r\n                event.target.classList.add('active');\r\n                Phenix(event.target).next(rating_name, true)?.forEach(item => item.classList.remove('active'));\r\n                Phenix(event.target).prev(rating_name, true)?.forEach(item => item.classList.add('active'));\r\n                //===> Return the Prev Status <===//\r\n                activated.forEach(item => item.classList.add('active'));\r\n            });\r\n\r\n            //===> When Mouse Leaves Element <===//\r\n            rateElement.addEventListener('mouseleave', event => {\r\n                //===> Deactivate Elements <===//\r\n                element.querySelectorAll(`${rating_name}.active`).forEach(item => item.classList.remove('active'));\r\n                //===> Return the Prev Status <===//\r\n                activated.forEach(item => item.classList.add('active'));\r\n            });\r\n\r\n            //===> Toggle Rate <===//\r\n            rateElement.addEventListener('click', event => {\r\n                //===> Set Value <===//\r\n                input.value = index+1;\r\n\r\n                //===> Activate Elements <===//\r\n                event.target.classList.add('active');\r\n                Phenix(rateElement).prev(\".rate-icon\", true)?.forEach(ele => ele.classList.add('active'));\r\n                Phenix(rateElement).next(\".rate-icon\", true)?.forEach(ele => ele.classList.remove('active'));\r\n\r\n                //===> Activate Rated Elements <===//\r\n                rateElement.addEventListener('mouseleave', event => event.target.classList.add('active'));\r\n\r\n                //===> Dispatch Change Event <===//\r\n                input.dispatchEvent(new Event('change'));\r\n            });            \r\n        });\r\n\r\n        //===> Done <===//\r\n        element.classList.add('js-done');\r\n    });\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Advanced Select\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Advanced Select <====*/\r\nPhenixElements.prototype.select = function (options?:{\r\n    max?:number,\r\n    search:boolean,\r\n    multiple:boolean,\r\n    placeholder?:string,\r\n    searchPlaceholder?:string,\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(select => {\r\n        //====> if Empty Select Return <====//\r\n        if (!select.querySelector('option')) return;\r\n\r\n        //====> Get Options <====//\r\n        let events_data:any = {},\r\n            classes  = select.classList,\r\n            multiple = select.hasAttribute('multiple') || options?.multiple,\r\n            maxItems = parseInt(select.getAttribute('data-max')) || options?.max,\r\n            search = select.getAttribute('data-search') || options?.search,\r\n            placeholder = select.getAttribute('data-placeholder') || options?.placeholder,\r\n            searchPlaceholder = select.getAttribute('data-search-placeholder') || options?.searchPlaceholder || 'Search...';\r\n        \r\n        //====> Create Custom Events <====//\r\n        const opened = new CustomEvent('opened', {detail: events_data,bubbles: true,cancelable: false}), \r\n              change = new CustomEvent('change', {detail: events_data,bubbles: true,cancelable: false}), \r\n              update = new CustomEvent('update', {detail: events_data,bubbles: true,cancelable: false}), \r\n              typing = new CustomEvent('typing', {detail: events_data,bubbles: true,cancelable: false}), \r\n              focus  = new CustomEvent('focus',  {detail: events_data,bubbles: true,cancelable: false}), \r\n              closed = new CustomEvent('closed', {detail: events_data,bubbles: true,cancelable: false});\r\n\r\n        //====> Select Component <====//\r\n        const select_create = () => {\r\n            //====> Create Custom Select <====//\r\n            let hasWrapper = Phenix(select).ancestor('.px-select'),\r\n                new_select = hasWrapper?.querySelector('.px-select-options') ? hasWrapper : null;\r\n\r\n            //====> Create Select wrapper if not existed <====//\r\n            if (hasWrapper && !new_select) {\r\n                new_select = Phenix(hasWrapper).css({\"line-height\": \"var(--height)\", \"cursor\": \"pointer\"}).addClass('flexbox').addClass('position-rv')[0];\r\n            } else {\r\n                new_select = Phenix(select).insert('before', `<div class=\"px-select flexbox position-rv\" style=\"line-height:var(--height);cursor: pointer;\"></div>`);\r\n            }\r\n            \r\n            //====> Copy Select Classes and Prepare CSS <====//\r\n            new_select.classList.add(...classes);\r\n            new_select = Phenix(new_select);\r\n\r\n            //====> Fix Padding for Single <====//\r\n            if (!multiple) {\r\n                new_select.css({\r\n                    \"padding-left\": \"0\",\r\n                    \"padding-right\": \"0\",\r\n                });\r\n            } else {\r\n                new_select.css({\r\n                    \"height\" : \"auto\",\r\n                    \"min-height\": \"var(--height)\",\r\n                    \"padding-left\": `calc(var(--padding)/2)`,\r\n                    \"padding-right\": `calc(var(--padding)/2)`,\r\n                });\r\n            }\r\n\r\n            //====> Create Options Wrapper <====//\r\n            let options_list = new_select.insert('append', `<ul class=\"reset-list fs-13 hidden border-1 border-solid border-alpha-10 fluid bg-inherit px-select-options bx-shadow-dp-2 position-ab fluid lineheight-160 pos-start-0 pos-after-y z-index-dropdown overflow-y-auto\" style=\"max-height:270px;\"></ul>`);\r\n                options_list = Phenix(options_list);\r\n\r\n            //====> Wrap the Original Select <====//\r\n            select.classList.add('hidden', 'px-mounted');\r\n            if(!hasWrapper) select = new_select.insert('append', select);\r\n\r\n            //===> Return new Data <===//\r\n            return [new_select, options_list]\r\n        };\r\n\r\n        //===> if its Wrong Element Skip-it <====//\r\n        if (select.tagName !== \"SELECT\") return;\r\n\r\n        //====> Rebuild from Scratch <====//\r\n        if (select.classList.contains('px-mounted')) {\r\n            select.addEventListener('update', isUpdated => {\r\n                Phenix(isUpdated.target).rebuildSelect();\r\n                //===> Get Options <====//\r\n                // const original_options = select.querySelectorAll('option'),\r\n                //       select_wrapper =  Phenix(select).ancestor('.px-select'),\r\n                //       new_select_options = select_wrapper.querySelectorAll('.px-select-options .px-select-option');\r\n                \r\n                // //===> if there is a new Items Rebuild <====/\r\n                // if (original_options.length !== new_select_options.length) {\r\n                //     //===> Remove Classes <===//\r\n                //     select.classList.remove('px-mounted');\r\n                //     select_wrapper.classList.remove('px-mounted');\r\n\r\n                //     //===> Remove Elements <===//\r\n                //     select_wrapper.querySelectorAll('.px-select-toggle, .px-select-options').forEach((element:HTMLElement) => element.remove());\r\n\r\n                //     //===> Rebuild the Component <====//\r\n                //     Phenix(select).select();\r\n                // }\r\n            });\r\n        }\r\n\r\n        //====> if Not Mounted Create <====//\r\n        else {\r\n            //====> Create New Component <====//\r\n            let select_component = select_create(),\r\n                new_select = select_component[0],\r\n                options_list = select_component[1];\r\n\r\n            //====> Create Options List <====//\r\n            select.querySelectorAll(':scope > *').forEach(option => {\r\n                //====> Get Option Data <====//\r\n                let option_text = option.textContent,\r\n                    option_value = option.getAttribute('value'),\r\n                    option_classes = `divider-b pdy-10 lineheight-150`,\r\n                    image_icon = ``,\r\n                    current_item:any;\r\n\r\n                //====> Set Images <====//\r\n                if (option.hasAttribute('data-image')) {\r\n                    let source = option.getAttribute('data-image');\r\n                    //===> Clean Source [URL] <===//\r\n                    source = encodeURI(source);\r\n                    //===> Set the image <===//\r\n                    image_icon = `<img style=\"width:1em\" alt=\"${option_text}\" src=\"${source}\" class=\"me-5\">`;\r\n                }\r\n\r\n                //====> Set Selected Class <====//\r\n                if (option.hasAttribute('selected') && option.getAttribute('selected') === 'true') option_classes += ` px-selected`;\r\n\r\n                //====> Options Headline <====//\r\n                if (option.matches('optgroup')) {\r\n                    //===> Create Option Group <===//\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-group mb-0 bg-alpha-05 pdx-10 weight-strong ${option_classes}\" data-value=\"${option_value}\">${image_icon}${option.getAttribute('label') ? option.getAttribute('label') : option_text}</li>`);\r\n                    \r\n                    //===> Create Sub Options <===//\r\n                    option.querySelectorAll('option').forEach(sub_option => {\r\n                        //===> Create Option <===//\r\n                        current_item = options_list.insert('append', `<li class=\"px-select-option mb-0 pdx-15 ${option_classes}\" data-value=\"${sub_option.getAttribute('value')}\" role=\"button\" tabIndex=\"0\">${image_icon}${sub_option.textContent}</li>`);\r\n                    });\r\n                }\r\n                \r\n                //====> Disabled Options  <====//\r\n                else if (option.hasAttribute('disabled')) {\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-disabled mb-0 pdx-15 color-gray tx-line-through ${option_classes}\" data-value=\"${option_value}\">${image_icon}${option_text}</li>`);\r\n                } \r\n                \r\n                //====> Options Items <====//\r\n                else {\r\n                    current_item = options_list.insert('append', `<li class=\"px-select-option mb-0 pdx-15 ${option_classes}\" data-value=\"${option_value}\" role=\"button\" tabIndex=\"0\">${image_icon}${option_text}</li>`);\r\n                }\r\n\r\n                //====> Copy Classes <====//\r\n                let original_classes = option.classList;\r\n                if(original_classes.length > 0) original_classes.forEach((cl:any) => current_item.classList.add(cl));\r\n            });\r\n\r\n            //====> Create Placeholder <====//\r\n            let first_option = select.querySelector('option:first-of-type'),\r\n                first_label = placeholder ? placeholder : '---',\r\n                first_classes = (holder) => {\r\n                    //===> Get Placeholder Classes <===//\r\n                    if (placeholder && holder) return holder;\r\n                    else if (first_option.classList) return first_option.classList;\r\n                },\r\n                first_image = (image, alt) => {\r\n                    if(placeholder && image) {\r\n                        //===> Clean Source [URL] <===//\r\n                        image = encodeURI(image);\r\n                        //===> Set the image <===//\r\n                        return `<img style=\"width:1em\" alt=\"${alt}\" src=\"${image}\" class=\"me-5\">`;\r\n                    } else {return '';}\r\n                };\r\n\r\n            //====> Define [Multiple] Variables <====//\r\n            let new_select_value, new_value_group, tag_classes, tag_remover,\r\n                //====> Tag Remover Handler <====//\r\n                set_tag_remover = (value_element) => {\r\n                    if (value_element) value_element.addEventListener('click', clicked => {\r\n                        //===> Get Value <===//\r\n                        let tag_value = value_element.parentNode.getAttribute('data-value'),\r\n                            select_values = new_select[0].getAttribute('data-value').split(',');\r\n\r\n                        //===> Remove Tag <====//\r\n                        value_element.parentNode.remove();\r\n\r\n                        //===> Remove from Values <===//\r\n                        select_values.forEach((val, index) => {\r\n                            if(val === tag_value) {\r\n                                if (select_values.length === 1) {\r\n                                    select_values = \"\";\r\n                                } else {\r\n                                    select_values = select_values.splice(index-1, 1);\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        //====> Set Values <====//\r\n                        new_select[0].setAttribute('data-value', select_values);\r\n                        select.value = select_values;\r\n\r\n                        //====> Unselect Option <====//\r\n                        select.querySelector(`[value=\"${tag_value}\"]`)?.removeAttribute('selected');\r\n                        new_select[0].querySelector(`[data-value=\"${tag_value}\"]`)?.classList.remove('px-selected');\r\n                        \r\n                        //===> Fire Events <===//\r\n                        new_select[0].dispatchEvent(change);\r\n                        select.dispatchEvent(change);\r\n                    });\r\n                },\r\n                //====> Tag Remover Handler <====//\r\n                tag_padding_fixer = () => {\r\n                    //===> Remover Size Fixer <===//\r\n                    if(Phenix(document).direction() === 'ltr') return `padding-left: calc(1.5em + ${Phenix(document).toREM(8)})`;\r\n                    else return `padding-right: calc(1.5em + ${Phenix(document).toREM(8)})`;\r\n                },\r\n                //====> Default Value Setter <====//\r\n                get_default_value = () => {\r\n                    //====> Set Default Value <====//\r\n                    if (!multiple && select.querySelector('[selected]')) {\r\n                        //====> Set Value <====//\r\n                        let selected_option = select.querySelector('[selected]'),\r\n                            default_value = selected_option.getAttribute('value'),\r\n                            default_label = selected_option.textContent;\r\n\r\n                        new_select[0].setAttribute('data-value', default_value);\r\n                        new_select_value.textContent = default_label;\r\n\r\n                        //====> Change Classes <====//\r\n                        if(selected_option.classList) {\r\n                            //====> Get new Classes <====//\r\n                            let new_classes = selected_option.classList,\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => {\r\n                                if (cl === '') return;\r\n                                new_select_value.classList.remove(cl);\r\n                            });\r\n\r\n                            //====> Set New Classes <====//\r\n                            new_select_value.classList.add(...new_classes);\r\n                        }\r\n\r\n                        //====> Change Image <====//\r\n                        if (selected_option.getAttribute('data-image')) {\r\n                            //===> Get New Image <===//\r\n                            let new_image = encodeURI(selected_option.getAttribute('data-image')),\r\n                                current_image = new_select_value.querySelector('img'),\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //===> If Exist Change URL <====//\r\n                            if (current_image) {\r\n                                current_image.setAttribute('src', new_image);\r\n                                current_image.setAttribute('alt', selected_option.textContent);\r\n                            }\r\n\r\n                            //===> Create Image <===//\r\n                            else Phenix(new_select_value).insert('prepend', `<img style=\"width:1em\" alt=\"${selected_option.textContent}\" src=\"${new_image}\" class=\"me-5\">`);\r\n                        }\r\n                    } \r\n                    //====> For Multiple Selection <====//\r\n                    else if (multiple) {\r\n                        //====> Collect Default Value <====//\r\n                        let default_values = [],\r\n                            search_element = Phenix(new_value_group.querySelector('.px-select-search'));\r\n\r\n                        //====> Reset Value <====//\r\n                        new_value_group.querySelectorAll('.px-selected-value').forEach(value => value.remove());\r\n\r\n                        //====> Attach each Option as Tag <====// \r\n                        select.querySelectorAll('[selected]').forEach(item => {\r\n                            //====> Create the Option <====//\r\n                            let value_element = search_element.insert('before', `<span style=\"font-size: 0.8em;${tag_padding_fixer()}\" class=\"${tag_classes}\" data-value=\"${item.value}\">${tag_remover} ${item.textContent}</span>`);\r\n\r\n                            //====> Collect its Value <=====//\r\n                            default_values.push(item.value);\r\n\r\n                            //====> Set Remover <====//\r\n                            set_tag_remover(value_element.querySelector('.px-value-remover'));\r\n                        });\r\n                        //====> Set Default Values <====//\r\n                        new_select[0].setAttribute('data-value', default_values);\r\n                        select.value = default_values;\r\n                    }\r\n                };\r\n\r\n            //====> Multiple Mode <====//\r\n            if (multiple) {\r\n                //===> Tag Classes <===//\r\n                tag_classes = 'px-selected-value inline-block lineheight-160 bg-alpha-10 mb-5 radius-sm pdy-5 pde-10 me-5 position-rv';\r\n\r\n                //===> Tag Remover <===//\r\n                tag_remover = `<button type=\"button\" class=\"px-value-remover reset-button fs-inherit inline-block position-ab pos-center-y pos-start-0 h-100 bg-alpha-05\" style=\"width:1.5em\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" style=\"width:0.6em\">\r\n                        <path fill=\"var(--color)\" d=\"M207.6 256l107.72-107.72c6.23-6.23 6.23-16.34 0-22.58l-25.03-25.03c-6.23-6.23-16.34-6.23-22.58 0L160 208.4 52.28 100.68c-6.23-6.23-16.34-6.23-22.58 0L4.68 125.7c-6.23 6.23-6.23 16.34 0 22.58L112.4 256 4.68 363.72c-6.23 6.23-6.23 16.34 0 22.58l25.03 25.03c6.23 6.23 16.34 6.23 22.58 0L160 303.6l107.72 107.72c6.23 6.23 16.34 6.23 22.58 0l25.03-25.03c6.23-6.23 6.23-16.34 0-22.58L207.6 256z\"/>\r\n                    </svg>\r\n                </button>`;\r\n\r\n                //===> Create Values Group <===//\r\n                new_value_group = new_select.insert('prepend', `<div class=\"px-selected-values pdt-5 px-select-toggle tx-nowrap col-12 flexbox align-center-y\">\r\n                    <input class=\"px-select-search col w-50 reset-input input-inherit mb-5\" placeholder=\"${first_label}\" />\r\n                </div>`);\r\n            }\r\n            //====> Single Mode <====//\r\n            else {\r\n                //===> Get First Label <===//\r\n                let first_label = placeholder ? placeholder : first_option.textContent,\r\n                    holder_classes = select.getAttribute('data-holder-classes'),\r\n                    holder_image   = select.getAttribute('data-image');\r\n\r\n                //===> Create Placeholder <===//\r\n                new_select_value = new_select.insert('prepend', `<button type=\"button\" class=\"reset-button h-min-100 px-select-toggle tx-nowrap col ${first_classes(holder_classes)}\">${first_image(holder_image,first_label)}${first_label}</button>`);\r\n\r\n                //===> Set First Option as Value <===//\r\n                new_select[0].setAttribute('data-value', `${first_option ? first_option.getAttribute('value') : ''}`);\r\n\r\n                //===> Style Placeholder <===//\r\n                Phenix(new_select_value).css({\r\n                    \"padding-left\": \"var(--padding)\",\r\n                    \"padding-right\": \"var(--padding)\",\r\n                });\r\n            }\r\n\r\n            //====> Set Default Value <====//\r\n            get_default_value();\r\n\r\n            //====> Disabled Mode <====//\r\n            if (select.hasAttribute('disabled')) new_select.addClass('disabled');\r\n            \r\n            //====> Enable Search <====//\r\n            if(search || multiple) {\r\n                //====> Create Search <====//\r\n                if (!multiple) options_list.insert('prepend', `<li class=\"pdy-5 pdx-15 divider-b flexbox flow-nowrap align-center-y\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"me-5\" style=\"width:.9em\">\r\n                        <path fill=\"var(--color)\" d=\"M508.5 468.9L387.1 347.5c-2.3-2.3-5.3-3.5-8.5-3.5h-13.2c31.5-36.5 50.6-84 50.6-136C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c52 0 99.5-19.1 136-50.6v13.2c0 3.2 1.3 6.2 3.5 8.5l121.4 121.4c4.7 4.7 12.3 4.7 17 0l22.6-22.6c4.7-4.7 4.7-12.3 0-17zM208 368c-88.4 0-160-71.6-160-160S119.6 48 208 48s160 71.6 160 160-71.6 160-160 160z\" />\r\n                    </svg>\r\n                    <input class=\"pdy-5 px-select-search col reset-input input-inherit w-50\" placeholder=\"${searchPlaceholder}\">\r\n                </li>`);\r\n\r\n                //====> Search <====//\r\n                new_select[0].querySelectorAll('.px-select-search').forEach(input => {\r\n                    input.addEventListener('input', typing => {\r\n                        //====> Get Search Value <====//\r\n                        let search_value = typing.target.value.toLowerCase();\r\n    \r\n                        //====> Hide All Group Titles <====//\r\n                        options_list[0].querySelectorAll('.px-select-group').forEach(headline => headline.classList.add('hidden'));\r\n                        \r\n                        //====> Loop Through Options <====//\r\n                        options_list[0].querySelectorAll('.px-select-option,.px-select-disabled').forEach(option => {\r\n                            //====> Hide Options <====//\r\n                            option.classList.add('hidden');\r\n    \r\n                            //====> Get Value <====//\r\n                            let option_value = option.getAttribute('data-value').toLowerCase(),\r\n                                option_label = option.textContent.toLowerCase();\r\n    \r\n                            //====> if matched show it <====//\r\n                            if (option_value.includes(search_value) || option_label.includes(search_value)) option.classList.remove('hidden');\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n\r\n            //====> Set Event Data <====//\r\n            events_data = {\r\n                select  : new_select[0],\r\n                original: select,\r\n                list    : options_list[0],\r\n                search  : new_select[0].querySelector('.px-select-search'),\r\n                value   : new_select[0].getAttribute('data-value'),\r\n            };\r\n\r\n            //====> Show Options <====//\r\n            new_select[0].querySelector('.px-select-toggle')?.addEventListener('click', clicked => {\r\n                //===> if Disabled <====//\r\n                if (select.hasAttribute('disabled') || clicked.target.matches('.px-selected-value')) return;\r\n                //===> Show Options <===//\r\n                Phenix(options_list).dynamicPosition().fadeToggle().toggleClass('is-opened');\r\n                //===> Fire Event <===//\r\n                events_data.value = new_select[0].getAttribute('data-value');\r\n                new_select[0].dispatchEvent(opened);\r\n                select.dispatchEvent(opened);\r\n            });\r\n\r\n            //====> Hide Options on Blank <====//\r\n            window.addEventListener('click', blank => {\r\n                //====> Clicked Target <====//\r\n                let clicked:any = blank.target,\r\n                    select_toggle = new_select[0].querySelector('.px-select-toggle'),\r\n                    select_search = new_select[0].querySelector('.px-select-search'),\r\n                    check_clicked = clicked !== new_select[0] && clicked !== select_toggle && !clicked.matches('.px-selected-value'),\r\n                    check_clicked_2 = clicked !== select_search && !clicked.matches('.px-select-disabled');\r\n\r\n                //====> if the target is not the current element or any of its children <====//\r\n                if (check_clicked && check_clicked_2) {\r\n                    Phenix(options_list).fadeOut().removeClass('is-opened');\r\n                    //===> Fire Event <===//\r\n                    events_data.value = new_select[0].getAttribute('data-value');\r\n                    new_select[0].dispatchEvent(closed);\r\n                    select.dispatchEvent(closed);\r\n                    //====> Search Reset <====//\r\n                    options_list[0].querySelectorAll('.hidden').forEach(hidden => hidden.classList.remove('hidden'));\r\n                }\r\n            });\r\n\r\n            //====> Set Option Value <====//\r\n            let set_value = (option) => {\r\n                option.addEventListener('click', clicked => {\r\n                    //===> Get the Options Value <===//\r\n                    let prevValue = new_select[0].getAttribute('data-value'),\r\n                        value = option.getAttribute('data-value'),\r\n                        label = option.textContent;\r\n\r\n                    //===> Set value and label <===//\r\n                    if (!multiple) {\r\n                        //====> Set Value <====//\r\n                        select.value = value;\r\n                        new_select_value.textContent = label;\r\n                        new_select[0].setAttribute('data-value', value);\r\n\r\n                        //====> Original Option <====//\r\n                        let original_option = select.querySelector(`[value=\"${value}\"]`);\r\n\r\n                        //====> Change Classes <====//\r\n                        if(original_option.classList?.length > 0) {\r\n                            //====> Get new Classes <====//\r\n                            let new_classes = select.querySelector(`[value=\"${value}\"]`).classList,\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''],\r\n                                prev_classes = select.querySelector(`[value=\"${prevValue}\"]`)?.classList;\r\n\r\n                            //====> Remove Old Classes <====//\r\n                            holder_classes.concat(...prev_classes).forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //====> Set New Classes <====//\r\n                            new_select_value.classList.add(...new_classes);\r\n                        }\r\n\r\n                        //====> Change Image <====//\r\n                        if (original_option && original_option.getAttribute('data-image')) {\r\n                            //===> Get New Image <===//\r\n                            let new_image = encodeURI(original_option.getAttribute('data-image')),\r\n                                current_image = new_select_value.querySelector('img'),\r\n                                holder_classes = select.getAttribute('data-holder-classes')?.split(' ') || [''];\r\n\r\n                            //====> Remove Holder Classes <====//\r\n                            holder_classes.forEach(cl => new_select_value.classList.remove(cl));\r\n\r\n                            //===> If Exist Change URL <====//\r\n                            if (current_image) {\r\n                                current_image.setAttribute('src', new_image);\r\n                                current_image.setAttribute('alt', option.textContent);\r\n                            }\r\n\r\n                            //===> Create Image <===//\r\n                            else Phenix(new_select_value).insert('prepend', `<img style=\"width:1em\" alt=\"${option.textContent}\" src=\"${new_image}\" class=\"me-5\">`);\r\n                        }\r\n                    } \r\n                    //===> Multiple Mode <===//\r\n                    else {\r\n                        //====> Get Current Value <====//\r\n                        let current_values = new_select[0].getAttribute('data-value').split(','),\r\n                        isSelected = false;\r\n                          \r\n                        //====> Check Selected Values <====//\r\n                        current_values.forEach(val => val === value ? isSelected = true : null);\r\n\r\n                        //===> if items has reaches the Maximum or is already Selected <===//\r\n                        if (current_values.length >= maxItems || isSelected) return;\r\n\r\n                        //====> Create the Option <====//\r\n                        let value_element = Phenix(new_value_group.querySelector('.px-select-search')).insert('before', `<span style=\"font-size: 0.8em;${tag_padding_fixer()}\" class=\"${tag_classes}\" data-value=\"${value}\">${tag_remover} ${label}</span>`);\r\n                        current_values.push(value);\r\n\r\n                        //====> Set Remover <====//\r\n                        set_tag_remover(value_element.querySelector('.px-value-remover'));\r\n\r\n                        //====> Set New Values <====//\r\n                        new_select[0].setAttribute('data-value', current_values);\r\n                        select.value = current_values;\r\n\r\n                        //====> Select Original Options <====//\r\n                        select.querySelector(`[value=\"${value}\"]`)?.setAttribute('selected', true);\r\n                        options_list[0].querySelector(`[data-value=\"${value}\"]`)?.classList.add('px-selected');\r\n                    }\r\n\r\n                    //===> Fire Event <===//\r\n                    events_data.value = new_select[0].getAttribute('data-value');\r\n                    new_select[0].dispatchEvent(change);\r\n                    select.dispatchEvent(change);\r\n                });\r\n            };\r\n\r\n            options_list[0].querySelectorAll(':scope > .px-select-option').forEach(option => set_value(option));\r\n\r\n            //====> Change Position on Scroll <====//\r\n            let isScrolling = false;\r\n            window.addEventListener('scroll', scrolling => isScrolling = true, {passive: true});\r\n\r\n            setInterval(() => {\r\n                if (isScrolling) {\r\n                    isScrolling = false;\r\n                    Phenix(options_list).dynamicPosition();\r\n                }\r\n            }, 300);\r\n\r\n            //===> Update Value <==//\r\n            select.addEventListener('update', isUpdated => get_default_value());\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n}\r\n\r\n//====> Rebuild Select Method <====//\r\nPhenixElements.prototype.rebuildSelect = function () {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(select => {\r\n        //====> Get the Select Wrapper <====//\r\n        let selectWrapper = Phenix(select).ancestor('.px-select');\r\n\r\n        //====> Remove Mounted Class <====//\r\n        select.classList.remove('px-mounted', 'hidden');\r\n\r\n        //====> Move the Select Element and Remove the Select Wrapper <====//\r\n        Phenix(selectWrapper).insert('before', select);\r\n        selectWrapper.remove();\r\n\r\n        //====> Rebuild the Select Element <====//\r\n        Phenix(select).select();\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Tabs Panels\r\n * ===> 03 - Default Options\r\n * ===> 03 - Activator\r\n * ===> 03 - Loop Through Phenix Query\r\n * ===> 03 - \r\n * ===> 09 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Tabs Panels <====*/\r\nPhenixElements.prototype.tabs = function (options?:{\r\n    active?:number,     //===> Show Tab # on Initial\r\n    navigation?:string, //===> Navigation Selector\r\n    hash_url?:boolean,  //===> Show Tab from URL #ID\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(tabs => {\r\n        //====> Options Data <====//\r\n        let active =  parseInt(tabs.getAttribute('data-active')) || options?.active || 0,\r\n            navigation = options?.navigation || '.tabs-navigation',\r\n            hash_url = options?.hash_url || Phenix(document).toBoolean(tabs.getAttribute('data-hash')),\r\n            panels  = tabs.querySelectorAll('.tab-panel'),\r\n            buttons = tabs.querySelector(navigation).querySelectorAll('[data-tab], [href^=\"#\"]'),\r\n            isHashed = window.location.hash && hash_url && hash_url !== '0' || hash_url !== 'false';\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('tab-showed'),\r\n              hidden = new Event('tab-hidden');\r\n\r\n        //====> Check if the Panels and Buttons are Available <====//\r\n        if(panels.length === 0 || buttons.length === 0) return console.log('Phenix Tabs: No panels or buttons found');\r\n\r\n        //====> Hide All Tabs <====//\r\n        panels.forEach((panel, index) => {\r\n            //====> Default Activation <====//\r\n            if (index === active) {\r\n                panel.classList.add('active');\r\n                panel.classList.remove('hidden');\r\n                //====> Fire Event <====//\r\n                panel.dispatchEvent(showed);\r\n            } else {\r\n                panel.classList.add('hidden');\r\n            }\r\n        });\r\n\r\n        //====> Loop Through Buttons <====//\r\n        buttons.forEach((button:HTMLElement, index:number) => {\r\n            //====> Default Activation <====//\r\n            if (index === active) button.classList.add('active');\r\n\r\n            //====> Set Accessibility Options <====//\r\n            button.setAttribute('role', 'button');\r\n            button.setAttribute('tabIndex', '0');\r\n\r\n            //====> Tab Clicked <====//\r\n            Phenix(button).on('click', clicked => {\r\n                //====> Prevent Default Behaver <====//\r\n                clicked.preventDefault();\r\n\r\n                //====> Get the Panel ID <====//\r\n                let button = clicked.target,\r\n                    tab_id = button.getAttribute('data-tab');\r\n\r\n                //====> if panel id is not set and the button has an href <====//\r\n                if (!tab_id && button.hasAttribute('href')) {\r\n                    //====> Get the Panel ID <====//\r\n                    tab_id = button.getAttribute('href')?.replace('#','');\r\n                    //====> if the button is inside a list <====//\r\n                    if (button.parentNode.childNodes.length < 2) button = button.parentNode;\r\n                }\r\n\r\n                //====> Add to URL if the hash is enabled <====//\r\n                if (hash_url) {\r\n                    //====> Get the URL <====//\r\n                    const url = window.location.href.replace(location.hash, \"\") + `#${tab_id}`;\r\n                    //====> Add to History <====//\r\n                    history.pushState({ additionalInformation: 'Updated the URL with JS' }, document.title, url);\r\n                }\r\n\r\n                //====> Active the Button <====//\r\n                Phenix(button).addClass('active').siblings()?.forEach(sibling => sibling.classList.remove('active'));\r\n\r\n                //====> Active the Panel and Get its Siblings <====//\r\n                let TabElement:any = document.querySelector(`#${tab_id}`),\r\n                    TabDisplay = TabElement?.getAttribute('data-display') || \"block\";\r\n\r\n                //====> Check if the Tab Element is Available <====//\r\n                if (TabElement) {\r\n                    //====> Active the Tab <====//\r\n                    Phenix(TabElement).fadeIn(700, 0, TabDisplay).addClass('active').removeClass('hidden').siblings('.tab-panel')?.forEach(panel => {\r\n                        //====> Fire Event <====//\r\n                        document.querySelector(`#${tab_id}`).dispatchEvent(showed);\r\n    \r\n                        //====> if the sibling is active <====//\r\n                        if (panel.classList.contains('active')) {\r\n                            //===> Deactivate the Panel <===//\r\n                            let the_panel:any = Phenix(panel).removeClass('active').addClass('hidden')[0];\r\n                            the_panel.style.display = null;\r\n                            //====> Fire Event <====//\r\n                            panel.dispatchEvent(hidden);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //====> Active By URL <====//\r\n        if (isHashed) {\r\n            window.addEventListener('load', () => {\r\n                //====> Get the Panel ID <====//\r\n                let tab_id = window.location.hash.substr(1);\r\n\r\n                //====> Active the Panel and Get its Siblings <====//\r\n                if(tab_id && document.querySelector(`#${tab_id}`)) {\r\n                    //====> Active the Panel <====//\r\n                    Phenix(`#${tab_id}`).fadeIn().addClass('active').removeClass('hidden').siblings('.tab-panel')?.forEach(panel => {\r\n                        //====> Check if it is active <====//\r\n                        if (!panel.classList.contains('active')) return;\r\n                        //====> Deactivate the Panel <====//\r\n                        let the_panel:any = Phenix(panel).removeClass('active').addClass('hidden')[0];\r\n                        //===> Clear Display Style <===//\r\n                        the_panel.style.display = null;\r\n                    });\r\n\r\n                    //===> Active the Panel Button <===//\r\n                    Phenix(`[data-tab=\"${tab_id}\"], [href=\"#${tab_id}\"]`).forEach((button:any) => {\r\n                        //====> get this button <====//\r\n                        let target = button;\r\n\r\n                        //====> if the button is inside a list <====//\r\n                        if (button.hasAttribute('href') && button.parentNode.tagName === \"li\") target = button.parentNode;\r\n\r\n                        //====> Active the Button <====//\r\n                        Phenix(target).addClass('active').siblings()?.forEach(sibling => sibling.classList.remove('active'));\r\n                    });\r\n\r\n                    //====> Fire Event <====//\r\n                    document.querySelector(`#${tab_id}`).dispatchEvent(showed);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Timer Component\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Timer Handler\r\n * ===> 05 - Timer Loop\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Timer Component <====*/\r\nPhenixElements.prototype.timer = function (options?:{\r\n    type?:string,    //===> Timer Type [countdown, stopwatch]\r\n    time?:string,    //===> Time = Hour:Minutes\r\n    date?:string,    //===> Date = Year-Month-Day\r\n    message?:string, //===> Time End Message\r\n    lazyloading?:boolean,   //===> Lazyloading Timer\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let type = element.getAttribute('data-type') || options?.type || 'countdown',\r\n            time = element.getAttribute('data-time') || options?.time || '00:00',\r\n            date = element.getAttribute('data-date')?.replace(/:/g, \"/\") || options?.date?.replace(/:/g, \"/\") || '',\r\n            message = element.getAttribute('data-message') || options?.message || 'Time is up.',\r\n            lazyloading = element.getAttribute('data-lazy') || options?.lazyloading;\r\n\r\n        //====> Create Custom Event <====//\r\n        const start_event = new Event('timerStart'),\r\n              end_event = new Event('timerEnd');\r\n\r\n        //====> Timer Handler <====//\r\n        let timer_handler = () => {\r\n            //====> Timer Markup Elements <====//\r\n            let childs  = {\r\n                seconds : element.querySelector('.seconds') || Phenix(element).insert('append', `<span data-label=\"seconds\" class=\"seconds\">00</span>`),\r\n                minutes : element.querySelector('.minutes') || Phenix(element).insert('append', `<span data-label=\"minutes\" class=\"minutes\">00</span>`),\r\n                hours   : element.querySelector('.hours')   || Phenix(element).insert('append', `<span data-label=\"hours\" class=\"hours\">00</span>`),\r\n                days    : element.querySelector('.days')    || Phenix(element).insert('append', `<span data-label=\"days\" class=\"days\">00</span>`)\r\n            };\r\n\r\n            //====> Convert Date <====//\r\n            if(date.split(\"-\")[0].length < 4) date = date.split(/\\D/).reverse().join('-');\r\n\r\n            //====> Fire Starting Event <====//\r\n            setTimeout(() => element.dispatchEvent(start_event), 200);\r\n\r\n            //====> Time Loop <====//\r\n            let stringDate = new Date(`${date}T${time}`).getTime(),\r\n                update = setInterval(function () {\r\n                    //====> Get Elapsed Time <====//\r\n                    let current = new Date().getTime(),\r\n                        elapsed = stringDate - current,\r\n                        //====> Timer Calculation <====//\r\n                        days = Math.floor(elapsed / (1000 * 60 * 60 * 24)),\r\n                        hours = Math.floor((elapsed % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n                        minutes = Math.floor((elapsed % (1000 * 60 * 60)) / (1000 * 60)),\r\n                        seconds = Math.floor((elapsed % (1000 * 60)) / 1000);\r\n        \r\n                    //====> Update Timer <====//\r\n                    childs.seconds.innerHTML = seconds.toString().padStart(2, '0');\r\n                    childs.minutes.innerHTML = minutes.toString().padStart(2, '0');\r\n                    childs.hours.innerHTML = hours.toString().padStart(2, '0');\r\n                    childs.days.innerHTML = days.toString().padStart(2, '0');\r\n        \r\n                    //====> Clear Time Loop <====//\r\n                    if (elapsed < 0) {\r\n                        clearInterval(update);\r\n                        element.innerHTML = `<p class=\"timer-message reset-block\">${message}</p>`;\r\n                        element.classList.add('px-timer-ended');\r\n                        //====> Fire Ending Event <====//\r\n                        element.dispatchEvent(end_event);\r\n                    }\r\n                }, 1000);\r\n        }\r\n\r\n        //====> Set Timer <====//\r\n        if (lazyloading && lazyloading !== 'false') {\r\n            //====> Add Loading State <====//\r\n            element.classList.add('px-is-loading');\r\n\r\n            //====> First View Handler <====//\r\n            Phenix(element).inView({\r\n                offset: 100,\r\n                callback: () => {\r\n                    //====> Remove Loading State <====//\r\n                    element.classList.remove('px-is-loading');\r\n                    //====> Start Timer <====//\r\n                    timer_handler();\r\n                },\r\n                feature: 'timer'\r\n            });\r\n        } else {\r\n            timer_handler();\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - \r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Uploader [un-tested] <====*/\r\nPhenixElements.prototype.uploader = function (options?:{\r\n    type?:string,   //===> standard, advanced\r\n    src?:string,    //===> Media Source [URL]\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(uploader => {\r\n        if(uploader.classList.contains('px-done')) return;\r\n        //====> Options <====//\r\n        let type = uploader.getAttribute('data-uploader') || options?.type || 'standard',\r\n            controler = uploader.querySelector('input[type=\"file\"]'),\r\n            multiple  = uploader.getAttribute('multiple') || uploader.getAttribute('data-multiple'),\r\n            placeholder = uploader.getAttribute('data-placeholder') || 'Drag and Drop your file to upload';\r\n\r\n        //====> Standard Uploader <===//\r\n        if (type == 'standard') {\r\n            //====> When Select a file <===//\r\n            controler.addEventListener('change', event => {\r\n                //===> Get Files Names <===//\r\n                var filePath = [];\r\n                for (var i = 0; i < controler.files.length; ++i) filePath.push(controler.files[i].name);\r\n                //===> Set Files Names <===//\r\n                uploader.setAttribute('data-placeholder', filePath);\r\n            });\r\n        } else {\r\n            //====> set Uploader Placeholder <====//\r\n            Phenix(controler).insert('after', `<span>${placeholder}</span><ul class=\"files\"></ul>`);\r\n\r\n            //====> Change File Function <===//\r\n            const changeFile = (files) => {\r\n                //===> Get File Data <===//\r\n                var filePath = [],\r\n                    filesList = uploader.querySelector('.files'),\r\n                    fileType,\r\n                    fileUrl;\r\n                //===> Set Files Data <===//\r\n                for (var i = 0; i < files.length; ++i) {\r\n                    filePath.push(files[i].name);\r\n                    fileType = files[i].type.split('/');\r\n                    fileUrl = URL.createObjectURL(files[i]);\r\n                }\r\n                //===> Reset File List <===//\r\n                filesList.innerHTML = '';\r\n                //===> Create Files List <===//\r\n                filePath.forEach(file => {\r\n                    //===> Create new File Item <===//\r\n                    Phenix(filesList).insert('append', `<li>${file}</li>`);\r\n\r\n                    //===> Handle Previews <===//\r\n                    if(multiple === null) {\r\n                        //===> Image Preview Mode <===//\r\n                        if(fileType[0] === 'image') {\r\n                            uploader.style.backgroundImage = `url(${fileUrl})`;\r\n                            uploader.classList.add('image-mode');\r\n                            //===> if Video , Reset <===//\r\n                            if (uploader.classList.contains('video-mode')) {\r\n                                uploader.classList.remove('video-mode');\r\n                                uploader.querySelector('video')?.remove();\r\n                            }\r\n                        }\r\n                        //===> Video Preview Mode <===//\r\n                        if (fileType[0] === 'video') {\r\n                            uploader.classList.add('video-mode');\r\n                            var videoCheck = Phenix(controler).next('video');\r\n                            //===> if video exist replace data else create new video <==//\r\n                            if(videoCheck) videoCheck.remove();\r\n                            Phenix(controler).insert('after', `<video controls><source src=\"${fileUrl}\" type=\"video/${fileType[1]}\"></video>`);\r\n                            //===> if Image , Reset <===//\r\n                            if (uploader.classList.contains('image-mode')) {\r\n                                uploader.classList.remove('image-mode');\r\n                                uploader.style.backgroundImage = null;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                //===> File Type <===//\r\n            };\r\n\r\n            //====> Change File <===//\r\n            controler.addEventListener('change', event => changeFile(event.target.files));\r\n\r\n            //====> Highlight Droparea <===//\r\n            controler.addEventListener('dragenter', event => uploader.classList.add('highlight'));\r\n            controler.addEventListener('dragleave', event => uploader.classList.remove('highlight'));\r\n\r\n            //====> Drop Files <===//\r\n            controler.addEventListener('drop', event => {\r\n                /*====> get Files <====*/\r\n                var data = event.dataTransfer,\r\n                    files = data.files;\r\n                controler.files = files;\r\n                uploader.classList.remove('highlight')\r\n            });\r\n        }\r\n        //===> Done <===//\r\n        uploader.classList.add('px-done');\r\n    });\r\n}","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix from '.';\r\ndeclare var PDS_WP_KEY: any;\r\n\r\n//======> D.O.M is Ready [for you] <=======//\r\nPhenix(document).ready(() => {});","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animations\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Animations Loader\r\n * ===> 05 - Directions Resolve\r\n * ===> 06 - Hide the Element\r\n * ===> 07 - Animate Method\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animations <====*/\r\nPhenixElements.prototype.animations = function (options?:{\r\n    animation?:string, //===> Animation Name\r\n    duration?:number,  //===> Animation Duration\r\n    delay?:number,     //===> Animation Delay\r\n    animateCSS?:boolean|string[]|string, //===> Animations Library\r\n    flow?:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    into?:number,    //====> Increase Target Position By [number]\r\n    offset?:number,  //====> Decrease Target Position By [number]\r\n    lazyloading?:boolean, //====> to Animate Element after Another\r\n    lazygroup?:any,      //====> Define the group fo each lazyloading group\r\n    stagger?:number,     //====> Define the stagger for the lazyloading group\r\n    scrollDriven?:boolean, //====> Enable Scroll Driven Animations\r\n    drivenEnd?:number|string, //====> Define the end of the driven progress\r\n    exit?:string,        //====> Exit Animation\r\n}) {\r\n    //====> Animations Loader <====//\r\n    const loadAnimationCSS = (thirdParty?: boolean|string[]|string) => {\r\n        //===> Default to 'all' if undefined <===//\r\n        const animationsToLoad = thirdParty === undefined ? 'all' : thirdParty;\r\n        \r\n        //====> Load Animation CSS Files <====//\r\n        if (animationsToLoad === 'all') {\r\n            Phenix(document).import('px-animations', 'css', `${Phenix(document).getURL().phenixCSS}animations/all.css`, () => {}, { integrated: false });\r\n        } else if (Array.isArray(animationsToLoad)) {\r\n            //===> Ensure utilities is included <===//\r\n            const animationsList = animationsToLoad.includes('utilities') ? animationsToLoad : [...animationsToLoad, 'utilities'];\r\n            \r\n            //===> Load each package <===//\r\n            animationsList.forEach(pkg => {\r\n                Phenix(document).import(`px-animations-${pkg}`, 'css', `${Phenix(document).getURL().phenixCSS}animations/${pkg}.css`, () => {}, { integrated: false });\r\n            });\r\n        } else if (typeof animationsToLoad === 'string' && animationsToLoad !== 'all') {\r\n            //===> Load the specified package and utilities <===//\r\n            Phenix(document).import(`px-animations-${animationsToLoad}`, 'css', `${Phenix(document).getURL().phenixCSS}animations/${animationsToLoad}.css`, () => {}, { integrated: false });\r\n            Phenix(document).import('px-animations-utilities', 'css', `${Phenix(document).getURL().phenixCSS}animations/utilities.css`, () => {}, { integrated: false });\r\n        }\r\n        \r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    };\r\n\r\n    //====> Load Animation CSS Files <====//\r\n    loadAnimationCSS(options?.animateCSS || 'all');\r\n\r\n    //====> Process Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> if its the Main Document Return Nothing <====//\r\n        if (element === window.document) return;\r\n\r\n        //====> Get Options Data <====//\r\n        const pageDir = Phenix(document).direction();\r\n        const animation = element.getAttribute('data-animation') || options?.animation || 'fadeIn';\r\n        const duration = parseInt(element.getAttribute('data-duration')) || options?.duration || 700;\r\n        const delay = parseInt(element.getAttribute('data-delay')) || options?.delay || 0;\r\n        const lazygroup = Phenix(document).toBoolean(element.getAttribute('data-lazy-group')) || options?.lazygroup || false;\r\n\r\n        //====> Directions Resolve <====//\r\n        let currentAnimation = animation;\r\n\r\n        //====> Fix Directions <====//\r\n        if (currentAnimation.includes('Start')) {\r\n            currentAnimation = currentAnimation.replace('Start', pageDir === 'ltr' ? 'Left' : 'Right');\r\n        } else if (currentAnimation.includes('End')) {\r\n            currentAnimation = currentAnimation.replace('End', pageDir === 'ltr' ? 'Right' : 'Left');\r\n        }\r\n\r\n        //====> Hide the Element <====//\r\n        element.classList.add('visibility-hidden', 'animated');\r\n        element.style.setProperty('--animation-delay', `${delay}ms`);\r\n        element.style.setProperty('--animation-name', currentAnimation);\r\n        element.style.setProperty('--animation-duration', `${duration}ms`);\r\n\r\n        //====> Setup Stagger for Sequence of Animations <====//\r\n        if (lazygroup) {\r\n            //====> Get Base Stagger <====//\r\n            const baseStagger = parseInt(element.getAttribute('data-stagger')) || options?.stagger || 100;\r\n\r\n            //====> Track Animation Order <====//\r\n            let animationOrder = 0;\r\n\r\n            //====> Create Intersection Observer <====//\r\n            const observer = new IntersectionObserver((entries) => {\r\n                entries.forEach(entry => {\r\n                    if (entry.isIntersecting) {\r\n                        const element = entry.target as HTMLElement;\r\n                        //====> Calculate Delay <====//\r\n                        const delay = animationOrder * baseStagger;\r\n                        //====> Set Delay <====//\r\n                        element.style.setProperty('--animation-delay', `${delay}ms`);\r\n                        //====> Increment Order <====//\r\n                        animationOrder++;\r\n                        //====> Stop Observing <====//\r\n                        observer.unobserve(element);\r\n                    }\r\n                });\r\n            }, {threshold: 0.1});\r\n\r\n            //====> Observe Elements <====//\r\n            element.querySelectorAll('[data-animation]').forEach(item => {\r\n                observer.observe(item);\r\n            });\r\n        }\r\n\r\n        //====> Handle Animation Setup <====//\r\n        if (Phenix(document).toBoolean(element.getAttribute('data-scrollDriven')) || options?.scrollDriven) {\r\n            //====> Get Animation Options <====//\r\n            const completeAt = element.getAttribute('data-drivenEnd') || options?.drivenEnd || 'center';\r\n            const exitAnimation = element.getAttribute('data-exit') || options?.exit;\r\n\r\n            //====> Show the Element <====//\r\n            Phenix(element).removeClass('visibility-hidden');\r\n            element.classList.add('view-active', currentAnimation);\r\n\r\n            //====> Create Scroll Progress Handler <====//\r\n            const handleScrollProgress = () => {\r\n                //====> Get Element Dimensions <====//\r\n                const rect = element.getBoundingClientRect();\r\n                const viewHeight = window.innerHeight;\r\n\r\n                //====> Define Progress and Points <====//\r\n                let progress, exitProgress;\r\n                const completionPoint = (() => {\r\n                    if (completeAt === 'center') return viewHeight / 2;\r\n                    if (completeAt === 'top') return 0;\r\n                    if (completeAt === 'bottom') return viewHeight;\r\n                    return (viewHeight * (parseInt(completeAt as string) || 50)) / 100;\r\n                })();\r\n\r\n                //====> Calculate Progress <====//\r\n                if (rect.top >= viewHeight || rect.bottom <= 0) {\r\n                    progress = 0;\r\n                    exitProgress = rect.top >= viewHeight ? 0 : 1;\r\n                } else {\r\n                    const startDistance = viewHeight - rect.top;\r\n                    const totalDistance = viewHeight + rect.height;\r\n                    progress = startDistance / totalDistance;\r\n                    progress = progress * (viewHeight / completionPoint);\r\n                    progress = Math.min(Math.max(progress, 0), 1);\r\n\r\n                    //====> Calculate Exit Progress <====//\r\n                    if (exitAnimation) {\r\n                        exitProgress = rect.bottom < viewHeight \r\n                            ? (viewHeight - rect.bottom) / rect.height\r\n                            : 0;\r\n                        exitProgress = Math.min(Math.max(exitProgress, 0), 1);\r\n                    }\r\n                }\r\n\r\n                //====> Update Progress Properties <====//\r\n                element.style.setProperty('--animation-progress', progress.toString());\r\n                if (exitAnimation) {\r\n                    element.style.setProperty('--exit-progress', exitProgress.toString());\r\n                    if (exitProgress > 0) element.classList.add(exitAnimation);\r\n                }\r\n            };\r\n\r\n            //====> Setup and Cleanup <====//\r\n            element.classList.add('scroll-progress');\r\n            window.addEventListener('scroll', handleScrollProgress, { passive: true });\r\n            handleScrollProgress();\r\n\r\n            //====> Cleanup Observer <====//\r\n            const observer = new MutationObserver((mutations, obs) => {\r\n                if (!document.contains(element)) {\r\n                    window.removeEventListener('scroll', handleScrollProgress);\r\n                    obs.disconnect();\r\n                }\r\n            });\r\n            observer.observe(document, { childList: true, subtree: true });\r\n        } \r\n        //====> Handle Regular Animations <====//\r\n        else {\r\n            //====> Get Exit Animation <====//\r\n            const exitAnimation = element.getAttribute('data-exit') || options?.exit;\r\n\r\n            //====> Get Position Customization Options <====//\r\n            const offset = parseInt(element.getAttribute('data-offset')) || options?.offset || 0;\r\n            const into = parseInt(element.getAttribute('data-into')) || options?.into || 0;\r\n\r\n            //====> Calculate Root Margin <====//\r\n            const topMargin = into - offset;\r\n            const rootMargin = `${topMargin}px 0px ${offset}px 0px`;\r\n\r\n            //====> Create Intersection Observer <====//\r\n            const observer = new IntersectionObserver((entries) => {\r\n                entries.forEach(entry => {\r\n                    //====> Get Element <====//\r\n                    const element = entry.target as HTMLElement;\r\n\r\n                    //====> Check if Element is in View <====//\r\n                    if (entry.isIntersecting) {\r\n                        //====> Entry Animation <====//\r\n                        if (!element.classList.contains('view-active')) {\r\n                            //====> Show the Element <====//\r\n                            Phenix(element).removeClass('visibility-hidden');\r\n                            //====> Add View Active and Current Animation <====//\r\n                            element.classList.add('view-active', currentAnimation);\r\n                            //====> Remove Exit Animation if Exists <====//\r\n                            if (exitAnimation) element.classList.remove(exitAnimation);\r\n                        }\r\n                    } \r\n                    //====> Check if Element is Exiting <====//\r\n                    else if (exitAnimation) {\r\n                        //====> Exit Animation <====//\r\n                        const isScrollingDown = entry.boundingClientRect.top < 0;\r\n                        //====> Remove Current Animation and View Active <====//\r\n                        element.classList.remove(currentAnimation, 'view-active');\r\n                        //====> Add Exit Animation <====//\r\n                        if (isScrollingDown) {\r\n                            element.classList.add(exitAnimation);\r\n                        }\r\n                    }\r\n                });\r\n            }, {threshold: 0.1,rootMargin});\r\n\r\n            //====> Start Observing <====//\r\n            observer.observe(element);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Collapse\r\n * ===> 03 - Loop Through Phenix Query\r\n * ===> 04 - Get Options\r\n * ===> 05 - Create Custom Event\r\n * ===> 06 - Collapse Handler\r\n * ===> 07 - Return Phenix Elements\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Collapse <====*/\r\nPhenixElements.prototype.collapse = function (options?:{\r\n    target?:string;   //===> Panel Target Selector\r\n    related?:boolean; //===> Panel Target is related to the button in the DOM Tree\r\n    parent?:string;   //===> Accordion Group Selector\r\n    hover?:boolean;  //===> Trigger on Hover instead of Click\r\n}) {\r\n    //====> Loop Through Phenix Query <====//\r\n    this.forEach(button => {\r\n        //====> if is Done Return no thing <====//\r\n        if(button.classList.contains('pxjs-done')) return;\r\n\r\n        //====> Get Options <====//\r\n        let classes = button.classList,\r\n            parent = button.getAttribute('data-parent') || options?.parent,\r\n            related = button.getAttribute('data-related') || options?.related,\r\n            active_class = 'px-collapse-active',\r\n            target = button.getAttribute('data-target') || options?.target;\r\n        let parentNode = Phenix(button).ancestor(parent);\r\n\r\n        //===> Add Icon Class Name <====//\r\n        classes.forEach((className:string) => {\r\n            //===> Get the Icon Name <===//\r\n            if(className.includes('fa-')) button.setAttribute('data-trigger-icon-normal', `${className}`);\r\n        });\r\n\r\n        //===> Store the Icon Name <===//\r\n        const normal_icon = button.getAttribute('data-trigger-icon-normal');\r\n\r\n        //===> Get the Icon Class for Active <===//\r\n        if (normal_icon && normal_icon.includes('plus')) {\r\n            button.setAttribute('data-trigger-icon', `${normal_icon.replace('plus', 'minus')}`);\r\n        } else if (normal_icon && normal_icon.includes('down')) {\r\n            button.setAttribute('data-trigger-icon', `${normal_icon.replace('down', 'up')}`);\r\n        }\r\n\r\n        //===> Change Active Item Icon <===//\r\n        const active_icon = button.getAttribute('data-trigger-icon');\r\n        if (button.classList.contains(active_class)) {\r\n            button.classList.add(active_icon);\r\n            button.classList.remove(normal_icon);\r\n        }\r\n\r\n        //====> Create Custom Event <====//\r\n        const showed = new Event('collapse-showed'),\r\n              hidden = new Event('collapse-hidden');\r\n\r\n        //====> Get Target as Element <====//\r\n        if (typeof(target) === 'string') {\r\n            related ? target = Phenix(button).siblings(target)[0] : target = document.querySelector(target);\r\n        }\r\n\r\n        //====> Collapse Handler <====//\r\n        let collapse_handler = (event) => {\r\n            //====> Check if the Target is being Processed <====//\r\n            if (parentNode?.classList.contains('pxjs-processing')) return;\r\n\r\n            //====> Show if its Hidden <====//\r\n            if (Phenix(target).getCSS('display') === 'none') {\r\n                //====> Hide Other Panels <====//\r\n                if (parent) {\r\n                    //====> Get Other Activated Items <====//\r\n                    let others = Phenix(button).ancestor(parent).querySelectorAll(`.${active_class}`);\r\n\r\n                    //====> and for each item <====//\r\n                    others.forEach(element => {\r\n                        //====> Remove Active Class <====//\r\n                        element.classList.remove(active_class, active_icon);\r\n                        //====> Hide Targets <====//\r\n                        if (element.matches(button.getAttribute('data-target') || options?.target)) {\r\n                            Phenix(element).slideUp();\r\n                        } else {\r\n                            element.classList.add(normal_icon);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                //====> Active Button <====//\r\n                button.classList.remove(normal_icon);\r\n                button.classList.add(active_class, active_icon);\r\n\r\n                //====> Mark the Target as Processing <====//\r\n                parentNode?.classList.add('pxjs-processing');\r\n\r\n                //====> Show Target <====//\r\n                Phenix(target).slideDown().addClass(active_class);\r\n                parentNode?.classList.remove('pxjs-processing');\r\n\r\n                //====> Fire Event <====//\r\n                button.dispatchEvent(showed);\r\n                target.dispatchEvent(showed);\r\n            }\r\n            //====> Hide if its Shown <====//\r\n            else {\r\n                //====> Exclude Hiding for Hover Triggers <====//\r\n                if (parentNode.classList.contains('px-accordion-hover')) return;\r\n\r\n                //====> Active Button <====//\r\n                button.classList.add(normal_icon);\r\n                button.classList.remove(active_class, active_icon);\r\n\r\n                //====> Show Target <====//\r\n                Phenix(target).slideUp().removeClass(active_class);\r\n\r\n                //====> Fire Event <====//\r\n                button.dispatchEvent(hidden);\r\n                target.dispatchEvent(hidden);\r\n            }\r\n        };\r\n\r\n        //====> Trigger on Click <====//\r\n        button.addEventListener('click', collapse_handler);\r\n\r\n        //====> Trigger on Hover <====//\r\n        if (options?.hover || parentNode.classList.contains('px-accordion-hover')) button.addEventListener('mouseenter', collapse_handler);\r\n\r\n        //====> Set Accessibility Options <====//\r\n        button.setAttribute('role', 'button');\r\n        button.setAttribute('tabIndex', '0');\r\n\r\n        //====> Done <====//\r\n        button.classList.add('pxjs-done');\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animated Counter\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Counter Data\r\n * ===> 05 - Count Runer\r\n * ===> 06 - Start Counting\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animated Counter <====*/\r\nPhenixElements.prototype.counter = function (options?:{\r\n        value?:number,    //===> Number to Count\r\n        duration?:number, //===> Animation Duration\r\n        delay?:number,    //===> Animation Delay\r\n        decimal?:number,  //===> Decimal Numbers Support\r\n        symbol?:string,   //===> Symbol After the Number\r\n        steps?:number,    //===> Count per Step\r\n        reverse?:boolean, //===> Count Down instead of Up\r\n        lazyloading?:boolean, //===> Lazyload Animation\r\n    }) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let duration = parseInt(element.getAttribute('data-duration')) || options?.duration || 2000,\r\n            decimal  = parseInt(element.getAttribute('data-decimal')) || options?.decimal || 0,\r\n            value    = parseInt(element.getAttribute('data-value')) || options?.value || parseInt(element.textContent.replaceAll(',','')),\r\n            symbol   = element.getAttribute('data-symbol') || options?.symbol || '',\r\n            delay    = parseInt(element.getAttribute('data-delay')) || options?.delay  || 0,\r\n            steps    = parseInt(element.getAttribute('data-steps')) || options?.steps  || 10,\r\n            reverse  = element.getAttribute('data-reverse') || options?.reverse || false,\r\n            lazyloading = element.getAttribute('data-lazy') || options?.lazyloading,\r\n            counting = element.classList.contains('counting');\r\n\r\n        //====> Counter Data <===//\r\n        let input = (element.nodeName.toLowerCase() === 'input') ? true : false,\r\n            count = 0,\r\n            increment = Math.ceil(value / (duration / steps)),\r\n            interval = null,\r\n            decimal_regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n\r\n        //====> Switch Count for Counting Down <====//\r\n        if (reverse) count = value;\r\n\r\n        \r\n        //====> Count Runner <===//\r\n        const runCounter = () => {\r\n            //===> Round Up Values <===//\r\n            // count = Math.round(count);\r\n            // value = Math.round(value);\r\n\r\n            //===> Set is Counting <===//\r\n            if (!counting) element.classList.add('counting');\r\n\r\n            //===> if [Count Down] is Activated => Decrease the Count Otherwise Increase the Count <===//\r\n            count += (reverse ? -Math.min(increment, Math.abs(value - count)) : Math.min(increment, Math.abs(value - count)));\r\n            // if (reverse && count > 0) count -= increment;\r\n            // else if (count < value) count += increment;\r\n\r\n            //===> Current Value <===//\r\n            // let current = `${count.toFixed(decimal).toString().replace(decimal_regex, ',')}${symbol}`;\r\n\r\n            //===> Update the Element <===//\r\n            element[ input ? 'value' : 'innerHTML' ] = `${count.toFixed(decimal).toString().replace(decimal_regex, ',')}${symbol}`;\r\n            // if (input) element.value = current;\r\n            // //===> Otherwise <===//\r\n            // else element.innerHTML = current;\r\n\r\n            //===> Clear When Count Up Reaches The Target <===//\r\n            if (count === (reverse ? 0 : value)) clearInterval(interval);\r\n        };\r\n\r\n        //====> Counter Handler <====//\r\n        let counter_handler = () => {\r\n            setTimeout(function() {\r\n                interval = setInterval(runCounter.bind(this), steps);\r\n            }.bind(this), delay);\r\n        }\r\n\r\n        //====> Run Counter <====//\r\n        if (lazyloading) {\r\n            Phenix(element).inView({\r\n                callback: () => {\r\n                    if (!element.classList.contains('counting')) counter_handler();\r\n                }\r\n            });\r\n        } else {\r\n            counter_handler();\r\n        };\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Effects : SlideUp\r\n * ===> 03 - Effects : SlideDown\r\n * ===> 04 - Effects : SlideToggle\r\n * ===> 05 - Effects : FadeOut\r\n * ===> 06 - Effects : FadeIn\r\n * ===> 07 - Effects : FadeToggle\r\n * ===> 08 - Effects : (Smoth-Scroll, Sticky Elements, Scroll-Spy)\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Effects : SlideUp <====*/\r\nPhenixElements.prototype.slideUp = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element).display !== 'none') {\r\n            //====> Set Initial Animation Properties <====//\r\n            Phenix(element).css({ \"overflow\": 'hidden' });\r\n\r\n            //====> Animation Data <====//\r\n            const fullHeight = element.scrollHeight;\r\n            const initialStyles = Phenix(element).getCSS();\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n            const endHeight = 0;\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateSlideUp(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set the element's style based on the animation progress\r\n                Phenix(element).css({\r\n                    height: `${fullHeight * (1 - progress)}px`,\r\n                    paddingTop: `${parseFloat(initialStyles.paddingTop) * (1 - progress)}px`,\r\n                    paddingBottom: `${parseFloat(initialStyles.paddingBottom) * (1 - progress)}px`\r\n                });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateSlideUp); // Continue the animation\r\n                } else {\r\n                    // After Animation : Hide the Element\r\n                    Phenix(element).css({ \"display\": 'none', \"height\": \"\", \"paddingTop\": \"\", \"paddingBottom\": \"\", \"overflow\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateSlideUp), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : SlideDown <====*/\r\nPhenixElements.prototype.slideDown = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element and Set Initial Styles <====//\r\n            Phenix(element).css({\r\n                \"overflow\": 'hidden',\r\n                \"display\": display || 'block',\r\n                \"height\": \"0px\", // Start height for sliding effect\r\n                \"paddingTop\": \"0px\",\r\n                \"paddingBottom\": \"0px\"\r\n            });\r\n\r\n            //====> Animation Data <====//\r\n            const fullHeight = element.scrollHeight;\r\n            const initialStyles = Phenix(element).getCSS();\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateSlideDown(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set the element's style based on the animation progress\r\n                Phenix(element).css({\r\n                    height: `${progress * fullHeight}px`,\r\n                    paddingTop: `${parseFloat(initialStyles.paddingTop) * progress}px`,\r\n                    paddingBottom: `${parseFloat(initialStyles.paddingBottom) * progress}px`\r\n                });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateSlideDown); // Continue the animation\r\n                } else {\r\n                    // Clear overflow and reset properties after animation completes\r\n                    Phenix(element).css({ \"height\": \"\", \"paddingTop\": \"\", \"paddingBottom\": \"\", \"overflow\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateSlideDown), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : SlideToggle <====*/\r\nPhenixElements.prototype.slideToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).slideDown(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).slideUp(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeOut <====*/\r\nPhenixElements.prototype.fadeOut = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element)?.display !== 'none') {\r\n            //====> Set Initial Style for Animation <====//\r\n            Phenix(element).css({ \"opacity\": \"1\" });\r\n\r\n            //====> Animation Data <====//\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateFadeOut(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Apply the opacity based on the animation progress\r\n                Phenix(element).css({ opacity: `${1 - progress}` });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateFadeOut); // Continue the animation\r\n                } else {\r\n                    // After Animation : Hide the Element and Reset Inline Styles\r\n                    Phenix(element).css({ \"display\": 'none', \"opacity\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateFadeOut), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeIn <====*/\r\nPhenixElements.prototype.fadeIn = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element with Initial Opacity <====//\r\n            Phenix(element).css({\r\n                \"display\": display || 'block',\r\n                \"opacity\": \"0\"\r\n            });\r\n\r\n            //====> Animation Data <====//\r\n            const timespeed = duration || 300;\r\n            const startTime = performance.now();\r\n\r\n            //====> requestAnimationFrame Animation <====//\r\n            function animateFadeIn(currentTime: number) {\r\n                const elapsedTime = currentTime - startTime;\r\n                const progress = Math.min(elapsedTime / timespeed, 1);\r\n\r\n                // Set opacity based on the animation progress\r\n                Phenix(element).css({ opacity: `${progress}` });\r\n\r\n                if (progress < 1) {\r\n                    requestAnimationFrame(animateFadeIn); // Continue animation\r\n                } else {\r\n                    // Clear inline opacity style after animation completes\r\n                    Phenix(element).css({ \"opacity\": \"\" });\r\n                }\r\n            }\r\n\r\n            //====> Trigger the Animation with Delay <====//\r\n            setTimeout(() => requestAnimationFrame(animateFadeIn), delay || 0);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n\r\n/*====> Effects : FadeToggle <====*/\r\nPhenixElements.prototype.fadeToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element: HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).fadeIn(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).fadeOut(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n};\r\n","/**====> Reference By Comment <====\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Get Information Class\r\n * ===> 03 - Page Direction\r\n * ===> 04 - Get Element Height\r\n * ===> 05 - ViewPort Detector\r\n * ===> 06 - Get CSS Properties\r\n * ===> 07 - Get Viewport Dimensions\r\n * ===> 00 - ....\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Page Direction <====*/\r\nPhenixElements.prototype.direction = function (property?:string) {\r\n    //====> Default Direction <====//\r\n    let direction  = getComputedStyle(document.body).direction,\r\n        directionStart = 'left',\r\n        directionEnd   = 'right';\r\n\r\n    //====> Change Direction if RTL <====//\r\n    if (direction === 'rtl') {\r\n        directionStart = 'right';\r\n        directionEnd = 'left';\r\n    }\r\n\r\n    //====> Return Property Value <====//\r\n    if (property == \"start\") return directionStart;\r\n    else if (property == \"end\") return directionEnd;\r\n    else return direction;\r\n}\r\n\r\n/*====> Get Element Height <====*/\r\nPhenixElements.prototype.height = function () {\r\n    //====> Define Target Data <====//\r\n    let element:any = this[0],\r\n        display = getComputedStyle(element).display,\r\n        style = element.style,\r\n        inlineDisplay = style.display;\r\n\r\n    //====> for Getting Hidden Element Height <====//\r\n    if (display == 'none') {\r\n        style.display = 'block';\r\n        style.visibility = 'hidden';\r\n    }\r\n\r\n    //====> Define Height Data <====//\r\n    let height = element.scrollHeight,\r\n        padding = parseInt(getComputedStyle(element).padding, 10) || 0;\r\n\r\n    //====> Reset the Hidden Element <====//\r\n    if (display === 'none') {\r\n        //===> Reset Display <===//\r\n        inlineDisplay ? style.display = display : style.display = null;\r\n        //===> Reset Visibility <===//\r\n        style.visibility = null;\r\n    }\r\n\r\n    return (height + padding);\r\n}\r\n\r\n/*====> Get CSS Properties <====*/\r\nPhenixElements.prototype.getCSS = function(property?:string, pseudo?:string) {\r\n    //====> Define the Target <====//\r\n    let element:any = this[0];\r\n\r\n    //====> Get the Target Style <====//\r\n    let styles = getComputedStyle(element, pseudo);\r\n\r\n    //====> If Property is Targeted <====//\r\n    if (property) styles = styles[property];\r\n\r\n    //====> Return Information <====//\r\n    return styles;\r\n}\r\n\r\n//====> Copyrights <====//\r\nPhenixElements.prototype.copyrights = function (project_name) {\r\n    //===> Name Resolve <===//\r\n    let name = project_name;\r\n    if(!name) name = 'Phenix Themes';\r\n    while (name.length < 24) name += ` `;\r\n    //====> Print Copyrights <====//\r\nconsole.info(`🔥🔥🔥🔥🔥 %cPhenix Design System 🔥🔥🔥💥🐦\r\n🔥                                      🔥\r\n🔥  - Project : ${name}🔥\r\n🔥  - System  : Phenix Blocks           🔥\r\n🔥  - Author  : Abdullah Ramadan        🔥\r\n🔥  - Version : PDS v1.0.0              🔥\r\n🔥  - Website : phenixthemes.com        🔥\r\n🔥  - Docs    : design.phenixthemes.com 🔥\r\n🔥  - Contact : +2-01122974539          🔥\r\n🔥                                      🔥\r\n🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🚀`, \"color: #FB955D;font-weight: 600\");\r\n    //===> Return Phenix <===//\r\n    return this;\r\n};\r\n\r\n//====> Get Current Path <====//\r\nPhenixElements.prototype.getURL = function (location?) {\r\n    //====> Current Script File <====//\r\n    let url = document.querySelector('script[src*=\"phenix.js\"]')?.getAttribute('src'),\r\n        phenix_js = url.substring(0, url.lastIndexOf('/')+1);\r\n    //====> Return information's <====//\r\n    return {\r\n        script : url,\r\n        window : window.location.href,\r\n        page   : window.location.pathname,\r\n        phenixJS : phenix_js || 'https://cdn.jsdelivr.net/npm/phenix-ui@0.6.5/dist/js/',\r\n        phenixCSS : phenix_js.replace('js', 'css') || 'https://cdn.jsdelivr.net/npm/phenix-ui@0.6.5/dist/css/',\r\n    }\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Notifications\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n//=====> Notifications <=====//\r\nPhenixElements.prototype.notifications = function (options?:{\r\n    type?:string,     //=== Message Type [normal, error, success, warning]\r\n    message?:string,  //=== Message Content\r\n    duration?:number, //=== Message Timeout\r\n    position?:any,     //=== Message Position {y, x} [top,center,bottom] [start,center,end]\r\n}) {\r\n    //====> Element & Data <====//\r\n    let current,\r\n        type = options?.type || 'normal',\r\n        message = options?.message || 'No Message Defined.',\r\n        duration = options?.duration || 3000,\r\n        notifications = document.querySelector('.px-notifications'),\r\n        background = 'bg-primary color-white',\r\n        item_position = 'pos-bottom-0 pos-start-0',\r\n        css_classes = 'px-item pdy-10 pdx-15 fs-14 mb-10 radius-sm';\r\n    \r\n    //====> Figure Position <=====//\r\n    if(options?.position) {\r\n        //=== get position ===//\r\n        let position = options?.position;\r\n        if (typeof(options?.position) == \"string\") position = options?.position.split(',');\r\n        let y_pos = position[0].replace(/\\s/g, ''),\r\n            x_pos = position[1].replace(/\\s/g, '');\r\n\r\n        //=== set X position ===//\r\n        x_pos == 'start' ? x_pos = 'me-auto' :\r\n        x_pos == 'center' ? x_pos = 'mgx-auto' :\r\n        x_pos == 'end' ? x_pos = 'ms-auto' : '';\r\n\r\n        //=== set Y position ===//\r\n        y_pos == 'top' ? y_pos = 'start' :\r\n        y_pos == 'center' ? y_pos = 'center' :\r\n        y_pos == 'bottom' ? y_pos = 'end' : '';\r\n\r\n        //=== set position ===//\r\n        item_position = `align-self-${y_pos} ${x_pos}`;\r\n\r\n    //====> Set Default <===//\r\n    } else item_position = `align-self-end`;\r\n\r\n    //====> Create Notifications Area <====//\r\n    if(!document.querySelector('.px-notifications')) {\r\n        notifications = Phenix('body').insert('append', `<div class=\"px-notifications position-fx pos-bottom-0 pos-start-0 hidden z-index-modal pd-15 ${options?.position ? 'flexbox h-100vh col-12' : ''}\" style=\"pointer-events: none\"></div>`);\r\n    }\r\n\r\n    //====> Change Background <====//\r\n    if (type === 'error') background = 'bg-danger color-white';\r\n    else if (type === 'success') background = 'bg-success color-white';\r\n    else if (type === 'warning') background = 'bg-warning color-dark';\r\n\r\n    //=== Set Notifications ===//\r\n    current = Phenix(notifications).insert('append', `<div class=\"w-max-320 z-index-modal position-rv ${css_classes} ${background} ${item_position} hidden\" style=\"pointer-events: all\">${message}</div>`);\r\n\r\n    //====> Show Notifications <====//\r\n    Phenix(notifications).removeClass('hidden').fadeIn(500, 0, 'flex');\r\n    Phenix(current).removeClass('hidden').fadeIn();\r\n\r\n    //====> Hide Notifications <====//\r\n    setTimeout(()=> {\r\n        Phenix(current).fadeOut();\r\n        setTimeout(() => current ? current.remove() : '', 500);\r\n    }, duration);\r\n\r\n    Phenix(current).on('click', isClicked => {\r\n        Phenix(current).fadeOut();\r\n        setTimeout(() => current ? current.remove() : '', 500);\r\n    });\r\n\r\n    //====> Return Phenix <====//\r\n    return this;\r\n};","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Smoth-Scroll\r\n * ===> 03 - Sticky Elements\r\n * ===> 04 - Scroll-Spy\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Scroll-Spy <====*/\r\nPhenixElements.prototype.scrollSpy = function (options?:{\r\n    active:string,  //===> Active Class Name Default : px-active\r\n    flow:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    offset:number,  //====> Decrease Target Position By [number]\r\n    into:number     //====> Increase Target Position By [number]\r\n}) {\r\n    //====> Define Options <=====//\r\n    let className:string = options?.active || 'px-active',\r\n        spotFlow:string = options?.flow || 'both',\r\n        spotInto:number = options?.into || 0,\r\n        spotOffset:number = options?.offset || 0;\r\n\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(spyWrapper => {\r\n        //====> Get All Links & Triggers <====//\r\n        let triggers = spyWrapper.querySelectorAll('[href], [data-target]');\r\n\r\n        //====> Loop Through Triggers <====//\r\n        triggers.forEach(trigger => {\r\n            //====> Smooth Scroll <====//\r\n            Phenix(trigger).smothScroll();\r\n\r\n            //====> Get Data <====//\r\n            let selector = trigger.getAttribute('href') || trigger.getAttribute('data-target');\r\n\r\n            //====> Skip if not a valid selector <====//\r\n            if (!selector || !document.querySelector(`${selector}`)) return;\r\n\r\n            //====> Define Activator <====//\r\n            const activator = () => {\r\n                //====> Define parent if needed <====//\r\n                const parent = !trigger.matches('li') ? Phenix(trigger).ancestor('li') : null;\r\n                const hasScrollWrapper = spyWrapper.scrollHeight > spyWrapper.clientHeight || spyWrapper.scrollWidth > spyWrapper.clientWidth;\r\n                \r\n                //====> Add active class to parent or trigger <====//\r\n                if (parent) {\r\n                    parent.classList.add(className);\r\n                    //====> Scroll to the Trigget if has Scrollable Wrapper <====//\r\n                    if (hasScrollWrapper) parent.scrollIntoView({behavior: 'smooth'});\r\n                } else {\r\n                    trigger.classList.add(className);\r\n                    //====> Scroll to the Trigget if has Scrollable Wrapper <====//\r\n                    if (hasScrollWrapper) trigger.scrollIntoView({behavior: 'smooth'});\r\n                }\r\n                \r\n                //====> Remove active class from siblings <====//\r\n                Phenix(parent || trigger).siblings()?.forEach(sibling => {\r\n                    //====> Remove active class <====//\r\n                    sibling.classList.remove(className);\r\n                    //====> Also remove from any active children <====//\r\n                    sibling.querySelector(`.${className}`)?.classList.remove(className);\r\n                });\r\n            };\r\n\r\n            //====> Use inView to detect when target is in viewport <====//\r\n            Phenix(selector).inView({\r\n                flow: trigger.getAttribute('data-flow') || spotFlow,\r\n                into: trigger.getAttribute('data-into') || spotInto,\r\n                offset: trigger.getAttribute('data-offset') || spotOffset,\r\n                callback: activator,\r\n                feature: 'scrollspy',\r\n                persistent: true\r\n            });\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Smoth-Scroll\r\n * ===> 03 - Sticky Elements\r\n * ===> 04 - Scroll-Spy\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Smooth-Scroll <====*/\r\nPhenixElements.prototype.smothScroll = function (options?:{\r\n    target?:string,   //===> Target to Scroll to\r\n    offset?:number,   //===> Decrease Target Position By [number]\r\n    into?:number,     //===> Increase Target Position By [number]\r\n    duration?:number, //===> Scroll Animation Duration\r\n    delay?:number,    //===> Delay Before Scroll\r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.on('click', event => {\r\n        //====> Prevent Default Click Behavior <====//\r\n        event.preventDefault();\r\n\r\n        //====> Element Data <====//\r\n        let element:HTMLElement = event.target,\r\n            target:HTMLElement  = document.querySelector(element.getAttribute('href')?.length > 1 ? element.getAttribute('href') : element.getAttribute('data-target') ? element.getAttribute('data-target') : options.target ? options?.target : 'div:first-of-type'),\r\n            start:number  = null,\r\n            into:number   = parseInt(element.getAttribute('data-into')) || options?.into || 0,\r\n            offset:number = parseInt(element.getAttribute('data-offset')) || options?.offset || 0,\r\n            viewPos:number  = Math.round(window.pageYOffset || window.scrollY),\r\n            duration:number = parseInt(element.getAttribute('data-duration')) || options?.duration || 700,\r\n            delay:number = parseInt(element.getAttribute('data-delay')) || options?.delay || 0,\r\n            posTest = target?.getBoundingClientRect(),\r\n            position:number = posTest ? Math.round(posTest?.top) : 0,\r\n            numCheck = (n) => {return 1/(n*0)===1/0},\r\n            //====> Animations Timing Function <====//\r\n            timeFunc:any  = (time, current, target, duration) => {\r\n                //===> Time / Duration / 2 <===//\r\n                time /= duration / 2;\r\n                //===> if Time Ends <===//\r\n                if (time < 1) return target / 2 * time * time + current;\r\n                //===> Otherwise <===//\r\n                else {\r\n                    time--;\r\n                    return -target / 2 * (time * (time - 2) - 1) + current;\r\n                }\r\n            };\r\n\r\n        //====> Offset Calc <====//\r\n        if (into && into > 0) position = position + into;\r\n        if (offset && offset > 0) position = position - offset;\r\n        \r\n        //====> Scroll Animation <====//\r\n        function activator(currentTime) {\r\n            //====> Update Start Time <====//\r\n            if (start === null) start = currentTime;\r\n\r\n            //====> Update Time <====//\r\n            let timeElapsed = currentTime - start,\r\n                scrollAnimate = timeFunc(timeElapsed, viewPos, position, duration);\r\n\r\n            //====> Start Scrolling <====//\r\n            window.scrollTo(0, scrollAnimate);\r\n\r\n            //====> not the End ? get the next frame <====//\r\n            if (timeElapsed < duration) requestAnimationFrame(activator);\r\n\r\n            //====> the End ? Update View Position <====//\r\n            else {\r\n                viewPos = Math.round(window.pageYOffset);\r\n                //===> Hash URL Update <===//\r\n                let loc:any = window;\r\n                loc.location.href = element.getAttribute('href') || element.getAttribute('data-target') || options?.target;\r\n            }\r\n        }\r\n\r\n        //====> Activate Scrolling <====//\r\n        if(delay > 0) {\r\n            //====> Delay Scroll <====//\r\n            setTimeout(() => requestAnimationFrame(activator), delay);\r\n        } else requestAnimationFrame(activator);\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Smoth-Scroll\r\n * ===> 03 - Sticky Elements\r\n * ===> 04 - Scroll-Spy\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Sticky Elements <====*/\r\nPhenixElements.prototype.sticky = function (options?:{\r\n    type?:string,   //===> Fixed, Sticky\r\n    offset?:number, //===> Increase Target Position By [number]\r\n    into?:number,   //===> Decrease Target Position By [number]\r\n    flow?:string,   //===> Flow Direction [X, Y]\r\n    active?:string, //===> Active Class Name\r\n}) {\r\n    \r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach(element => {\r\n        //====> Get Data <====//\r\n        let into   = parseInt(element.getAttribute('data-into')) || options?.into || 0,\r\n            active = options?.active || 'is-sticky',\r\n            offset = parseInt(element.getAttribute('data-offset')) || options?.offset || 0,\r\n            position = element.offsetTop,\r\n            direction = options?.flow?.toLowerCase() || 'y',\r\n            currentScroll = window.scrollY;\r\n\r\n        //====> Y Scroll Mode <====//\r\n        if(!direction || direction === 'y') {\r\n            //====> Offset Calc <====//\r\n            if (into && into > 0) position = position + into;\r\n            else if (offset && offset > 0) position = element.offsetTop - offset;\r\n\r\n            //====> First Position [workout] <====//\r\n            if (window.scrollY > offset) element.classList.add(active); \r\n\r\n            //====> While Window Scrolling <====//\r\n            window.addEventListener('scroll', event => {\r\n                //====> if position matches element Activate <====//\r\n                if (window.scrollY >= position) element.classList.add(active); \r\n\r\n                //====> Otherwise De-Activate <====//\r\n                if (window.scrollY <= position) element.classList.remove(active);\r\n\r\n                //====> While scrolling to the top <====//\r\n                if (window.scrollY < currentScroll) {\r\n                    element.classList.remove('is-sticky-bottom');\r\n                    element.classList.add('is-sticky-top');\r\n                    currentScroll = window.scrollY;\r\n                }\r\n                //====> If Scroll Down Toggle Classes <====//\r\n                else if (window.scrollY > currentScroll) {\r\n                    element.classList.remove('is-sticky-top');\r\n                    element.classList.add('is-sticky-bottom');\r\n                    currentScroll = window.scrollY;\r\n                }\r\n            });\r\n        }\r\n\r\n        //====> X Scroll Mode <====//\r\n        else if (direction && direction === 'x') {\r\n            //====> Offset Calc <====//\r\n            position = element.offsetLeft;\r\n            if (into && into > 0) position = element.offsetLeft + into;\r\n            if (offset && offset > 0)  position = element.offsetLeft - offset;\r\n    \r\n            //====> First Position [workout] <====//\r\n            if (window.scrollX > position) element.classList.add(active); \r\n\r\n            //====> While Window Scrolling <====//\r\n            window.addEventListener('scroll', event => {\r\n                //====> if position matches element Activate <====//\r\n                if (window.scrollX >= position) element.classList.add(active); \r\n\r\n                //====> Otherwise De-Activate <====//\r\n                else if (window.scrollX <= position) element.classList.remove(active);\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Validation\r\n * ===> 03 - Default Browser Api\r\n * ===> 04 - Multiple Validation\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Validation <====*/\r\nPhenixElements.prototype.validation = function (options?:{\r\n    //===> Error Message Default Api\r\n    defaults?:{\r\n        valueMissing?:string,  //===> Error for Missing Values\r\n        typeMismatch?:string,  //===> Error for Type\r\n        tooLong?:string,       //===> Error for too Long Value\r\n        tooShort?:string,      //===> Error for too Short Value\r\n    },\r\n    //====> Different Pattern for Each input <====//\r\n    patterns?:[{\r\n        name?:string,     //===> Input Name Attribute\r\n        pattern?:string,  //===> RegEx Pattern\r\n        message?:string,  //===> Error Message\r\n        position?:string, //===> Message Position [top, bottom]\r\n    }], \r\n}) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let defaults  = options?.defaults,\r\n            patterns  = options?.patterns,\r\n            pageDir   = Phenix(document).direction();\r\n\r\n        //===> Error Handler <===//\r\n        const errorHandler = (input, message, position) => {\r\n            //===> Input Data <====//\r\n            let inputWrapper = input.parentNode,\r\n                hasWrapper = inputWrapper.classList.contains(\".control-icon\"),\r\n                optionControl = inputWrapper.classList.contains(\".option-control\");\r\n\r\n            //===> Set Error <===//\r\n            input.classList.add('error');\r\n            input.classList.remove('success');\r\n\r\n            //===> Check for Error Message <===//\r\n            let hasError = position === 'before' ? Phenix(hasWrapper ? inputWrapper : input).prev('.px-validation') : Phenix(hasWrapper ? inputWrapper : input).next('.px-validation');\r\n\r\n            //====> if already has errors <====//\r\n            if (hasError) {\r\n                //===> get the errors list <===//\r\n                let errors_list = hasError.querySelector('.errors-list');\r\n\r\n                //====> if it has error list <====//\r\n                if(errors_list) {\r\n                    //===> Create a new Message <===//\r\n                    if (errors_list.querySelector('li:last-child').textContent !== message) errors_list.append(`${message}`);\r\n                //====> Create an Error List <====//\r\n                } else if (hasError.textContent !== message) {\r\n                    //===> get previous message <===//\r\n                    let original = hasError.textContent;\r\n\r\n                    //===> Create the List <===//\r\n                    hasError.innerHTML = `<ul class=\"errors-list reset-list\">\r\n                        <li>${original}</li>\r\n                        ${original !== message ? `<li>${message}</li>`: ''}\r\n                    </ul>`;\r\n                }\r\n            }\r\n\r\n            //===> Create Error Message <===//\r\n            else Phenix(hasWrapper ? inputWrapper : input).insert('after', `<div class=\"px-validation color-danger\">${message}</div>`);\r\n        };\r\n\r\n        //====> Reset Method <====//\r\n        const reset_status = (input, position) => {\r\n             //===> Remove Error <===//\r\n             input.setCustomValidity('');\r\n             input.classList.remove('error', 'success');\r\n             //===> Delete Error Message <===//\r\n             if (position === 'after') {\r\n                 Phenix(input).next('.px-validation')?.remove();\r\n             } else {\r\n                 Phenix(input).prev('.px-validation')?.remove();\r\n             }\r\n        };\r\n\r\n        //===> Control Validation <===//\r\n        let valid_control = (input, submit?) => {\r\n            //===> Get Error Message Position <===//\r\n            let position = input.getAttribute('data-pos') || \"after\";\r\n\r\n            //====> Validation Handler <====//\r\n            let validate = () => {\r\n                let hasError = false;\r\n                let message = input.getAttribute('data-message');\r\n                //===> Set Error <===//\r\n                input.classList.add('error');\r\n                input.classList.remove('success');\r\n\r\n                //====> Checkboxes <====//\r\n                if (input.getAttribute('type') === \"checkbox\" && !input.checked) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"Must check to continue\" : \"يجب الموافقة للمتابعة.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Value Check. <====//\r\n                else if (input.validity.valueMissing) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"This field is required!\" : \"هذا الحقل مطلوب يرجي وضع قيمة\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Type/Bad/Pattern Check. <====//\r\n                else if (input.validity.typeMismatch || input.validity.badInput || input.validity.patternMismatch) {\r\n                    hasError = true;\r\n\r\n                    if (!message && input.getAttribute('type') === \"email\") {\r\n                        message = pageDir == 'ltr' ? \"Please enter a valid E-Mail!\" : \"من فضلك ادخل عنوان بريد صحيح.\";\r\n                    } else if (!message) {\r\n                        message = input.getAttribute('data-message') || defaults?.typeMismatch || pageDir == 'ltr' ? \"Please correct your value.\" : \"لقد ادخلت قيمة خاطئه يرجي التصحيح.\";\r\n                    }\r\n\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                } \r\n                \r\n                //====> Email Validation <====//\r\n                else if (input.getAttribute('type') === \"email\" && /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(input.value) === false) {\r\n                    hasError = true;\r\n                    if (!message && input.getAttribute('type') === \"email\") {\r\n                        message = pageDir == 'ltr' ? \"Please enter a valid e-mail!\" : \"من فضلك ادخل عنوان بريد صحيح.\";\r\n                    }\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Too-Long Check. <====//\r\n                else if (input.validity.tooLong || input.validity.rangeOverflow) {\r\n                    hasError = true;\r\n                    if (!message) message = defaults?.tooLong || pageDir == 'ltr' ? \"You have exceeded the maximum number.\" : \"لقد تخطيت الحد الاقصي يرجي تصحيح القيمة.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Too-Short Check. <====//\r\n                else if (input.validity.tooShort || input.validity.rangeUnderflow || input.validity.stepMismatch) {\r\n                    hasError = true;\r\n                    if (!message) message = pageDir == 'ltr' ? \"Your value is less than the minimum.\" : \"لقد ادخلت قيمة اقل من الحد الادني يرجي التصحيح.\";\r\n                    input.setCustomValidity(message);\r\n                    errorHandler(input, message, position);\r\n                }\r\n\r\n                //====> .Success. <====//\r\n                else if (input.validity.valid) {\r\n                    //===> Remove Error <===//\r\n                    input.classList.remove('error');\r\n                    //===> Delete Error Message <===//\r\n                    if (position === 'after') {\r\n                        Phenix(input).next('.px-validation')?.remove();\r\n                    } else {\r\n                        Phenix(input).prev('.px-validation')?.remove();\r\n                    }\r\n                }\r\n\r\n                //===> Do not Submit <===//\r\n                if (submit && hasError) submit.preventDefault();\r\n                return hasError;\r\n            }\r\n\r\n            //====> Reset When New Value is Set <====//\r\n            if (input.tagName !== 'SELECT') input.addEventListener(\"input\", event => {\r\n                reset_status(input, position);\r\n                input.checkValidity();\r\n                validate();\r\n            });\r\n\r\n            else if (input.tagName === 'SELECT') input.addEventListener(\"change\", event => {\r\n                reset_status(input, position);\r\n                input.checkValidity();\r\n                validate();\r\n            });\r\n\r\n            //====> if has invalid value Re-Validate <====//\r\n            input.addEventListener(\"invalid\", invalid => validate());\r\n\r\n            //====> Init <====//\r\n            validate();\r\n        }\r\n\r\n        //===> Active on Form Submit <===//\r\n        if(element.tagName == 'FORM') {\r\n            element.addEventListener('submit', isSubmitting => {\r\n                element.querySelectorAll('input:not([type=\"checkbox\"]):not([type=\"radio\"]):not([type=\"button\"]), textarea, select, .required').forEach(item => {\r\n                    valid_control(item, isSubmitting);\r\n                });\r\n            });\r\n        }\r\n\r\n        //===> Active for Controls <===//\r\n        else {\r\n            valid_control(element);\r\n        }\r\n\r\n        //====> Multiple Validation <====//\r\n        if (patterns && patterns.length > 0) patterns.forEach(pattern => {\r\n            //====> Get the Pattern Data <====//\r\n            let inputs    = element.tagName == 'FORM' ? element.querySelectorAll(`[name=\"${pattern.name}\"]`) : [element],\r\n                regEx:any = pattern.pattern,\r\n                message   = pattern.message,\r\n                position  = pattern.position || 'after';\r\n\r\n            //====> For Each Input <====//\r\n            inputs.forEach(input => {\r\n                //====> Get input Value <====//\r\n                let validate = () => {\r\n                    //====> Check the Pattern <====//\r\n                    if (regEx.test(input.value)) {\r\n                        //===> Set Success <===//\r\n                        input.classList.add('success');\r\n                        input.classList.remove('error');\r\n                        //===> Delete Error Message <===//\r\n                        if (position === 'after') {\r\n                            Phenix(input).next('.px-validation')?.remove();\r\n                        } else {\r\n                            Phenix(input).prev('.px-validation')?.remove();\r\n                        }\r\n                    } else {\r\n                        errorHandler(input, message, position);\r\n                    }\r\n                };\r\n                //====> Check While input <====//\r\n                if (input.tagName !== 'SELECT') input.addEventListener('input', validate);\r\n                else if (input.tagName === 'SELECT') input.addEventListener('change', validate);\r\n            });\r\n        });\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**====> Reference By Comment <====\r\n * ===> 01 - ViewPort Detector\r\n * ===> 02 - Get Viewport Dimensions\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> ViewPort Detector <====*/\r\nPhenixElements.prototype.inView = function (options?:{\r\n    flow?:string,    //====> From Top to Bottom [start] Reverse [end] Or Any of [both]\r\n    into?:number,    //====> Increase Target Position By [number]\r\n    offset?:number,  //====> Decrease Target Position By [number]\r\n    callback?:Function, //====> Callback when element is in view\r\n    feature?:string, //====> Feature name using this observer (scrollspy, lazyload, etc)\r\n    persistent?:boolean, //====> Keep observing even after callback is triggered\r\n}, flowOn?:string) {\r\n    //===> Check if the Element Available ===//\r\n    if (!this[0]) return false;\r\n\r\n    //====> Define Data <====//\r\n    const element = this[0];\r\n    const flow = flowOn || options?.flow;\r\n    const feature = options?.feature || 'default';\r\n    const persistent = options?.persistent || false;\r\n\r\n    //====> Initialize observer storage if not exists <====//\r\n    if (!element._phenixObservers) {\r\n        element._phenixObservers = {};\r\n    }\r\n\r\n    //====> Clean up existing observer for this feature <====//\r\n    if (element._phenixObservers[feature]) {\r\n        element._phenixObservers[feature].disconnect();\r\n        delete element._phenixObservers[feature];\r\n    }\r\n\r\n    //====> Configure observer options <====//\r\n    const observerOptions = { \r\n        threshold: 0.1,\r\n        rootMargin: options?.offset ? `${options.offset}px 0px 0px 0px` : '0px'\r\n    };\r\n\r\n    //====> Create observer <====//\r\n    const observer = new IntersectionObserver(entries => {\r\n        //====> Get Entry <====//\r\n        const entry = entries[0];\r\n        \r\n        //====> Check if the Element is Visible <====//\r\n        let isVisible = entry.isIntersecting;\r\n\r\n        //====> Calculate Start Flow <====//\r\n        if (flow === 'start') {\r\n            isVisible = entry.boundingClientRect.top < window.innerHeight;\r\n        }\r\n        //====> Calculate End Flow <====//\r\n        else if (flow === 'end') {\r\n            isVisible = entry.boundingClientRect.bottom > 0;\r\n        }\r\n        //====> Calculate Inset Flow <====//\r\n        else if (options?.into && isVisible) {\r\n            isVisible = entry.boundingClientRect.bottom > options.into;\r\n        }\r\n        \r\n        //====> Execute callback if visible <====//\r\n        if (isVisible && options?.callback) {\r\n            options.callback(element);\r\n            \r\n            //===> If not persistent, unobserve <====//\r\n            if (!persistent) {\r\n                observer.unobserve(element);\r\n                delete element._phenixObservers[feature];\r\n            }\r\n        }\r\n    }, observerOptions);\r\n\r\n    //====> Store and start observer <====//\r\n    element._phenixObservers[feature] = observer;\r\n    observer.observe(element);\r\n\r\n    //====> Allow method chaining <====//\r\n    return this;\r\n}\r\n\r\n//=====> Get Viewport Dimensions <=====//\r\nPhenixElements.prototype.viewport = function (property:string) {\r\n    //====> Get Element Data <====//\r\n    let element = document.documentElement,\r\n        width   = Math.max(element.clientWidth || 0, window.innerWidth || 0),\r\n        height  = Math.max(element.clientHeight || 0, window.innerHeight || 0);\r\n\r\n    //====> Get Width <====//\r\n    if (property === 'width') return width;\r\n    //====> Get Height <====//\r\n    else if (property === 'height') return height;\r\n    //====> Get Both <====//\r\n    else return {width: width, height: height}\r\n}","/*\r\n * Phenix Design System\r\n * Version  : 1.3.0\r\n * License  : GPL-3.0\r\n * Copyright: 2025 Abdullah.Ramadan\r\n*/\r\n\r\n/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - D.O.M Ready\r\n * ===> 03 - Add Class\r\n * ===> 04 - Remove Class\r\n * ===> 05 - Toggle Class\r\n * ===> 06 - Get Ancestor [Parent, Parents Until]\r\n * ===> 07 - Get Siblings\r\n * ===> 08 - Get Next Siblings\r\n * ===> 09 - Get Previous Siblings\r\n * ===> 10 - Set CSS Styls\r\n * ===> 11 - Set Multiple Attributes\r\n * ===> 12 - Insert Elements\r\n * ===> 13 - Event Handler\r\n * ===> 14 - Resources Lazy-Loader\r\n * ===> 15 - Media Query Method\r\n * ===> 16 - Dynamic Position\r\n * ===> 17 - CSS/JS Importer\r\n * ===> 18 - Convert Pixels to REM\r\n * ===> 19 - Copy to Clipboard\r\n * ===> 20 - Audio Trigger\r\n * ===> 21 - Convert String to Boolean\r\n * ===> 22 - Define Information\r\n * ===> 23 - Define UI Effects\r\n * ===> 24 - Define Other Features\r\n * ===> 25 - Include Features\r\n * ===> 26 - Integration\r\n * ===> 27 - Phenix Selecting Method\r\n * ===> 28 - Your Custom Script [JS]\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nexport class PhenixElements extends Array<HTMLElement | Record <string, any>> {\r\n    /*====> D.O.M Ready <====*/\r\n    ready(callback: () => void): this {\r\n         //====> Check if its Ready <====//\r\n        if (document.readyState === 'complete') queueMicrotask(callback);\r\n        //====> Wait for It to be Ready <====//\r\n        else document.addEventListener('DOMContentLoaded', () => queueMicrotask(callback),{ once: true });\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Add Class <====*/\r\n    addClass(className: any) {\r\n        //====> Split classNames string into an array of class names <====//\r\n        const classNamesArray = className.split(' ');\r\n        const classNamesLength = classNamesArray.length;\r\n\r\n        //====> Add Class for Each Element <====//\r\n        for (let i = 0; i < this.length; i++) {\r\n            const element = this[i] as HTMLElement;\r\n            const classList = element.classList;\r\n\r\n            for (let j = 0; j < classNamesLength; j++) {\r\n                classList.add(classNamesArray[j]);\r\n            }\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Remove Class <====*/\r\n    removeClass(className: string) {\r\n        //====> Split classNames string into an array of class names and convert it to a Set <====//\r\n        const classNamesSet = new Set(className.split(' '));\r\n\r\n        //====> Remove Class for Each Element <====//\r\n        this.forEach((element: HTMLElement) => {\r\n            element.classList.remove(...classNamesSet);\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Toggle Class <====*/\r\n    toggleClass(className: string) {\r\n        //====> Split classNames string into an array of class names <====//\r\n        const classNamesArray = className.split(' ');\r\n\r\n        //====> Loop through each element only once <====//\r\n        for (let i = 0; i < this.length; i++) {\r\n            const element = this[i] as HTMLElement;\r\n            const classList = element.classList;\r\n\r\n            //====> Check if element already has the class <====//\r\n            const hasClass = classNamesArray.some(className => classList.contains(className));\r\n\r\n            //====> Toggle the class based on its presence <====//\r\n            classNamesArray.forEach(className => {\r\n                if (hasClass) {\r\n                    classList.remove(className);\r\n                } else {\r\n                    classList.add(className);\r\n                }\r\n            });\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Get Ancestor <====*/\r\n    ancestor(target?) {\r\n        //====> Define Ancestor Arrays <====//\r\n        let ancestors = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Define The First Parent <====//\r\n            let parent:any = element.parentNode;\r\n\r\n            //====> if has a Target <===//\r\n            if (target && !element.matches('html')) {\r\n                //====> Loop Over The Ancestors <====//\r\n                while (parent && !parent.matches('html')) {\r\n                    //====> When the Target has been Found Return it <====//\r\n                    if (parent.matches(target)) { ancestors.push(parent); break; }\r\n                    //====> Otherwise get the Next Ancestor <====//\r\n                    else parent = parent.parentNode;\r\n                }\r\n            }\r\n\r\n            //====> Otherwise Return the Parent <====//\r\n            else ancestors.push(parent);\r\n        });\r\n\r\n        //====> Return Ancestors <====//\r\n        if (ancestors.length > 1) return ancestors;\r\n        else if (ancestors.length === 1) return ancestors[0];\r\n    }\r\n\r\n    /*====> Get Siblings <====*/\r\n    siblings(target?) {\r\n        //====> Siblings Define <====//\r\n        let siblings = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Get This Element Parent Childs <====//\r\n            let childs = element.parentNode.children;\r\n\r\n            //====> if has No target [Return All Sibling] <====//\r\n            if (!target) Array.from(childs).forEach((child:HTMLElement) => child !== element ? siblings.push(child) : null);\r\n\r\n            //====> Otherwise Return the matched targets <====//\r\n            else Array.from(childs).forEach((child:HTMLElement) => child !== element && child.matches(target) ? siblings.push(child) : null);\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        return siblings.length > 0 ? siblings : null;\r\n    }\r\n\r\n    /*====> Get Next Siblings <====*/\r\n    next(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Next Unit <====//\r\n            let nextUnit = element.nextElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Next Sibling] <====//\r\n            if (!target) siblings.push(nextUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            else {\r\n                //====> if All Next is the Target <====//\r\n                if (all_target) {\r\n                    //====> Loop Through All Next Siblings <====//\r\n                    while (nextUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && nextUnit.matches(all_target)) siblings.push(nextUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        if (!all_target) siblings.push(nextUnit);\r\n    \r\n                        //====> get the next one <====//\r\n                        nextUnit = nextUnit.nextElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Next Matched Target [Next Until] <====//\r\n                else {\r\n                    //====> While there is a Next Unit <====//\r\n                    while (nextUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (nextUnit.matches(target)) { siblings.push(nextUnit); break; } \r\n                        \r\n                        //====> Otherwise Get the Next Unit <====//\r\n                        else nextUnit = nextUnit.nextElementSibling;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        if (siblings.length === 1 && !all_target) return siblings[0];\r\n        else if (siblings.length > 0 || all_target) return siblings;\r\n    }\r\n\r\n    /*====> Get Previous Siblings <====*/\r\n    prev(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n        \r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Previous Unit <====//\r\n            let prevUnit = element.previousElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Previous Sibling] <====//\r\n            if (!target) siblings.push(prevUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            if (target) {\r\n                //====> if All Previous is the Target <====//\r\n                if (all_target) {\r\n                    //====> Loop Through All Previous Siblings <====//\r\n                    while (prevUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && prevUnit.matches(target)) siblings.push(prevUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        else if (!all_target) siblings.push(prevUnit);\r\n    \r\n                        //====> get the previous one <====//\r\n                        prevUnit = prevUnit.previousElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Previous Matched Target [Previous Until] <====//\r\n                else {\r\n                    //====> While there is a Previous Unit <====//\r\n                    while (prevUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (prevUnit.matches(target)) {\r\n                            siblings.push(prevUnit);\r\n                            break;\r\n                        } else {\r\n                            prevUnit = prevUnit.previousElementSibling;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        \r\n        //====> Return Siblings <====//\r\n        if (siblings.length === 1 && !all_target) return siblings[0];\r\n        else if (siblings.length > 0 || all_target) return siblings;\r\n    }\r\n\r\n    /*====> Get Children <====*/\r\n    child(target?:string) {\r\n        //====> Children Define <====//\r\n        let childs = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> All Children <====//\r\n            let all_childs = element.children;\r\n    \r\n            //====> if No target [Return All Direct Children] <====//\r\n            if (!target) childs = all_childs;\r\n    \r\n            //====> if Target is Matched Return it <====//\r\n            if (target) all_childs.forEach(element => element.matches(target) ? childs.push(element) : '');\r\n        });\r\n\r\n        //====> Return Children <====//\r\n        if (childs.length > 1) return childs;\r\n        else if (childs.length === 1) return childs[0];\r\n    }\r\n\r\n    /*====> Set CSS Styls <====*/\r\n    css(style:object, clearInline?) {\r\n        //====> Check for the Elements <====//\r\n        if (this.length === 0) return;\r\n\r\n        //====> if inline-style Clear is Activated <====//\r\n        if (clearInline) this.forEach((element:HTMLElement) => (element.removeAttribute('style')));\r\n\r\n        //====> for Each CSS Property <====//\r\n        for (const [key, value] of Object.entries(style)) {\r\n            //====> Style Elements <====//\r\n            this.forEach((element:HTMLElement) => {\r\n                element.style.setProperty(key, value);\r\n            });\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this\r\n    }\r\n\r\n    /*====> Set Multiple Attributes <====*/\r\n    setAttributes(attributes:{}) {\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Loop Through the Attributes <====//\r\n            Object.keys(attributes).forEach(attribute => {\r\n                //====> Set Attributes One By One <====//\r\n                element.setAttribute(attribute, attributes[attribute]);\r\n            });\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Insert Elements <====*/\r\n    insert(position?:string, elementsPackage?:any) {\r\n        //====> Define the Package <====//\r\n        let new_package = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //===> String Element Converter to [Node] <===//\r\n            if (typeof(elementsPackage) === 'string') elementsPackage = document.createRange().createContextualFragment(elementsPackage);\r\n\r\n            //====> Insert After The Element <====//\r\n            if (position === 'after') {\r\n                element.parentNode.insertBefore(elementsPackage, element.nextSibling);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.nextElementSibling);\r\n            }\r\n\r\n            //====> Insert Before The Element <====//\r\n            else if (position === 'before') {\r\n                element.parentNode.insertBefore(elementsPackage, element);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.previousElementSibling);\r\n            }\r\n\r\n            //====> Insert Inside The Element at First <====//\r\n            else if (position == 'prepend') {\r\n                element.prepend(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.firstChild);\r\n            }\r\n\r\n            //====> Insert Inside The Element at Last <====//\r\n            else if (position == 'append') {\r\n                element.appendChild(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.lastChild);\r\n            }\r\n        });\r\n\r\n        //====> Return the New Elements Package <====//\r\n        if (new_package.length > 1) return new_package;\r\n        else if (new_package.length === 1) return new_package[0];\r\n    }\r\n\r\n    /*====> Event Handler <====*/\r\n    on(event, callback, live?, timer?) {\r\n        //====> Attache a Normal Event <====//\r\n        if (!live) {\r\n            //====> Event for Each Element <====//\r\n            this.forEach((element:HTMLElement) => {\r\n                element.addEventListener(event, callback);\r\n            });\r\n\r\n            //====> Return Phenix Elements <====//\r\n            return this;\r\n\r\n        //====> Live Event <====//\r\n        } else if (live && this.length > 0) {\r\n            //====> Create Time Loop & Attach Event <====//\r\n            let timerLoop = setInterval(() => this.forEach((element:HTMLElement) => element.addEventListener(event, callback)), timer | 1000);\r\n\r\n            //====> Return the Elements & Time Loop <====//\r\n            return {\r\n                elements: this,\r\n                timeLoop: timerLoop\r\n            };\r\n        }\r\n    }\r\n\r\n    /*====> Resources Lazy-Loader <====*/\r\n    lazyLoading() {\r\n        //====> Loop Through Media Elements <====//\r\n        Phenix('img, video, audio, iframe').forEach((element:HTMLElement) => {\r\n            //====> Set Loading Mode <====//\r\n            if (!element.matches('.px-loaded')) {\r\n                //====> Get Data <====//\r\n                let playable = element.matches('video') || element.matches('audio') || element.matches('iframe'),\r\n                    preloaded = element.getAttribute('preload') || element.getAttribute('loading');\r\n\r\n                //===> Mark as Loading <===//\r\n                if (element.matches('img') || element.matches('iframe')) element.classList.add('px-loading');\r\n\r\n                //===> Native Loading Attribute <===//\r\n                if (playable && !preloaded) element.setAttribute('preload', 'none');\r\n                else if(element.matches('img')) element.setAttribute('loading', 'lazy');\r\n\r\n                //====> Watch Element <====//\r\n                Phenix(element).inView({\r\n                    offset: 100,\r\n                    callback: () => {\r\n                        if (element.matches('img') || element.matches('iframe')) {\r\n                            element.classList.remove('px-loading');\r\n                            element.classList.add('px-loaded');\r\n                        }\r\n                    },\r\n                    feature: 'lazyloading'\r\n                });\r\n            }\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Media Query <====*/\r\n    mediaQuery(breakpoint:any, fn_callback?:any, mobile_first?:boolean) {\r\n        /*==== Breakpoints Points ====*/\r\n        let xsmall_end = 499, /*===> Max xSmall breakpoint Width */\r\n            small_start= 500, /*===> Min Small breakpoint Width */\r\n            small_end = 774,  /*===> Max Small breakpoint Width */\r\n            /*==== Medium Points ====*/\r\n            medium_start = 775,  /*===> Min Medium breakpoint Width */\r\n            medium_end = 1204,   /*===> Max Medium breakpoint Width */\r\n            /*==== Large Points ====*/\r\n            large_start = 1205, /*===> Min Large breakpoint Width */\r\n            large_end = 1404,   /*===> Max Large breakpoint Width */\r\n            /*==== xLarge Points ====*/\r\n            xlarge_start = 1405, /*===> Min xLarge breakpoint Width */\r\n            xlarge_end = 2565;   /*===> Max xLarge breakpoint Width */\r\n\r\n        /*==== Activator ====*/\r\n        const createQuery = () => {\r\n            //==== Get Current Screen Width ====//\r\n            let current_vw = Phenix(document).viewport('width');\r\n\r\n            /*==== Extra Small ====*/\r\n            if (mobile_first && breakpoint == 'xsmall') {\r\n                if (current_vw >= 0) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'xsmall') {\r\n                if (current_vw <= xsmall_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Small ====*/\r\n            if (mobile_first && breakpoint == 'small')  {\r\n                if (current_vw >= small_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'small')  {\r\n                if (current_vw <= small_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Medium ====*/\r\n            if (mobile_first && breakpoint == 'medium') {\r\n                if (current_vw >= medium_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'medium') {\r\n                if (current_vw <= medium_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Large ====*/\r\n            if (mobile_first && breakpoint == 'large')  {\r\n                if (current_vw >= large_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'large')  {\r\n                if (current_vw <= large_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Extra Large ====*/\r\n            if (mobile_first && breakpoint == 'xlarge') {\r\n                if (current_vw >= xlarge_start) {\r\n                    fn_callback();\r\n                }\r\n            } else if (breakpoint == 'xlarge')  {\r\n                if (current_vw <= xlarge_end) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n\r\n            /*==== Custom Media ====*/\r\n            if (mobile_first && typeof(breakpoint) == 'number')   {\r\n                if (current_vw >= breakpoint) {\r\n                    fn_callback();\r\n                }\r\n            } else if (typeof(breakpoint) == 'number')  {\r\n                if (current_vw <= breakpoint) {\r\n                    fn_callback();\r\n                }\r\n            }\r\n        };\r\n\r\n        //===> Active <===//\r\n        createQuery();\r\n\r\n        //===> Live Check <===//\r\n        window.addEventListener('resize', resizing => {\r\n            createQuery();\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Dynamic Position <====*/\r\n    dynamicPosition = () => {\r\n        //====> Event for Each Element <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //=== Check for Visibility ===//\r\n            let target_element:any = Phenix(element),\r\n                panel_size = Math.round(target_element[0].clientHeight),\r\n                stickyElement = document.querySelector('[data-sticky=\"absolute\"]')?.getBoundingClientRect().height;\r\n            \r\n            if (panel_size == 0) return;\r\n    \r\n            //=== get viewport postion ===//\r\n            let top = Math.round(target_element[0].getBoundingClientRect().top),\r\n                stickySize = Math.round(stickyElement) || 0,\r\n                offsetTop = Math.round(top+stickySize-(stickySize/4)),\r\n                offsetBottom = Phenix(document).viewport().height - (panel_size + offsetTop);\r\n    \r\n            //====> to Top <====//\r\n            if (offsetBottom < 0) {\r\n                target_element.addClass('pos-before-y').removeClass('pos-after-y');\r\n            }\r\n    \r\n            //====> to Bottom <====//\r\n            else {\r\n                target_element.addClass('pos-after-y').removeClass('pos-before-y');\r\n            }\r\n        });\r\n\r\n        return this;\r\n    };\r\n\r\n    /*====> CSS/JS Importer <====*/\r\n    import = (id:string, tag:string, source:string, callback:any, options?:boolean|{\r\n        integrated?: boolean;   // Whether to prepend the library path to the source\r\n        module?: boolean;       // Whether to load as ES6 module\r\n        importMap?: Record<string, string>; // Import map for ES6 modules\r\n    }) => {\r\n        //===> Get Correct Tagname <===//\r\n        if (tag === \"css\") tag = \"link\";\r\n        else if (tag === \"js\") tag = \"script\";\r\n\r\n        //===> Handle Legacy Support for Options <===//\r\n        let isIntegrated = false;\r\n        let isModule = false;\r\n        let moduleMap: Record<string, string> | undefined;\r\n\r\n        if (typeof options === 'boolean') {\r\n            // Legacy format: options is isIntegrated boolean\r\n            isIntegrated = options;\r\n        } else if (options && typeof options === 'object') {\r\n            // New format: options is an object\r\n            isIntegrated = options.integrated ?? false;\r\n            isModule = options.module ?? false;\r\n            moduleMap = options.importMap;\r\n        }\r\n\r\n        //===> Define Element and URL Path <===//\r\n        let element = document.querySelector(`#${id}-phenix-${tag === \"link\" ? \"css\" : tag}`),\r\n            libPath = Phenix(document).getURL().phenixJS.replace('js/', 'lib/'),\r\n            trueUrl = `${isIntegrated ? libPath : \"\"}${source}`;\r\n\r\n        //===> Create a new Element if is not Loaded yet <===//\r\n        if (!element) {\r\n            //===> Create Element <===//\r\n            element = document.createElement(tag);\r\n    \r\n            //===> Set ID <===//\r\n            element.setAttribute('id', `${id}-phenix-${tag === \"link\" ? \"css\" : tag}`);\r\n    \r\n            //===> Load JS Script <===//\r\n            if (tag === \"script\" || tag === \"js\") {\r\n                element.setAttribute(\"src\", trueUrl);\r\n                \r\n                //===> If it's an ES6 Module <===//\r\n                if (isModule) {\r\n                    element.setAttribute(\"type\", \"module\");\r\n                } else {\r\n                    element.setAttribute(\"async\", \"\");\r\n                }\r\n                \r\n                //===> Append Element <===//\r\n                document.body.appendChild(element);\r\n            }\r\n\r\n            //===> Load CSS File <===//\r\n            else if (tag === \"link\" || tag === \"css\") {\r\n                element.setAttribute(\"href\", trueUrl);\r\n                element.setAttribute(\"rel\", \"stylesheet\");\r\n                //===> Append Element <===//\r\n                document.head.appendChild(element);\r\n            };\r\n        }\r\n\r\n        //====> When Loaded Run Callback <====//\r\n        element.addEventListener(\"load\", callback);\r\n\r\n        //====> When Error Re-Load <====//\r\n        element.addEventListener(\"error\", event => element.setAttribute(\"src\", trueUrl));\r\n    };\r\n\r\n    /*====> Convert Pixels to REM <====*/\r\n    toREM(size: number, base: number = 16): string {\r\n        return `${(parseFloat(size.toString()) / base)}rem`;\r\n    };\r\n\r\n    /*====> Copy to Clipboard <====*/\r\n    async copyText (text: string) {\r\n        //===> Copy to Clipboard Method <===//\r\n        const type = \"text/plain\";\r\n        const blob = new Blob([text], { type });\r\n        const data = [new ClipboardItem({ [type]: blob })];\r\n        await navigator.clipboard.write(data);\r\n    };\r\n\r\n    /*====> Audio Trigger <=====*/\r\n    audioTrigger = (trigger) => {\r\n        //===> Check if the Trigger is HTML Element <===//\r\n        if (trigger instanceof HTMLElement) {\r\n            //===> Define Objects <===//\r\n            let audio_player:any = document.querySelector('#px-audio-player');\r\n    \r\n            //===> Create Audio Player <===//\r\n            if (!audio_player) {\r\n                //===> Create Player <===//\r\n                audio_player = document.createElement(\"audio\");\r\n                //=== Set Player ID ===//\r\n                audio_player.setAttribute('id', 'px-audio-player');\r\n                //=== Insert Player to the Document ===//\r\n                document.body.appendChild(audio_player);\r\n            }\r\n    \r\n            //====> Audio Buttons <====//\r\n            Phenix(trigger).on('click', event => {\r\n                event.preventDefault();\r\n                //=== Get Data ===//\r\n                let button = event.target,\r\n                    audio_file = button.getAttribute('href') || button.getAttribute('data-audio');\r\n    \r\n                //=== Check if the Audio is Already Playing ===//\r\n                if (audio_player.getAttribute('src') === audio_file && !audio_player.paused) {\r\n                    //=== Pause the Audio ===//\r\n                    audio_player.pause();\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    if(button.classList.contains('fa-pause')) {\r\n                        button.classList.remove('fa-pause');\r\n                        button.classList.add('fa-play');\r\n                    }\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    else if(button.classList.contains('fa-music-note')) {\r\n                        button.classList.remove('fa-music-note');\r\n                        button.classList.add('fa-music-note-slash');\r\n                    }\r\n                } else {\r\n                    //=== Set Audio and Play ===//\r\n                    audio_player.setAttribute('src', audio_file);\r\n                    audio_player.play();\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    if (button.classList.contains('fa-play')) {\r\n                        button.classList.add('fa-pause');\r\n                        button.classList.remove('fa-play');\r\n                    }\r\n    \r\n                    //=== Switch Play Status icon ===//\r\n                    else if(button.classList.contains('fa-music-note-slash')) {\r\n                        button.classList.add('fa-music-note');\r\n                        button.classList.remove('fa-music-note-slash');\r\n                    }\r\n    \r\n                    //=== When Audio is Finished Switch the Status icon ===//\r\n                    audio_player.addEventListener('ended', (isEnded) => {\r\n                        //=== Switch Play Status icon ===//\r\n                        if (button.classList.contains('fa-play')) {\r\n                            button.classList.add('fa-pause');\r\n                            button.classList.remove('fa-play');\r\n                        }\r\n    \r\n                        //=== Switch Play Status icon ===//\r\n                        else if(button.classList.contains('fa-music-note-slash')) {\r\n                            button.classList.add('fa-music-note');\r\n                            button.classList.remove('fa-music-note-slash');\r\n                        }\r\n                    });\r\n                }\r\n            }, true);\r\n        };\r\n    };\r\n\r\n    /*====> Convert String to Boolean <====*/\r\n    toBoolean = (value: string | boolean | undefined): boolean | string => {\r\n        //===> Return true if the value is true, true string, or 1 and false if the value is false, false string, or 0 any other string return it self <===//\r\n        return value === true || value === 'true' || value === '1' ? true : value === false || value === 'false' || value === '0' ? false : typeof value === 'string' ? value : false;\r\n    };\r\n\r\n    /*====> Define Information <====*/\r\n    height; getCSS; direction; getURL;\r\n    inView; viewport; copyrights;\r\n\r\n    /*====> Define UI Effects <====*/\r\n    slideUp; slideDown; slideToggle;\r\n    fadeOut; fadeIn; fadeToggle;\r\n\r\n    /*====> Define Other Features <====*/\r\n    counter; multimedia; timer;\r\n    sticky; smothScroll; scrollSpy;\r\n    design; themes; animations;\r\n\r\n    /*====> Define Components <====*/\r\n    dropdown; tabs; collapse; connect;\r\n    popup; lightbox; menu; datatable;\r\n    validation; uploader; progress; rebuildSelect\r\n    select; repeater; rating; seo; loader;\r\n    slider; utilities; notifications; init;\r\n\r\n    /*====> WooCommerce Methods <====*/\r\n    pds_add_to_cart; pds_remove_from_cart; pds_toggle_wishlist;\r\n}\r\n\r\n/*====> Phenix Selecting Method <====*/\r\nconst Phenix = (selector?:any) => {\r\n    /*====> Get Elements from Selector <====*/\r\n    if (typeof(selector) === 'string' && selector.length > 0) {\r\n        //====> Select as Phenix Elements <====//\r\n        const selected = document.querySelectorAll(selector);\r\n        //====> Create Elements Query <====//\r\n        return new PhenixElements(...selected);\r\n    }\r\n\r\n    /*====> if its Elements Passed it <====*/\r\n    else if (selector !== null && typeof(selector) !== 'undefined' || 'number') {\r\n        //====> if Not Array Make it one <====//\r\n        const elements = Array.isArray(selector) ? selector : [selector];\r\n        //====> Filter Undefined/Nulled Items <====//\r\n        const filteredElements = elements.filter((element) => element !== null && element !== undefined);\r\n        //====> and Create Elements Query <====//\r\n        return new PhenixElements(...filteredElements);\r\n    }\r\n}\r\n\r\n//====> Export Phenix <====//\r\nexport default Phenix;\r\n\r\n/*====> Import Methods <====*/\r\nimport './features/get-info';   //==> Get Informations about elements\r\nimport './features/viewport';   //==> Viewport Detection\r\nimport './features/counter';    //==> Animated Counter\r\nimport './features/effects';    //==> UI Effects\r\nimport './features/animations'; //==> View-port Animations\r\nimport './features/validation'; //==> Form Validation\r\nimport './features/collapse';   //==> Collapse Toggle\r\nimport './features/notifications'; //==> Notifications\r\n\r\n/*====> Import Scroll Methods <====*/\r\nimport './features/smooth-scroll';   //==> Smooth Scroll\r\nimport './features/sticky-elements'; //==> Sticky Elements\r\nimport './features/scroll-spy';      //==> Scroll Spy\r\n\r\n/*====> Import Components <====*/\r\nimport './components/menu';      //==> Menus\r\nimport './components/media';     //==> Media Setter\r\nimport './components/timer';     //==> Time Counter\r\nimport './components/dropdown';  //==> Dropdown\r\nimport './components/tabs';      //==> Tabs System\r\nimport './components/popup';     //==> Popups\r\nimport './components/progress';  //==> Progress\r\nimport './components/select';    //==> Advanced Select\r\nimport './components/uploader';  //==> File Uploader\r\nimport './components/rating'; //==> Rating\r\n\r\n/*====> Integration <====*/\r\nimport './integration/slider';    //==> Splide.js Slider\r\nimport './integration/utilities'; //==> Phenix Utilities\r\n\r\n/*====> Integration WordPress <====*/\r\nimport './integration/blocks';      //==> Front-end Blocks Scripts\r\nimport './integration/wordpress';   //==> Wordpress Integration\r\nimport './integration/woocommerce'; //==> WooCommerce Integration\r\n\r\n/*====> Custom Script <====*/\r\nimport './custom-scripts';\r\n\r\n//====> Export Global Phenix <====//\r\nmodule.exports = Phenix;\r\n","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\ndeclare var noUiSlider: any;\r\n\r\n/*====> Phenix Blocks Script <====*/\r\nPhenixElements.prototype.init = function (scripts?:[]) {\r\n    //===> Activate Lazyloading <===//\r\n    Phenix(document).lazyLoading();\r\n\r\n    //===> Smooth Scroll <====//\r\n    Phenix('a.smooth-scroll, .smooth-scroll a[href*=\"#\"]').forEach((link:HTMLElement) => {\r\n        // let hasFunction = Phenix(link).ancestor('.px-tabs') || Phenix(link).ancestor('.scrollspy-menu');\r\n        // if (!hasFunction) \r\n        Phenix(link).smothScroll();\r\n    });\r\n\r\n    Phenix(\".go-up-btn\").on(\"click\", isClicked => window.scrollTo({top: 0,left: 0,behavior: \"smooth\",}));\r\n\r\n    /*====> Add Data Options to un-reachable Elements <====*/\r\n    Phenix(`[data-add-options]`).forEach((element:HTMLElement) => {\r\n        //===> Get Data Options <====//\r\n        let dataOptions = JSON.parse(element.getAttribute('data-add-options'));\r\n        //===> Add Data Options the Elements <====//\r\n        Object.entries(dataOptions).forEach(([selector, options]) => {\r\n            //===> Get Selector <====//\r\n            element.querySelectorAll(`.${selector}`).forEach((item:HTMLElement) => {\r\n                //===> Add Data Options to Elements <====//\r\n                Object.entries(options).forEach(([attribute, value]) => item.setAttribute(`${attribute}`, value));\r\n            });\r\n        });\r\n    });\r\n\r\n    //===> Move Elements to Sibling Grid <===//\r\n    Phenix('.move-to-grid').forEach(element => {\r\n        let grid_element = Phenix(element).siblings('.row')[0];\r\n        Phenix(grid_element).insert(\"append\", element);\r\n    });\r\n\r\n    //===> Move Elements to Sibling Grid <===//\r\n    Phenix('.move-to-grid-before').forEach(element => {\r\n        let grid_element = Phenix(element).siblings('.row')[0];\r\n        Phenix(grid_element).insert(\"prepend\", element);\r\n    });\r\n\r\n    //===> Move Header <===//\r\n    const main_header = document.querySelector('.main-header'),\r\n          header_holder:HTMLElement = document.querySelector('#header-holder');\r\n\r\n    //====> Header Holders <====//\r\n    if (main_header && header_holder) {\r\n        //===> Wrap Header <===//\r\n        Phenix(header_holder).insert('prepend', '<div class=\"header-sticky-wrapper\"></div>');\r\n        //===> Get Sticky Wrapper <===//\r\n        const sticky_wrapper:HTMLElement = header_holder.querySelector('.header-sticky-wrapper');\r\n        //===> Prepend Header <===//\r\n        sticky_wrapper.prepend(main_header);\r\n        //===> add Dynamic Holder Height <===//\r\n        sticky_wrapper.style.height = `${Phenix(sticky_wrapper).height()}px`;\r\n    }\r\n\r\n    //===> Audio Player [Testimonials] <===//\r\n    if (document.querySelector('[data-audio]') || document.querySelector('.audio-trigger')) {\r\n        //====> Audio Buttons <====//\r\n        Phenix(document).audioTrigger('button[data-audio], .audio-trigger');\r\n    }\r\n\r\n    //===> Sticky Elements <====//\r\n    Phenix(\"[data-sticky], .main-header.position-st\").sticky({into: 0});\r\n\r\n    //====> Sliders <====//\r\n    Phenix('.px-slider:not([data-is-navigation])').slider();\r\n\r\n    //====> Tabs <====//\r\n    Phenix('.px-tabs').tabs();\r\n    \r\n    //====> Popups <====//\r\n    Phenix('.px-modal').popup();\r\n\r\n    //====> Activate Select <====//\r\n    Phenix('select.px-select').forEach((select:HTMLElement) => {\r\n        if (!select.querySelector('option')) Phenix(select).insert('prepend', `<option value=\"\" selected>${select.getAttribute('data-placeholder') || 'Default'}</option>`);\r\n        Phenix(select).select();\r\n    });\r\n\r\n    //===> Unlocated Menu fallback style. <===//\r\n    Phenix('.px-navigation > div.reset-list').forEach((element:HTMLElement) => {\r\n        //===> Define Elements <===//\r\n        let parent:any = Phenix(element).ancestor(\".px-navigation\"),\r\n            classNames = element.classList,\r\n            children  = element.childNodes;\r\n\r\n        //===> Move Children <===//\r\n        children.forEach((child:any) => {\r\n            parent.appendChild(child);\r\n            //===> Move Classnames <===//\r\n            classNames.forEach((className:string) => child.classList.add(className));\r\n        });\r\n\r\n        //===> Remove Element <===//\r\n        element.remove();\r\n    });\r\n\r\n    //===> Megamenu Hooks <===//\r\n    Phenix(\".pds-megamenu\").forEach((menu:HTMLElement) => {\r\n        //===> Get Elements <====//\r\n        const id = menu.getAttribute('id');\r\n        const menu_item = document.querySelector(`.mgh-${id}`);\r\n        //===> Get the Menu Item <===//\r\n        Phenix(menu_item).insert('append', menu);\r\n    });\r\n\r\n    //===> Phenix Menu <===//\r\n    Phenix('.px-navigation').menu();\r\n\r\n    //====> Multimedia <====//\r\n    Phenix('.px-media').multimedia({lazyloading: true});\r\n\r\n    //====> Phenix Uploader <====//\r\n    Phenix('.px-uploader').uploader();\r\n\r\n    //====> Dropdown Buttons <====//\r\n    Phenix('.px-dropdown').dropdown();\r\n\r\n    //====> Progress <====//\r\n    Phenix('.px-progress').progress({lazyloading: true});\r\n\r\n    //====> Global Accordion <====//\r\n    Phenix('.px-accordion:not(.custom-accordion) .accordion-btn').collapse({\r\n        related : true,\r\n        parent  : '.px-accordion',\r\n        target  : '.accordion-content',\r\n    });\r\n\r\n    //===> Animations <===//\r\n    Phenix('[data-animation], .px-animate, [data-lazy-group]').animations({animateCSS: [\"all\"]});\r\n\r\n    //====> Build Timer's <====//\r\n    Phenix('.px-timer').timer({type: \"countdown\"});\r\n\r\n    //===> .Scrollspy. <===//\r\n    Phenix(\".scrollspy-menu\").scrollSpy();\r\n\r\n    //===> .Others. <===//\r\n    Phenix(document).utilities();\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix and Splide\r\n * ===> 02 - Phenix Slider\r\n * ===> 03 - Create Markup\r\n * ===> 02 - \r\n * ===> 02 - \r\n*/\r\n\r\n\r\n/*====> Phenix Query <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n/*====> Splide JS for The Slider Core <====*/\r\ndeclare var Splide: any;\r\n\r\n/*====> Phenix Slider <====*/\r\nPhenixElements.prototype.slider = function (options?:{\r\n    type?:string;\r\n    focus?:any;\r\n    items?:number;\r\n    steps?:number;\r\n    speed?:number;\r\n    start?:number;\r\n    duration?:number;\r\n    autoplay?:boolean;\r\n    controls?:any;\r\n    pagination?:any;\r\n    breakpoints?:any;\r\n    direction?:string;\r\n    splide_options?:any;\r\n    arrow?:string;\r\n    page?:string;\r\n    isNavigation?:boolean;\r\n    updateAfter?:boolean;\r\n    waitForTransition?:boolean;\r\n    sync?:string;\r\n    padding?:string;\r\n    pauseOnHover?:boolean;\r\n    intersection?:boolean;\r\n    rewind?:boolean;\r\n    wheel?:boolean;\r\n    wheelSleep?:number;\r\n    releaseWheel?:boolean;\r\n    drag?:boolean;\r\n    width?:string;\r\n    height?:string;\r\n    autoWidth?:string;\r\n    autoHeight?:string;\r\n    fixedWidth?:string;\r\n    fixedHeight?:string;\r\n    heightRatio?:string;\r\n    autoScroll?:string;\r\n    center?:any;\r\n}) {\r\n    //====> Sliders Activator <====//\r\n    let slider_handler = () => this.forEach((slider:HTMLElement) => {\r\n        //===> Vertical Height Calculator <===//\r\n        const verticalFix = (slides, direction, slider) => {\r\n            if (direction == 'ttb') {\r\n                //====> Get First Item Height <====//\r\n                let first_height = Phenix(slider.children[0]).height();\r\n                //====> Return Height <====//\r\n                return first_height*parseInt(slides);\r\n            }\r\n        };\r\n\r\n        //====> Integration <====//\r\n        const slider_integration = () => {\r\n            //====> Multimedia Integration <====//\r\n            const media_elements = slider.querySelectorAll('[data-src]');\r\n            if (media_elements.length > 0) Phenix(media_elements).multimedia();\r\n\r\n            //====> Lazyloading Integration <====//\r\n            slider.querySelectorAll('.px-media.px-loading, .px-media.px-loader, .px-is-loading').forEach(media => {\r\n                //====> Multimedia Loader <====//\r\n                if (media.getAttribute('data-src')) {\r\n                    Phenix(media).multimedia();\r\n                } else {\r\n                    media.setAttribute('src', media.getAttribute('data-lazyload'));\r\n                }\r\n                //====> Disable Loading Spinner <====//\r\n                media.classList.remove('px-loader');\r\n                media.classList.remove('px-loading');\r\n                media.classList.remove('px-is-loading');\r\n            });\r\n\r\n            //====> Popup Modals <====//\r\n            const modalTriggers = slider.querySelectorAll(\".px-lightbox, [data-modal]\");\r\n            if (modalTriggers.length > 0) Phenix('.px-modal').popup();\r\n            \r\n            //====> Audio Buttons <====//\r\n            const audioTriggers = slider.querySelectorAll(\"button[data-audio]\");\r\n            if (audioTriggers.length > 0) Phenix(document).audioTrigger(audioTriggers);\r\n\r\n            //===> WooCommerce Add to Cart <===//\r\n            const add_to_cart_btns = slider.querySelectorAll(\".pds-add-to-cart\");\r\n            if (add_to_cart_btns.length > 0) Phenix(\".pds-add-to-cart\").on(\"click\", isClicked => {\r\n                    //===> Prevent link navigation <===//\r\n                    isClicked.preventDefault();\r\n\r\n                    //===> Define Item Data <===//\r\n                    const button = isClicked.target;\r\n                    const productId = button.getAttribute('data-variation') || button.getAttribute('data-product');\r\n                    //===> Get Quantity <===//\r\n                    const quantity = Phenix(button).ancestor('.single-product-content')?.querySelector('.quantity-input')?.value || parseInt(button.getAttribute('data-quantity')) || 1;\r\n\r\n                    //===> Activate Loading Mode <===//\r\n                    button.classList.add('px-loading-inline');\r\n            \r\n                    //===> Add the Item to the Cart <===//\r\n                    // Phenix(document).pds_add_to_cart(button, quantity, productId);\r\n            }, true);\r\n\r\n            //===> Wishlist Toggle <===//\r\n            const wishlist_btns = slider.querySelectorAll(\".pds-wishlist-btn\");\r\n            if (wishlist_btns.length > 0) Phenix(\".pds-wishlist-btn\").on(\"click\", (isClicked) => {\r\n                //===> Prevent Default <===//\r\n                isClicked.preventDefault();\r\n                //===> Define Data <===//\r\n                let action_url = isClicked.target.getAttribute('href'),\r\n                    add_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-rm-url\")),\r\n                    remove_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-add-url\"));\r\n\r\n                //====> Add Loading Mode <====//\r\n                isClicked.target.classList.add(\"px-loading-inline\");\r\n\r\n                Phenix(document).pds_toggle_wishlist(isClicked, action_url, add_url, remove_url);\r\n            }, true);\r\n        };\r\n\r\n        //====> Slider Creator <=====//\r\n        const slider_creator = (slider:any) => {\r\n            /*====> Get Inline Options <====*/\r\n            let inline = attr => slider.getAttribute(attr),\r\n                currentClasses = slider.classList;\r\n\r\n            //====> Already Exist <====//\r\n            if (currentClasses.contains('splide') || currentClasses.contains('splide__list')) return;\r\n\r\n            //====> Create Markup <====//\r\n            const slider_track   = document.createElement(\"div\"),\r\n                  slider_list    = document.createElement(\"div\"),\r\n                  current_slides = slider.children;\r\n\r\n            //====> Move Slides <====//\r\n            Array.from(current_slides).forEach((slide:any) => {\r\n                slide.classList.add('splide__slide');\r\n                slider_list.appendChild(slide);\r\n            });\r\n\r\n            //====> Set Class Names <====//\r\n            currentClasses.add('splide');\r\n            slider_track.setAttribute(\"class\", \"splide__track\");\r\n            slider_list.setAttribute(\"class\", \"splide__list\");\r\n\r\n            //====> Fix Grid System Classes <====//\r\n            Array.from(currentClasses).forEach((cl:any) => {\r\n                if (cl.includes('gp') || cl.includes('row')) {\r\n                    slider_list.classList.add(cl);\r\n                    slider.classList.remove(cl);\r\n                }\r\n            });\r\n\r\n            //====> Append Elements <====//\r\n            slider.appendChild(slider_track);\r\n            slider_track.appendChild(slider_list);\r\n\r\n\r\n            //====> Run Phenix Utils <====//\r\n            slider_integration();\r\n\r\n            //====> Default Options <====//\r\n            let type = inline('data-type') || options?.type || \"loop\",\r\n                focus = inline('data-focus') || options?.focus,\r\n                items = parseInt(inline('data-items')) || options?.items || 1,\r\n                steps = parseInt(inline('data-steps')) || options?.steps || 1,\r\n                speed = parseInt(inline('data-speed')) || options?.speed || 700,\r\n                duration = parseInt(inline('data-duration')) || options?.duration || 6000,\r\n                autoplay:any = inline('data-autoplay') || options?.autoplay || currentClasses.contains(\"data-autoplay-off\") ? false : true,\r\n                start  = parseInt(inline('data-start')) || options?.start,\r\n                rewind = inline('data-rewind') || options?.rewind,\r\n                direction = inline('data-direction') || options?.direction || Phenix(document).direction(),\r\n                breakpoints = options?.breakpoints || {},\r\n\r\n                //===> User Actions <====//\r\n                pauseOnHover = inline('data-pause-hover') || options?.pauseOnHover,\r\n                intersection = inline('data-intersection') || options?.intersection,\r\n\r\n                //===> Controls <===//\r\n                wheel = inline('data-wheel') || options?.wheel || false,\r\n                controls = inline('data-controls') || options?.controls,\r\n                pagination = inline('data-pagination') || options?.pagination,\r\n                drag = inline('data-drag') || options?.drag || (!controls || !pagination ? false : true),\r\n\r\n                //===> Features & Modes <===//\r\n                sync = inline('data-sync') || options?.sync,\r\n                padding = inline('data-padding') || options?.padding,\r\n                isNavigation = parseInt(inline('data-is-navigation')) || options?.isNavigation,\r\n\r\n                //===> Animations <===//\r\n                updateAfter = inline('data-update-after') || options?.updateAfter,\r\n                waitForTransition = inline('data-waitForTransition') || options?.waitForTransition,\r\n                wheelSleep = parseInt(inline('data-wheelSleep')) || options?.wheelSleep,\r\n                releaseWheel = inline('data-releaseWheel') || options?.releaseWheel,\r\n\r\n                //===> Style <===//\r\n                width = inline('data-width') || options?.width,\r\n                height = inline('data-height') || options?.height,\r\n                autoWidth = inline('data-autoWidth') || options?.autoWidth,\r\n                autoHeight = inline('data-autoHeight') || options?.autoHeight,\r\n                fixedWidth = inline('data-fixedWidth') || options?.fixedWidth,\r\n                fixedHeight = inline('data-fixedHeight') || options?.fixedHeight,\r\n                heightRatio = inline('data-heightRatio') || options?.heightRatio;\r\n\r\n            //====> Rewind Sliding and Fading <=====//\r\n            if (!rewind && type === \"fade\" || type === \"slide\") rewind = true;\r\n            //====> Center Mode <====//\r\n            if (!focus) focus = inline('data-center') || options?.autoplay || currentClasses.contains(\"data-center-on\") ? \"center\" : 0;\r\n\r\n            //====> Inline Responsive <====//\r\n            inline('data-sm') ? breakpoints[570] = {\r\n                //===> Small Screens <===//\r\n                perPage: inline('data-sm') || items,\r\n                height: height || verticalFix(inline('data-sm') || items, direction, slider_list),\r\n            } : '';\r\n            //===> Medium Screens <===//\r\n            inline('data-md') ? breakpoints[768] = {\r\n                perPage: inline('data-md') || items,\r\n                height: height || verticalFix(inline('data-md') || items, direction, slider_list),\r\n            } : ''; \r\n            //===> Large Screens <===//\r\n            inline('data-lg') ? breakpoints[1170] = {\r\n                // drag: drag && drag === 'true' || drag && drag === '1' ? true : false,\r\n                perPage: inline('data-lg') || items,\r\n                height: height || verticalFix(inline('data-lg') || items, direction, slider_list),\r\n            } : '';\r\n            //===> xLarge Screens <===//\r\n            inline('data-xl') ? breakpoints[1400] = {\r\n                perPage: inline('data-xl') || items,\r\n                height: height || verticalFix(inline('data-xl') || items, direction, slider_list),\r\n            } : '';\r\n\r\n            //====> Custom Classes <====//\r\n            let controls_class = 'flexbox position-ab pos-center-y align-between align-center-y pos-start-0 col-12',\r\n                pagination_class = 'position-ab pos-center-x pos-bottom-15',\r\n                arrow_class = inline('data-arrow') || options?.arrow || 'btn primary small square',\r\n                page_class  = inline('data-page') || options?.page || 'pd-5 bg-primary no-border tiny square radius-circle mx-5';\r\n\r\n            if (typeof(controls) === \"string\") {\r\n                controls !== \"1\" ? controls_class = controls : null;\r\n            }\r\n\r\n            if (typeof(pagination) === \"string\") {\r\n                pagination !== \"1\" ? pagination_class = pagination : null;\r\n            }\r\n\r\n            //====> Slider to Splide <====//\r\n            let slider_options:any = {\r\n                type : type,\r\n                focus: focus,\r\n                speed: speed,\r\n                interval: duration,\r\n                perPage: items,\r\n                perMove: steps,\r\n                autoplay: typeof autoplay === \"string\" ? parseInt(autoplay) : autoplay,\r\n                pauseOnHover: false,\r\n                mediaQuery: 'min',\r\n                direction: direction,\r\n                breakpoints: breakpoints,\r\n                rewind: rewind,\r\n                padding: padding,\r\n                paginationDirection: Phenix(document).direction(),\r\n\r\n                //====> Animation Fix <====//\r\n                updateOnMove: updateAfter && updateAfter === 'false' || updateAfter && updateAfter === '0' ? false : true,\r\n                waitForTransition: waitForTransition && waitForTransition === 'false' || waitForTransition && waitForTransition === '0' ? false : true,\r\n                \r\n                //====> Static Options <====//\r\n                snap: true,\r\n                rewindSpeed: 1000,\r\n                rewindByDrag: true,\r\n                \r\n                //====> .Sniping Sliding. <====//\r\n                wheel: wheel, //===> Enable Wheel Sliding\r\n                wheelSleep: wheelSleep, //===> Time to Disable the Scroll before next slide\r\n                releaseWheel: releaseWheel, //===> Allow Scrolling at the End or the Start.\r\n\r\n                //====> ... <====//\r\n                width: width,\r\n                autoWidth: autoWidth,\r\n                autoHeight: autoHeight,\r\n                fixedWidth: fixedWidth,\r\n                fixedHeight: fixedHeight,\r\n                heightRatio: heightRatio,\r\n\r\n                //====> Accessibility <====//\r\n                role: 'slider',\r\n                label: 'Slider',\r\n                labelledby: 'slider-label',\r\n\r\n                //====> Classes <====//\r\n                classes: {\r\n                    // Add classes for arrows.\r\n                    arrows: `splide__arrows px-slider-controls ${controls_class}`,\r\n                    arrow : `splide__arrow px-slider-button ${arrow_class}`,\r\n                    prev  : `splide__arrow--prev px-prev`,\r\n                    next  : `splide__arrow--next px-next`,\r\n                    // Add classes for pagination.\r\n                    pagination: `splide__pagination px-slider-pagination ${pagination_class}`, // container\r\n                    page      : `splide__pagination__page px-slider-page ${page_class}`, // each button\r\n                },\r\n            };\r\n            \r\n            //====> Add Options <====//\r\n            if (start) slider_options.start = start;\r\n            if (!controls) slider_options.arrows = false;\r\n            if (!pagination) slider_options.pagination = false;\r\n            if (sync) slider_options.sync = true;\r\n            if (direction == 'ttb') slider_options.height = verticalFix(items, direction, slider_list);\r\n            if (direction == 'ttb') slider_options.autoHeight = true;\r\n            if (pauseOnHover) slider_options.pauseOnHover = pauseOnHover;\r\n            if (intersection) intersection !== 'false' || '0' ? intersection = true : null;\r\n            if (rewind) rewind !== 'false' || '0' ? slider_options.rewind = true : slider_options.rewind = false;\r\n            if (isNavigation) slider_options.isNavigation = true;\r\n\r\n            //====> Return Options <====//\r\n            return {\r\n                track  : slider_track,\r\n                list   : slider_list,\r\n                slides : slider_list.children,\r\n                sync : sync,\r\n                intersection : intersection,\r\n                options: slider_options\r\n            }\r\n        }\r\n\r\n        //====> Splide Prepare <====//\r\n        let current_slider = slider_creator(slider);\r\n        if (!current_slider) return;\r\n        let the_slider = new Splide(slider, current_slider.options);\r\n\r\n        //====> Integration Phenix <====//\r\n        the_slider.on(['mounted'], () => {\r\n            //====> Mounted Run Integration <====//\r\n            slider_integration();\r\n        });\r\n\r\n        the_slider.on(['visible'], () => {\r\n            //====> Visible Run Integration <====//\r\n            slider_integration();\r\n        });\r\n\r\n        //====> Stop Played Media <====//\r\n        the_slider.on(['inactive'], (data) => {\r\n            //====> Get Video and iFrame <====//\r\n            let video = data.slide.querySelector('video'),\r\n                iframe = data.slide.querySelector('iframe');\r\n\r\n            //====> Played Video <====//\r\n            if (video) video.playing ? video.pause() : null;\r\n\r\n            //====> Played iFrame <====//\r\n            if (iframe) {\r\n                let source = iframe.getAttribute('src');\r\n                iframe.setAttribute('src', source);\r\n            };\r\n        });\r\n\r\n        //====> Run Integration <====//\r\n        slider_integration();\r\n\r\n        //====> Run Sync Sliders <====//\r\n        let mount_slider = () => {\r\n            if (!current_slider.track?.classList.contains('mounted')) {\r\n                //===> If is Synced Slider <===//\r\n                if (current_slider.sync) {\r\n                    //====> Synced Create <====//\r\n                    let sync_selector = document.querySelector(`${current_slider.sync}`),\r\n                        synced_slider = slider_creator(sync_selector);\r\n                        sync_selector.classList.add('px-slider');\r\n\r\n                    //====> Synced Splide <====//\r\n                    let synced_splide = new Splide(sync_selector, synced_slider.options);\r\n\r\n                    //====> Run Both <====//\r\n                    the_slider.sync(synced_splide);\r\n                    the_slider.mount();\r\n                    synced_splide.mount();\r\n\r\n                    //====> Clickable Thumbnail <====//\r\n                    Array.from(synced_slider.slides).forEach((slide_item, index) => {\r\n                        slide_item.addEventListener( 'click', () => the_slider.go(index));\r\n                    });\r\n                } else {\r\n                    //====> Run the Slider <====//\r\n                    the_slider.mount();\r\n                }\r\n    \r\n                //===> Add Mounted Class <===//\r\n                current_slider.track?.classList.add('mounted');\r\n            }\r\n        };\r\n\r\n        //====> Intersection Sliders <====//\r\n        if (current_slider.intersection) {\r\n            Phenix(slider).inView({\r\n                callback: mount_slider\r\n            });\r\n        } else {\r\n            mount_slider();\r\n        }\r\n    });\r\n\r\n    //====> Load Splide JS <====//\r\n    if (!document.querySelector('#splidejs-phenix') && this.length > 0) {\r\n        //===> Create Script Element <===//\r\n        let splide_loader = document.createElement(\"script\"),\r\n            libPath = Phenix(document).getURL().phenixJS.replace('js/', 'lib/'),\r\n            splide_url = libPath+'splide.min.js';\r\n\r\n        //===> Set ID <===//\r\n        splide_loader.setAttribute('id', 'splidejs-phenix');\r\n        //===> Set Source <===//\r\n        splide_loader.setAttribute(\"src\", splide_url);\r\n        splide_loader.setAttribute(\"async\", \"\");\r\n\r\n        //===> Append Script <===//\r\n        document.body.appendChild(splide_loader);\r\n    \r\n        //====> When Loaded Run Sliders <====//\r\n        splide_loader.addEventListener(\"load\", () => {\r\n            //===> Run Slider <====//\r\n            slider_handler();\r\n        });\r\n    \r\n        //====> When Error Re-Load <====//\r\n        splide_loader.addEventListener(\"error\", (ev) => {\r\n            splide_loader.setAttribute(\"src\", splide_url);\r\n        });\r\n\r\n    //====> if Al-ready loaded run the sliders <====//\r\n    } else slider_handler();\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Reference By Comment <======\r\n * ===> 01 - Default Type\r\n * ===> 02 - Form Utils\r\n * ===> 03 - Placeholder Effect\r\n * \r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\ndeclare var Masonry:any;\r\ndeclare var tinyTypewriter:any;\r\ndeclare var initMarqueeSlider:any;\r\ndeclare var noUiSlider:any;\r\n\r\n/*====> Phenix Utilities <====*/\r\nPhenixElements.prototype.utilities = function (options?:{\r\n    type?:string, //====> Utilities Types\r\n}) {\r\n    //====> Default Type <====//\r\n    let type = options?.type || 'all';\r\n\r\n    //===> Form Utils <====//\r\n    if (type.includes(\"form\") || type === \"all\") {\r\n        //===> Placeholder Effect <====//\r\n        Phenix('[placeholder]').forEach((control:HTMLElement) => {\r\n            //====> Current Placeholder <===//\r\n            let holder = control.getAttribute('placeholder');\r\n            //====> Empty Placeholder <===//\r\n            Phenix(control).on('focus', event => control.removeAttribute('placeholder'));\r\n            //====> Restore Placeholder <===//\r\n            Phenix(control).on('blur', event => control.setAttribute('placeholder', holder));\r\n        });\r\n\r\n        //===> Form Controls Group <===//\r\n        Phenix('.form-ui, .px-form').forEach((form:HTMLElement) => {\r\n            //===> Get the Controls Size <====//\r\n            let size = form.getAttribute('data-size') || '';\r\n    \r\n            //===> for Each Form <====//\r\n            form.querySelectorAll('input:not([type=\"submit\"]):not([type=\"button\"]):not([type=\"radio\"):not([type=\"checkbox\"]), select, textarea').forEach(controler => {\r\n                //====> if has no such class names or type <====//\r\n                if (!controler.matches('.btn') && !controler.matches('.form-control')) controler.classList.add('form-control', size);\r\n            });\r\n        });\r\n\r\n        //====> Form Repeater <====//\r\n        Phenix(\".px-form-repeater\").forEach((repeater_container:Element) => {\r\n            //====> Define Data <====//\r\n            const add_btn  = repeater_container.querySelector(\".px-repeater-add\"),\r\n                  fields_key = repeater_container.getAttribute(\"data-fields-key\"),\r\n                  items_list = repeater_container.querySelector(\".px-repeater-items\"),\r\n                  original_row = items_list.querySelector(\"[data-item-key]\");\r\n\r\n            //===> Set a Number for the Original Row <===//\r\n            if(!original_row.getAttribute('data-item-key')) original_row.setAttribute(\"data-item-key\", \"0\");\r\n\r\n            //===> Correct the name of the Fields <===//\r\n            original_row.querySelectorAll(\"[name]\").forEach((element:HTMLElement) => {\r\n                //====> Get the Name <====//\r\n                let name = element.getAttribute(\"name\");\r\n                //====> Move the Original Name to new Attribute <====//\r\n                element.setAttribute('data-original-name', name);\r\n                //====> Correct the Name <====//\r\n                element.setAttribute(\"name\", `${fields_key}[${original_row.getAttribute('data-item-key')}][${name}]`);\r\n            });\r\n\r\n            //===> Remove Button Creator <===//\r\n            const create_remove_btn = (repeater_row:any) => {\r\n                //===> Insert the Remove Button <===//\r\n                const currentRemoveBtn = repeater_row.appendChild(add_btn.cloneNode(false));\r\n\r\n                //===> Change the Button Style <===//\r\n                currentRemoveBtn.classList.remove(\"fa-plus\", \"tiny\", \"small\", \"large\", \"xlarge\");\r\n                currentRemoveBtn.classList.add('fa-minus', 'danger', 'px-repeater-remove');\r\n\r\n                //====> Correct Button Size <====//\r\n                if (repeater_row.querySelector(\".form-control\")) {\r\n                    let classNames = repeater_row.querySelector(\".form-control\").classList;\r\n                    let sizes = [\"tiny\", \"small\", \"large\", \"xlarge\"];\r\n                    sizes.some(size => classNames.contains(size) ? currentRemoveBtn.classList.add(size) : '');\r\n                }\r\n\r\n                //====> Remove the Item <====//\r\n                currentRemoveBtn.addEventListener(\"click\", (event:any) => Phenix(event.target).ancestor(\".px-form-repeater-fields\").remove());\r\n            };\r\n\r\n            //====> Add New Item (Remove Item Method Included) <====//\r\n            add_btn.addEventListener(\"click\", (event:any) => {\r\n                //===> Create new Row <===//\r\n                const newRow:any  = items_list.appendChild(original_row.cloneNode(true)),\r\n                      currentRows = items_list.querySelectorAll(\"[data-item-key]\").length-1;\r\n\r\n                //===> Increase the Row Number <===//\r\n                newRow.setAttribute(\"data-item-key\", currentRows);\r\n\r\n                //===> Change the Fields Name <===//\r\n                newRow.querySelectorAll(\"[name]\").forEach((element:any) => {\r\n                    //====> Get the Name <====//\r\n                    let name = element.getAttribute('data-original-name');\r\n\r\n                    //====> Set the Name <====//\r\n                    element.setAttribute(\"name\", `${fields_key}[${currentRows}][${name}]`);\r\n\r\n                    //====> Cleanup Any Values <====//\r\n                    if (element.value) element.value = \"\";\r\n                    if (element.tagName === \"TEXTAREA\") element.innerHTML = \"\";\r\n\r\n                    //====> Clean Up Select Options <====//\r\n                    if (element.tagName === \"SELECT\") {\r\n                        element.querySelectorAll('[selected]').forEach(option => option.removeAttribute('selected'));\r\n                        //====> Advanced Select Rebuild <====//\r\n                        if (element.classList.contains('px-select')) Phenix(element).rebuildSelect();\r\n                    }\r\n                });\r\n\r\n                //===> Create Remove Button <===//\r\n                create_remove_btn(newRow);\r\n            });\r\n\r\n            //====> Create Remove Button Whenever it is not found <====//\r\n            const checkRemoveBtn = setInterval(() => {\r\n                //====> Get the Rows <====//\r\n                let rows = repeater_container.querySelectorAll('[data-item-key]:not([data-item-key=\"0\"])');\r\n\r\n                //====> Create Remove Button <====//\r\n                if (rows) {\r\n                    rows.forEach(row => !row.querySelector('.px-repeater-remove') ? create_remove_btn(row) : '');\r\n                    clearInterval(checkRemoveBtn);\r\n                }\r\n            }, 1000);\r\n        });\r\n\r\n        //====> Rating Controllers <====//\r\n        Phenix(\".px-rating\").rating();\r\n    }\r\n\r\n    //====> Others <====//\r\n    if (type.includes(\"other\") || type === \"all\") {\r\n        //====> Item Remover <====//\r\n        Phenix('.remove-item').on('click', click => {\r\n            //====> Prevent Default Behavior <====//\r\n            click.preventDefault();\r\n            //====> Remover Data <====//\r\n            let trigger = click.target,\r\n                target  = trigger.getAttribute('data-target') || trigger.getAttribute('href') || false,\r\n                relation = trigger.getAttribute('data-relation');\r\n    \r\n            //=== Remove Target in Ancestors ===//\r\n            if (!relation || relation === 'ancestor') Phenix(trigger).ancestor(target).remove();\r\n            //=== Remove Target in Siblings ===//\r\n            else if (relation === 'sibling') {\r\n                Phenix(trigger).siblings(target).forEach(sibling => sibling .remove());\r\n            }\r\n            //=== Remove Target as Global ===//\r\n            else if (relation === 'global' || 'none') document.querySelector(target).remove();\r\n            //=== Remove the Closest Target ===//\r\n            else if (relation === 'closest' || 'related') trigger.closest(target).remove();\r\n        });\r\n\r\n        //====> Create Animated Count Up <====//\r\n        Phenix('.px-counter').forEach((element:HTMLElement) => {\r\n            //===> Separate Numbers from Symbols <====//\r\n            const numbers = element.textContent.match(/\\d+/g),\r\n                  characters = element.textContent.replace(`${numbers}`, '');\r\n\r\n            //===> Set Correct Values <====//\r\n            element.setAttribute('data-value', `${numbers}`);\r\n            if(characters && !element.getAttribute('data-symbol')) element.setAttribute('data-symbol', `${characters}`);\r\n\r\n            //====> Start Counter when in View <====//\r\n            Phenix(element).inView({\r\n                callback: () => {\r\n                    if (!element.classList.contains('counting')) Phenix(element).counter();\r\n                }\r\n            });\r\n        });\r\n\r\n        //===> Custom Number Input <===//\r\n        Phenix(\"body:not([class*='editor']) .px-counter-input\").forEach(counter => {\r\n            //===> Get Elements <===//\r\n            const input = counter.querySelector('input[type=\"number\"]');\r\n            const decrease = counter.querySelector('.decrease-btn');\r\n            const increase = counter.querySelector('.increase-btn');\r\n            const minValue = parseInt(input.getAttribute('min')) || 0;\r\n            const maxValue = parseInt(input.getAttribute('max')) || 99999;\r\n            const inputSteps = parseInt(input.getAttribute('data-step')) || 1;\r\n\r\n            //===> Increase Number <===//\r\n            const IncreaseNum = (clicked) => {\r\n                //===> Get Input Element <===//\r\n                let newVal = parseInt(input.value) + inputSteps;\r\n                //===> Set Data <===//\r\n                input.value = newVal < maxValue || newVal === maxValue ? newVal : maxValue;\r\n            };\r\n        \r\n            //===> Decrease Number <===//\r\n            const DecreaseNum = (clicked) => {\r\n                //===> Get Input Element <===//\r\n                let newVal = parseFloat(input.value) - inputSteps;\r\n                //===> Set Data <===//\r\n                input.value = newVal > minValue || newVal === minValue ? newVal : minValue;\r\n            };\r\n\r\n            Phenix(decrease).on('click', DecreaseNum);\r\n            Phenix(increase).on('click', IncreaseNum);\r\n        });\r\n\r\n        //====> To Top Hook <=====//\r\n        let toTopHook = document.querySelector('.entry-content *:first-child');\r\n        if (!toTopHook) toTopHook = document.querySelector('.main-header + *');\r\n        if (toTopHook && !toTopHook.id) toTopHook.id = 'to-top-hook';\r\n    }\r\n    \r\n    //====> Dynamic Word Coloring <====//\r\n    if (type.includes(\"text\") || type === \"all\") {\r\n        //===> Dynamic Colors Variants for Elements Shadow <===//\r\n        Phenix(\"[class*='bx-shadow-gls'], .pds-sc-props\").forEach((element:HTMLElement) => {\r\n            //====> Color Transformer <====//\r\n            const transformColor = (color: string, amount: number) => {\r\n                let rgb = color.match(/\\d+/g).map(Number);\r\n                if (rgb.length > 4) rgb.splice(-(rgb.length - 3));\r\n                return rgb.map(c => Math.max(0, Math.min(255, c + amount))).join(', ');\r\n            };\r\n\r\n            //====> Color Contrast Checker <====//\r\n            const isLightOrDark = (color:string) => {\r\n                //===> get Colors Range <====//\r\n                let all = color.split(','),\r\n                    r = parseInt(all[0]), g = parseInt(all[1]), b = parseInt(all[2]);\r\n                //===> Calculate the luminance of the color <===//\r\n                let luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n                //===> Return 'light' or 'dark' based on the luminance <===//\r\n                return luminance;\r\n            }\r\n\r\n            //====> get the Background Color <====//\r\n            let bgColor = window.getComputedStyle(element).backgroundColor,\r\n                bgImage = window.getComputedStyle(element).backgroundImage,\r\n                darkerRgb:any = \"0,0,0\",\r\n                lighterRgb:any = \"255,255,255\";\r\n\r\n            //====> Check if has Background Gradient <====//\r\n            if (bgImage && bgImage.includes('gradient') && bgImage.match(/gradient\\((.*?)\\)/)) {\r\n                //===> Check for gradient Match colors <===//\r\n                let colors = [];\r\n\r\n                //===> Get Colors <===//\r\n                bgImage.match(/rgb\\(\\d{1,3}, \\d{1,3}, \\d{1,3}\\)/g).forEach((color:string) => {\r\n                    colors.push(color.replace('rgb', '').replace('(', '').replace(')', ''));\r\n                });\r\n\r\n                //===> Get the colors from the gradient <===//\r\n                const colorOne = isLightOrDark(colors[colors.length - 1]),\r\n                    colorTwo = isLightOrDark(colors[0]);\r\n\r\n                //===> Set the Colors <===//\r\n                darkerRgb  = transformColor(colorOne < colorTwo ? colors[colors.length - 1] : colors[0], -95);\r\n                lighterRgb = transformColor(colorOne > colorTwo ? colors[colors.length - 1] : colors[0], 95);\r\n            }\r\n\r\n            //====> Check if has Background Color <====//\r\n            else if (bgColor) {\r\n                //====> Create a darker shade by subtracting 90 from each color component <====//\r\n                darkerRgb = transformColor(bgColor, -95);\r\n                //====> Create a lighter shade by adding 80 to each color component <====//\r\n                lighterRgb = transformColor(bgColor, 95);\r\n            }\r\n\r\n            //====> Add the Colors to the CSS Properties <====//\r\n            element.style.setProperty('--shadow-color-dark', darkerRgb);\r\n            element.style.setProperty('--shadow-color-light', lighterRgb);\r\n        });\r\n    }\r\n\r\n    //====> icons List <====//\r\n    if (type.includes(\"icons\") || type === \"all\") Phenix('.icons-list').forEach((list:HTMLElement) => {\r\n        if (list.getAttribute('data-icon')) {\r\n            let classes = list.getAttribute('data-icon').split(\" \") || [];\r\n            list.querySelectorAll('li').forEach(item => item.classList.add(...classes));\r\n        }\r\n    });\r\n\r\n    //====> Copyrights Protection <====//\r\n    if (type.includes(\"copyrights\")) {\r\n        Phenix(document).on(\"contextmenu\", rightClick => rightClick.preventDefault());\r\n        Phenix(document).on(\"selectstart\", textSelect => textSelect.preventDefault());\r\n    }\r\n\r\n    //====> SEO Fix <====//\r\n    if (type.includes(\"seo\") || type === \"all\") {\r\n        //====> Headline Fix <====//\r\n        let headline = document.querySelector('h1');\r\n        if(!headline) Phenix('body').insert('prepend', `<h1 class=\"hidden\">${document.title}</h1>`);\r\n\r\n        //====> Images SEO/Performance <====//\r\n        Phenix('img').forEach((img:any) => {\r\n            //===> Get Image Data <===//\r\n            let img_width = img.getAttribute('width') || img.style.width || img.clientWidth,\r\n                img_height = img.getAttribute('height') || img.style.height || img.clientHeight,\r\n                parent_width = img.parentNode.clientWidth;\r\n                // parent_height = Phenix(img.parentNode).height();\r\n\r\n            //===> Set Width and Height <===//\r\n            setTimeout(() => {\r\n                if (!img_width && parent_width > 0)  img.setAttribute('width', `${parent_width}`);\r\n                // if (!img_height && parent_height > 0) img.setAttribute('height', `${parent_height}`);\r\n            }, 1500);\r\n\r\n            //===> Alternative Text <===//\r\n            if (!img.getAttribute('alt') || img.getAttribute('alt') === \"\") {\r\n                img.setAttribute('alt', img.src.substring(img.src.lastIndexOf('/')+1));\r\n            }\r\n        });\r\n    \r\n        //====> Links SEO <====//\r\n        Phenix('a:not([title]):empty, button:not([title]):empty, a:not([title]), button:not([title])').forEach((link:any) => {\r\n            //===> Text Checker <===//\r\n            let text = link.getAttribute('data-title') || \"\";\r\n\r\n            //===> Get Text <===//\r\n            if (!link.querySelector('*') && link.textContent) text = link.textContent.trim();\r\n            else text = link.querySelector('h2')?.textContent || link.querySelector('h3')?.textContent || link.querySelector('h4')?.textContent || '';\r\n\r\n            //===> Alternative Text <===//\r\n            if (!link.getAttribute('title') || link.getAttribute('title') === \"\") link.setAttribute('title', text);\r\n            if (!link.getAttribute('aria-label') || link.getAttribute('aria-label') === \"\") link.setAttribute('aria-label', text);\r\n        });\r\n\r\n        /*===> Table of contents Menu <===*/\r\n        let postContent = document.querySelector(\".entry-content\"), last_title,\r\n        content_menu = document.querySelector('#table-of-content-list');\r\n\r\n        /*===> Loop Through Titles <===*/\r\n        if (postContent && content_menu) {\r\n            //===> Get Headlines <===//\r\n            let headlines = postContent.querySelectorAll('h2, h3, h4');\r\n            //===> Reset List <===//\r\n            content_menu.innerHTML = \"\";\r\n            //===> for Each Headline <===//\r\n            headlines.forEach((element:HTMLElement, index) => {\r\n                //====> Get Data <====//\r\n                let title = element.textContent,\r\n                    itemHtml = `<li class=\"tx-nowrap\"><a href=\"#section-${index}\" class=\"smoth-scroller\">${title}</a></li>`;\r\n        \r\n                //====> Set ID <====//\r\n                element.setAttribute('id', `section-${index}`);\r\n\r\n                //====> Sub-Titles <====//\r\n                if (element.matches('h3') || element.matches('h4')) {\r\n                    //===> ... <===//\r\n                    let last_item = content_menu.querySelector('li:last-child'),\r\n                        last_list = last_item?.querySelector('ul') || content_menu;\r\n                    //====> Create new Menu <====//\r\n                    if (!last_list && last_item) last_list = Phenix(last_item).insert('append', '<ul class=\"table-of-content-menu pdx-15\"></ul>');\r\n        \r\n                    //====> Create as Menu Item <====//\r\n                    Phenix(last_list).insert('append', itemHtml);\r\n                }\r\n                //====> Create as Main Title <====//\r\n                else Phenix(content_menu).insert('append', itemHtml);\r\n        \r\n                //====> Assign Last Title <====//\r\n                last_title = element;\r\n            });\r\n        }\r\n    }\r\n\r\n    //====> Third-Party Libraries <====//\r\n    if (type.includes(\"libraries\") || type === \"all\") {\r\n        //===> Prevent on WP Editor <====//\r\n        const document_classes = document.body.getAttribute('class');\r\n        //===> Check the Document Type <===//\r\n        if (!document.body.classList.contains('wp-admin') && !document_classes?.includes('-editor')) {\r\n            //===> Import Masonry Grid Plugin <===//\r\n            if(document.querySelector('.px-masonry')) Phenix(document).import(\"masonry\", \"script\", \"masonry.min.js\", ()=> {\r\n                Phenix(\".px-masonry\").forEach((grid:any) => {\r\n                    let first_child_class = grid.children[0].classList[0];\r\n                    var masonry = new Masonry(grid, {itemSelector: `.${first_child_class}`});\r\n                });\r\n            }, { integrated: true });\r\n\r\n            //===> Typed List <===//\r\n            if(document.querySelector('.typed-list')) {\r\n                //====> Create the List Structure <====//\r\n                Phenix('.typed-list').forEach((text_list:HTMLElement) => {\r\n                    //===> Gather the Items <===//\r\n                    const text_list_items = [];\r\n                    text_list.querySelectorAll('li').forEach(item => text_list_items.push(item.textContent));\r\n            \r\n                    //===> Create the Typed Text Element <===//\r\n                    const text_element = document.createElement('p');\r\n                    text_element.classList.add('typed-text');\r\n            \r\n                    //===> Assign the Text List <===//\r\n                    text_element.textContent = text_list_items[0];\r\n                    text_list_items.forEach((item, index) => text_element.setAttribute(`data-text-${index}`, item));\r\n            \r\n                    //===> Copy List Classed to Text Element <===//\r\n                    text_list.classList.forEach(item => !item.includes('list') ? text_element.classList.add(item) : null);\r\n            \r\n                    //===> Insert the Typed Text <===//\r\n                    Phenix(text_list).insert('before', text_element);\r\n                });\r\n        \r\n                //===> Import Typed Effect for Texts Library <====//\r\n                Phenix(document).import('typed-js', 'script', 'typewriter.js', (isReady) => Phenix('.typed-text').forEach((typeWriter:HTMLElement) => {\r\n                    //===> Items <===//\r\n                    let items = [];\r\n            \r\n                    //===> Get Text Items <===//\r\n                    for (let i = 0; i < 20; i++) {\r\n                        if(typeWriter.getAttribute(`data-text-${i}`)) { items.push(typeWriter.getAttribute(`data-text-${i}`)); }\r\n                    }\r\n            \r\n                    //===> Run the Typewriter <===//\r\n                    typeWriter.style.height = Phenix(document).toREM(Phenix(typeWriter).height());\r\n                    tinyTypewriter(typeWriter, {items: items, cursor: false, startDelay: 700});\r\n                }), { integrated: true });\r\n            }\r\n\r\n            //===> Marquee Slider <===//\r\n            if(document.querySelector('.px-marquee') || document.querySelector('.px-marquee-reverse')) {\r\n                //====> Import Marquee Library <====//\r\n                Phenix(document).import('marquee-js', 'script', 'marquee.js', (isReady) => {\r\n                    //===> Create Marquee <===//\r\n                    Phenix('.px-marquee, .px-marquee-reverse').forEach((marquee:HTMLElement, index) => {\r\n                        //===> Create Structure Wrappers Elements <===//\r\n                        const marquee_slider = document.createElement('div');\r\n                        const marquee_slides = document.createElement('div');\r\n            \r\n                        //===> Set Slider ID <===//\r\n                        const marquee_id = `px-marquee-${index}`;\r\n                        marquee.style.direction = 'ltr';\r\n                        marquee.setAttribute('id', marquee_id);\r\n        \r\n                        //===> Marquess Settings <===//\r\n                        if(!marquee.getAttribute('data-speed')) marquee.setAttribute('data-speed', \"15\");\r\n        \r\n                        //===> Set Wrappers Properties <===//\r\n                        marquee_slider.classList.add('marquee-slider-wrapper','display-flex', 'position-rv',);\r\n                        marquee_slides.classList.add('marquee-slider-slides-wrapper', 'display-flex', 'position-rv');\r\n                        marquee_slider.appendChild(marquee_slides);\r\n\r\n                        //===> Move Content Items to the Slides Wrapper <===//\r\n                        marquee.querySelectorAll(':scope > *').forEach((item:HTMLElement) => {\r\n                            //===> Set Item Properties <===//\r\n                            item.style.direction = Phenix(document).direction();\r\n                            item.classList.add('marquee-slider-slide');\r\n        \r\n                            //===> Append Item to the Slides Wrapper <===//\r\n                            marquee_slides.appendChild(item.cloneNode(true));\r\n        \r\n                            //===> Remove Item After it was Copied <===//\r\n                            item.remove();\r\n                        });\r\n            \r\n                        //===> Append the Slider Wrapper to the Marquee <===//\r\n                        marquee.appendChild(marquee_slider);\r\n            \r\n                        //===> Initialize Marquee <===//\r\n                        initMarqueeSlider(marquee_id, {\r\n                            allowPointEvent:true,\r\n                            dir: marquee.classList.contains('px-marquee-reverse') ? 'left' : 'right',\r\n                            stopOnHover: marquee.getAttribute('data-hover') && marquee.getAttribute('data-hover') === 'false' ? false : true,\r\n                        });\r\n                    });\r\n                }, { integrated: true });\r\n            }\r\n\r\n            //===> Add Support Price Range Sliders <===//\r\n            const RangeSliders = Phenix('.pds-range-slider');        \r\n            if (RangeSliders.length > 0) {\r\n                //===> Get Page Direction <===//\r\n                const page_direction = Phenix(document).direction();\r\n        \r\n                //====> Import Slider Plugin <====//\r\n                Phenix(document).import(\"range-slider\", \"script\", \"range-slider/range-slider.js\", ()=>{\r\n                    //====> Import CSS <====//\r\n                    Phenix(document).import(`range-slider`, \"link\", `range-slider/range-slider${page_direction === \"rtl\" ? \"-rtl\" : \"\"}.css`, ()=>{}, { integrated: true });\r\n        \r\n                    //====> Activate Sliders <====//\r\n                    RangeSliders.forEach((slider:any) => {\r\n                        //===> Get Defaults <===//\r\n                        const minRange = parseFloat(slider.getAttribute(\"data-min\")),\r\n                              maxRange = parseFloat(slider.getAttribute(\"data-max\"));\r\n        \r\n                        //===> Initial the Slider <===//\r\n                        noUiSlider.create(slider, {\r\n                            step: 1,\r\n                            connect: true,\r\n                            tooltips:true,\r\n                            start: [minRange || 0, maxRange || 999999],\r\n                            direction: page_direction,\r\n                            range: {\r\n                                'min': minRange || 0,\r\n                                'max': maxRange || 999999\r\n                            },\r\n                        });\r\n                \r\n                        //===> Update Controls Values <===//\r\n                        var min_range = slider.parentNode.querySelector(\".range-min\"),\r\n                            max_range = slider.parentNode.querySelector(\".range-max\");\r\n        \r\n                        if (min_range && max_range) {\r\n                            slider.noUiSlider.on('update', function (values, handle) {\r\n                                if (handle) {max_range.value = values[handle];} \r\n                                else {min_range.value = values[handle];}\r\n                            });\r\n                    \r\n                            //===> Update From Controls <===//\r\n                            min_range.addEventListener('change', event => {\r\n                                var maxVal = max_range.value,\r\n                                    minVal = min_range.value;\r\n                                    slider.noUiSlider.set([parseFloat(minVal),parseFloat(maxVal)]);\r\n                            });\r\n                    \r\n                            max_range.addEventListener('change', event => {\r\n                                var maxVal = max_range.value,\r\n                                    minVal = min_range.value;\r\n                                    slider.noUiSlider.set([parseFloat(minVal),parseFloat(maxVal)]);\r\n                            });\r\n                        }\r\n                    });\r\n                }, { integrated: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    //====> Return Phenix Query <====//\r\n    return this;\r\n}","/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Custom Variables <====*/\r\ndeclare var wc_add_to_cart_params: any;\r\n\r\n/*====> Add to Cart Method <====*/\r\nPhenixElements.prototype.pds_add_to_cart = function (button, quantity, product_id) {\r\n    //===> Check if the product_id is empty <===//\r\n    if (!product_id) { return; }\r\n\r\n    //===> Create Form Data Request <===//\r\n    const formURL = decodeURIComponent(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'add_to_cart'));\r\n    const formData = new URLSearchParams();\r\n    formData.append('quantity', quantity.toString());\r\n    formData.append('action', 'woocommerce_add_to_cart');\r\n    formData.append('product_id', product_id.toString());\r\n\r\n    //===> Send the request to WooCommerce via Fetch API <===//\r\n    fetch(formURL, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n        body: formData.toString()\r\n    })\r\n    //===> Return the Response as JSON data <===//\r\n    .then(response => response.json()).then(data => {\r\n        //===> Check for Data and Error <===//\r\n        if (data && data.error) {\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"error\",\r\n                position : [\"center\", \"center\"],\r\n                message  : 'Error adding to cart: ' + data.error,\r\n            });\r\n        } else {\r\n            //===> Disable loading mode <===//\r\n            button.classList.remove('px-loading-inline');\r\n\r\n            //===> Trigger WooCommerce's AJAX event to update the cart fragments <===//\r\n            document.body.dispatchEvent(new CustomEvent('pds_cart_updated', {detail: {}}));\r\n    \r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"success\",\r\n                position : [\"center\", \"center\"],\r\n                message  : \"Product added to cart successfully.\",\r\n            });\r\n        }\r\n    })\r\n    //===> Catch any errors <===//\r\n    .catch(error => console.error('Error:', error));\r\n};\r\n\r\n/*====> Remove Product Method <====*/\r\nPhenixElements.prototype.pds_remove_from_cart = function (formData, cartItemKey) {\r\n    //===> Send the AJAX request via Fetch API <===//\r\n    fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'remove_from_cart'), {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n        body: formData.toString()\r\n    })\r\n    //===> Return the Response as JSON data <===//\r\n    .then(response => response.json()).then(data => {\r\n        //===> Check for Data Fragments <===//\r\n        if (data.fragments) { //===> Fragments {cart_count, cart_total} <===//\r\n            //====> Remove the Item from the DOM <====//\r\n            document.querySelectorAll(`.cart-item[data-cart_item_key=\"${cartItemKey}\"]`).forEach(item => item.remove());\r\n\r\n            //===> Trigger WooCommerce's AJAX event to update the cart fragments <===//\r\n            document.body.dispatchEvent(new CustomEvent('pds_cart_updated', { detail: data }));\r\n\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"success\",\r\n                position : [\"center\", \"center\"],\r\n                message  : \"Product removed from cart successfully.\",\r\n            });\r\n        } \r\n        //===> Check for Error <===//\r\n        else if (data.error) {\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"error\",\r\n                position : [\"bottom\", \"end\"],\r\n                message  : 'Error removing from cart: ' + data.message,\r\n            });\r\n        }\r\n    })\r\n    //===> Catch any errors <===//\r\n    .catch(error => {\r\n        console.error('Error removing item from cart:', error);\r\n    });\r\n};\r\n\r\n/*====> Toggle Wishlist Method <====*/\r\nPhenixElements.prototype.pds_toggle_wishlist = function (isClicked, action_url, add_url, remove_url) {\r\n    //====> Send the Data to the Server <====//\r\n    fetch(action_url, {\r\n        method: \"GET\",\r\n        headers: {\"X-Requested-With\": \"XMLHttpRequest\"},\r\n    }).then(response => {\r\n        //====> Success Data <====//\r\n        if (response.ok) {\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"success\",\r\n                position : [\"bottom\", \"end\"],\r\n                message  : \"Wishlist Updated successfully.\",\r\n            });\r\n            //====> Replace Icon Style <====//\r\n            if (action_url.includes('add_to_wishlist')) {\r\n                isClicked.target.classList.add(\"fas\");\r\n                isClicked.target.classList.remove(\"far\");\r\n                isClicked.target.setAttribute(\"href\", remove_url);\r\n            } else {\r\n                isClicked.target.classList.add(\"far\");\r\n                isClicked.target.classList.remove(\"fas\");\r\n                isClicked.target.setAttribute(\"href\", add_url);\r\n            }\r\n            //====> Remove Loading Mode <====//\r\n            isClicked.target.classList.remove(\"px-loading-inline\");\r\n        }\r\n        //====> Error Status <====//\r\n        else {\r\n            //====> Show Notifications <====//\r\n            Phenix(document).notifications({\r\n                duration : 5000,\r\n                type     : \"error\",\r\n                position : [\"bottom\", \"end\"],\r\n                message  : \"Failed to update wishlist\",\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n/*====> D.O.M is Ready ? <====*/\r\nPhenix(document).on(\"DOMContentLoaded\", (loaded) => {\r\n    //===> Mini Cart Updater <===//\r\n    document.body.addEventListener('pds_cart_updated', function() {\r\n        //===> Fetch the updated cart fragments using Fetch API <===//\r\n        fetch(wc_add_to_cart_params.wc_ajax_url.replace('%%endpoint%%', 'get_refreshed_fragments'), {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'},\r\n        })\r\n        //===> Return the Response as JSON data <===//\r\n        .then(response => response.json()).then(data => {\r\n            //===> Check for the Cart Fragments <===//\r\n            //===* data {div.widget_shopping_cart_content, .cart-table, cart_count, cart_total} <===//\r\n            if (data && data.fragments) {   \r\n                //===> Cart Content Fragment <===//\r\n                const newCartContent = data.fragments[\"div.widget_shopping_cart_content\"];\r\n    \r\n                //===> Temporary Container for the Content <===//\r\n                const tempDiv = document.createElement('div');\r\n                tempDiv.innerHTML = newCartContent;\r\n                tempDiv.innerHTML += data.fragments['.cart-table'];\r\n    \r\n                //===> Update The Mini Cart Items <===//\r\n                Phenix(\".pds-cart-fragment .woocommerce-mini-cart\").forEach(cart => cart.innerHTML = tempDiv.querySelector('.widget_shopping_cart_content').innerHTML);\r\n    \r\n                //===> Update Cart Table <===//\r\n                Phenix(\".woocommerce-cart-form\").forEach(table => table.innerHTML = data.fragments['.cart-table']);\r\n    \r\n                //====> Update Cart Count <====//\r\n                Phenix(\".cart-count\").forEach(item => item.innerHTML = data.fragments['cart_count']);\r\n    \r\n                //===> Update Cart Item Remover <===//\r\n                Phenix(\".cart-item .cart-item-remover\").on(\"click\", (isClicked) => {\r\n                    //===> Prevent link navigation <===//\r\n                    isClicked.preventDefault();\r\n                    const button = isClicked.target;\r\n    \r\n                    //===> Get the Item Key <===//\r\n                    const cartItemKey = button.getAttribute('data-cart_item_key');\r\n    \r\n                    //===> Activate Loading Mode <===//\r\n                    Phenix(button).ancestor('.cart-item').classList.add('px-loading-inline');\r\n    \r\n                    //===> Create Form Data Request <===//\r\n                    const formData = new URLSearchParams();\r\n                    formData.append('cart_item_key', cartItemKey);\r\n                    formData.append('action', 'woocommerce_remove_cart_item');\r\n    \r\n                    //===> Remove the Item from the Cart <===//\r\n                    Phenix(document).pds_remove_from_cart(formData, cartItemKey);\r\n                }, true);\r\n            }\r\n        })\r\n        //===> Catch any errors <===//\r\n        .catch(error => console.error('Error:', error));\r\n    });\r\n\r\n    //===> WooCommerce Sorting <===//\r\n    Phenix('.woocommerce-ordering select').on('change', (select) => {\r\n        //====> Get the Current Value <====//\r\n        const sortValue = select.target.value;\r\n        //====> Create new URL Params <====//\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        //====> Set URL Params <====//\r\n        urlParams.set('orderby', sortValue);\r\n        //====> Reload page with selected sorting <====//\r\n        window.location.search = urlParams.toString();\r\n    });\r\n \r\n    //===> WooCommerce Add to Cart <===//\r\n    Phenix(\".pds-add-to-cart\").on(\"click\", (isClicked) => {\r\n        //===> Prevent link navigation <===//\r\n        isClicked.preventDefault();\r\n        \r\n        //===> Define Item Data <===//\r\n        const button = isClicked.target;\r\n\r\n        //===> Get Product ID <===//\r\n        const productId = button.getAttribute('data-variation') || button.getAttribute('data-product');\r\n\r\n        //===> Get Quantity <===//\r\n        const ancestor = Phenix(button).ancestor('.single-product-content') || Phenix(button).ancestor('.product-var-item');\r\n        const quantity = ancestor?.querySelector('.quantity-input')?.value || parseInt(button.getAttribute('data-quantity')) || 1;\r\n\r\n        //===> Activate Loading Mode <===//\r\n        button.classList.add('px-loading-inline');\r\n \r\n        //===> Add the Item to the Cart <===//\r\n        Phenix(document).pds_add_to_cart(button, quantity, productId);\r\n    }, true);\r\n \r\n    //===> WooCommerce Cart Item Remover <===//\r\n    Phenix(\".cart-item .cart-item-remover\").on(\"click\", (isClicked) => {\r\n         //===> Prevent link navigation <===//\r\n         isClicked.preventDefault();\r\n         const button = isClicked.target;\r\n \r\n         //===> Get the Item Key <===//\r\n         const cartItemKey = button.getAttribute('data-cart_item_key');\r\n \r\n         //===> Activate Loading Mode <===//\r\n         Phenix(button).ancestor('.cart-item').classList.add('px-loading-inline');\r\n \r\n         //===> Create Form Data Request <===//\r\n         const formData = new URLSearchParams();\r\n         formData.append('cart_item_key', cartItemKey);\r\n         formData.append('action', 'woocommerce_remove_cart_item');\r\n         \r\n         //===> Remove the Item from the Cart <===//\r\n         Phenix(document).pds_remove_from_cart(formData, cartItemKey);\r\n    }, true);\r\n\r\n    //===> Wishlist Toggle <===//\r\n    Phenix(\".pds-wishlist-btn\").on(\"click\", (isClicked) => {\r\n        //===> Prevent Default <===//\r\n        isClicked.preventDefault();\r\n        //===> Define Data <===//\r\n        let action_url = isClicked.target.getAttribute('href'),\r\n            add_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-rm-url\")),\r\n            remove_url = isClicked.target.setAttribute(\"href\", isClicked.target.getAttribute(\"data-add-url\"));\r\n\r\n        //====> Add Loading Mode <====//\r\n        isClicked.target.classList.add(\"px-loading-inline\");\r\n\r\n        Phenix(document).pds_toggle_wishlist(isClicked, action_url, add_url, remove_url);\r\n    }, true);\r\n\r\n    //===> Add Multiple Products from Cart Page <===//\r\n    Phenix(\".pds-add-products-form .add-products-btn\").on(\"click\", (isClicked) => {\r\n        //===> Prevent link navigation <===//\r\n        isClicked.preventDefault();\r\n\r\n        //===> Define Item Data <===//\r\n        const button = isClicked.target;\r\n        const products = Phenix(button).ancestor('.pds-add-products-form').querySelector(\".px-select\").getAttribute(\"data-value\").split(\",\");\r\n        //===> Get Quantity <===//\r\n        const quantity = Phenix(button).ancestor('.pds-add-products-form')?.querySelector('.quantity-input')?.value || parseInt(button.getAttribute('data-quantity')) || 1;\r\n\r\n        //===> Activate Loading Mode <===//\r\n        button.classList.add('px-loading-inline');\r\n\r\n        //===> Add the Items to the Cart <===//\r\n        products.forEach(product => {\r\n            Phenix(product).pds_add_to_cart(button, quantity, product);\r\n        });\r\n    });\r\n\r\n    //===> Variation Price Change <===//\r\n    Phenix(\".variation-control\").on(\"change\", isChanged => {\r\n        //===> Make sure it is a valid controller <===//\r\n        if (!isChanged.target.value) return;\r\n\r\n        //===> Capture Select Element <===//\r\n        let element = isChanged.target;\r\n        let option = element.querySelector(`option[value=\"${element.value}\"]`);\r\n\r\n        //===> Get Data <===//\r\n        let variation = element.value;\r\n        let price = option?.getAttribute('data-price');\r\n\r\n        //===> Update the Prices <===//\r\n        Phenix(\".single-product-content .price .price-num\").forEach(element => element.textContent = price);\r\n\r\n        //===> Set Variation ID to Add to Cart Button <===//\r\n        if (variation) Phenix(\".single-product-content .pds-add-to-cart\").setAttributes({ \"data-variation\": element.value });\r\n    });\r\n});","/**======> Reference By Comment <======\r\n * ===> 01 - Phenix Object\r\n*/\r\n\r\n/*====> Phenix JS <====*/\r\nimport Phenix from \"..\";\r\ndeclare var wp:any, PDS_WP_KEY:any, window:any;\r\n\r\n/*====> D.O.M is Ready ? <====*/\r\nPhenix(document).on(\"DOMContentLoaded\", (loaded) => {\r\n    //===> Contact Form 7 Fixes <===//\r\n    const fixCF7 = () => {\r\n        //====> Forms Validation <====//\r\n        Phenix('.wpcf7-form, .px-form-validation').validation();\r\n\r\n        //====> Fetching Form Data for CF7 <=====//\r\n        document.querySelectorAll('.wpcf7-form').forEach((form:any) => {\r\n            //====> on Submit Prevent the Native behavior and submit with Fetch <====//\r\n            form.addEventListener('submit', (event:any) => {\r\n                //====> Prevent the default form submission <====//\r\n                event.preventDefault();\r\n\r\n                //====> Get Submit Button <====//\r\n                const submitButton = form.querySelector('input[type=\"submit\"]') || form.querySelector('button[type=\"submit\"]') || form.querySelector('.btn:last-of-type');\r\n\r\n                //====> Check if the form is valid <====//\r\n                if(!form.querySelector('.px-validation') && !form.querySelector('.error')) {\r\n                    //====> Disable Form <====//\r\n                    submitButton.classList.add('px-loading-inline');\r\n\r\n                    //====> Date/Time Reformated <====//\r\n                    const dateTimeFormatter = (dateString) => {\r\n                        //===> Get Current Date and Time Data <===//\r\n                        let date = new Date(dateString),\r\n                            year = date.getFullYear(),\r\n                            month = ('0' + (date.getMonth() + 1)).slice(-2),\r\n                            day = ('0' + date.getDate()).slice(-2),\r\n                            hours = ('0' + date.getHours()).slice(-2),\r\n                            minutes = ('0' + date.getMinutes()).slice(-2);\r\n\r\n                        //===> Construct a readable date and time format <===//\r\n                        return year + '-' + month + '-' + day + ' ' + hours + ':' + minutes;\r\n                    }\r\n\r\n                    //====> Create a new FormData object from the form <====//\r\n                    const formData = new FormData(form);\r\n\r\n                    //====> Loop through each entry in the FormData object <===//\r\n                    for (const pair of formData.entries()) {\r\n                        //====> Check if the entry value is a date/time string <====//\r\n                        if (typeof pair[1] === 'string' && pair[1].match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/)) {\r\n                            //====> Reformat the date/time string <====//\r\n                            formData.set(pair[0], dateTimeFormatter(pair[1]));\r\n                        }\r\n                    }\r\n\r\n                    //====> Submit with Ajax [Fetch] <====//\r\n                    fetch(form.getAttribute('action'), {\r\n                        body: formData,\r\n                        method: form.getAttribute('method'),\r\n                    }).then(response => {\r\n                        //====> Check Network Connection <====//\r\n                        if (!response.ok) {\r\n                            //===> Show Failed Message <===//\r\n                            Phenix(document).notifications({\r\n                                type: \"error\",\r\n                                duration: \"7000\",\r\n                                position: [\"center\", \"center\"],\r\n                                message: \"Network response was not ok\",\r\n                            });\r\n    \r\n                            //===> Throw an Error <====//\r\n                            throw new Error('Network response was not ok');\r\n                        }\r\n                        //====> Return Response Text <====//\r\n                        return response.text();\r\n                    }).then(data => {\r\n                        //====> Enable Form <====//\r\n                        submitButton.classList.add('px-loading-inline');\r\n                        // //===> Reset Forms on Loading <===//\r\n                        // Phenix('.wpcf7 input:not([type=\"hidden\"]):not(.btn):not([type=\"submit\"]), .wpcf7 select, .wpcf7 textarea').forEach((input:any) => {input.value = '';});\r\n\r\n                        // //===> Reset PX Select Component <===//\r\n                        // form.querySelectorAll('div.px-select').forEach((element: any) => {\r\n                        //     let firstOption = element.querySelector('.px-select-option:first-child');\r\n                        //     const toggleButton = element.querySelector('.px-select-toggle');\r\n                        //     if (!firstOption) firstOption = element.querySelector('.px-select-option:nth-child(2)');\r\n                            \r\n                        //     toggleButton.textContent = firstOption.textContent;\r\n                        // });\r\n                        //====> Disable Form <====//\r\n                        submitButton.classList.remove('px-loading-inline');\r\n                        //===> Redirect to Success <===//\r\n                        const sourceParameter = window.location.href.replace(PDS_WP_KEY.site, '');\r\n                        const successSlug = form.querySelector('[name=\"success_slug\"]')?.value || 'success';\r\n                        window.location.href = `${PDS_WP_KEY.site ? PDS_WP_KEY.site + `/${successSlug}/?source=${sourceParameter}` : `/${successSlug}/?source=${sourceParameter}`}`;\r\n                    }).catch(error => {\r\n                        //===> Show Error Message <===//\r\n                        Phenix(document).notifications({\r\n                            type: \"error\",\r\n                            duration: \"7000\",\r\n                            position: [\"center\", \"center\"],\r\n                            message: error,\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //===> CF7 Style Fixes <===//\r\n        if (document.querySelector(\".wpcf7-form\")) {\r\n            //===> Textarea <===//\r\n            Phenix('.wpcf7-textarea').forEach((element:any) => {\r\n                element.setAttribute('cols', null);\r\n                element.setAttribute('rows', null);\r\n            });\r\n\r\n            //===> Required <===//\r\n            Phenix('.wpcf7-validates-as-required').forEach((element:any) => element.setAttribute('required', true));\r\n\r\n            /*===== Whitespace =====*/\r\n            Phenix('.wpcf7-form br').forEach((space:HTMLElement) => space.remove());\r\n            Phenix('.wpcf7[dir], .wpcf7 [dir]').forEach((element:HTMLElement) => element.removeAttribute('dir'));\r\n        }\r\n    },\r\n\r\n    //====> S.E.O : Fixes <====//\r\n    fixSEO = () => {\r\n        //====> Schema Meta Data Set <====//\r\n        if(!document.body.getAttribute('itemscope')) document.body.setAttribute('itemscope', \"\");\r\n        if(!document.body.getAttribute('itemtype')) document.body.setAttribute('itemtype', \"https://schema.org/WebPage\");\r\n\r\n        //====> Create Placeholder Keywords <=====//\r\n        let pds_meta_description = document.querySelector('.entry-content p:first-of-type')?.textContent.substring(0, 160);\r\n\r\n        //====> Check for Headline Level 1 <====//\r\n        if(!document.querySelector('h1')) Phenix('.main-header').insert('append', `<h1 class=\"hidden\">${document.title}</h1>`);\r\n\r\n        //====> S.E.O : Missing Meta <====//\r\n        if (!document.head.querySelector('meta[name=\"description\"]')) Phenix(document.head).insert('append', `<meta name=\"description\" content=\"${pds_meta_description}\">`);\r\n\r\n        //====> Inputs do not have a discernible name <====//\r\n        Phenix('input:not([title]):not([type=\"submit\"]), select:not([title])').forEach((element:HTMLElement) => {\r\n            //===> Define Data <===//\r\n            let element_label = element.getAttribute('placeholder') || element.getAttribute('data-placeholder');\r\n\r\n            //===> If the placeholder is not valid <===//\r\n            if (!element_label) {\r\n                //===> Get the Label <===//\r\n                let label = Phenix(element).prev('label') || Phenix(element).next('label') || element.closest('label');\r\n                //=== Get the Controller Parent ====//\r\n                let element_parent = Phenix(element).ancestor('p') || Phenix(element).ancestor('[class*=\"col\"]') || Phenix(element).ancestor('div');\r\n                //===> if the label not exist get the parent text <====//\r\n                if (!label && element_parent) label = Phenix(element_parent).prev('label') || Phenix(element_parent).next('label');\r\n                //===> Correct Label if there are none <===//\r\n                if (label && label.textContent) element_label = label.textContent.trim();\r\n            }\r\n\r\n            //===> Set Attributes <===//\r\n            if(!element.getAttribute('aria-label')) element.setAttribute('aria-label', `${element_label}`);\r\n            if(!element.getAttribute('title') || element.getAttribute('title') === \"\") element.setAttribute('title', `${element_label}`);\r\n            if(!element.getAttribute('placeholder') || element.getAttribute('placeholder') === \"\") element.setAttribute('placeholder', `${element_label}`);\r\n        });\r\n\r\n        //===> Buttons Fixes <===//\r\n        Phenix('button.btn:not([type])').forEach((button:HTMLElement) => {\r\n            //===> Check if the Button in a Form <===//\r\n            let checkForForm = Phenix(button).ancestor('form'),\r\n                checkForInput = checkForForm?.querySelector('[type=\"submit\"]');\r\n\r\n            //===> Set Type Attribute <===//\r\n            if (!checkForForm || !checkForInput) button.setAttribute('type', \"button\");\r\n            else if (checkForForm && !checkForInput) button.setAttribute('type', 'submit');\r\n        });\r\n    };\r\n\r\n    const isEditor = document.querySelector(\"#site-editor\") || document.querySelector('body[class*=\"editor\"]');\r\n    const isAdmin  = document.body?.classList?.contains('wp-admin');\r\n\r\n    /*====> Unblock Fonts <====*/\r\n    Phenix('#fontawesome-css, #pds-icons-css, #pds-cfont-css, #theme-style-css, #phenix-css, #pds-primary-font-css, #pds-secondary-font-css, #pds-style-font-css').forEach((style:HTMLElement) => style.setAttribute('media', 'all'));\r\n\r\n    /*====> for Front-End <====*/\r\n    if (!isAdmin && !isEditor) {\r\n        /*====> Activated Menu Items <====*/\r\n        Phenix('.current-menu-parent, .current-menu-item').addClass('px-item-active');\r\n        Phenix(\".px-navigation.has-active-submenu .px-item-active\").addClass(\"px-submenu-active\");\r\n\r\n        //===> Run Scripts <===//\r\n        Phenix(document).init();\r\n        \r\n        //====> Start Fixes <====//\r\n        fixCF7(); fixSEO();\r\n\r\n        //====> Adminbar Fix <====//\r\n        if (document.querySelector('#wpadminbar')) Phenix('body').css({ \"padding\": \"0\", 'padding-top' : '32px', \"margin-top\": \"-24px\"});\r\n        \r\n        //===> Alignwide Fix <===//\r\n        Phenix(\".alignfull\").forEach((element:HTMLElement) => element.classList.remove('alignfull'));\r\n\r\n        //===> Set Logo Link <===//\r\n        Phenix(\".wp-block-phenix-logo\").setAttributes({\"href\": PDS_WP_KEY?.site || \"/\"});\r\n    }\r\n\r\n    /*====> for Admin Panel <====*/\r\n    else if (isAdmin && !isEditor) {\r\n        //===> Fix Tables Style <===//\r\n        Phenix('.wp-list-table .column-date, .wp-list-table .column-author').forEach((dateColumn:HTMLElement) => {\r\n            dateColumn.classList.add('tx-nowrap');\r\n            dateColumn.innerHTML = dateColumn.innerHTML.replace('<br>', ' ');\r\n        });\r\n\r\n        //===> Fix Tables Style <===//\r\n        Phenix('.wp-list-table .row-actions span').forEach((spanLink:HTMLElement) => spanLink.innerHTML = spanLink.innerHTML.replace('|', ''));\r\n        \r\n        //===> Run Scripts <===//\r\n        Phenix(document).init();\r\n    }\r\n\r\n    /*====> for Block Editor <====*/\r\n    if(isEditor) {\r\n        //====> Disable Links <====//\r\n        Phenix('.editor-styles-wrapper a[href]').on('click', clicked => clicked.preventDefault(), true);\r\n    }\r\n\r\n    /*====> for Block Editor and Admin <====*/\r\n    else if (isEditor || isAdmin) {}\r\n});\r\n\r\n//===> Create WP Uploader <===//\r\nwindow.PxWpUploader = isClicked => {\r\n    //===> Prevent Default <===//\r\n    isClicked.preventDefault();\r\n    let input = Phenix(isClicked.target).next(\".uploader-input\");\r\n\r\n    //===> Preview <===//\r\n    let input_preview = document.querySelector('.loading-image'),\r\n        value_preview = Phenix(input).ancestor('.px-custom-uploader')?.querySelector('.input-value');\r\n\r\n    //===> Track Media Frame for Each Instance <===//\r\n    if (!isClicked.target.mediaPopup) {\r\n        //===> Create Media Popup if it Doesn't Exist <===//\r\n        isClicked.target.mediaPopup = wp.media({\r\n            title: \"Upload Image\",\r\n            multiple: false\r\n        });\r\n\r\n        //===> Handle Media Selection <===//\r\n        isClicked.target.mediaPopup.on(\"select\", () => {\r\n            //===> Get the Image URL <===//\r\n            var uploaded_image = isClicked.target.mediaPopup.state().get(\"selection\").first();\r\n    \r\n            //===> Set the URL to the Input <===//\r\n            input.value = uploaded_image.toJSON().url;\r\n    \r\n            //===> Set Preview and Value <===//\r\n            if (input_preview) input_preview.setAttribute('src', uploaded_image.toJSON().url);\r\n            if (value_preview) value_preview.textContent = uploaded_image.toJSON().name;\r\n        });\r\n    }\r\n\r\n    //===> Open the Popup <===//\r\n    isClicked.target.mediaPopup.open();\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(929);\n"],"names":["root","factory","exports","module","define","amd","this","PhenixElements","prototype","dropdown","options","forEach","dropdown_wrapper","classList","contains","siblings","inline","attr","getAttribute","active","toggle","target","position","exclude","activated","delay","effect","type","display","duration","dropdown_target","querySelector","change_position","dynamicPosition","setAttribute","hide_others","ancestor","current_effect","remove","sibling","fadeOut","slideUp","toggle_element","addEventListener","clicked","event","preventDefault","event_trigger","matches","toggleClass","fadeToggle","slideToggle","dropdown_start","window","blank","exclude_final","addClass","replace","split","the_target","isScrolling","scrolling","passive","setInterval","add","multimedia","background","element","source","encodeURI","replaceAll","style","backgroundImage","mediaDone","undefined","length","src","alt","ratio","size","splide","marquee","embed","cover","gradient","value","gradient_mode","mode","gradient_repeat","repeat","lazy","document","toBoolean","lazyloading","controls","autoplay","loop","muted","player_autoplay","toString","includes","ratio_convert","parseInt","setProperty","mediaHandle","multiple","removeProperty","insert","backgroundColor","currentBg","orderBG","media_attributes","video","on","play","pause","canvas","modelTypeForCanvas","extension","pop","toLowerCase","canvasHTML","dataset","threeInitialized","assetsBasePath","PDS_WP_KEY","viewerOptions","modelPath","object","modelType","autoRotate","threeUtils","initializeViewer","catch","err","console","error","import","integrated","inView","offset","callback","menu","menu_id","hover","sub_active","arrow","responsive","mobile","submenus","querySelectorAll","dropdowns","submenu_item","getCSS","submenu_toggle","parentNode","arrow_icon","toggle_btn","index","iconName","submenu","push","submenus_handle","elements","click","parent","viewport","resized","body","innerHTML","removeAttribute","removeClass","trigger","popup","timeout","showon","onload","hash_url","backdrop","modal_id","showed","Event","hidden","show_modal","current_active","hide_modal","fadeIn","dispatchEvent","isClicked","thumbnail","media_url","lightbox_group","lightbox_wrapper","media_type","url","slider_wrapper","item","slider","setTimeout","location","hash","substr","selector","triggers_select","setAttributes","progress","color","label","setProgress","bar","progress_handler","parseFloat","width","circle_path","circle_text","current_value","CountUpTimer","textContent","clearInterval","meter_calc","getTotalLength","radial_path","Math","max","feature","progressBar","height","toREM","lineHeight","clientWidth","svg","circle_shape","direction","rating","rating_name","input","maxRate","i","rateElement","next","prev","ele","select","events_data","classes","hasAttribute","maxItems","search","placeholder","searchPlaceholder","opened","CustomEvent","detail","bubbles","cancelable","change","closed","tagName","isUpdated","rebuildSelect","select_component","hasWrapper","new_select","css","options_list","select_create","option","current_item","option_text","option_value","option_classes","image_icon","sub_option","original_classes","cl","new_select_value","new_value_group","tag_classes","tag_remover","first_option","first_label","first_classes","holder","first_image","image","set_tag_remover","value_element","tag_value","select_values","val","splice","tag_padding_fixer","get_default_value","selected_option","default_value","default_label","new_classes","new_image","current_image","default_values","search_element","holder_classes","holder_image","typing","search_value","headline","option_label","original","list","select_toggle","select_search","check_clicked","check_clicked_2","set_value","prevValue","current_values","isSelected","original_option","prev_classes","concat","selectWrapper","tabs","navigation","panels","buttons","isHashed","log","panel","button","tab_id","childNodes","href","history","pushState","additionalInformation","title","TabElement","TabDisplay","timer","time","date","message","start_event","end_event","timer_handler","childs","seconds","minutes","hours","days","reverse","join","stringDate","Date","getTime","update","current","elapsed","floor","padStart","uploader","controler","filePath","files","name","changeFile","fileType","fileUrl","filesList","URL","createObjectURL","file","videoCheck","dataTransfer","ready","animations","thirdParty","animationsToLoad","getURL","phenixCSS","Array","isArray","pkg","loadAnimationCSS","animateCSS","pageDir","animation","lazygroup","currentAnimation","baseStagger","stagger","animationOrder","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","threshold","observe","scrollDriven","completeAt","drivenEnd","exitAnimation","exit","handleScrollProgress","rect","getBoundingClientRect","viewHeight","innerHeight","exitProgress","completionPoint","top","bottom","min","MutationObserver","mutations","obs","removeEventListener","disconnect","childList","subtree","into","isScrollingDown","boundingClientRect","rootMargin","collapse","related","active_class","className","normal_icon","active_icon","collapse_handler","slideDown","counter","decimal","symbol","steps","counting","nodeName","count","increment","ceil","interval","decimal_regex","runCounter","abs","toFixed","counter_handler","bind","getComputedStyle","fullHeight","scrollHeight","initialStyles","timespeed","startTime","performance","now","animateSlideUp","currentTime","elapsedTime","paddingTop","paddingBottom","requestAnimationFrame","animateSlideDown","animateFadeOut","opacity","animateFadeIn","property","directionStart","directionEnd","inlineDisplay","visibility","padding","pseudo","styles","copyrights","project_name","info","phenix_js","substring","lastIndexOf","script","page","pathname","phenixJS","notifications","item_position","y_pos","x_pos","scrollSpy","spotFlow","flow","spotInto","spotOffset","spyWrapper","smothScroll","hasScrollWrapper","clientHeight","scrollWidth","scrollIntoView","behavior","persistent","start","viewPos","round","pageYOffset","scrollY","posTest","activator","timeElapsed","scrollAnimate","timeFunc","scrollTo","sticky","offsetTop","currentScroll","offsetLeft","scrollX","validation","defaults","patterns","errorHandler","inputWrapper","hasError","errors_list","append","reset_status","setCustomValidity","valid_control","submit","validate","checked","validity","valueMissing","typeMismatch","badInput","patternMismatch","test","tooLong","rangeOverflow","tooShort","rangeUnderflow","stepMismatch","valid","checkValidity","invalid","isSubmitting","pattern","inputs","regEx","flowOn","_phenixObservers","observerOptions","isVisible","documentElement","innerWidth","target_element","Phenix","panel_size","stickyElement","stickySize","id","tag","moduleMap","isIntegrated","isModule","importMap","libPath","trueUrl","createElement","appendChild","head","audioTrigger","HTMLElement","audio_player","audio_file","paused","isEnded","readyState","queueMicrotask","once","classNamesArray","classNamesLength","j","classNamesSet","Set","hasClass","some","ancestors","children","from","child","all_target","nextUnit","nextElementSibling","prevUnit","previousElementSibling","all_childs","clearInline","key","Object","attributes","keys","attribute","elementsPackage","new_package","createRange","createContextualFragment","insertBefore","nextSibling","prepend","firstChild","lastChild","live","timeLoop","lazyLoading","playable","preloaded","mediaQuery","breakpoint","fn_callback","mobile_first","createQuery","current_vw","resizing","base","copyText","text","blob","Blob","data","ClipboardItem","navigator","clipboard","write","selected","filteredElements","filter","init","scripts","link","left","dataOptions","JSON","parse","grid_element","main_header","header_holder","sticky_wrapper","classNames","menu_item","utilities","slider_handler","verticalFix","slides","slider_integration","media_elements","media","audioTriggers","action_url","add_url","remove_url","pds_toggle_wishlist","slider_creator","currentClasses","slider_track","slider_list","current_slides","slide","focus","items","speed","rewind","breakpoints","pauseOnHover","intersection","wheel","pagination","sync","drag","isNavigation","updateAfter","waitForTransition","wheelSleep","releaseWheel","autoWidth","autoHeight","fixedWidth","fixedHeight","heightRatio","perPage","controls_class","pagination_class","arrow_class","page_class","slider_options","perMove","paginationDirection","updateOnMove","snap","rewindSpeed","rewindByDrag","role","labelledby","arrows","track","current_slider","the_slider","Splide","iframe","playing","mount_slider","sync_selector","synced_slider","synced_splide","mount","slide_item","go","splide_loader","splide_url","ev","control","form","repeater_container","add_btn","fields_key","items_list","original_row","create_remove_btn","repeater_row","currentRemoveBtn","cloneNode","newRow","currentRows","checkRemoveBtn","rows","row","relation","numbers","match","characters","decrease","increase","minValue","maxValue","inputSteps","newVal","toTopHook","transformColor","amount","rgb","map","Number","c","isLightOrDark","all","bgColor","bgImage","darkerRgb","lighterRgb","colors","colorOne","colorTwo","rightClick","textSelect","img","img_width","parent_width","trim","last_title","postContent","content_menu","headlines","itemHtml","last_item","last_list","document_classes","grid","first_child_class","Masonry","itemSelector","text_list","text_list_items","text_element","isReady","typeWriter","tinyTypewriter","cursor","startDelay","marquee_slider","marquee_slides","marquee_id","initMarqueeSlider","allowPointEvent","dir","stopOnHover","RangeSliders","page_direction","minRange","maxRange","noUiSlider","create","step","connect","tooltips","range","min_range","max_range","values","handle","maxVal","minVal","set","pds_add_to_cart","quantity","product_id","formURL","decodeURIComponent","wc_add_to_cart_params","wc_ajax_url","formData","URLSearchParams","fetch","method","headers","then","response","json","pds_remove_from_cart","cartItemKey","fragments","ok","loaded","newCartContent","tempDiv","cart","table","sortValue","urlParams","productId","products","product","isChanged","variation","price","isEditor","isAdmin","dateColumn","spanLink","submitButton","dateTimeFormatter","dateString","getFullYear","getMonth","slice","getDate","getHours","getMinutes","FormData","pair","Error","sourceParameter","site","successSlug","space","pds_meta_description","element_label","closest","element_parent","checkForForm","checkForInput","fixSEO","PxWpUploader","input_preview","value_preview","mediaPopup","wp","uploaded_image","state","get","first","toJSON","open","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}