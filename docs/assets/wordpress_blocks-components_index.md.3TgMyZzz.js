import{_ as e,c as o,o as n,ag as r}from"./chunks/framework.CifvWIav.js";const g=JSON.parse('{"title":"Shared Components System","description":"","frontmatter":{},"headers":[],"relativePath":"wordpress/blocks-components/index.md","filePath":"wordpress/blocks-components/index.md"}'),s={name:"wordpress/blocks-components/index.md"};function i(a,t,l,d,c,p){return n(),o("div",null,t[0]||(t[0]=[r('<h1 id="shared-components-system" tabindex="-1">Shared Components System <a class="header-anchor" href="#shared-components-system" aria-label="Permalink to &quot;Shared Components System&quot;">​</a></h1><p>The Phenix Blocks plugin features a powerful shared components system that provides a consistent and reusable set of UI controls for block editing. This system is the foundation that enables the rich editing experience across all Phenix blocks.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The shared components system consists of modular, reusable React components that handle common UI patterns and functionality across different blocks. These components are designed to:</p><ol><li><strong>Maintain consistency</strong> across the block editing experience</li><li><strong>Reduce code duplication</strong> by centralizing common UI patterns</li><li><strong>Simplify block development</strong> by providing ready-to-use controls</li><li><strong>Enable responsive editing</strong> through consistent responsive controls</li><li><strong>Provide a framework-aligned experience</strong> by matching the front-end capabilities</li></ol><h2 id="component-architecture" tabindex="-1">Component Architecture <a class="header-anchor" href="#component-architecture" aria-label="Permalink to &quot;Component Architecture&quot;">​</a></h2><p>The shared components system is organized into several categories:</p><h3 id="core-controls" tabindex="-1">Core Controls <a class="header-anchor" href="#core-controls" aria-label="Permalink to &quot;Core Controls&quot;">​</a></h3><p>Basic UI controls that handle fundamental user interactions:</p><ul><li><strong>Input Controls</strong>: Text inputs, number inputs, and textareas</li><li><strong>Selection Controls</strong>: Dropdowns, select menus, and data-driven selects</li><li><strong>Toggle Controls</strong>: Switches and checkboxes</li><li><strong>Media Controls</strong>: Media uploaders and selectors</li><li><strong>Navigation Controls</strong>: Tabs and navigation interfaces</li><li><strong>Special Controls</strong>: Icon selectors, URL controls, and other specialized inputs</li></ul><h3 id="control-sets" tabindex="-1">Control Sets <a class="header-anchor" href="#control-sets" aria-label="Permalink to &quot;Control Sets&quot;">​</a></h3><p>Grouped controls that manage related properties:</p><ul><li><strong>Layout Sets</strong>: Controls for flexbox, grid, positioning, and sizing</li><li><strong>Styling Sets</strong>: Controls for typography, colors, borders, and effects</li><li><strong>Spacing Sets</strong>: Controls for margin and padding</li><li><strong>Interactive Sets</strong>: Controls for animations and sliders</li></ul><h3 id="integration-helpers" tabindex="-1">Integration Helpers <a class="header-anchor" href="#integration-helpers" aria-label="Permalink to &quot;Integration Helpers&quot;">​</a></h3><p>Utility functions and components that help integrate the controls with the WordPress block editor:</p><ul><li><strong>Options Renderer</strong>: Processes block attributes and generates appropriate classes</li><li><strong>Block Accessibility</strong>: Ensures blocks meet accessibility standards</li><li><strong>Responsive Controls</strong>: Manages responsive property editing across breakpoints</li><li><strong>Attribute Management</strong>: Handles setting and updating block attributes</li></ul><h2 id="integration-with-blocks" tabindex="-1">Integration with Blocks <a class="header-anchor" href="#integration-with-blocks" aria-label="Permalink to &quot;Integration with Blocks&quot;">​</a></h2><p>Blocks use the shared components in their <code>edit.js</code> files to create their editing interfaces. The components are distributed between two main areas of the block editor:</p><h3 id="toolbar-controls-blockcontrols" tabindex="-1">Toolbar Controls (BlockControls) <a class="header-anchor" href="#toolbar-controls-blockcontrols" aria-label="Permalink to &quot;Toolbar Controls (BlockControls)&quot;">​</a></h3><p>Components that appear in the top toolbar when a block is selected. These controls provide quick access to frequently used settings and are designed for efficiency and immediate visual feedback.</p><h4 id="common-toolbar-controls" tabindex="-1">Common Toolbar Controls <a class="header-anchor" href="#common-toolbar-controls" aria-label="Permalink to &quot;Common Toolbar Controls&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Control Type</th><th>Description</th><th>Example Usage</th></tr></thead><tbody><tr><td>HTML Tag Selection</td><td>Dropdown for selecting semantic HTML elements</td><td>Changing a container from <code>div</code> to <code>section</code></td></tr><tr><td>Container Type</td><td>Toggle between fixed-width and fluid containers</td><td>Switching a container to full-width</td></tr><tr><td>Section Toggle</td><td>Convert between regular container and section</td><td>Making a container into a full section</td></tr><tr><td>Layout Controls</td><td>Dropdown menus for layout configuration</td><td>Accessing flexbox, margin, padding settings</td></tr><tr><td>Alignment Controls</td><td>Buttons for content alignment</td><td>Setting horizontal/vertical alignment</td></tr><tr><td>Spacing Controls</td><td>Quick access to margin and padding</td><td>Adjusting spacing with visual feedback</td></tr><tr><td>Position Settings</td><td>Controls for element positioning</td><td>Setting relative/absolute positioning</td></tr><tr><td>Border Options</td><td>Controls for border styling</td><td>Adding borders with custom styles</td></tr><tr><td>Effects Options</td><td>Controls for visual effects</td><td>Adding shadows, opacity effects</td></tr></tbody></table><h3 id="sidebar-controls-inspectorcontrols" tabindex="-1">Sidebar Controls (InspectorControls) <a class="header-anchor" href="#sidebar-controls-inspectorcontrols" aria-label="Permalink to &quot;Sidebar Controls (InspectorControls)&quot;">​</a></h3><p>Components that appear in the right sidebar when a block is selected. These controls provide more detailed configuration options organized into panels for comprehensive block customization.</p><h4 id="common-sidebar-panels" tabindex="-1">Common Sidebar Panels <a class="header-anchor" href="#common-sidebar-panels" aria-label="Permalink to &quot;Common Sidebar Panels&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Panel Type</th><th>Description</th><th>Example Controls</th></tr></thead><tbody><tr><td>General Options</td><td>Basic block configuration</td><td>HTML ID, anchor settings, block-specific toggles</td></tr><tr><td>Style Options</td><td>Visual styling properties</td><td>Background, color, border, effects settings</td></tr><tr><td>Typography</td><td>Text styling controls</td><td>Font family, size, weight, line height, spacing</td></tr><tr><td>Layout</td><td>Structural arrangement</td><td>Flexbox, grid, positioning, sizing options</td></tr><tr><td>Spacing</td><td>Margin and padding</td><td>Detailed spacing controls with responsive options</td></tr><tr><td>Animation</td><td>Motion and transition</td><td>Animation type, duration, delay, trigger settings</td></tr><tr><td>Advanced</td><td>Special functionality</td><td>Block-specific advanced features</td></tr></tbody></table><h3 id="integration-pattern" tabindex="-1">Integration Pattern <a class="header-anchor" href="#integration-pattern" aria-label="Permalink to &quot;Integration Pattern&quot;">​</a></h3><p>The typical integration pattern is:</p><ol><li>Import required components from the <code>px-controls</code> directory</li><li>Set up attribute management methods</li><li>Add toolbar components to the <code>BlockControls</code> component</li><li>Add sidebar components to the <code>InspectorControls</code> component</li><li>Connect all components to the block&#39;s attributes</li></ol><p>For example, a button block might use the <code>StylesSet</code> in the sidebar and alignment controls in the toolbar to manage its appearance.</p><h2 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">​</a></h2><p>When developing with the shared components system:</p><ol><li><strong>Identify needed controls</strong>: Determine which UI controls your block needs</li><li><strong>Import components</strong>: Import the necessary components from <code>px-controls</code></li><li><strong>Set up attribute handlers</strong>: Create methods to update block attributes</li><li><strong>Implement the UI</strong>: Add the components to your block&#39;s edit function</li><li><strong>Connect to attributes</strong>: Ensure components read from and write to the correct attributes</li></ol><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><p>Explore the detailed documentation for each component category:</p><ul><li><a href="./core-controls/">Core Controls</a>: Basic UI controls for fundamental interactions</li><li><a href="./control-sets/">Control Sets</a>: Grouped controls for related properties</li><li><a href="./integration-helpers/">Integration Helpers</a>: Utilities for block integration</li></ul><p>Or dive into specific components:</p><ul><li><a href="./core-controls/input-controls.html">Input Controls</a>: Text, number, and textarea inputs</li><li><a href="./control-sets/flexbox-set.html">Flexbox Set</a>: Controls for flexbox layouts</li><li><a href="./control-sets/typography-set.html">Typography Set</a>: Controls for text styling</li></ul>',38)]))}const m=e(s,[["render",i]]);export{g as __pageData,m as default};
