import{_ as e,c as t,o as a,ag as s}from"./chunks/framework.CifvWIav.js";const u=JSON.parse('{"title":"Grid Row Block","description":"","frontmatter":{},"headers":[],"relativePath":"wordpress/blocks/grid-row-block.md","filePath":"wordpress/blocks/grid-row-block.md"}'),n={name:"wordpress/blocks/grid-row-block.md"};function o(l,i,r,d,h,p){return a(),t("div",null,i[0]||(i[0]=[s(`<h1 id="grid-row-block" tabindex="-1">Grid Row Block <a class="header-anchor" href="#grid-row-block" aria-label="Permalink to &quot;Grid Row Block&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The Grid Row Block is a core layout component in the Phenix Design System that creates a flexible row container for organizing content in columns. It implements a responsive flexbox-based grid system and can be transformed into a slider/carousel for dynamic content presentation. The Grid Row Block is designed to work inside Container Blocks and serves as a parent for Grid Column Blocks.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><h3 id="layout-capabilities" tabindex="-1">Layout Capabilities <a class="header-anchor" href="#layout-capabilities" aria-label="Permalink to &quot;Layout Capabilities&quot;">​</a></h3><ul><li><strong>Flexbox Foundation</strong>: Built on CSS flexbox for powerful layout control</li><li><strong>Column Configuration</strong>: Set the number of columns per row with breakpoint-specific controls</li><li><strong>Alignment Options</strong>: Control both horizontal and vertical alignment of columns</li><li><strong>Distribution Settings</strong>: Determine how space is distributed between columns</li><li><strong>Responsive Controls</strong>: Configure different layouts for mobile, tablet, laptop, and desktop</li><li><strong>Order Control</strong>: Optionally reverse the order of columns on specific screen sizes</li></ul><h3 id="slider-functionality" tabindex="-1">Slider Functionality <a class="header-anchor" href="#slider-functionality" aria-label="Permalink to &quot;Slider Functionality&quot;">​</a></h3><ul><li><strong>Carousel Conversion</strong>: Transform any row into a slider with a simple toggle</li><li><strong>Slider Types</strong>: Choose between standard slider and continuous marquee</li><li><strong>Navigation Options</strong>: Enable/disable arrows, pagination, and scrollbar</li><li><strong>Autoplay Controls</strong>: Set autoplay with customizable speed and pause on hover</li><li><strong>Slide Configuration</strong>: Control slides per view, spacing, and transition effects</li><li><strong>Loop and Rewind</strong>: Options for infinite looping or rewind at ends</li></ul><h2 id="how-to-use" tabindex="-1">How to Use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to Use&quot;">​</a></h2><ol><li>Add a Container Block to your page</li><li>Inside the Container, add a Grid Row Block</li><li>Configure the row&#39;s layout options in the toolbar: <ul><li>Set column count for different screen sizes</li><li>Configure alignment and distribution</li><li>Enable slider mode if needed</li></ul></li><li>Add Grid Column Blocks inside the row</li><li>Adjust additional settings in the sidebar panels as needed</li></ol><h2 id="block-settings" tabindex="-1">Block Settings <a class="header-anchor" href="#block-settings" aria-label="Permalink to &quot;Block Settings&quot;">​</a></h2><h3 id="toolbar-controls" tabindex="-1">Toolbar Controls <a class="header-anchor" href="#toolbar-controls" aria-label="Permalink to &quot;Toolbar Controls&quot;">​</a></h3><p>The Grid Row Block provides the following controls in the top toolbar:</p><table tabindex="0"><thead><tr><th>Control</th><th>Description</th></tr></thead><tbody><tr><td>Columns Number</td><td>Dropdown with number inputs to set column count for different screen sizes (mobile, tablet, laptop, desktop)</td></tr><tr><td>Flexbox Controls</td><td>Dropdown for configuring flexbox properties including:</td></tr></tbody></table><ul><li>Direction (row, column, reverse options)</li><li>Alignment (horizontal and vertical)</li><li>Distribution (start, center, end, space-between, space-around)</li><li>Wrap behavior (wrap, nowrap) | | Slider Toggle | Button to convert the row into a carousel/slider | | Margin Controls | Dropdown for setting outer spacing with responsive options | | Padding Controls | Dropdown for setting inner spacing with responsive options | | Position Controls | Dropdown for setting position type and coordinates | | Border Controls | Dropdown for configuring border styles, widths, and colors | | Effects Controls | Dropdown for adding shadows, opacity, and other visual effects |</li></ul><h3 id="sidebar-panels" tabindex="-1">Sidebar Panels <a class="header-anchor" href="#sidebar-panels" aria-label="Permalink to &quot;Sidebar Panels&quot;">​</a></h3><h4 id="slider-options-panel" tabindex="-1">Slider Options Panel <a class="header-anchor" href="#slider-options-panel" aria-label="Permalink to &quot;Slider Options Panel&quot;">​</a></h4><p>When slider mode is enabled, this panel appears with the following controls:</p><table tabindex="0"><thead><tr><th>Control</th><th>Description</th></tr></thead><tbody><tr><td>Slider Type</td><td>Select between standard slider or continuous marquee</td></tr><tr><td>Slides Per View</td><td>Number of slides visible at once (can be fractional for partial slides)</td></tr><tr><td>Space Between</td><td>Gap between slides in pixels</td></tr><tr><td>Center Slides</td><td>Option to center active slide in view</td></tr><tr><td>Navigation</td><td>Toggle for enabling/disabling navigation arrows</td></tr><tr><td>Pagination</td><td>Toggle for enabling/disabling pagination dots</td></tr><tr><td>Scrollbar</td><td>Toggle for enabling/disabling draggable scrollbar</td></tr><tr><td>Autoplay</td><td>Toggle and speed control for automatic sliding</td></tr><tr><td>Pause on Hover</td><td>Option to pause autoplay when cursor hovers over slider</td></tr><tr><td>Loop</td><td>Toggle for infinite looping of slides</td></tr><tr><td>Free Mode</td><td>Toggle for free-flowing slides without snap points</td></tr><tr><td>Effect</td><td>Transition effect (slide, fade, cube, etc.)</td></tr><tr><td>Speed</td><td>Transition speed in milliseconds</td></tr></tbody></table><h4 id="layout-options-panel" tabindex="-1">Layout Options Panel <a class="header-anchor" href="#layout-options-panel" aria-label="Permalink to &quot;Layout Options Panel&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Control</th><th>Description</th></tr></thead><tbody><tr><td>HTML ID</td><td>Text input for setting a custom ID (useful for anchors)</td></tr><tr><td>Flexbox Settings</td><td>Tabs for configuring flexbox properties per screen size (mobile, tablet, laptop, desktop)</td></tr><tr><td>Slider Toggle</td><td>Checkbox to enable/disable slider functionality</td></tr><tr><td>Style Support</td><td>Toggle to enable/disable style options</td></tr></tbody></table><h4 id="general-options-panel" tabindex="-1">General Options Panel <a class="header-anchor" href="#general-options-panel" aria-label="Permalink to &quot;General Options Panel&quot;">​</a></h4><p>When style support is enabled:</p><table tabindex="0"><thead><tr><th>Control</th><th>Description</th></tr></thead><tbody><tr><td>Style Options</td><td>Enable/disable various styling features including animations, padding, margin, border, and effects</td></tr></tbody></table><h3 id="technical-implementation" tabindex="-1">Technical Implementation <a class="header-anchor" href="#technical-implementation" aria-label="Permalink to &quot;Technical Implementation&quot;">​</a></h3><p>The Grid Row Block is implemented with the following key attributes:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Core attributes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;string&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Style-related objects</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flexbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">typography</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">responsive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;object&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {} }</span></span></code></pre></div><p>The block renders as a div with the &quot;row&quot; class, plus any additional classes generated by the options renderer:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blockProps}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">InnerBlocks.Content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>When slider mode is enabled, the row classes are modified to support the slider functionality.</p><h2 id="common-use-cases" tabindex="-1">Common Use Cases <a class="header-anchor" href="#common-use-cases" aria-label="Permalink to &quot;Common Use Cases&quot;">​</a></h2><h3 id="standard-grid-layout" tabindex="-1">Standard Grid Layout <a class="header-anchor" href="#standard-grid-layout" aria-label="Permalink to &quot;Standard Grid Layout&quot;">​</a></h3><p>The most common use of the Grid Row Block is to create a responsive grid layout:</p><ol><li>Add a Container Block to your page</li><li>Add a Grid Row Block inside the container</li><li>Configure the number of columns for different screen sizes (e.g., 1 column on mobile, 2 on tablet, 3 on desktop)</li><li>Add Grid Column Blocks inside the row</li><li>Place your content inside each column</li></ol><h3 id="flexbox-alignment" tabindex="-1">Flexbox Alignment <a class="header-anchor" href="#flexbox-alignment" aria-label="Permalink to &quot;Flexbox Alignment&quot;">​</a></h3><p>To create a layout with specific alignment and distribution:</p><ol><li>Add a Grid Row Block to your page</li><li>Open the Flexbox Controls dropdown in the toolbar</li><li>Configure alignment (start, center, end) and distribution options</li><li>Add Grid Column Blocks with your content</li></ol><h3 id="content-slider" tabindex="-1">Content Slider <a class="header-anchor" href="#content-slider" aria-label="Permalink to &quot;Content Slider&quot;">​</a></h3><p>To transform a row of content into a carousel:</p><ol><li>Create a standard grid layout with columns and content</li><li>Enable the Slider toggle in the toolbar</li><li>Configure slider options in the sidebar panel</li><li>Test the slider functionality in preview mode</li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="layout-structure" tabindex="-1">Layout Structure <a class="header-anchor" href="#layout-structure" aria-label="Permalink to &quot;Layout Structure&quot;">​</a></h3><ul><li>Use the Columns Number dropdown to set appropriate column counts for different screen sizes</li><li>Start with the mobile view (default) and then configure tablet (MD), laptop (LG), and desktop (XL) layouts</li><li>Keep your row structure clean and avoid unnecessary nesting</li><li>Use the flexbox controls to create precise alignments rather than adding extra markup</li></ul><h3 id="slider-implementation" tabindex="-1">Slider Implementation <a class="header-anchor" href="#slider-implementation" aria-label="Permalink to &quot;Slider Implementation&quot;">​</a></h3><ul><li>Enable slider mode only when it adds value to the user experience</li><li>Choose the appropriate slider type based on your content (standard for interactive content, marquee for continuous display)</li><li>Configure navigation options based on your design requirements</li><li>Test slider performance with actual content to ensure smooth operation</li></ul><h3 id="responsive-design" tabindex="-1">Responsive Design <a class="header-anchor" href="#responsive-design" aria-label="Permalink to &quot;Responsive Design&quot;">​</a></h3><ul><li>Configure different column counts for each breakpoint to optimize the layout</li><li>Test your layouts on actual devices or using the browser&#39;s device emulation</li><li>Consider content readability and usability at each screen size</li><li>Use the responsive tabs in the sidebar to fine-tune layouts for each device</li></ul><h3 id="style-management" tabindex="-1">Style Management <a class="header-anchor" href="#style-management" aria-label="Permalink to &quot;Style Management&quot;">​</a></h3><ul><li>Enable style support only when you need to apply custom styling</li><li>Use consistent spacing patterns throughout your design</li><li>Apply styles purposefully to maintain visual hierarchy</li><li>Keep style overrides minimal to ensure consistent design</li></ul><h3 id="performance-considerations" tabindex="-1">Performance Considerations <a class="header-anchor" href="#performance-considerations" aria-label="Permalink to &quot;Performance Considerations&quot;">​</a></h3><ul><li>Enable only the features you need to keep the editor interface focused</li><li>Optimize slider settings for performance (especially when using autoplay or effects)</li><li>Test interactive elements to ensure they work as expected</li><li>Consider page load performance when using multiple sliders</li></ul><h2 id="related-blocks" tabindex="-1">Related Blocks <a class="header-anchor" href="#related-blocks" aria-label="Permalink to &quot;Related Blocks&quot;">​</a></h2><ul><li><a href="./container-block.html">Container Block</a> - Recommended parent container for grid rows</li><li><a href="./grid-column-block.html">Grid Column Block</a> - Used inside grid rows to create column-based layouts</li><li><a href="./group-block.html">Group Block</a> - Alternative for flexible content grouping without grid structure</li><li><a href="./dynamic-query-block.html">Dynamic Query Block</a> - Can be combined with grid rows for dynamic content layouts</li></ul>`,53)]))}const k=e(n,[["render",o]]);export{u as __pageData,k as default};
