import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.CifvWIav.js";const d=JSON.parse('{"title":"SASS Customization","description":"","frontmatter":{},"headers":[],"relativePath":"wordpress/theme-customization/sass-customization.md","filePath":"wordpress/theme-customization/sass-customization.md"}'),t={name:"wordpress/theme-customization/sass-customization.md"};function l(p,s,h,o,r,k){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="sass-customization" tabindex="-1">SASS Customization <a class="header-anchor" href="#sass-customization" aria-label="Permalink to &quot;SASS Customization&quot;">​</a></h1><p>The Phenix Starter Theme uses SASS (Syntactically Awesome Style Sheets) for styling, which allows for more maintainable and organized CSS. This guide explains how to customize your theme&#39;s styles using SASS.</p><h2 id="theme-structure" tabindex="-1">Theme Structure <a class="header-anchor" href="#theme-structure" aria-label="Permalink to &quot;Theme Structure&quot;">​</a></h2><p>The SASS files are located in the <code>sass/</code> directory of the theme:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pds-starter/</span></span>
<span class="line"><span>├── assets/            # Compiled CSS, JS, fonts, and images</span></span>
<span class="line"><span>├── parts/             # Block theme template parts (HTML)</span></span>
<span class="line"><span>├── sass/              # SASS source files for styling</span></span>
<span class="line"><span>├── template-parts/    # PHP template parts for dynamic blocks</span></span>
<span class="line"><span>├── templates/         # Block theme templates</span></span>
<span class="line"><span>├── functions.php      # Theme functions and setup</span></span>
<span class="line"><span>└── style.scss         # Main SASS file that imports all others</span></span></code></pre></div><h2 id="customizing-sass-variables" tabindex="-1">Customizing SASS Variables <a class="header-anchor" href="#customizing-sass-variables" aria-label="Permalink to &quot;Customizing SASS Variables&quot;">​</a></h2><p>The Phenix Starter Theme uses SASS variables to define colors, typography, spacing, and other design elements. These variables are located in the <code>sass/variables/</code> directory.</p><ol><li><p><strong>Edit Variables</strong>: Modify the SASS variables in the appropriate files:</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Example: Customizing the primary color</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#3498db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Change to your desired color</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>Add Custom SASS Files</strong>: Create new SCSS files in the appropriate directories and import them in <code>style.scss</code>.</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In a new file: sass/elements/_custom-element.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.custom-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Your styles here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Then import it in style.scss</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;elements/custom-element&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li></ol><h2 id="compiling-sass-to-css" tabindex="-1">Compiling SASS to CSS <a class="header-anchor" href="#compiling-sass-to-css" aria-label="Permalink to &quot;Compiling SASS to CSS&quot;">​</a></h2><p>After making changes to SASS files, you need to compile them to CSS:</p><ol><li><p><strong>Using Node.js and npm</strong>:</p><ul><li>Make sure Node.js and npm are installed on your system</li><li>Navigate to the theme directory in your terminal</li><li>Run <code>npm install</code> to install dependencies</li><li>Run <code>npm run build</code> to compile SASS to CSS</li></ul></li><li><p><strong>Using Gulp</strong> (if the theme uses Gulp):</p><ul><li>Run <code>gulp sass</code> to compile SASS to CSS</li><li>Run <code>gulp watch</code> to automatically compile SASS when files change</li></ul></li></ol><h2 id="sass-structure" tabindex="-1">SASS Structure <a class="header-anchor" href="#sass-structure" aria-label="Permalink to &quot;SASS Structure&quot;">​</a></h2><p>The SASS files are organized into several directories:</p><ul><li><code>sass/variables/</code>: Contains variables for colors, typography, spacing, etc.</li><li><code>sass/core/</code>: Core styles for the theme</li><li><code>sass/elements/</code>: Styles for basic HTML elements</li><li><code>sass/components/</code>: Styles for reusable components</li><li><code>sass/blocks/</code>: Styles for custom blocks</li><li><code>sass/utilities/</code>: Utility classes for spacing, typography, etc.</li></ul><h2 id="best-practices-for-sass-customization" tabindex="-1">Best Practices for SASS Customization <a class="header-anchor" href="#best-practices-for-sass-customization" aria-label="Permalink to &quot;Best Practices for SASS Customization&quot;">​</a></h2><ol><li><p><strong>Maintain the Existing Structure</strong>: Follow the existing file structure and naming conventions.</p></li><li><p><strong>Use Variables</strong>: Use existing SASS variables or create new ones for consistent styling.</p></li><li><p><strong>Mobile-First Approach</strong>: Write styles for mobile devices first, then use media queries for larger screens.</p></li><li><p><strong>Avoid !important</strong>: Use proper CSS specificity instead of !important declarations.</p></li><li><p><strong>Comment Your Code</strong>: Add comments to explain complex or non-obvious styles.</p></li><li><p><strong>Minimize Overrides</strong>: Try to extend existing styles rather than overriding them completely.</p></li></ol><h2 id="example-customizing-a-component" tabindex="-1">Example: Customizing a Component <a class="header-anchor" href="#example-customizing-a-component" aria-label="Permalink to &quot;Example: Customizing a Component&quot;">​</a></h2><p>Here&#39;s an example of customizing the button component:</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In sass/components/_buttons.scss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.px-btn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Modify existing button styles</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.btn-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--custom-primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#3498db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">darken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--custom-primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#3498db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Add a new button variant</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.btn-custom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#9b59b6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">darken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#9b59b6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="integration-with-the-block-editor" tabindex="-1">Integration with the Block Editor <a class="header-anchor" href="#integration-with-the-block-editor" aria-label="Permalink to &quot;Integration with the Block Editor&quot;">​</a></h2><p>The styles you define in SASS will be applied to both the front end and the block editor, ensuring a consistent experience for users. The theme uses the <code>theme.json</code> file to register colors, typography, and other settings with the block editor.</p>`,21)]))}const g=i(t,[["render",l]]);export{d as __pageData,g as default};
